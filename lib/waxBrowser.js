(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o;}return r;})()({1:[function(require,module,exports){(function(global){(function(){/**
 * EOSIO Core v0.4.7
 * https://github.com/greymass/eosio-core
 *
 * @license
 * Copyright (c) 2020 FFF00 Agents AB & Greymass Inc. All Rights Reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 
 *  1. Redistribution of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 * 
 *  2. Redistribution in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 * 
 *  3. Neither the name of the copyright holder nor the names of its contributors
 *     may be used to endorse or promote products derived from this software without
 *     specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR INTENDED FOR USE
 * IN THE DESIGN, CONSTRUCTION, OPERATION OR MAINTENANCE OF ANY MILITARY FACILITY.
 */'use strict';Object.defineProperty(exports,'__esModule',{value:true});var rand=require('brorand');var hash_js=require('hash.js');var BN=require('bn.js');var elliptic=require('elliptic');var tslib=require('tslib');function _interopDefaultLegacy(e){return e&&typeof e==='object'&&'default'in e?e:{'default':e};}var rand__default=/*#__PURE__*/_interopDefaultLegacy(rand);var BN__default=/*#__PURE__*/_interopDefaultLegacy(BN);function arrayEquals(a,b){const len=a.length;if(len!==b.length){return false;}for(let i=0;i<len;i++){if(a[i]!==b[i]){return false;}}return true;}function arrayEquatableEquals(a,b){const len=a.length;if(len!==b.length){return false;}for(let i=0;i<len;i++){if(!a[i].equals(b[i])){return false;}}return true;}const hexLookup={};function buildHexLookup(){hexLookup.enc=new Array(0xff);hexLookup.dec={};for(let i=0;i<=0xff;++i){const b=i.toString(16).padStart(2,'0');hexLookup.enc[i]=b;hexLookup.dec[b]=i;}}function arrayToHex(array){if(!hexLookup.enc){buildHexLookup();}const len=array.length;const rv=new Array(len);for(let i=0;i<len;++i){rv[i]=hexLookup.enc[array[i]];}return rv.join('');}function hexToArray(hex){if(!hexLookup.dec){buildHexLookup();}if(typeof hex!=='string'){throw new Error('Expected string containing hex digits');}if(hex.length%2){throw new Error('Odd number of hex digits');}hex=hex.toLowerCase();const len=hex.length/2;const result=new Uint8Array(len);for(let i=0;i<len;i++){const b=hexLookup.dec[hex[i*2]+hex[i*2+1]];if(b===undefined){throw new Error('Expected hex string');}result[i]=b;}return result;}/** Generate N random bytes, throws if a secure random source isn't available. */function secureRandom(length){return rand__default['default'](length);}/** Used in isInstanceOf checks so we don't spam with warnings. */let didWarn=false;/** Check if object in instance of class. */function isInstanceOf(object,someClass){if(object instanceof someClass){return true;}if(object==null||typeof object!=='object'){return false;}// not an actual instance but since bundlers can fail to dedupe stuff or
// multiple versions can be included we check for compatibility if possible
const className=someClass['__className']||someClass['abiName'];if(!className){return false;}let instanceClass=object.constructor;let isAlienInstance=false;while(instanceClass&&!isAlienInstance){const instanceClassName=instanceClass['__className']||instanceClass['abiName'];if(!instanceClassName){break;}isAlienInstance=className==instanceClassName;instanceClass=Object.getPrototypeOf(instanceClass);}if(isAlienInstance&&!didWarn){// eslint-disable-next-line no-console
console.warn(`Detected alien instance of ${className}, this usually means more than one version of @greymass/eosio has been included in your bundle.`);didWarn=true;}return isAlienInstance;}class Bytes{constructor(array=new Uint8Array()){this.array=array;}static from(value,encoding){if(isInstanceOf(value,this)){return value;}if(typeof value==='string'){return this.fromString(value,encoding);}if(isInstanceOf(value,Uint8Array)){return new this(value);}return new this(new Uint8Array(value));}static fromString(value,encoding='hex'){if(encoding==='hex'){const array=hexToArray(value);return new this(array);}else if(encoding=='utf8'){const encoder=new TextEncoder();return new this(encoder.encode(value));}else{throw new Error(`Unknown encoding: ${encoding}`);}}static fromABI(decoder){const len=decoder.readVaruint32();return new this(decoder.readArray(len));}static equal(a,b){return this.from(a).equals(this.from(b));}static random(length){return new this(secureRandom(length));}/** Return true if given value is a valid `BytesType`. */static isBytes(value){if(isInstanceOf(value,Bytes)||isInstanceOf(value,Uint8Array)){return true;}if(Array.isArray(value)&&value.every(v=>typeof v==='number')){return true;}if(typeof value==='string'&&(/[\da-f]/i.test(value)||value==='')){return true;}return false;}get hexString(){return arrayToHex(this.array);}get utf8String(){return new TextDecoder().decode(this.array);}appending(other){other=Bytes.from(other);const newSize=this.array.byteLength+other.array.byteLength;const buffer=new ArrayBuffer(newSize);const array=new Uint8Array(buffer);array.set(this.array);array.set(other.array,this.array.byteLength);return new Bytes(array);}droppingFirst(n=1){return new Bytes(this.array.subarray(n));}copy(){const buffer=new ArrayBuffer(this.array.byteLength);const array=new Uint8Array(buffer);array.set(this.array);return new Bytes(array);}equals(other){return arrayEquals(this.array,Bytes.from(other).array);}toString(encoding='hex'){if(encoding==='hex'){return this.hexString;}else if(encoding==='utf8'){return this.utf8String;}else{throw new Error(`Unknown encoding: ${encoding}`);}}toABI(encoder){encoder.writeVaruint32(this.array.byteLength);encoder.writeArray(this.array);}toJSON(){return this.hexString;}}Bytes.abiName='bytes';class Checksum{constructor(array){const byteSize=this.constructor.byteSize;if(array.byteLength!==byteSize){throw new Error(`Checksum size mismatch, expected ${byteSize} bytes got ${array.byteLength}`);}this.array=array;}static from(value){if(isInstanceOf(value,this)){return value;}if(isInstanceOf(value,Checksum)){return new this(value.array);}return new this(Bytes.from(value).array);}static fromABI(decoder){return new this(decoder.readArray(this.byteSize));}equals(other){const self=this.constructor;try{return arrayEquals(this.array,self.from(other).array);}catch(_a){return false;}}get hexString(){return arrayToHex(this.array);}toABI(encoder){encoder.writeArray(this.array);}toString(){return this.hexString;}toJSON(){return this.toString();}}Checksum.abiName='__checksum';class Checksum256 extends Checksum{static from(value){return super.from(value);}static hash(data){const digest=new Uint8Array(hash_js.sha256().update(Bytes.from(data).array).digest());return new Checksum256(digest);}}Checksum256.abiName='checksum256';Checksum256.byteSize=32;class Checksum512 extends Checksum{static from(value){return super.from(value);}static hash(data){const digest=new Uint8Array(hash_js.sha512().update(Bytes.from(data).array).digest());return new Checksum512(digest);}}Checksum512.abiName='checksum512';Checksum512.byteSize=64;class Checksum160 extends Checksum{static from(value){return super.from(value);}static hash(data){const digest=new Uint8Array(hash_js.ripemd160().update(Bytes.from(data).array).digest());return new Checksum160(digest);}}Checksum160.abiName='checksum160';Checksum160.byteSize=20;/** Supported EOSIO curve types. */exports.CurveType=void 0;(function(CurveType){CurveType["K1"]="K1";CurveType["R1"]="R1";CurveType["WA"]="WA";})(exports.CurveType||(exports.CurveType={}));(function(CurveType){function indexFor(value){switch(value){case CurveType.K1:return 0;case CurveType.R1:return 1;case CurveType.WA:return 2;default:throw new Error(`Unknown curve type: ${value}`);}}CurveType.indexFor=indexFor;function from(value){let index;if(typeof value!=='number'){index=CurveType.indexFor(value);}else{index=value;}switch(index){case 0:return CurveType.K1;case 1:return CurveType.R1;case 2:return CurveType.WA;default:throw new Error('Unknown curve type');}}CurveType.from=from;})(exports.CurveType||(exports.CurveType={}));/**
 * Binary integer with the underlying value represented by a BN.js instance.
 * Follows C++11 standard for arithmetic operators and conversions.
 * @note This type is optimized for correctness not speed, if you plan to manipulate
 *       integers in a tight loop you're advised to use the underlying BN.js value or
 *       convert to a JavaScript number first.
 */class Int{/**
     * Create a new instance, don't use this directly. Use the `.from` factory method instead.
     * @throws If the value over- or under-flows the integer type.
     */constructor(value){const self=this.constructor;if(self.isSigned===undefined||self.byteWidth===undefined){throw new Error('Cannot instantiate abstract class Int');}if(value.gt(self.max)){throw new Error(`Number ${value} overflows ${self.abiName}`);}if(value.lt(self.min)){throw new Error(`Number ${value} underflows ${self.abiName}`);}this.value=value;}/** Largest value that can be represented by this integer type. */static get max(){return new BN__default['default'](2).pow(new BN__default['default'](this.byteWidth*8-(this.isSigned?1:0))).isubn(1);}/** Smallest value that can be represented by this integer type. */static get min(){return this.isSigned?this.max.ineg().isubn(1):new BN__default['default'](0);}/** Add `lhs` to `rhs` and return the resulting value. */static add(lhs,rhs,overflow='truncate'){return Int.operator(lhs,rhs,overflow,(a,b)=>a.add(b));}/** Add `lhs` to `rhs` and return the resulting value. */static sub(lhs,rhs,overflow){return Int.operator(lhs,rhs,overflow,(a,b)=>a.sub(b));}/** Multiply `lhs` by `rhs` and return the resulting value. */static mul(lhs,rhs,overflow){return Int.operator(lhs,rhs,overflow,(a,b)=>a.mul(b));}/**
     * Divide `lhs` by `rhs` and return the quotient, dropping the remainder.
     * @throws When dividing by zero.
     */static div(lhs,rhs,overflow){return Int.operator(lhs,rhs,overflow,(a,b)=>{if(b.isZero()){throw new Error('Division by zero');}return a.div(b);});}/**
     * Divide `lhs` by `rhs` and return the quotient + remainder rounded to the closest integer.
     * @throws When dividing by zero.
     */static divRound(lhs,rhs,overflow){return Int.operator(lhs,rhs,overflow,(a,b)=>{if(b.isZero()){throw new Error('Division by zero');}return a.divRound(b);});}/**
     * Divide `lhs` by `rhs` and return the quotient + remainder rounded up to the closest integer.
     * @throws When dividing by zero.
     */static divCeil(lhs,rhs,overflow){return Int.operator(lhs,rhs,overflow,(a,b)=>{if(b.isZero()){throw new Error('Division by zero');}const dm=a.divmod(b);if(dm.mod.isZero())return dm.div;return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1);});}/**
     * Can be used to implement custom operator.
     * @internal
     */static operator(lhs,rhs,overflow='truncate',fn){const{a,b}=convert(lhs,rhs);const type=a.constructor;const result=fn(a.value,b.value);return type.from(result,overflow);}static from(value,overflow){if(isInstanceOf(value,this)){return value;}let fromType=this;let bn;if(isInstanceOf(value,Int)){fromType=value.constructor;bn=value.value.clone();}else if(value instanceof Uint8Array){bn=new BN__default['default'](value,undefined,'le');if(fromType.isSigned){bn=bn.fromTwos(fromType.byteWidth*8);}}else{if(typeof value==='string'&&!/[0-9]+/.test(value)||typeof value==='number'&&!Number.isFinite(value)){throw new Error('Invalid number');}bn=BN__default['default'].isBN(value)?value.clone():new BN__default['default'](value,10);if(bn.isNeg()&&!fromType.isSigned){fromType={byteWidth:fromType.byteWidth,isSigned:true};}}switch(overflow){case'clamp':bn=clamp(bn,this.min,this.max);break;case'truncate':bn=truncate(bn,fromType,this);break;}return new this(bn);}static fromABI(decoder){return this.from(decoder.readArray(this.byteWidth));}static random(){return this.from(secureRandom(this.byteWidth));}cast(type,overflow='truncate'){if(this.constructor===type){return this;}return type.from(this,overflow);}/** Number as bytes in little endian (matches memory layout in C++ contract). */get byteArray(){const self=this.constructor;const value=self.isSigned?this.value.toTwos(self.byteWidth*8):this.value;return value.toArrayLike(Uint8Array,'le',self.byteWidth);}/**
     * Compare two integers, if strict is set to true the test will only consider integers
     * of the exact same type. I.e. Int64.from(1).equals(UInt64.from(1)) will return false.
     */equals(other,strict=false){const self=this.constructor;if(strict===true&&isInstanceOf(other,Int)){const otherType=other.constructor;if(self.byteWidth!==otherType.byteWidth||self.isSigned!==otherType.isSigned){return false;}}try{return this.value.eq(self.from(other).value);}catch(_a){return false;}}/** Mutating add. */add(num){this.value=this.operator(num,Int.add).value;}/** Non-mutating add. */adding(num){return this.operator(num,Int.add);}/** Mutating subtract. */subtract(num){this.value=this.operator(num,Int.sub).value;}/** Non-mutating subtract. */subtracting(num){return this.operator(num,Int.sub);}/** Mutating multiply. */multiply(by){this.value=this.operator(by,Int.mul).value;}/** Non-mutating multiply. */multiplying(by){return this.operator(by,Int.mul);}/**
     * Mutating divide.
     * @param behavior How to handle the remainder, default is to floor (round down).
     * @throws When dividing by zero.
     */divide(by,behavior){this.value=this.dividing(by,behavior).value;}/**
     * Non-mutating divide.
     * @param behavior How to handle the remainder, default is to floor (round down).
     * @throws When dividing by zero.
     */dividing(by,behavior){let op=Int.div;switch(behavior){case'ceil':op=Int.divCeil;break;case'round':op=Int.divRound;break;}return this.operator(by,op);}/**
     * Run operator with C++11 implicit conversion.
     * @internal
     */operator(other,fn){let rhs;if(isInstanceOf(other,Int)){rhs=other;}else{rhs=Int64.from(other,'truncate');}return fn(this,rhs).cast(this.constructor);}/**
     * Convert to a JavaScript number.
     * @throws If the number cannot be represented by 53-bits.
     **/toNumber(){return this.value.toNumber();}toString(){return this.value.toString();}[Symbol.toPrimitive](type){if(type==='number'){return this.toNumber();}else{return this.toString();}}toABI(encoder){encoder.writeArray(this.byteArray);}toJSON(){// match FCs behavior and return strings for anything above 32-bit
if(this.value.bitLength()>32){return this.value.toString();}else{return this.value.toNumber();}}}Int.abiName='__int';class Int8 extends Int{}Int8.abiName='int8';Int8.byteWidth=1;Int8.isSigned=true;class Int16 extends Int{}Int16.abiName='int16';Int16.byteWidth=2;Int16.isSigned=true;class Int32 extends Int{}Int32.abiName='int32';Int32.byteWidth=4;Int32.isSigned=true;class Int64 extends Int{}Int64.abiName='int64';Int64.byteWidth=8;Int64.isSigned=true;class Int128 extends Int{}Int128.abiName='int128';Int128.byteWidth=16;Int128.isSigned=true;class UInt8 extends Int{}UInt8.abiName='uint8';UInt8.byteWidth=1;UInt8.isSigned=false;class UInt16 extends Int{}UInt16.abiName='uint16';UInt16.byteWidth=2;UInt16.isSigned=false;class UInt32 extends Int{}UInt32.abiName='uint32';UInt32.byteWidth=4;UInt32.isSigned=false;class UInt64 extends Int{}UInt64.abiName='uint64';UInt64.byteWidth=8;UInt64.isSigned=false;class UInt128 extends Int{}UInt128.abiName='uint128';UInt128.byteWidth=16;UInt128.isSigned=false;class VarInt extends Int{static fromABI(decoder){return new this(new BN__default['default'](decoder.readVarint32()));}toABI(encoder){encoder.writeVarint32(Number(this));}}VarInt.abiName='varint32';VarInt.byteWidth=32;VarInt.isSigned=true;class VarUInt extends Int{static fromABI(decoder){return new this(new BN__default['default'](decoder.readVaruint32()));}toABI(encoder){encoder.writeVaruint32(Number(this));}}VarUInt.abiName='varuint32';VarUInt.byteWidth=32;VarUInt.isSigned=false;/** Clamp number between min and max. */function clamp(num,min,max){return BN__default['default'].min(BN__default['default'].max(num,min),max);}/**
 * Create new BN with the same bit pattern as the passed value,
 * extending or truncating the value’s representation as necessary.
 */function truncate(value,from,to){const fill=value.isNeg()?255:0;const fromValue=from.isSigned?value.toTwos(from.byteWidth*8):value;const fromBytes=fromValue.toArrayLike(Uint8Array,'le');const toBytes=new Uint8Array(to.byteWidth);toBytes.fill(fill);toBytes.set(fromBytes.slice(0,to.byteWidth));const toValue=new BN__default['default'](toBytes,undefined,'le');return to.isSigned?toValue.fromTwos(to.byteWidth*8):toValue;}/** C++11 implicit integer conversions. */function convert(a,b){// The integral promotions (4.5) shall be performed on both operands.
a=promote(a);b=promote(b);const aType=a.constructor;const bType=b.constructor;// If both operands have the same type, no further conversion is needed
if(aType!==bType){// Otherwise, if both operands have signed integer types or both have unsigned integer types,
// the operand with the type of lesser integer conversion rank shall be converted to the type
// of the operand with greater rank.
if(aType.isSigned===bType.isSigned){if(aType.byteWidth>bType.byteWidth){b=b.cast(aType);}else if(bType.byteWidth>aType.byteWidth){a=a.cast(bType);}}else{// Otherwise, if the operand that has unsigned integer type has rank greater than or equal
// to the rank of the type of the other operand, the operand with signed integer type
// shall be converted to the type of the operand with unsigned integer type.
if(aType.isSigned===false&&aType.byteWidth>=bType.byteWidth){b=b.cast(aType);}else if(bType.isSigned===false&&bType.byteWidth>=aType.byteWidth){a=a.cast(bType);}else{// Otherwise, if the type of the operand with signed integer type can represent all of the
// values of the type of the operand with unsigned integer type, the operand with unsigned
// integer type shall be converted to the type of the operand with signed integer type.
if(aType.isSigned===true&&aType.max.gte(bType.max)&&aType.min.lte(bType.min)){b=b.cast(aType);}else if(bType.isSigned===true&&bType.max.gte(aType.max)&&bType.min.lte(aType.min)){a=a.cast(bType);}else;}}}return{a,b};}/** C++11 integral promotion. */function promote(n){// An rvalue of type char, signed char, unsigned char, short int, or
// unsigned short int can be converted to an rvalue of type int if int
// can represent all the values of the source type; otherwise, the source
// rvalue can be converted to an rvalue of type unsigned int.
let rv=n;const type=n.constructor;if(type.byteWidth<4){rv=n.cast(Int32);}return rv;}/** Return a ABI definition for given ABISerializableType. */function synthesizeABI(type){const structs=[];const variants=[];const aliases=[];const seen=new Set();const resolveAbiType=t=>{let typeName;if(typeof t.type!=='string'){typeName=resolve(t.type);}else{typeName=t.type;}if(t.array===true){typeName+='[]';}if(t.extension===true){typeName+='$';}if(t.optional===true){typeName+='?';}return typeName;};const resolve=t=>{if(!t.abiName){throw new Error('Encountered non-conforming type');}else if(t.abiName==='__struct'){throw new Error('Misconfigured Struct subclass, did you forget @Struct.type?');}if(seen.has(t)){return t.abiName;}seen.add(t);if(t.abiAlias){aliases.push({new_type_name:t.abiName,type:resolveAbiType(t.abiAlias)});}else if(t.abiFields){const fields=t.abiFields.map(field=>{return{name:field.name,type:resolveAbiType(field)};});const struct={base:t.abiBase?resolve(t.abiBase):'',name:t.abiName,fields};structs.push(struct);}else if(t.abiVariant){const variant={name:t.abiName,types:t.abiVariant.map(resolveAbiType)};variants.push(variant);}return t.abiName;};const root=resolve(type);return{abi:ABI.from({structs,variants,types:aliases}),types:Array.from(seen),root};}function abiTypeString(type){let typeName=typeof type.type==='string'?type.type:type.type.abiName;if(type.array===true){typeName+='[]';}if(type.extension===true){typeName+='$';}if(type.optional===true){typeName+='?';}return typeName;}function isTypeDescriptor(type){return typeof type!=='string'&&type.abiName===undefined&&type.type!==undefined;}function toTypeDescriptor(type){if(typeof type==='string'){return{type};}if(typeof type.abiName!=='undefined'){return{type:type};}return type;}const StringType={abiName:'string',fromABI:decoder=>{return decoder.readString();},from:string=>string,toABI:(string,encoder)=>{encoder.writeString(string);}};const BoolType={abiName:'bool',fromABI:decoder=>{return decoder.readByte()===1;},from:value=>value,toABI:(value,encoder)=>{encoder.writeByte(value===true?1:0);}};function getBuiltins(){return[// types represented by JavaScript builtins
BoolType,StringType,// types represented by Classes
Asset,Asset.Symbol,Asset.SymbolCode,BlockTimestamp,Bytes,Checksum160,Checksum256,Checksum512,ExtendedAsset,Float128,Float32,Float64,Int128,Int16,Int32,Int64,Int8,Name,PublicKey,Signature,TimePoint,TimePointSec,UInt128,UInt16,UInt32,UInt64,UInt8,VarInt,VarUInt];}function buildTypeLookup(additional=[]){const rv={};const builtins=getBuiltins();for(const type of builtins){rv[type.abiName]=type;}for(const type of additional){if(!type.abiName){throw new Error('Invalid type');}rv[type.abiName]=type;}return rv;}function getTypeName(object){if(object.constructor&&object.constructor.abiName!==undefined){return object.constructor.abiName;}if(Array.isArray(object)){const types=object.map(getTypeName);const type=types[0];if(!type||!types.every(t=>t===type)){return;}return type+'[]';}switch(typeof object){case'boolean':return'bool';case'string':return'string';}}function getType(object,name='jsobj'){var _a;if(object.constructor&&object.constructor.abiName!==undefined){return object.constructor;}if(Array.isArray(object)){// check for array of all ABISerializableType with same type name
const types=object.map(v=>{return getType(v,name);});const type=types[0];if(!type){return;// some type not known
}if(!types.every(t=>t&&t.abiName===type.abiName)){return;// not all types are the same
}return type;}const objectType=typeof object;if(objectType==='object'&&object!==null){const fields=Object.keys(object).map(key=>{return{name:key,type:getType(object[key],name+'_nested')};});if(fields.find(field=>!field.type)){return;// encountered unknown type
}return _a=class extends Struct{},_a.abiName=name,_a.abiFields=fields,_a;}switch(objectType){case'boolean':return BoolType;case'string':return StringType;}}/**
 * EOSIO ABI Decoder
 */class DecodingError extends Error{constructor(ctx,underlyingError){const path=ctx.codingPath.map(({field,type})=>{if(typeof field==='number'){return field;}else{return`${field}<${type.typeName}>`;}}).join('.');super(`Decoding error at ${path}: ${underlyingError.message}`);this.stack=underlyingError.stack;this.ctx=ctx;this.underlyingError=underlyingError;}}DecodingError.__className='DecodingError';function abiDecode(args){const descriptor=toTypeDescriptor(args.type);const typeName=abiTypeString(descriptor);const customTypes=args.customTypes||[];let abi;if(args.abi){abi=ABI.from(args.abi);}else{try{let type;if(typeof descriptor.type==='string'){const lookup=buildTypeLookup(customTypes);const rName=new ABI.ResolvedType(descriptor.type).name;// type name w/o suffixes
type=lookup[rName];if(!type){throw new Error(`Unknown type: ${descriptor.type}`);}}else{type=descriptor.type;}const synthesized=synthesizeABI(type);abi=synthesized.abi;customTypes.push(...synthesized.types);}catch(error){throw Error(`Unable to synthesize ABI for: ${typeName} (${error.message}). `+'To decode non-class types you need to pass the ABI definition manually.');}}const resolved=abi.resolveType(typeName);if(typeof descriptor.type!=='string'){customTypes.unshift(descriptor.type);}const ctx={types:buildTypeLookup(customTypes),codingPath:[{field:'root',type:resolved}]};try{if(args.data){let decoder;if(isInstanceOf(args.data,ABIDecoder)){decoder=args.data;}else{const bytes=Bytes.from(args.data);decoder=new ABIDecoder(bytes.array);}if(args.metadata){decoder.metadata=args.metadata;}return decodeBinary(resolved,decoder,ctx);}else if(args.object!==undefined){return decodeObject(args.object,resolved,ctx);}else if(args.json){return decodeObject(JSON.parse(args.json),resolved,ctx);}else{throw new Error('Nothing to decode, you must set one of data, json, object');}}catch(error){throw new DecodingError(ctx,error);}}/** Marker for objects when they have been resolved, i.e. their types `from` factory method will not need to resolve children. */const Resolved=Symbol('Resolved');function decodeBinary(type,decoder,ctx){if(ctx.codingPath.length>32){throw new Error('Maximum decoding depth exceeded');}if(type.isExtension){if(!decoder.canRead()){return undefined;}}if(type.isOptional){if(decoder.readByte()===0){return null;}}if(type.isArray){const len=decoder.readVaruint32();const rv=[];for(let i=0;i<len;i++){ctx.codingPath.push({field:i,type});rv.push(decodeInner());ctx.codingPath.pop();}return rv;}else{return decodeInner();}function decodeInner(){const abiType=ctx.types[type.name];if(abiType&&abiType.fromABI){return abiType.fromABI(decoder);}else{if(type.ref){// follow type alias
ctx.codingPath.push({field:'',type:type.ref});const rv=decodeBinary(type.ref,decoder,ctx);ctx.codingPath.pop();return rv;}else if(type.fields){const fields=type.allFields;if(!fields){throw new Error('Invalid struct fields');}const rv={};for(const field of fields){ctx.codingPath.push({field:field.name,type:field.type});rv[field.name]=decodeBinary(field.type,decoder,ctx);ctx.codingPath.pop();}if(abiType){rv[Resolved]=true;return abiType.from(rv);}else{return rv;}}else if(type.variant){const vIdx=decoder.readByte();const vType=type.variant[vIdx];if(!vType){throw new Error(`Unknown variant idx: ${vIdx}`);}ctx.codingPath.push({field:`v${vIdx}`,type:vType});const rv=[vType.typeName,decodeBinary(vType,decoder,ctx)];ctx.codingPath.pop();if(abiType){return abiType.from(rv);}else{return rv;}}else if(abiType){throw new Error('Invalid type');}else{throw new Error(type.name==='any'?"Unable to decode 'any' type from binary":'Unknown type');}}}}function decodeObject(value,type,ctx){if(value===null||value===undefined){if(type.isOptional||type.isExtension){return null;}else{throw new Error(`Unexpectedly encountered ${value} for non-optional`);}}else if(type.isArray){if(!Array.isArray(value)){throw new Error('Expected array');}const rv=[];const len=value.length;for(let i=0;i<len;i++){ctx.codingPath.push({field:i,type});rv.push(decodeInner(value[i]));ctx.codingPath.pop();}return rv;}else{return decodeInner(value);}function decodeInner(value){const abiType=ctx.types[type.name];if(type.ref&&!abiType){// follow type alias
return decodeObject(value,type.ref,ctx);}else if(type.fields){if(typeof value!=='object'){throw new Error('Expected object');}if(typeof abiType==='function'&&isInstanceOf(value,abiType)){return value;}const fields=type.allFields;if(!fields){throw new Error('Invalid struct fields');}const struct={};for(const field of fields){ctx.codingPath.push({field:field.name,type:field.type});struct[field.name]=decodeObject(value[field.name],field.type,ctx);ctx.codingPath.pop();}if(abiType){struct[Resolved]=true;return abiType.from(struct);}else{return struct;}}else if(type.variant){let vName;if(Array.isArray(value)&&value.length===2&&typeof value[0]==='string'){vName=value[0];value=value[1];}else if(isInstanceOf(value,Variant)){vName=value.variantName;value=value.value;}else{vName=getTypeName(value);}const vIdx=type.variant.findIndex(t=>t.typeName===vName);if(vIdx===-1){throw new Error(`Unknown variant type: ${vName}`);}const vType=type.variant[vIdx];ctx.codingPath.push({field:`v${vIdx}`,type:vType});const rv=[vType.typeName,decodeObject(value,vType,ctx)];ctx.codingPath.pop();if(abiType){rv[Resolved]=true;return abiType.from(rv);}else{return rv;}}else{if(!abiType){// special case for `any` when decoding from object
if(type.name==='any'){return value;}throw new Error('Unknown type');}return abiType.from(value);}}}class ABIDecoder{constructor(array){this.array=array;this.pos=0;this.textDecoder=new TextDecoder('utf-8',{fatal:true});/** User declared metadata, can be used to pass info to instances when decoding.  */this.metadata={};this.data=new DataView(array.buffer,array.byteOffset,array.byteLength);}canRead(bytes=1){return!(this.pos+bytes>this.array.byteLength);}ensure(bytes){if(!this.canRead(bytes)){throw new Error('Read past end of buffer');}}/** Read one byte. */readByte(){this.ensure(1);return this.array[this.pos++];}/** Read floating point as JavaScript number, 32 or 64 bits. */readFloat(byteWidth){this.ensure(byteWidth);let rv;switch(byteWidth){case 4:rv=this.data.getFloat32(this.pos,true);break;case 8:rv=this.data.getFloat64(this.pos,true);break;default:throw new Error('Invalid float size');}this.pos+=byteWidth;return rv;}readVaruint32(){let v=0;let bit=0;for(;;){const b=this.readByte();v|=(b&0x7f)<<bit;bit+=7;if(!(b&0x80)){break;}}return v>>>0;}readVarint32(){const v=this.readVaruint32();if(v&1){return~v>>1|2147483648;}else{return v>>>1;}}readArray(length){this.ensure(length);const rv=this.array.subarray(this.pos,this.pos+length);this.pos+=length;return rv;}readString(){const length=this.readVaruint32();return this.textDecoder.decode(this.readArray(length));}}ABIDecoder.__className='ABIDecoder';/**
 * EOSIO ABI Encoder
 */class EncodingError extends Error{constructor(ctx,underlyingError){const path=ctx.codingPath.map(({field,type})=>{if(typeof field==='number'){return field;}else{return`${field}<${type.typeName}>`;}}).join('.');super(`Encoding error at ${path}: ${underlyingError.message}`);this.stack=underlyingError.stack;this.ctx=ctx;this.underlyingError=underlyingError;}}EncodingError.__className='EncodingError';function abiEncode(args){let type;let typeName;if(typeof args.type==='string'){typeName=args.type;}else if(args.type&&isTypeDescriptor(args.type)){if(typeof args.type.type!=='string'){type=args.type.type;}typeName=abiTypeString(args.type);}else if(args.type&&args.type.abiName!==undefined){type=args.type;typeName=args.type.abiName;}else{type=getType(args.object);if(type){typeName=type.abiName;if(Array.isArray(args.object)){typeName+='[]';}}}const customTypes=args.customTypes?args.customTypes.slice():[];if(type){customTypes.unshift(type);}else if(typeName){const rootName=new ABI.ResolvedType(typeName).name;type=customTypes.find(t=>t.abiName===rootName);}let rootType;if(args.abi&&typeName){rootType=ABI.from(args.abi).resolveType(typeName);}else if(type){const synthesized=synthesizeABI(type);rootType=synthesized.abi.resolveType(typeName||type.abiName);customTypes.push(...synthesized.types);}else if(typeName){rootType=new ABI.ResolvedType(typeName);}else{throw new Error('Unable to determine the type of the object to be encoded. '+'To encode custom ABI types you must pass the type argument.');}const types=buildTypeLookup(customTypes);const encoder=args.encoder||new ABIEncoder();if(args.metadata){encoder.metadata=args.metadata;}const ctx={types,encoder,codingPath:[{field:'root',type:rootType}]};try{encodeAny(args.object,rootType,ctx);}catch(error){throw new EncodingError(ctx,error);}return Bytes.from(encoder.getData());}function encodeAny(value,type,ctx){const valueExists=value!==undefined&&value!==null;if(type.isOptional){ctx.encoder.writeByte(valueExists?1:0);if(!valueExists){return;}}if(type.isArray){if(!Array.isArray(value)){throw new Error(`Expected array for: ${type.typeName}`);}const len=value.length;ctx.encoder.writeVaruint32(len);for(let i=0;i<len;i++){ctx.codingPath.push({field:i,type});encodeInner(value[i]);ctx.codingPath.pop();}}else{encodeInner(value);}function encodeInner(value){const abiType=ctx.types[type.name];if(type.ref&&!abiType){// type is alias, follow it
encodeAny(value,type.ref,ctx);return;}if(!valueExists){if(type.isExtension){return;}throw new Error(`Found ${value} for non-optional type: ${type.typeName}`);}if(abiType&&abiType.toABI){// type explicitly handles encoding
abiType.toABI(value,ctx.encoder);}else if(typeof value.toABI==='function'&&value.constructor.abiName===type.name){// instance handles encoding
value.toABI(ctx.encoder);}else{// encode according to abi def if possible
if(type.fields){if(typeof value!=='object'){throw new Error(`Expected object for: ${type.name}`);}const fields=type.allFields;if(!fields){throw new Error('Invalid struct fields');}for(const field of fields){ctx.codingPath.push({field:field.name,type:field.type});encodeAny(value[field.name],field.type,ctx);ctx.codingPath.pop();}}else if(type.variant){let vName;if(Array.isArray(value)&&value.length===2&&typeof value[0]==='string'){vName=value[0];value=value[1];}else if(isInstanceOf(value,Variant)){vName=value.variantName;value=value.value;}else{vName=getTypeName(value);}const vIdx=type.variant.findIndex(t=>t.typeName===vName);if(vIdx===-1){const types=type.variant.map(t=>`'${t.typeName}'`).join(', ');throw new Error(`Unknown variant type '${vName}', expected one of ${types}`);}const vType=type.variant[vIdx];ctx.encoder.writeVaruint32(vIdx);ctx.codingPath.push({field:`v${vIdx}`,type:vType});encodeAny(value,vType,ctx);ctx.codingPath.pop();}else{if(!abiType){throw new Error(type.name==='any'?'Unable to encode any type to binary':'Unknown type');}const instance=abiType.from(value);if(!instance.toABI){throw new Error(`Invalid type ${type.name}, no encoding methods implemented`);}instance.toABI(ctx.encoder);}}}}class ABIEncoder{constructor(pageSize=1024){this.pageSize=pageSize;this.pos=0;this.textEncoder=new TextEncoder();/** User declared metadata, can be used to pass info to instances when encoding.  */this.metadata={};const buffer=new ArrayBuffer(pageSize);this.data=new DataView(buffer);this.array=new Uint8Array(buffer);}ensure(bytes){if(this.data.byteLength>=this.pos+bytes){return;}const pages=Math.ceil(bytes/this.pageSize);const newSize=this.data.byteLength+this.pageSize*pages;const buffer=new ArrayBuffer(newSize);const data=new DataView(buffer);const array=new Uint8Array(buffer);array.set(this.array);this.data=data;this.array=array;}/** Write a single byte. */writeByte(byte){this.ensure(1);this.array[this.pos++]=byte;}/** Write an array of bytes. */writeArray(bytes){const size=bytes.length;this.ensure(size);this.array.set(bytes,this.pos);this.pos+=size;}writeFloat(value,byteWidth){this.ensure(byteWidth);switch(byteWidth){case 4:this.data.setFloat32(this.pos,value,true);break;case 8:this.data.setFloat64(this.pos,value,true);break;default:throw new Error('Invalid float size');}this.pos+=byteWidth;}writeVaruint32(v){this.ensure(4);for(;;){if(v>>>7){this.array[this.pos++]=0x80|v&0x7f;v=v>>>7;}else{this.array[this.pos++]=v;break;}}}writeVarint32(v){this.writeVaruint32(v<<1^v>>31);}writeString(v){const data=this.textEncoder.encode(v);this.writeVaruint32(data.byteLength);this.writeArray(data);}getData(){return new Uint8Array(this.array.buffer,this.array.byteOffset,this.pos);}}ABIEncoder.__className='ABIEncoder';class Struct{/** @internal */constructor(object){const self=this.constructor;for(const field of self.structFields){this[field.name]=object[field.name];}}static from(value){if(value[Resolved]===true){// objects already resolved
return new this(value);}if(isInstanceOf(value,this)){return value;}const object={};for(const field of this.structFields){const v=value[field.name]===undefined?field.default:value[field.name];object[field.name]=v;}return abiDecode({object,type:this});}static get structFields(){const rv=[];const walk=t=>{if(t.abiBase){walk(t.abiBase);}for(const field of t.abiFields||[]){rv.push(field);}};walk(this);return rv;}/**
     * Return true if this struct equals the other.
     *
     * Note: This compares the ABI encoded bytes of both structs, subclasses
     *       should implement their own fast equality check when possible.
     */equals(other){const self=this.constructor;if(other.constructor&&typeof other.constructor.abiName==='string'&&other.constructor.abiName!==self.abiName){return false;}return abiEncode({object:this}).equals(abiEncode({object:self.from(other)}));}/** @internal */toJSON(){const self=this.constructor;const rv={};for(const field of self.structFields){rv[field.name]=this[field.name];}return rv;}}Struct.abiName='__struct';(function(Struct){const FieldsOwner=Symbol('FieldsOwner');function type(name){return function(struct){struct.abiName=name;return struct;};}Struct.type=type;function field(type,options){if(!options)options={};return(target,name)=>{const ctor=target.constructor;if(!ctor.abiFields){ctor.abiFields=[];ctor.abiFields[FieldsOwner]=ctor;}else if(ctor.abiFields[FieldsOwner]!==ctor){// if the target class isn't the owner we set the base and start new fields
ctor.abiBase=ctor.abiFields[FieldsOwner];ctor.abiFields=[];ctor.abiFields[FieldsOwner]=ctor;}ctor.abiFields.push(Object.assign(Object.assign({},options),{name,type}));};}Struct.field=field;})(Struct||(Struct={}));function TypeAlias(name){return function(typeAlias){typeAlias.abiAlias={type:Object.getPrototypeOf(typeAlias.prototype).constructor};typeAlias.abiName=name;return typeAlias;};}class Variant{/** @internal */constructor(variant){const abiVariant=this.constructor.abiVariant;this.value=variant[1];const variantIdx=abiVariant.map(abiTypeString).findIndex(t=>t===variant[0]);if(0>variantIdx||abiVariant.length<=variantIdx){throw new Error(`Unknown variant ${variant[0]}`);}this.variantIdx=variantIdx;}static from(object){if(object[Resolved]){return new this(object);}if(isInstanceOf(object,this)){return object;}return abiDecode({object,type:this});}/**
     * Return true if this variant equals the other.
     *
     * Note: This compares the ABI encoded bytes of both variants, subclasses
     *       should implement their own fast equality check when possible.
     */equals(other){const self=this.constructor;const otherVariant=self.from(other);if(this.variantIdx!==otherVariant.variantIdx){return false;}return abiEncode({object:this}).equals(abiEncode({object:otherVariant}));}get variantName(){const variant=this.constructor.abiVariant[this.variantIdx];return abiTypeString(variant);}/** @internal */toJSON(){return[this.variantName,this.value];}}Variant.abiName='__variant';Variant.abiVariant=[];(function(Variant){function type(name,types){return function(variant){variant.abiName=name;variant.abiVariant=types.map(toTypeDescriptor);return variant;};}Variant.type=type;})(Variant||(Variant={}));class Float{constructor(value){if(!Number.isFinite(value)){throw new Error('Invalid number');}this.value=value;}static from(value){if(isInstanceOf(value,this)){return value;}if(typeof value==='string'){value=Number.parseFloat(value);}else if(isInstanceOf(value,Float)){value=value.value;}return new this(value);}static fromABI(decoder){return new this(decoder.readFloat(this.byteWidth));}static random(){const bytes=secureRandom(this.byteWidth);const decoder=new ABIDecoder(bytes);return this.fromABI(decoder);}equals(other){const self=this.constructor;return this.value===self.from(other).value;}toABI(encoder){const self=this.constructor;encoder.writeFloat(this.value,self.byteWidth);}toString(){return this.value.toString();}toJSON(){return this.toString();}}Float.abiName='__float';class Float32 extends Float{toString(){return this.value.toFixed(7);}}Float32.abiName='float32';Float32.byteWidth=4;class Float64 extends Float{}Float64.abiName='float64';Float64.byteWidth=8;class Float128{constructor(data){if(data.array.length!==16){throw new Error('Invalid float128');}this.data=data;}static from(value){if(isInstanceOf(value,this)){return value;}if(typeof value==='string'&&value.startsWith('0x')){value=value.slice(2);}return new this(Bytes.from(value));}static fromABI(decoder){return new this(new Bytes(decoder.readArray(this.byteWidth)));}static random(){const bytes=secureRandom(16);const decoder=new ABIDecoder(bytes);return this.fromABI(decoder);}equals(other){const self=this.constructor;return this.data.equals(self.from(other).data);}toABI(encoder){encoder.writeArray(this.data.array);}toString(){// float128 uses 0x prefixed hex strings as opposed to everywhere else in where there is no prefix ¯\_(ツ)_/¯
return'0x'+this.data.hexString;}toJSON(){return this.toString();}}Float128.abiName='float128';Float128.byteWidth=16;/** EOSIO Name */class Name{constructor(value){this.value=value;}/**
     * The raw representation of the name.
     * @deprecated Use value instead.
     */get rawValue(){return this.value;}/** Create a new Name instance from any of its representing types. */static from(value){if(isInstanceOf(value,Name)){return value;}else if(typeof value==='string'){return new Name(stringToName(value));}else if(isInstanceOf(value,UInt64)){return new Name(value);}else{throw new Error('Invalid name');}}static fromABI(decoder){return new Name(UInt64.fromABI(decoder));}/** Return true if this name is equal to passed name. */equals(other){return this.value.equals(Name.from(other).value);}/** Return string representation of this name. */toString(){return nameToString(this.value);}toABI(encoder){this.value.toABI(encoder);}/** @internal */toJSON(){return this.toString();}}Name.abiName='name';/** Regex pattern matching a EOSIO name, case-sensitive. */Name.pattern=/^[a-z1-5.]{0,13}$/;function stringToName(s){function charToSymbol(c){if(c>='a'.charCodeAt(0)&&c<='z'.charCodeAt(0)){return c-'a'.charCodeAt(0)+6;}if(c>='1'.charCodeAt(0)&&c<='5'.charCodeAt(0)){return c-'1'.charCodeAt(0)+1;}return 0;}const a=new Uint8Array(8);let bit=63;for(let i=0;i<s.length;++i){let c=charToSymbol(s.charCodeAt(i));if(bit<5){c=c<<1;}for(let j=4;j>=0;--j){if(bit>=0){a[Math.floor(bit/8)]|=(c>>j&1)<<bit%8;--bit;}}}return UInt64.from(a);}function nameToString(n){const a=n.value.toArray('le',8);let result='';for(let bit=63;bit>=0;){let c=0;for(let i=0;i<5;++i){if(bit>=0){c=c<<1|a[Math.floor(bit/8)]>>bit%8&1;--bit;}}if(c>=6){result+=String.fromCharCode(c+'a'.charCodeAt(0)-6);}else if(c>=1){result+=String.fromCharCode(c+'1'.charCodeAt(0)-1);}else{result+='.';}}while(result.endsWith('.')){result=result.substr(0,result.length-1);}return result;}class TimePointBase{static from(value){if(isInstanceOf(value,this)){return value;}if(isInstanceOf(value,TimePointBase)){// converting between types
return this.fromMilliseconds(value.toMilliseconds());}if(isInstanceOf(value,Date)){return this.fromDate(value);}if(typeof value==='string'){return this.fromString(value);}return this.fromInteger(value);}static fromString(string){const value=Date.parse(string+'Z');if(!Number.isFinite(value)){throw new Error('Invalid date string');}return this.fromMilliseconds(value);}static fromDate(date){return this.fromMilliseconds(date.getTime());}toABI(encoder){const self=this;self.value.toABI(encoder);}equals(other){const self=this.constructor;return this.toMilliseconds()===self.from(other).toMilliseconds();}toMilliseconds(){throw new Error('Not implemented');}toDate(){return new Date(this.toMilliseconds());}toJSON(){return this.toString();}}TimePointBase.abiName='__time_point_base';/** Timestamp with microsecond accuracy. */class TimePoint extends TimePointBase{constructor(value){super();this.value=value;}static fromMilliseconds(ms){return new TimePoint(Int64.from(Math.round(ms*1000)));}static fromInteger(value){return new TimePoint(Int64.from(value));}static fromABI(decoder){return new this(Int64.fromABI(decoder));}toString(){return this.toDate().toISOString().slice(0,-1);}toMilliseconds(){return Number(this.value.dividing(1000,'round'));}}TimePoint.abiName='time_point';/** Timestamp with second accuracy. */class TimePointSec extends TimePointBase{constructor(value){super();this.value=value;}static fromMilliseconds(ms){return new TimePointSec(UInt32.from(Math.round(ms/1000)));}static fromInteger(value){return new TimePointSec(UInt32.from(value));}static fromABI(decoder){return new this(UInt32.fromABI(decoder));}toString(){return this.toDate().toISOString().slice(0,-5);}toMilliseconds(){return Number(this.value.cast(UInt64).multiplying(1000));}}TimePointSec.abiName='time_point_sec';class BlockTimestamp extends TimePointBase{constructor(value){super();this.value=value;}static fromMilliseconds(ms){return new TimePointSec(UInt32.from(Math.round((ms-946684800000)/500)));}static fromInteger(value){return new TimePointSec(UInt32.from(value));}static fromABI(decoder){return new this(UInt32.fromABI(decoder));}toString(){return this.toDate().toISOString().slice(0,-1);}toMilliseconds(){return Number(this.value.cast(UInt64).multiplying(500).adding(946684800000));}}BlockTimestamp.abiName='block_timestamp_type';class ABI{constructor(args){this.version=args.version||ABI.version;this.types=args.types||[];this.variants=args.variants||[];this.structs=args.structs||[];this.actions=args.actions||[];this.tables=args.tables||[];this.ricardian_clauses=args.ricardian_clauses||[];}static from(value){if(isInstanceOf(value,ABI)){return value;}if(typeof value==='string'){return new ABI(JSON.parse(value));}return new ABI(value);}resolveType(name){const types={};return this.resolve({name,types},{id:0});}resolveAll(){const types={};const ctx={id:0};return{types:this.types.map(t=>this.resolve({name:t.new_type_name,types},ctx)),variants:this.variants.map(t=>this.resolve({name:t.name,types},ctx)),structs:this.structs.map(t=>this.resolve({name:t.name,types},ctx))};}resolve({name,types},ctx){const existing=types[name];if(existing){return existing;}const type=new ABI.ResolvedType(name,++ctx.id);types[type.typeName]=type;const alias=this.types.find(typeDef=>typeDef.new_type_name==type.name);if(alias){type.ref=this.resolve({name:alias.type,types},ctx);return type;}const struct=this.getStruct(type.name);if(struct){if(struct.base){type.base=this.resolve({name:struct.base,types},ctx);}type.fields=struct.fields.map(field=>{return{name:field.name,type:this.resolve({name:field.type,types},ctx)};});return type;}const variant=this.getVariant(type.name);if(variant){type.variant=variant.types.map(name=>this.resolve({name,types},ctx));return type;}// builtin or unknown type
return type;}getStruct(name){return this.structs.find(struct=>struct.name==name);}getVariant(name){return this.variants.find(variant=>variant.name==name);}/** Return arguments type of an action in this ABI. */getActionType(actionName){const name=Name.from(actionName).toString();const action=this.actions.find(a=>a.name.toString()===name);if(action){return action.type;}}}ABI.__className='ABI';ABI.version='eosio::abi/1.1';(function(ABI){class ResolvedType{constructor(fullName,id=0){let name=fullName;if(name.endsWith('$')){name=name.slice(0,-1);this.isExtension=true;}else{this.isExtension=false;}if(name.endsWith('?')){name=name.slice(0,-1);this.isOptional=true;}else{this.isOptional=false;}if(name.endsWith('[]')){name=name.slice(0,-2);this.isArray=true;}else{this.isArray=false;}this.id=id;this.name=name;}/**
         * Type name including suffixes: [] array, ? optional, $ binary ext
         */get typeName(){let rv=this.name;if(this.isArray){rv+='[]';}if(this.isOptional){rv+='?';}if(this.isExtension){rv+='$';}return rv;}/** All fields including base struct(s), undefined if not a struct type. */get allFields(){// eslint-disable-next-line @typescript-eslint/no-this-alias
let current=this;const rv=[];const seen=new Set();do{if(!current.fields){return;// invalid struct
}if(seen.has(current.name)){return;// circular ref
}for(let i=current.fields.length-1;i>=0;i--){rv.unshift(current.fields[i]);}seen.add(current.name);current=current.base;}while(current!==undefined);return rv;}}ABI.ResolvedType=ResolvedType;})(ABI||(ABI={}));class Asset{constructor(units,symbol){this.units=units;this.symbol=symbol;}static from(value,symbol){if(isInstanceOf(value,Asset)){return value;}switch(typeof value){case'number':if(!symbol){throw new Error('Symbol is required when creating Asset from number');}return this.fromFloat(value,symbol);case'string':return this.fromString(value);default:throw new Error('Invalid asset');}}static fromString(value){const parts=(typeof value==='string'?value:'').split(' ');if(parts.length!==2){throw new Error('Invalid asset string');}const amount=parts[0].replace('.','');const precision=(parts[0].split('.')[1]||'').length;const symbol=Asset.Symbol.fromParts(parts[1],precision);return new Asset(Int64.from(amount),symbol);}static fromFloat(value,symbol){const s=Asset.Symbol.from(symbol);return new Asset(s.convertFloat(value),s);}static fromUnits(value,symbol){return new Asset(Int64.from(value),Asset.Symbol.from(symbol));}static fromABI(decoder){const units=Int64.fromABI(decoder);const symbol=Asset.Symbol.fromABI(decoder);return new Asset(units,symbol);}equals(other){const{symbol,units}=Asset.from(other);return this.symbol.value.equals(symbol.value)&&this.units.equals(units);}get value(){return this.symbol.convertUnits(this.units);}set value(newValue){this.units=this.symbol.convertFloat(newValue);}toABI(encoder){this.units.toABI(encoder);this.symbol.toABI(encoder);}toString(){const digits=this.units.toString().split('');let negative=false;if(digits[0]==='-'){negative=true;digits.shift();}const p=this.symbol.precision;while(digits.length<=p){digits.unshift('0');}if(p>0){digits.splice(digits.length-p,0,'.');}let rv=digits.join('');if(negative){rv='-'+rv;}return rv+' '+this.symbol.name;}toJSON(){return this.toString();}}Asset.abiName='asset';(function(Asset){class Symbol{constructor(value){if(toSymbolPrecision(value)>Symbol.maxPrecision){throw new Error('Invalid asset symbol, precision too large');}if(!Symbol.symbolNamePattern.test(toSymbolName(value))){throw new Error('Invalid asset symbol, name must be uppercase A-Z');}this.value=value;}static from(value){if(isInstanceOf(value,Symbol)){return value;}if(isInstanceOf(value,UInt64)){return new Symbol(value);}const parts=value.split(',');if(parts.length!==2){throw new Error('Invalid symbol string');}const precision=Number.parseInt(parts[0]);return Symbol.fromParts(parts[1],precision);}static fromParts(name,precision){return new Symbol(toRawSymbol(name,precision));}// eslint-disable-next-line @typescript-eslint/ban-types
static fromABI(decoder){return new Symbol(UInt64.fromABI(decoder));}equals(other){return this.value.equals(Symbol.from(other).value);}get name(){return toSymbolName(this.value);}get precision(){return toSymbolPrecision(this.value);}get code(){return new SymbolCode(UInt64.from(this.value.value.clone().iushrn(8)));}toABI(encoder){this.value.toABI(encoder);}/**
         * Convert units to floating point number according to symbol precision.
         * @throws If the given units can't be represented in 53 bits.
         **/convertUnits(units){return units.value.toNumber()/Math.pow(10,this.precision);}/**
         * Convert floating point to units according to symbol precision.
         * Note that the value will be rounded to closest precision.
         **/convertFloat(float){return Int64.from(float.toFixed(this.precision).replace('.',''));}toString(){return`${this.precision},${this.name}`;}toJSON(){return this.toString();}}Symbol.abiName='symbol';Symbol.symbolNamePattern=/^[A-Z]{1,7}$/;Symbol.maxPrecision=18;Asset.Symbol=Symbol;class SymbolCode{constructor(value){this.value=value;}static from(value){if(isInstanceOf(value,SymbolCode)){return value;}if(typeof value==='string'){value=UInt64.from(toRawSymbolCode(value));}return new this(UInt64.from(value));}static fromABI(decoder){return new SymbolCode(UInt64.fromABI(decoder));}equals(other){return this.value.equals(SymbolCode.from(other).value);}toABI(encoder){this.value.toABI(encoder);}toString(){return charsToSymbolName(this.value.value.toArray('be'));}toJSON(){return this.toString();}}SymbolCode.abiName='symbol_code';Asset.SymbolCode=SymbolCode;})(Asset||(Asset={}));class ExtendedAsset{constructor(quantity,contract){this.quantity=quantity;this.contract=contract;}static from(value){if(isInstanceOf(value,ExtendedAsset)){return value;}return new this(Asset.from(value.quantity),Name.from(value.contract));}static fromABI(decoder){return new ExtendedAsset(Asset.fromABI(decoder),Name.fromABI(decoder));}equals(other){return this.quantity.equals(other.quantity)&&this.contract.equals(other.contract);}toABI(encoder){this.quantity.toABI(encoder);this.contract.toABI(encoder);}toJSON(){return{quantity:this.quantity,contract:this.contract};}}ExtendedAsset.abiName='extended_asset';function toSymbolPrecision(rawSymbol){return rawSymbol.value.and(UInt64.from(0xff).value).toNumber();}function toSymbolName(rawSymbol){const chars=rawSymbol.value.toArray('be').slice(0,-1);return charsToSymbolName(chars);}function charsToSymbolName(chars){return chars.map(char=>String.fromCharCode(char)).reverse().join('');}function toRawSymbol(name,precision){const code=toRawSymbolCode(name);const bytes=new Uint8Array(code.length+1);bytes[0]=precision;bytes.set(code,1);return UInt64.from(bytes);}function toRawSymbolCode(name){const length=Math.min(name.length,7);const bytes=new Uint8Array(length);for(let i=0;i<length;i++){bytes[i]=name.charCodeAt(i);}return bytes;}exports.Base58=void 0;(function(Base58){let ErrorCode;(function(ErrorCode){ErrorCode["E_CHECKSUM"]="E_CHECKSUM";ErrorCode["E_INVALID"]="E_INVALID";})(ErrorCode=Base58.ErrorCode||(Base58.ErrorCode={}));class DecodingError extends Error{constructor(message,code,info={}){super(message);this.code=code;this.info=info;}}DecodingError.__className='DecodingError';Base58.DecodingError=DecodingError;const chars='123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';const charMap=new Int16Array(0xff).fill(-1);for(let i=0;i<58;++i){charMap[chars.charCodeAt(i)]=i;}/** Decode a Base58 encoded string. */function decode(s,size){if(size==null){return decodeVar(s);}const result=new Uint8Array(size);for(let i=0;i<s.length;++i){let carry=charMap[s.charCodeAt(i)];if(carry<0){throw new DecodingError('Invalid Base58 character encountered',ErrorCode.E_INVALID,{char:s[i]});}for(let j=0;j<size;++j){const x=result[j]*58+carry;result[j]=x;carry=x>>8;}if(carry){throw new DecodingError('Base58 value is out of range',ErrorCode.E_INVALID);}}result.reverse();return new Bytes(result);}Base58.decode=decode;/** Decode a Base58Check encoded string. */function decodeCheck(encoded,size){const decoded=decode(encoded,size!=null?size+4:size);const data=decoded.array.subarray(0,-4);const expected=decoded.array.subarray(-4);const actual=dsha256Checksum(data);if(!arrayEquals(expected,actual)){throw new DecodingError('Checksum mismatch',ErrorCode.E_CHECKSUM,{actual,expected,data,hash:'double_sha256'});}return new Bytes(data);}Base58.decodeCheck=decodeCheck;/** Decode a Base58Check encoded string that uses ripemd160 instead of double sha256 for the digest. */function decodeRipemd160Check(encoded,size,suffix){const decoded=decode(encoded,size!=null?size+4:size);const data=decoded.array.subarray(0,-4);const expected=decoded.array.subarray(-4);const actual=ripemd160Checksum(data,suffix);if(!arrayEquals(expected,actual)){throw new DecodingError('Checksum mismatch',ErrorCode.E_CHECKSUM,{actual,expected,data,hash:'ripemd160'});}return new Bytes(data);}Base58.decodeRipemd160Check=decodeRipemd160Check;/** Encode bytes to a Base58 string.  */function encode(data){data=Bytes.from(data);const result=[];for(const byte of data.array){let carry=byte;for(let j=0;j<result.length;++j){const x=(charMap[result[j]]<<8)+carry;result[j]=chars.charCodeAt(x%58);carry=x/58|0;}while(carry){result.push(chars.charCodeAt(carry%58));carry=carry/58|0;}}for(const byte of data.array){if(byte){break;}else{result.push('1'.charCodeAt(0));}}result.reverse();return String.fromCharCode(...result);}Base58.encode=encode;function encodeCheck(data){data=Bytes.from(data);data=data.appending(dsha256Checksum(data.array));return encode(data);}Base58.encodeCheck=encodeCheck;function encodeRipemd160Check(data,suffix){data=Bytes.from(data);data=data.appending(ripemd160Checksum(data.array,suffix));return encode(data);}Base58.encodeRipemd160Check=encodeRipemd160Check;/** @internal */function decodeVar(s){const result=[];for(let i=0;i<s.length;++i){let carry=charMap[s.charCodeAt(i)];if(carry<0){throw new DecodingError('Invalid Base58 character encountered',ErrorCode.E_INVALID,{char:s[i]});}for(let j=0;j<result.length;++j){const x=result[j]*58+carry;result[j]=x&0xff;carry=x>>8;}if(carry){result.push(carry);}}for(const ch of s){if(ch==='1'){result.push(0);}else{break;}}result.reverse();return Bytes.from(result);}/** @internal */function ripemd160Checksum(data,suffix){const hash=hash_js.ripemd160().update(data);if(suffix){hash.update(suffix);}return new Uint8Array(hash.digest().slice(0,4));}/** @internal */function dsha256Checksum(data){const round1=hash_js.sha256().update(data).digest();const round2=hash_js.sha256().update(round1).digest();return new Uint8Array(round2.slice(0,4));}})(exports.Base58||(exports.Base58={}));class PublicKey{/** @internal */constructor(type,data){this.type=type;this.data=data;}/** Create PublicKey object from representing types. */static from(value){if(isInstanceOf(value,PublicKey)){return value;}if(typeof value==='object'&&value.type&&value.compressed){return new PublicKey(exports.CurveType.from(value.type),new Bytes(value.compressed));}if(typeof value!=='string'){throw new Error('Invalid public key');}if(value.startsWith('PUB_')){const parts=value.split('_');if(parts.length!==3){throw new Error('Invalid public key string');}const type=exports.CurveType.from(parts[1]);const size=type===exports.CurveType.K1||type===exports.CurveType.R1?33:undefined;const data=exports.Base58.decodeRipemd160Check(parts[2],size,type);return new PublicKey(type,data);}else if(value.length>=50){// Legacy EOS key
const data=exports.Base58.decodeRipemd160Check(value.slice(-50));return new PublicKey(exports.CurveType.K1,data);}else{throw new Error('Invalid public key string');}}/** @internal */static fromABI(decoder){const type=exports.CurveType.from(decoder.readByte());if(type==exports.CurveType.WA){// "WA" keys pack some sort of metadata
// we probably need to restructure key data storage into containers like FC does
const data=new Bytes(decoder.readArray(33));Bytes.fromABI(decoder);// throw away metadata for now
return new PublicKey(type,data);}return new PublicKey(type,new Bytes(decoder.readArray(33)));}equals(other){const otherKey=PublicKey.from(other);return this.type===otherKey.type&&this.data.equals(otherKey.data);}/**
     * Return EOSIO legacy (`EOS<base58data>`) formatted key.
     * @throws If the key type isn't `K1`
     */toLegacyString(prefix='EOS'){if(this.type!==exports.CurveType.K1){throw new Error('Unable to create legacy formatted string for non-K1 key');}return`${prefix}${exports.Base58.encodeRipemd160Check(this.data)}`;}/** Return key in modern EOSIO format (`PUB_<type>_<base58data>`) */toString(){return`PUB_${this.type}_${exports.Base58.encodeRipemd160Check(this.data,this.type)}`;}/** @internal */toABI(encoder){if(this.type===exports.CurveType.WA){throw new Error('WA keys are not supported yet');}encoder.writeByte(exports.CurveType.indexFor(this.type));encoder.writeArray(this.data.array);}/** @internal */toJSON(){return this.toString();}}PublicKey.abiName='public_key';const curves={};/**
 * Get curve for key type.
 * @internal
 */function getCurve(type){let rv=curves[type];if(!rv){if(type==='K1'){rv=curves[type]=new elliptic.ec('secp256k1');}else if(type==='R1'){rv=curves[type]=new elliptic.ec('p256');}else{throw new Error(`Unknown curve type: ${type}`);}}return rv;}/**
 * Recover public key from signature and recovery id.
 * @internal
 */function recover(signature,message,type){const curve=getCurve(type);const recid=signature[0]-31;const r=signature.subarray(1,33);const s=signature.subarray(33);const point=curve.recoverPubKey(message,{r,s},recid);return new Uint8Array(point.encodeCompressed());}/**
 * Verify signature using message and public key.
 * @internal
 */function verify(signature,message,pubkey,type){const curve=getCurve(type);const r=signature.subarray(1,33);const s=signature.subarray(33);return curve.verify(message,{r,s},pubkey);}class Signature{/** @internal */constructor(type,data){this.type=type;this.data=data;}/** Create Signature object from representing types. */static from(value){if(isInstanceOf(value,Signature)){return value;}if(typeof value==='object'&&value.r&&value.s){const data=new Uint8Array(1+32+32);let recid=value.recid;const type=exports.CurveType.from(value.type);if(value.type===exports.CurveType.K1||value.type===exports.CurveType.R1){recid+=31;}data[0]=recid;data.set(value.r,1);data.set(value.s,33);return new Signature(type,new Bytes(data));}if(typeof value!=='string'){throw new Error('Invalid signature');}if(value.startsWith('SIG_')){const parts=value.split('_');if(parts.length!==3){throw new Error('Invalid signature string');}const type=exports.CurveType.from(parts[1]);const size=type===exports.CurveType.K1||type===exports.CurveType.R1?65:undefined;const data=exports.Base58.decodeRipemd160Check(parts[2],size,type);return new Signature(type,data);}else{throw new Error('Invalid signature string');}}/** @internal */static fromABI(decoder){const type=exports.CurveType.from(decoder.readByte());if(type===exports.CurveType.WA){// same as with public keys WA type has some extra data tacked on
const data=new Bytes(decoder.readArray(65));// sig
Bytes.fromABI(decoder);// throw away for now
Bytes.fromABI(decoder);return new Signature(exports.CurveType.WA,data);}return new Signature(type,new Bytes(decoder.readArray(65)));}equals(other){const otherSig=Signature.from(other);return this.type===otherSig.type&&this.data.equals(otherSig.data);}/** Recover public key from given message digest. */recoverDigest(digest){digest=Checksum256.from(digest);const compressed=recover(this.data.array,digest.array,this.type);return PublicKey.from({compressed,type:this.type});}/** Recover public key from given message. */recoverMessage(message){return this.recoverDigest(Checksum256.hash(message));}/** Verify this signature with given message digest and public key. */verifyDigest(digest,publicKey){digest=Checksum256.from(digest);return verify(this.data.array,digest.array,publicKey.data.array,this.type);}/** Verify this signature with given message and public key. */verifyMessage(message,publicKey){return this.verifyDigest(Checksum256.hash(message),publicKey);}/** Base58check encoded string representation of this signature (`SIG_<type>_<data>`). */toString(){return`SIG_${this.type}_${exports.Base58.encodeRipemd160Check(this.data,this.type)}`;}/** @internal */toABI(encoder){if(this.type===exports.CurveType.WA){throw new Error('WA signatures are not supported yet');}encoder.writeByte(exports.CurveType.indexFor(this.type));encoder.writeArray(this.data.array);}/** @internal */toJSON(){return this.toString();}}Signature.abiName='signature';/**
 * Get public key corresponding to given private key.
 * @internal
 */function getPublic(privkey,type){const curve=getCurve(type);const key=curve.keyFromPrivate(privkey);const point=key.getPublic();return new Uint8Array(point.encodeCompressed());}/**
 * Derive shared secret for key pair.
 * @internal
 */function sharedSecret(privkey,pubkey,type){const curve=getCurve(type);const priv=curve.keyFromPrivate(privkey);const pub=curve.keyFromPublic(pubkey).getPublic();return priv.derive(pub).toArrayLike(Uint8Array,'be');}/**
 * Sign digest using private key.
 * @internal
 */function sign(secret,message,type){const curve=getCurve(type);const key=curve.keyFromPrivate(secret);let sig;let r;let s;if(type==='K1'){let attempt=1;do{sig=key.sign(message,{canonical:true,pers:[attempt++]});r=sig.r.toArrayLike(Uint8Array,'be',32);s=sig.s.toArrayLike(Uint8Array,'be',32);}while(!isCanonical(r,s));}else{sig=key.sign(message,{canonical:true});r=sig.r.toArrayLike(Uint8Array,'be',32);s=sig.s.toArrayLike(Uint8Array,'be',32);}return{type,r,s,recid:sig.recoveryParam||0};}/**
 * Here be dragons
 * - https://github.com/steemit/steem/issues/1944
 * - https://github.com/EOSIO/eos/issues/6699
 * @internal
 */function isCanonical(r,s){return!(r[0]&0x80)&&!(r[0]===0&&!(r[1]&0x80))&&!(s[0]&0x80)&&!(s[0]===0&&!(s[1]&0x80));}/**
 * Generate a new private key for given type.
 * @internal
 */function generate(type){const curve=getCurve(type);const privkey=curve.genKeyPair().getPrivate();return privkey.toArrayLike(Uint8Array,'be');}class PrivateKey{/** @internal */constructor(type,data){this.type=type;this.data=data;}/** Create PrivateKey object from representing types. */static from(value){if(isInstanceOf(value,PrivateKey)){return value;}else{return this.fromString(value);}}/**
     * Create PrivateKey object from a string representation.
     * Accepts WIF (5...) and EOSIO (PVT_...) style private keys.
     */static fromString(string,ignoreChecksumError=false){try{const{type,data}=decodeKey(string);return new this(type,data);}catch(error){error.message=`Invalid private key (${error.message})`;if(ignoreChecksumError&&isInstanceOf(error,exports.Base58.DecodingError)&&error.code===exports.Base58.ErrorCode.E_CHECKSUM){const type=string.startsWith('PVT_R1')?exports.CurveType.R1:exports.CurveType.K1;let data=new Bytes(error.info.data);if(data.array.length==33){data=data.droppingFirst();}return new this(type,data);}throw error;}}/**
     * Generate new PrivateKey.
     * @throws If a secure random source isn't available.
     */static generate(type){return new PrivateKey(exports.CurveType.from(type),new Bytes(generate(type)));}/**
     * Sign message digest using this key.
     * @throws If the key type isn't R1 or K1.
     */signDigest(digest){digest=Checksum256.from(digest);return Signature.from(sign(this.data.array,digest.array,this.type));}/**
     * Sign message using this key.
     * @throws If the key type isn't R1 or K1.
     */signMessage(message){return this.signDigest(Checksum256.hash(message));}/**
     * Derive the shared secret between this private key and given public key.
     * @throws If the key type isn't R1 or K1.
     */sharedSecret(publicKey){const shared=sharedSecret(this.data.array,publicKey.data.array,this.type);return Checksum512.hash(shared);}/**
     * Get the corresponding public key.
     * @throws If the key type isn't R1 or K1.
     */toPublic(){const compressed=getPublic(this.data.array,this.type);return PublicKey.from({compressed,type:this.type});}/**
     * Return WIF representation of this private key
     * @throws If the key type isn't K1.
     */toWif(){if(this.type!==exports.CurveType.K1){throw new Error('Unable to generate WIF for non-k1 key');}return exports.Base58.encodeCheck(Bytes.from([0x80]).appending(this.data));}/**
     * Return the key in EOSIO PVT_<type>_<base58check> format.
     */toString(){return`PVT_${this.type}_${exports.Base58.encodeRipemd160Check(this.data,this.type)}`;}toJSON(){return this.toString();}}/** @internal */function decodeKey(value){const type=typeof value;if(type!=='string'){throw new Error(`Expected string, got ${type}`);}if(value.startsWith('PVT_')){// EOSIO format
const parts=value.split('_');if(parts.length!==3){throw new Error('Invalid PVT format');}const type=exports.CurveType.from(parts[1]);let size;switch(type){case exports.CurveType.K1:case exports.CurveType.R1:size=32;break;}const data=exports.Base58.decodeRipemd160Check(parts[2],size,type);return{type,data};}else{// WIF format
const type=exports.CurveType.K1;const data=exports.Base58.decodeCheck(value);if(data.array[0]!==0x80){throw new Error('Invalid WIF');}return{type,data:data.droppingFirst()};}}var PermissionLevel_1;/** EOSIO Permission Level, a.k.a "auth". */exports.PermissionLevel=PermissionLevel_1=class PermissionLevel extends Struct{/** Create new permission level from representing types. Can be expressed as a string in the format `<actor>@<permission>`. */static from(value){if(typeof value==='string'){const parts=value.split('@');if(parts.length!==2&&parts[0].length>0&&parts[1].length>0){throw new Error('Invalid permission level string, should be in the format <actor>@<permission>');}value={actor:parts[0],permission:parts[1]};}return super.from(value);}/** Return true if this permission level equals other. */equals(other){const otherPerm=PermissionLevel_1.from(other);return this.actor.equals(otherPerm.actor)&&this.permission.equals(otherPerm.permission);}toString(){return`${this.actor}@${this.permission}`;}};tslib.__decorate([Struct.field('name')],exports.PermissionLevel.prototype,"actor",void 0);tslib.__decorate([Struct.field('name')],exports.PermissionLevel.prototype,"permission",void 0);exports.PermissionLevel=PermissionLevel_1=tslib.__decorate([Struct.type('permission_level')],exports.PermissionLevel);var Action_1;exports.Action=Action_1=class Action extends Struct{static from(object,abi){const data=object.data;if(!Bytes.isBytes(data)){let type;if(abi){type=ABI.from(abi).getActionType(object.name);}else if(!data.constructor||data.constructor.abiName===undefined){throw new Error('Missing ABI definition when creating action with untyped action data');}object=Object.assign(Object.assign({},object),{data:abiEncode({object:data,type,abi})});}return super.from(object);}/** Return true if this Action is equal to given action. */equals(other){const otherAction=Action_1.from(other);return this.account.equals(otherAction.account)&&this.name.equals(otherAction.name)&&arrayEquatableEquals(this.authorization,otherAction.authorization)&&this.data.equals(otherAction.data);}decodeData(typeOrAbi){if(typeof typeOrAbi==='string'||typeOrAbi.abiName){return abiDecode({data:this.data,type:typeOrAbi});}else{const abi=ABI.from(typeOrAbi);const type=abi.getActionType(this.name);if(!type){throw new Error(`Action ${this.name} does not exist in provided ABI`);}return abiDecode({data:this.data,type,abi});}}};tslib.__decorate([Struct.field('name')],exports.Action.prototype,"account",void 0);tslib.__decorate([Struct.field('name')],exports.Action.prototype,"name",void 0);tslib.__decorate([Struct.field(exports.PermissionLevel,{array:true})],exports.Action.prototype,"authorization",void 0);tslib.__decorate([Struct.field('bytes')],exports.Action.prototype,"data",void 0);exports.Action=Action_1=tslib.__decorate([Struct.type('action')],exports.Action);var Transaction_1;exports.TransactionExtension=class TransactionExtension extends Struct{};tslib.__decorate([Struct.field('uint16')],exports.TransactionExtension.prototype,"type",void 0);tslib.__decorate([Struct.field('bytes')],exports.TransactionExtension.prototype,"data",void 0);exports.TransactionExtension=tslib.__decorate([Struct.type('transaction_extension')],exports.TransactionExtension);exports.TransactionHeader=class TransactionHeader extends Struct{static from(object){return super.from(object);}};tslib.__decorate([Struct.field('time_point_sec')],exports.TransactionHeader.prototype,"expiration",void 0);tslib.__decorate([Struct.field('uint16')],exports.TransactionHeader.prototype,"ref_block_num",void 0);tslib.__decorate([Struct.field('uint32')],exports.TransactionHeader.prototype,"ref_block_prefix",void 0);tslib.__decorate([Struct.field('varuint32',{default:0})],exports.TransactionHeader.prototype,"max_net_usage_words",void 0);tslib.__decorate([Struct.field('uint8',{default:0})],exports.TransactionHeader.prototype,"max_cpu_usage_ms",void 0);tslib.__decorate([Struct.field('varuint32',{default:0})],exports.TransactionHeader.prototype,"delay_sec",void 0);exports.TransactionHeader=tslib.__decorate([Struct.type('transaction_header')],exports.TransactionHeader);exports.Transaction=Transaction_1=class Transaction extends exports.TransactionHeader{static from(object,abis){const abiFor=contract=>{if(!abis){return;}else if(Array.isArray(abis)){return abis.filter(abi=>Name.from(abi.contract).equals(contract)).map(({abi})=>abi)[0];}else{return abis;}};const resolveAction=action=>exports.Action.from(action,abiFor(action.account));const actions=(object.actions||[]).map(resolveAction);const context_free_actions=(object.context_free_actions||[]).map(resolveAction);const transaction=Object.assign(Object.assign({},object),{context_free_actions,actions});return super.from(transaction);}/** Return true if this transaction is equal to given transaction. */equals(other){const tx=Transaction_1.from(other);return this.id.equals(tx.id);}get id(){return Checksum256.hash(abiEncode({object:this}));}signingDigest(chainId){let data=Bytes.from(Checksum256.from(chainId).array);data=data.appending(abiEncode({object:this}));data=data.appending(new Uint8Array(32));return Checksum256.hash(data);}};tslib.__decorate([Struct.field(exports.Action,{array:true,default:[]})],exports.Transaction.prototype,"context_free_actions",void 0);tslib.__decorate([Struct.field(exports.Action,{array:true,default:[]})],exports.Transaction.prototype,"actions",void 0);tslib.__decorate([Struct.field(exports.TransactionExtension,{array:true,default:[]})],exports.Transaction.prototype,"transaction_extensions",void 0);exports.Transaction=Transaction_1=tslib.__decorate([Struct.type('transaction')],exports.Transaction);exports.SignedTransaction=class SignedTransaction extends exports.Transaction{static from(object){return super.from(object);}};tslib.__decorate([Struct.field('signature[]',{default:[]})],exports.SignedTransaction.prototype,"signatures",void 0);tslib.__decorate([Struct.field('bytes[]',{default:[]})],exports.SignedTransaction.prototype,"context_free_data",void 0);exports.SignedTransaction=tslib.__decorate([Struct.type('signed_transaction')],exports.SignedTransaction);exports.PackedTransaction=class PackedTransaction extends Struct{static fromSigned(signed){const tx=exports.Transaction.from(signed);return this.from({signatures:signed.signatures,packed_context_free_data:abiEncode({object:signed.context_free_data,type:'bytes[]'}),packed_trx:abiEncode({object:tx})});}getTransaction(){if(Number(this.compression)!==0){throw new Error('Transaction compression not supported yet');}return abiDecode({data:this.packed_trx,type:exports.Transaction});}getSignedTransaction(){const transaction=this.getTransaction();// TODO: decode context free data
return exports.SignedTransaction.from(Object.assign(Object.assign({},transaction),{signatures:this.signatures}));}};tslib.__decorate([Struct.field('signature[]')],exports.PackedTransaction.prototype,"signatures",void 0);tslib.__decorate([Struct.field('uint8',{default:0})],exports.PackedTransaction.prototype,"compression",void 0);tslib.__decorate([Struct.field('bytes')],exports.PackedTransaction.prototype,"packed_context_free_data",void 0);tslib.__decorate([Struct.field('bytes')],exports.PackedTransaction.prototype,"packed_trx",void 0);exports.PackedTransaction=tslib.__decorate([Struct.type('packed_transaction')],exports.PackedTransaction);exports.TransactionReceipt=class TransactionReceipt extends Struct{};tslib.__decorate([Struct.field('string')],exports.TransactionReceipt.prototype,"status",void 0);tslib.__decorate([Struct.field('uint32')],exports.TransactionReceipt.prototype,"cpu_usage_us",void 0);tslib.__decorate([Struct.field('uint32')],exports.TransactionReceipt.prototype,"net_usage_words",void 0);exports.TransactionReceipt=tslib.__decorate([Struct.type('transaction_receipt')],exports.TransactionReceipt);var Authority_1;let Weight=class Weight extends UInt16{};Weight=tslib.__decorate([TypeAlias('weight_type')],Weight);let KeyWeight=class KeyWeight extends Struct{};tslib.__decorate([Struct.field(PublicKey)],KeyWeight.prototype,"key",void 0);tslib.__decorate([Struct.field(Weight)],KeyWeight.prototype,"weight",void 0);KeyWeight=tslib.__decorate([Struct.type('key_weight')],KeyWeight);let PermissionLevelWeight=class PermissionLevelWeight extends Struct{};tslib.__decorate([Struct.field(exports.PermissionLevel)],PermissionLevelWeight.prototype,"permission",void 0);tslib.__decorate([Struct.field(Weight)],PermissionLevelWeight.prototype,"weight",void 0);PermissionLevelWeight=tslib.__decorate([Struct.type('permission_level_weight')],PermissionLevelWeight);let WaitWeight=class WaitWeight extends Struct{};tslib.__decorate([Struct.field(UInt32)],WaitWeight.prototype,"wait_sec",void 0);tslib.__decorate([Struct.field(Weight)],WaitWeight.prototype,"weight",void 0);WaitWeight=tslib.__decorate([Struct.type('wait_weight')],WaitWeight);exports.Authority=Authority_1=class Authority extends Struct{static from(value){if(isInstanceOf(value,Authority_1)){return value;}const rv=super.from(Object.assign({keys:[],accounts:[],waits:[]},value));rv.sort();return rv;}/** Total weight of all waits. */get waitThreshold(){return this.waits.reduce((val,wait)=>val+wait.weight.toNumber(),0);}/** Weight a key needs to sign for this authority. */get keyThreshold(){return this.threshold.toNumber()-this.waitThreshold;}/** Return the weight for given public key, or zero if it is not included in this authority. */keyWeight(publicKey){const weight=this.keys.find(({key})=>key.equals(publicKey));return weight?weight.weight.toNumber():0;}/**
     * Check if given public key has permission in this authority,
     * @attention Does not take indirect permissions for the key via account weights into account.
     * @param publicKey The key to check.
     * @param includePartial Whether to consider auths where the key is included but can't be reached alone (e.g. multisig).
     */hasPermission(publicKey,includePartial=false){const threshold=includePartial?1:this.keyThreshold;const weight=this.keyWeight(publicKey);return weight>=threshold;}/**
     * Sorts the authority weights in place, should be called before including the authority in a `updateauth` action or it might be rejected.
     */sort(){// This hack satisfies the constraints that authority weights, see: https://github.com/greymass/eosio-core/issues/8
this.keys.sort((a,b)=>String(a.key).localeCompare(String(b.key)));this.accounts.sort((a,b)=>String(a.permission).localeCompare(String(b.permission)));this.waits.sort((a,b)=>String(a.wait_sec).localeCompare(String(b.wait_sec)));}};tslib.__decorate([Struct.field(UInt32)],exports.Authority.prototype,"threshold",void 0);tslib.__decorate([Struct.field(KeyWeight,{array:true})],exports.Authority.prototype,"keys",void 0);tslib.__decorate([Struct.field(PermissionLevelWeight,{array:true})],exports.Authority.prototype,"accounts",void 0);tslib.__decorate([Struct.field(WaitWeight,{array:true})],exports.Authority.prototype,"waits",void 0);exports.Authority=Authority_1=tslib.__decorate([Struct.type('authority')],exports.Authority);exports.Serializer=void 0;(function(Serializer){Serializer.encode=abiEncode;Serializer.decode=abiDecode;/** Create an EOSIO ABI definition for given core type. */function synthesize(type){return synthesizeABI(type).abi;}Serializer.synthesize=synthesize;/** Create JSON representation of a core object. */function stringify(object){return JSON.stringify(object);}Serializer.stringify=stringify;/** Create a vanilla js representation of a core object. */function objectify(object){const walk=v=>{switch(typeof v){case'boolean':case'number':case'string':return v;case'object':{if(v===null){return v;}if(typeof v.toJSON==='function'){return walk(v.toJSON());}if(Array.isArray(v)){return v.map(walk);}const rv={};for(const key of Object.keys(v)){rv[key]=walk(v[key]);}return rv;}}};return walk(object);}Serializer.objectify=objectify;})(exports.Serializer||(exports.Serializer={}));/** Default provider that uses the Fetch API to call a single node. */class FetchProvider{constructor(url,options={}){url=url.trim();if(url.endsWith('/'))url=url.slice(0,-1);this.url=url;if(!options.fetch){if(typeof window!=='undefined'&&window.fetch){this.fetch=window.fetch.bind(window);}else if(typeof global!=='undefined'&&global.fetch){this.fetch=global.fetch.bind(global);}else{throw new Error('Missing fetch');}}else{this.fetch=options.fetch;}}call(path,params){return tslib.__awaiter(this,void 0,void 0,function*(){const url=this.url+path;const response=yield this.fetch(url,{method:'POST',body:params!==undefined?JSON.stringify(params):undefined});try{return response.json();}catch(error){if(!response.ok){throw Error(`HTTP ${response.status}: ${response.statusText}`);}error.message=`Unable to parse JSON response from server: ${error.message}`;throw error;}});}}let AccountPermission=class AccountPermission extends Struct{};tslib.__decorate([Struct.field('name')],AccountPermission.prototype,"perm_name",void 0);tslib.__decorate([Struct.field('name')],AccountPermission.prototype,"parent",void 0);tslib.__decorate([Struct.field(exports.Authority)],AccountPermission.prototype,"required_auth",void 0);AccountPermission=tslib.__decorate([Struct.type('account_permission')],AccountPermission);let AccountResourceLimit=class AccountResourceLimit extends Struct{};tslib.__decorate([Struct.field('int64')],AccountResourceLimit.prototype,"used",void 0);tslib.__decorate([Struct.field('int64')],AccountResourceLimit.prototype,"available",void 0);tslib.__decorate([Struct.field('int64')],AccountResourceLimit.prototype,"max",void 0);AccountResourceLimit=tslib.__decorate([Struct.type('account_resource_limit')],AccountResourceLimit);let AccountTotalResources=class AccountTotalResources extends Struct{};tslib.__decorate([Struct.field('name')],AccountTotalResources.prototype,"owner",void 0);tslib.__decorate([Struct.field('asset')],AccountTotalResources.prototype,"net_weight",void 0);tslib.__decorate([Struct.field('asset')],AccountTotalResources.prototype,"cpu_weight",void 0);tslib.__decorate([Struct.field('uint64')],AccountTotalResources.prototype,"ram_bytes",void 0);AccountTotalResources=tslib.__decorate([Struct.type('account_total_resources')],AccountTotalResources);let AccountSelfDelegatedBandwidth=class AccountSelfDelegatedBandwidth extends Struct{};tslib.__decorate([Struct.field('name')],AccountSelfDelegatedBandwidth.prototype,"from",void 0);tslib.__decorate([Struct.field('name')],AccountSelfDelegatedBandwidth.prototype,"to",void 0);tslib.__decorate([Struct.field('asset')],AccountSelfDelegatedBandwidth.prototype,"net_weight",void 0);tslib.__decorate([Struct.field('asset')],AccountSelfDelegatedBandwidth.prototype,"cpu_weight",void 0);AccountSelfDelegatedBandwidth=tslib.__decorate([Struct.type('account_self_delegated_bandwidth')],AccountSelfDelegatedBandwidth);let AccountRefundRequest=class AccountRefundRequest extends Struct{};tslib.__decorate([Struct.field('name')],AccountRefundRequest.prototype,"owner",void 0);tslib.__decorate([Struct.field('time_point')],AccountRefundRequest.prototype,"request_time",void 0);tslib.__decorate([Struct.field('asset')],AccountRefundRequest.prototype,"net_amount",void 0);tslib.__decorate([Struct.field('asset')],AccountRefundRequest.prototype,"cpu_amount",void 0);AccountRefundRequest=tslib.__decorate([Struct.type('account_refund_request')],AccountRefundRequest);let AccountVoterInfo=class AccountVoterInfo extends Struct{};tslib.__decorate([Struct.field('name')],AccountVoterInfo.prototype,"owner",void 0);tslib.__decorate([Struct.field('name')],AccountVoterInfo.prototype,"proxy",void 0);tslib.__decorate([Struct.field('name',{array:true})],AccountVoterInfo.prototype,"producers",void 0);tslib.__decorate([Struct.field('int64',{optional:true})],AccountVoterInfo.prototype,"staked",void 0);tslib.__decorate([Struct.field('bool')],AccountVoterInfo.prototype,"is_proxy",void 0);tslib.__decorate([Struct.field('uint32',{optional:true})],AccountVoterInfo.prototype,"flags1",void 0);tslib.__decorate([Struct.field('uint32')],AccountVoterInfo.prototype,"reserved2",void 0);tslib.__decorate([Struct.field('string')],AccountVoterInfo.prototype,"reserved3",void 0);AccountVoterInfo=tslib.__decorate([Struct.type('account_voter_info')],AccountVoterInfo);let AccountRexInfoMaturities=class AccountRexInfoMaturities extends Struct{};tslib.__decorate([Struct.field('time_point',{optional:true})],AccountRexInfoMaturities.prototype,"key",void 0);tslib.__decorate([Struct.field('int64',{optional:true})],AccountRexInfoMaturities.prototype,"value",void 0);tslib.__decorate([Struct.field('time_point',{optional:true})],AccountRexInfoMaturities.prototype,"first",void 0);tslib.__decorate([Struct.field('int64',{optional:true})],AccountRexInfoMaturities.prototype,"second",void 0);AccountRexInfoMaturities=tslib.__decorate([Struct.type('account_rex_info_maturities')],AccountRexInfoMaturities);let AccountRexInfo=class AccountRexInfo extends Struct{};tslib.__decorate([Struct.field('uint32')],AccountRexInfo.prototype,"version",void 0);tslib.__decorate([Struct.field('name')],AccountRexInfo.prototype,"owner",void 0);tslib.__decorate([Struct.field('asset')],AccountRexInfo.prototype,"vote_stake",void 0);tslib.__decorate([Struct.field('asset')],AccountRexInfo.prototype,"rex_balance",void 0);tslib.__decorate([Struct.field('int64')],AccountRexInfo.prototype,"matured_rex",void 0);tslib.__decorate([Struct.field(AccountRexInfoMaturities,{array:true})],AccountRexInfo.prototype,"rex_maturities",void 0);AccountRexInfo=tslib.__decorate([Struct.type('account_rex_info')],AccountRexInfo);let AccountObject=class AccountObject extends Struct{getPermission(permission){const name=Name.from(permission);const match=this.permissions.find(p=>p.perm_name.equals(name));if(!match){throw new Error(`Unknown permission ${name} on account ${this.account_name}.`);}return match;}};tslib.__decorate([Struct.field('name')],AccountObject.prototype,"account_name",void 0);tslib.__decorate([Struct.field('uint32')],AccountObject.prototype,"head_block_num",void 0);tslib.__decorate([Struct.field('time_point')],AccountObject.prototype,"head_block_time",void 0);tslib.__decorate([Struct.field('bool')],AccountObject.prototype,"privileged",void 0);tslib.__decorate([Struct.field('time_point')],AccountObject.prototype,"last_code_update",void 0);tslib.__decorate([Struct.field('time_point')],AccountObject.prototype,"created",void 0);tslib.__decorate([Struct.field('asset?')],AccountObject.prototype,"core_liquid_balance",void 0);tslib.__decorate([Struct.field('int64')],AccountObject.prototype,"ram_quota",void 0);tslib.__decorate([Struct.field('int64')],AccountObject.prototype,"net_weight",void 0);tslib.__decorate([Struct.field('int64')],AccountObject.prototype,"cpu_weight",void 0);tslib.__decorate([Struct.field(AccountResourceLimit)],AccountObject.prototype,"net_limit",void 0);tslib.__decorate([Struct.field(AccountResourceLimit)],AccountObject.prototype,"cpu_limit",void 0);tslib.__decorate([Struct.field('uint64')],AccountObject.prototype,"ram_usage",void 0);tslib.__decorate([Struct.field(AccountPermission,{array:true})],AccountObject.prototype,"permissions",void 0);tslib.__decorate([Struct.field(AccountTotalResources)],AccountObject.prototype,"total_resources",void 0);tslib.__decorate([Struct.field(AccountSelfDelegatedBandwidth,{optional:true})],AccountObject.prototype,"self_delegated_bandwidth",void 0);tslib.__decorate([Struct.field(AccountRefundRequest,{optional:true})],AccountObject.prototype,"refund_request",void 0);tslib.__decorate([Struct.field(AccountVoterInfo,{optional:true})],AccountObject.prototype,"voter_info",void 0);tslib.__decorate([Struct.field(AccountRexInfo,{optional:true})],AccountObject.prototype,"rex_info",void 0);AccountObject=tslib.__decorate([Struct.type('account_object')],AccountObject);let NewProducersEntry=class NewProducersEntry extends Struct{};tslib.__decorate([Struct.field('name')],NewProducersEntry.prototype,"producer_name",void 0);tslib.__decorate([Struct.field('public_key')],NewProducersEntry.prototype,"block_signing_key",void 0);NewProducersEntry=tslib.__decorate([Struct.type('new_producers_entry')],NewProducersEntry);let NewProducers=class NewProducers extends Struct{};tslib.__decorate([Struct.field('uint32')],NewProducers.prototype,"version",void 0);tslib.__decorate([Struct.field(NewProducersEntry,{array:true})],NewProducers.prototype,"producers",void 0);NewProducers=tslib.__decorate([Struct.type('new_producers')],NewProducers);let BlockExtension=class BlockExtension extends Struct{};tslib.__decorate([Struct.field('uint16')],BlockExtension.prototype,"type",void 0);tslib.__decorate([Struct.field('bytes')],BlockExtension.prototype,"data",void 0);BlockExtension=tslib.__decorate([Struct.type('block_extension')],BlockExtension);let HeaderExtension=class HeaderExtension extends Struct{};tslib.__decorate([Struct.field('uint16')],HeaderExtension.prototype,"type",void 0);tslib.__decorate([Struct.field('bytes')],HeaderExtension.prototype,"data",void 0);HeaderExtension=tslib.__decorate([Struct.type('header_extension')],HeaderExtension);// fc "mutable variant" returned by get_block api
class TrxVariant{constructor(id,extra){this.id=id;this.extra=extra;}static from(data){let id;let extra;if(typeof data==='string'){id=Checksum256.from(data);extra={};}else{id=Checksum256.from(data.id);extra=data;}return new this(id,extra);}get transaction(){if(this.extra.packed_trx){return exports.Serializer.decode({data:this.extra.packed_trx,type:exports.Transaction});}}get signatures(){if(this.extra.signatures){return this.extra.signatures.map(Signature.from);}}equals(other){return this.id.equals(other.id);}toJSON(){return this.id;}}TrxVariant.abiName='trx_variant';let GetBlockResponseTransactionReceipt=class GetBlockResponseTransactionReceipt extends exports.TransactionReceipt{get id(){return this.trx.id;}};tslib.__decorate([Struct.field(TrxVariant)],GetBlockResponseTransactionReceipt.prototype,"trx",void 0);GetBlockResponseTransactionReceipt=tslib.__decorate([Struct.type('get_block_response_receipt')],GetBlockResponseTransactionReceipt);let GetBlockResponse=class GetBlockResponse extends Struct{};tslib.__decorate([Struct.field('time_point')],GetBlockResponse.prototype,"timestamp",void 0);tslib.__decorate([Struct.field('name')],GetBlockResponse.prototype,"producer",void 0);tslib.__decorate([Struct.field('uint16')],GetBlockResponse.prototype,"confirmed",void 0);tslib.__decorate([Struct.field('checksum256')],GetBlockResponse.prototype,"previous",void 0);tslib.__decorate([Struct.field('checksum256')],GetBlockResponse.prototype,"transaction_mroot",void 0);tslib.__decorate([Struct.field('checksum256')],GetBlockResponse.prototype,"action_mroot",void 0);tslib.__decorate([Struct.field('uint32')],GetBlockResponse.prototype,"schedule_version",void 0);tslib.__decorate([Struct.field(NewProducers,{optional:true})],GetBlockResponse.prototype,"new_producers",void 0);tslib.__decorate([Struct.field('header_extension',{optional:true})],GetBlockResponse.prototype,"header_extensions",void 0);tslib.__decorate([Struct.field('any',{optional:true})],GetBlockResponse.prototype,"new_protocol_features",void 0);tslib.__decorate([Struct.field('signature')],GetBlockResponse.prototype,"producer_signature",void 0);tslib.__decorate([Struct.field(GetBlockResponseTransactionReceipt,{array:true})],GetBlockResponse.prototype,"transactions",void 0);tslib.__decorate([Struct.field('block_extension',{optional:true})],GetBlockResponse.prototype,"block_extensions",void 0);tslib.__decorate([Struct.field('checksum256')],GetBlockResponse.prototype,"id",void 0);tslib.__decorate([Struct.field('uint32')],GetBlockResponse.prototype,"block_num",void 0);tslib.__decorate([Struct.field('uint32')],GetBlockResponse.prototype,"ref_block_prefix",void 0);GetBlockResponse=tslib.__decorate([Struct.type('get_block_response')],GetBlockResponse);let ActiveScheduleProducerAuthority=class ActiveScheduleProducerAuthority extends Struct{};tslib.__decorate([Struct.field('name')],ActiveScheduleProducerAuthority.prototype,"producer_name",void 0);tslib.__decorate([Struct.field('any')],ActiveScheduleProducerAuthority.prototype,"authority",void 0);ActiveScheduleProducerAuthority=tslib.__decorate([Struct.type('active_schedule_producer_authority')],ActiveScheduleProducerAuthority);let ActiveScheduleProducer=class ActiveScheduleProducer extends Struct{};tslib.__decorate([Struct.field('name')],ActiveScheduleProducer.prototype,"producer_name",void 0);tslib.__decorate([Struct.field(ActiveScheduleProducerAuthority)],ActiveScheduleProducer.prototype,"authority",void 0);ActiveScheduleProducer=tslib.__decorate([Struct.type('active_schedule_producer')],ActiveScheduleProducer);let ActiveSchedule=class ActiveSchedule extends Struct{};tslib.__decorate([Struct.field('uint32')],ActiveSchedule.prototype,"version",void 0);tslib.__decorate([Struct.field(ActiveScheduleProducer,{array:true})],ActiveSchedule.prototype,"producers",void 0);ActiveSchedule=tslib.__decorate([Struct.type('active_schedule')],ActiveSchedule);let BlockStateHeader=class BlockStateHeader extends Struct{};tslib.__decorate([Struct.field('time_point')],BlockStateHeader.prototype,"timestamp",void 0);tslib.__decorate([Struct.field('name')],BlockStateHeader.prototype,"producer",void 0);tslib.__decorate([Struct.field('uint16')],BlockStateHeader.prototype,"confirmed",void 0);tslib.__decorate([Struct.field('checksum256')],BlockStateHeader.prototype,"previous",void 0);tslib.__decorate([Struct.field('checksum256')],BlockStateHeader.prototype,"transaction_mroot",void 0);tslib.__decorate([Struct.field('checksum256')],BlockStateHeader.prototype,"action_mroot",void 0);tslib.__decorate([Struct.field('uint32')],BlockStateHeader.prototype,"schedule_version",void 0);tslib.__decorate([Struct.field(HeaderExtension,{array:true,optional:true})],BlockStateHeader.prototype,"header_extensions",void 0);tslib.__decorate([Struct.field('signature')],BlockStateHeader.prototype,"producer_signature",void 0);BlockStateHeader=tslib.__decorate([Struct.type('block_state_header')],BlockStateHeader);let GetBlockHeaderStateResponse=class GetBlockHeaderStateResponse extends Struct{};tslib.__decorate([Struct.field('uint32')],GetBlockHeaderStateResponse.prototype,"block_num",void 0);tslib.__decorate([Struct.field('uint32')],GetBlockHeaderStateResponse.prototype,"dpos_proposed_irreversible_blocknum",void 0);tslib.__decorate([Struct.field('uint32')],GetBlockHeaderStateResponse.prototype,"dpos_irreversible_blocknum",void 0);tslib.__decorate([Struct.field('checksum256')],GetBlockHeaderStateResponse.prototype,"id",void 0);tslib.__decorate([Struct.field(BlockStateHeader)],GetBlockHeaderStateResponse.prototype,"header",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"active_schedule",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"blockroot_merkle",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"producer_to_last_produced",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"producer_to_last_implied_irb",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"valid_block_signing_authority",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"confirm_count",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"pending_schedule",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"activated_protocol_features",void 0);tslib.__decorate([Struct.field('any')],GetBlockHeaderStateResponse.prototype,"additional_signatures",void 0);GetBlockHeaderStateResponse=tslib.__decorate([Struct.type('get_block_header_state_response')],GetBlockHeaderStateResponse);let GetInfoResponse=class GetInfoResponse extends Struct{getTransactionHeader(secondsAhead=120){const expiration=TimePointSec.fromMilliseconds(this.head_block_time.toMilliseconds()+secondsAhead*1000);const id=this.last_irreversible_block_id;const prefixArray=id.array.subarray(8,12);const prefix=new Uint32Array(prefixArray.buffer,prefixArray.byteOffset,1)[0];return exports.TransactionHeader.from({expiration,ref_block_num:Number(this.last_irreversible_block_num)&0xffff,ref_block_prefix:prefix});}};tslib.__decorate([Struct.field('string')],GetInfoResponse.prototype,"server_version",void 0);tslib.__decorate([Struct.field('checksum256')],GetInfoResponse.prototype,"chain_id",void 0);tslib.__decorate([Struct.field('uint32')],GetInfoResponse.prototype,"head_block_num",void 0);tslib.__decorate([Struct.field('uint32')],GetInfoResponse.prototype,"last_irreversible_block_num",void 0);tslib.__decorate([Struct.field('checksum256')],GetInfoResponse.prototype,"last_irreversible_block_id",void 0);tslib.__decorate([Struct.field('checksum256')],GetInfoResponse.prototype,"head_block_id",void 0);tslib.__decorate([Struct.field('time_point')],GetInfoResponse.prototype,"head_block_time",void 0);tslib.__decorate([Struct.field('name')],GetInfoResponse.prototype,"head_block_producer",void 0);tslib.__decorate([Struct.field('uint64')],GetInfoResponse.prototype,"virtual_block_cpu_limit",void 0);tslib.__decorate([Struct.field('uint64')],GetInfoResponse.prototype,"virtual_block_net_limit",void 0);tslib.__decorate([Struct.field('uint64')],GetInfoResponse.prototype,"block_cpu_limit",void 0);tslib.__decorate([Struct.field('uint64')],GetInfoResponse.prototype,"block_net_limit",void 0);tslib.__decorate([Struct.field('string?')],GetInfoResponse.prototype,"server_version_string",void 0);tslib.__decorate([Struct.field('uint32?')],GetInfoResponse.prototype,"fork_db_head_block_num",void 0);tslib.__decorate([Struct.field('checksum256?')],GetInfoResponse.prototype,"fork_db_head_block_id",void 0);GetInfoResponse=tslib.__decorate([Struct.type('get_info_response')],GetInfoResponse);let GetTableByScopeResponseRow=class GetTableByScopeResponseRow extends Struct{};tslib.__decorate([Struct.field('name')],GetTableByScopeResponseRow.prototype,"code",void 0);tslib.__decorate([Struct.field('name')],GetTableByScopeResponseRow.prototype,"scope",void 0);tslib.__decorate([Struct.field('name')],GetTableByScopeResponseRow.prototype,"table",void 0);tslib.__decorate([Struct.field('name')],GetTableByScopeResponseRow.prototype,"payer",void 0);tslib.__decorate([Struct.field('uint32')],GetTableByScopeResponseRow.prototype,"count",void 0);GetTableByScopeResponseRow=tslib.__decorate([Struct.type('get_table_by_scope_response_row')],GetTableByScopeResponseRow);let GetTableByScopeResponse=class GetTableByScopeResponse extends Struct{};tslib.__decorate([Struct.field(GetTableByScopeResponseRow,{array:true})],GetTableByScopeResponse.prototype,"rows",void 0);tslib.__decorate([Struct.field('string')],GetTableByScopeResponse.prototype,"more",void 0);GetTableByScopeResponse=tslib.__decorate([Struct.type('get_table_by_scope_response')],GetTableByScopeResponse);var types$1=/*#__PURE__*/Object.freeze({__proto__:null,get AccountPermission(){return AccountPermission;},get AccountResourceLimit(){return AccountResourceLimit;},get AccountTotalResources(){return AccountTotalResources;},get AccountSelfDelegatedBandwidth(){return AccountSelfDelegatedBandwidth;},get AccountRefundRequest(){return AccountRefundRequest;},get AccountVoterInfo(){return AccountVoterInfo;},get AccountRexInfoMaturities(){return AccountRexInfoMaturities;},get AccountRexInfo(){return AccountRexInfo;},get AccountObject(){return AccountObject;},get NewProducersEntry(){return NewProducersEntry;},get NewProducers(){return NewProducers;},get BlockExtension(){return BlockExtension;},get HeaderExtension(){return HeaderExtension;},TrxVariant:TrxVariant,get GetBlockResponseTransactionReceipt(){return GetBlockResponseTransactionReceipt;},get GetBlockResponse(){return GetBlockResponse;},get ActiveScheduleProducerAuthority(){return ActiveScheduleProducerAuthority;},get ActiveScheduleProducer(){return ActiveScheduleProducer;},get ActiveSchedule(){return ActiveSchedule;},get BlockStateHeader(){return BlockStateHeader;},get GetBlockHeaderStateResponse(){return GetBlockHeaderStateResponse;},get GetInfoResponse(){return GetInfoResponse;},get GetTableByScopeResponseRow(){return GetTableByScopeResponseRow;},get GetTableByScopeResponse(){return GetTableByScopeResponse;}});class ChainAPI{constructor(client){this.client=client;}get_abi(accountName){return tslib.__awaiter(this,void 0,void 0,function*(){return this.client.call({path:'/v1/chain/get_abi',params:{account_name:Name.from(accountName)}});});}get_account(accountName){return tslib.__awaiter(this,void 0,void 0,function*(){return this.client.call({path:'/v1/chain/get_account',params:{account_name:Name.from(accountName)},responseType:AccountObject});});}get_block(block_num_or_id){return tslib.__awaiter(this,void 0,void 0,function*(){return this.client.call({path:'/v1/chain/get_block',params:{block_num_or_id},responseType:GetBlockResponse});});}get_block_header_state(block_num_or_id){return tslib.__awaiter(this,void 0,void 0,function*(){return this.client.call({path:'/v1/chain/get_block_header_state',params:{block_num_or_id},responseType:GetBlockHeaderStateResponse});});}get_currency_balance(contract,accountName,symbol){return tslib.__awaiter(this,void 0,void 0,function*(){const params={account:Name.from(accountName),code:Name.from(contract)};if(symbol){params.symbol=symbol;}return this.client.call({path:'/v1/chain/get_currency_balance',params,responseType:'asset[]'});});}get_info(){return tslib.__awaiter(this,void 0,void 0,function*(){return this.client.call({path:'/v1/chain/get_info',responseType:GetInfoResponse});});}push_transaction(tx){return tslib.__awaiter(this,void 0,void 0,function*(){if(!isInstanceOf(tx,exports.PackedTransaction)){tx=exports.PackedTransaction.fromSigned(exports.SignedTransaction.from(tx));}return this.client.call({path:'/v1/chain/push_transaction',params:tx});});}get_table_rows(params){return tslib.__awaiter(this,void 0,void 0,function*(){const type=params.type;let key_type=params.key_type;const someBound=params.lower_bound||params.upper_bound;if(!key_type&&someBound){// determine key type from bounds type
if(isInstanceOf(someBound,UInt64)){key_type='i64';}else if(isInstanceOf(someBound,UInt128)){key_type='i128';}else if(isInstanceOf(someBound,Checksum256)){key_type='sha256';}else if(isInstanceOf(someBound,Checksum160)){key_type='ripemd160';}}if(!key_type){key_type='name';}let json=params.json;if(json===undefined){// if we know the row type don't ask the node to perform abi decoding
json=type===undefined;}let upper_bound=params.upper_bound;if(upper_bound&&typeof upper_bound!=='string'){upper_bound=String(upper_bound);}let lower_bound=params.lower_bound;if(lower_bound&&typeof lower_bound!=='string'){lower_bound=String(lower_bound);}let scope=params.scope;if(typeof scope==='undefined'){scope=String(Name.from(params.code));}else if(typeof scope!=='string'){scope=String(scope);}// eslint-disable-next-line prefer-const
let{rows,more,next_key}=yield this.client.call({path:'/v1/chain/get_table_rows',params:Object.assign(Object.assign({},params),{code:Name.from(params.code),table:Name.from(params.table),limit:params.limit!==undefined?UInt32.from(params.limit):undefined,scope,key_type,json,upper_bound,lower_bound})});let ram_payers;if(params.show_payer){ram_payers=[];rows=rows.map(({data,payer})=>{ram_payers.push(Name.from(payer));return data;});}if(type){if(json){rows=rows.map(value=>{if(typeof value==='string'&&Bytes.isBytes(value)){// this handles the case where nodeos bails on abi decoding and just returns a hex string
return exports.Serializer.decode({data:Bytes.from(value),type});}else{return exports.Serializer.decode({object:value,type});}});}else{rows=rows.map(hex=>Bytes.from(hex)).map(data=>exports.Serializer.decode({data,type}));}}if(next_key&&next_key.length>0){let indexType;// set index type so we can decode next_key in the response if present
switch(key_type){case'i64':indexType=UInt64;break;case'i128':indexType=UInt128;break;case'name':indexType=Name;break;case'float64':indexType=Float64;break;case'float128':indexType=Float128;break;case'sha256':indexType=Checksum256;break;case'ripemd160':indexType=Checksum160;break;default:throw new Error(`Unsupported key type: ${key_type}`);}if(indexType===Name){// names are sent back as an uint64 string instead of a name string..
next_key=Name.from(exports.Serializer.decode({object:next_key,type:UInt64}));}else{next_key=exports.Serializer.decode({object:next_key,type:indexType});}}else{next_key=undefined;}return{rows,more,next_key,ram_payers};});}get_table_by_scope(params){return tslib.__awaiter(this,void 0,void 0,function*(){return this.client.call({path:'/v1/chain/get_table_by_scope',params,responseType:GetTableByScopeResponse});});}}class APIError extends Error{constructor(path,error){super(`${APIError.formatError(error)} at ${path}`);this.path=path;this.error=error;}static formatError(error){if(error.what==='unspecified'&&error.details&&error.details.length>0){return error.details[0].message;}else if(error.what&&error.what.length>0){return error.what;}else{return'Unknown API error';}}/** The nodeos error name, e.g. `tx_net_usage_exceeded` */get name(){return this.error.name||'unspecified';}/** The nodeos error code, e.g. `3080002`. */get code(){return this.error.code||0;}/** List of exceptions, if any. */get details(){return this.error.details;}}APIError.__className='APIError';class APIClient{constructor(options){this.v1={chain:new ChainAPI(this)};if(options.provider){this.provider=options.provider;}else if(options.url){this.provider=new FetchProvider(options.url,options);}else{throw new Error('Missing url or provider');}}call(args){return tslib.__awaiter(this,void 0,void 0,function*(){const response=yield this.provider.call(args.path,args.params);if(response.error){throw new APIError(args.path,response.error);}if(args.responseType){return abiDecode({type:args.responseType,object:response});}return response;});}}APIClient.__className='APIClient';var types=/*#__PURE__*/Object.freeze({__proto__:null,v1:types$1});exports.ABI=ABI;exports.ABIDecoder=ABIDecoder;exports.ABIEncoder=ABIEncoder;exports.API=types;exports.APIClient=APIClient;exports.APIError=APIError;exports.Asset=Asset;exports.BlockTimestamp=BlockTimestamp;exports.Bytes=Bytes;exports.Checksum160=Checksum160;exports.Checksum256=Checksum256;exports.Checksum512=Checksum512;exports.ExtendedAsset=ExtendedAsset;exports.FetchProvider=FetchProvider;exports.Float128=Float128;exports.Float32=Float32;exports.Float64=Float64;exports.Int=Int;exports.Int128=Int128;exports.Int16=Int16;exports.Int32=Int32;exports.Int64=Int64;exports.Int8=Int8;exports.Name=Name;exports.PrivateKey=PrivateKey;exports.PublicKey=PublicKey;exports.Signature=Signature;exports.Struct=Struct;exports.TimePoint=TimePoint;exports.TimePointSec=TimePointSec;exports.TypeAlias=TypeAlias;exports.UInt128=UInt128;exports.UInt16=UInt16;exports.UInt32=UInt32;exports.UInt64=UInt64;exports.UInt8=UInt8;exports.VarInt=VarInt;exports.VarUInt=VarUInt;exports.Variant=Variant;exports.isInstanceOf=isInstanceOf;}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"bn.js":2,"brorand":95,"elliptic":161,"hash.js":209,"tslib":281}],2:[function(require,module,exports){(function(module,exports){'use strict';// Utils
function assert(val,msg){if(!val)throw new Error(msg||'Assertion failed');}// Could use `inherits` module, but don't want to move from single file
// architecture yet.
function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;}// BN
function BN(number,base,endian){if(BN.isBN(number)){return number;}this.negative=0;this.words=null;this.length=0;// Reduction context
this.red=null;if(number!==null){if(base==='le'||base==='be'){endian=base;base=10;}this._init(number||0,base||10,endian||'be');}}if(typeof module==='object'){module.exports=BN;}else{exports.BN=BN;}BN.BN=BN;BN.wordSize=26;var Buffer;try{if(typeof window!=='undefined'&&typeof window.Buffer!=='undefined'){Buffer=window.Buffer;}else{Buffer=require('buffer').Buffer;}}catch(e){}BN.isBN=function isBN(num){if(num instanceof BN){return true;}return num!==null&&typeof num==='object'&&num.constructor.wordSize===BN.wordSize&&Array.isArray(num.words);};BN.max=function max(left,right){if(left.cmp(right)>0)return left;return right;};BN.min=function min(left,right){if(left.cmp(right)<0)return left;return right;};BN.prototype._init=function init(number,base,endian){if(typeof number==='number'){return this._initNumber(number,base,endian);}if(typeof number==='object'){return this._initArray(number,base,endian);}if(base==='hex'){base=16;}assert(base===(base|0)&&base>=2&&base<=36);number=number.toString().replace(/\s+/g,'');var start=0;if(number[0]==='-'){start++;this.negative=1;}if(start<number.length){if(base===16){this._parseHex(number,start,endian);}else{this._parseBase(number,base,start);if(endian==='le'){this._initArray(this.toArray(),base,endian);}}}};BN.prototype._initNumber=function _initNumber(number,base,endian){if(number<0){this.negative=1;number=-number;}if(number<0x4000000){this.words=[number&0x3ffffff];this.length=1;}else if(number<0x10000000000000){this.words=[number&0x3ffffff,number/0x4000000&0x3ffffff];this.length=2;}else{assert(number<0x20000000000000);// 2 ^ 53 (unsafe)
this.words=[number&0x3ffffff,number/0x4000000&0x3ffffff,1];this.length=3;}if(endian!=='le')return;// Reverse the bytes
this._initArray(this.toArray(),base,endian);};BN.prototype._initArray=function _initArray(number,base,endian){// Perhaps a Uint8Array
assert(typeof number.length==='number');if(number.length<=0){this.words=[0];this.length=1;return this;}this.length=Math.ceil(number.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0;}var j,w;var off=0;if(endian==='be'){for(i=number.length-1,j=0;i>=0;i-=3){w=number[i]|number[i-1]<<8|number[i-2]<<16;this.words[j]|=w<<off&0x3ffffff;this.words[j+1]=w>>>26-off&0x3ffffff;off+=24;if(off>=26){off-=26;j++;}}}else if(endian==='le'){for(i=0,j=0;i<number.length;i+=3){w=number[i]|number[i+1]<<8|number[i+2]<<16;this.words[j]|=w<<off&0x3ffffff;this.words[j+1]=w>>>26-off&0x3ffffff;off+=24;if(off>=26){off-=26;j++;}}}return this.strip();};function parseHex4Bits(string,index){var c=string.charCodeAt(index);// 'A' - 'F'
if(c>=65&&c<=70){return c-55;// 'a' - 'f'
}else if(c>=97&&c<=102){return c-87;// '0' - '9'
}else{return c-48&0xf;}}function parseHexByte(string,lowerBound,index){var r=parseHex4Bits(string,index);if(index-1>=lowerBound){r|=parseHex4Bits(string,index-1)<<4;}return r;}BN.prototype._parseHex=function _parseHex(number,start,endian){// Create possibly bigger array to ensure that it fits the number
this.length=Math.ceil((number.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0;}// 24-bits chunks
var off=0;var j=0;var w;if(endian==='be'){for(i=number.length-1;i>=start;i-=2){w=parseHexByte(number,start,i)<<off;this.words[j]|=w&0x3ffffff;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26;}else{off+=8;}}}else{var parseLength=number.length-start;for(i=parseLength%2===0?start+1:start;i<number.length;i+=2){w=parseHexByte(number,start,i)<<off;this.words[j]|=w&0x3ffffff;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26;}else{off+=8;}}}this.strip();};function parseBase(str,start,end,mul){var r=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul;// 'a'
if(c>=49){r+=c-49+0xa;// 'A'
}else if(c>=17){r+=c-17+0xa;// '0' - '9'
}else{r+=c;}}return r;}BN.prototype._parseBase=function _parseBase(number,base,start){// Initialize as zero
this.words=[0];this.length=1;// Find length of limb in base
for(var limbLen=0,limbPow=1;limbPow<=0x3ffffff;limbPow*=base){limbLen++;}limbLen--;limbPow=limbPow/base|0;var total=number.length-start;var mod=total%limbLen;var end=Math.min(total,total-mod)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number,i,i+limbLen,base);this.imuln(limbPow);if(this.words[0]+word<0x4000000){this.words[0]+=word;}else{this._iaddn(word);}}if(mod!==0){var pow=1;word=parseBase(number,i,number.length,base);for(i=0;i<mod;i++){pow*=base;}this.imuln(pow);if(this.words[0]+word<0x4000000){this.words[0]+=word;}else{this._iaddn(word);}}this.strip();};BN.prototype.copy=function copy(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i];}dest.length=this.length;dest.negative=this.negative;dest.red=this.red;};BN.prototype.clone=function clone(){var r=new BN(null);this.copy(r);return r;};BN.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0;}return this;};// Remove leading `0` from `this`
BN.prototype.strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--;}return this._normSign();};BN.prototype._normSign=function _normSign(){// -0 = 0
if(this.length===1&&this.words[0]===0){this.negative=0;}return this;};BN.prototype.inspect=function inspect(){return(this.red?'<BN-R: ':'<BN: ')+this.toString(16)+'>';};/*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */var zeros=['','0','00','000','0000','00000','000000','0000000','00000000','000000000','0000000000','00000000000','000000000000','0000000000000','00000000000000','000000000000000','0000000000000000','00000000000000000','000000000000000000','0000000000000000000','00000000000000000000','000000000000000000000','0000000000000000000000','00000000000000000000000','000000000000000000000000','0000000000000000000000000'];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,10000000,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64000000,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,24300000,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(base,padding){base=base||10;padding=padding|0||1;var out;if(base===16||base==='hex'){out='';var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&0xffffff).toString(16);carry=w>>>24-off&0xffffff;if(carry!==0||i!==this.length-1){out=zeros[6-word.length]+word+out;}else{out=word+out;}off+=2;if(off>=26){off-=26;i--;}}if(carry!==0){out=carry.toString(16)+out;}while(out.length%padding!==0){out='0'+out;}if(this.negative!==0){out='-'+out;}return out;}if(base===(base|0)&&base>=2&&base<=36){// var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
var groupSize=groupSizes[base];// var groupBase = Math.pow(base, groupSize);
var groupBase=groupBases[base];out='';var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modn(groupBase).toString(base);c=c.idivn(groupBase);if(!c.isZero()){out=zeros[groupSize-r.length]+r+out;}else{out=r+out;}}if(this.isZero()){out='0'+out;}while(out.length%padding!==0){out='0'+out;}if(this.negative!==0){out='-'+out;}return out;}assert(false,'Base should be between 2 and 36');};BN.prototype.toNumber=function toNumber(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*0x4000000;}else if(this.length===3&&this.words[2]===0x01){// NOTE: at this stage it is known that the top bit is set
ret+=0x10000000000000+this.words[1]*0x4000000;}else if(this.length>2){assert(false,'Number can only safely store up to 53 bits');}return this.negative!==0?-ret:ret;};BN.prototype.toJSON=function toJSON(){return this.toString(16);};BN.prototype.toBuffer=function toBuffer(endian,length){assert(typeof Buffer!=='undefined');return this.toArrayLike(Buffer,endian,length);};BN.prototype.toArray=function toArray(endian,length){return this.toArrayLike(Array,endian,length);};BN.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert(byteLength<=reqLength,'byte array longer than desired length');assert(reqLength>0,'Requested array length <= 0');this.strip();var littleEndian=endian==='le';var res=new ArrayType(reqLength);var b,i;var q=this.clone();if(!littleEndian){// Assume big-endian
for(i=0;i<reqLength-byteLength;i++){res[i]=0;}for(i=0;!q.isZero();i++){b=q.andln(0xff);q.iushrn(8);res[reqLength-i-1]=b;}}else{for(i=0;!q.isZero();i++){b=q.andln(0xff);q.iushrn(8);res[i]=b;}for(;i<reqLength;i++){res[i]=0;}}return res;};if(Math.clz32){BN.prototype._countBits=function _countBits(w){return 32-Math.clz32(w);};}else{BN.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=0x1000){r+=13;t>>>=13;}if(t>=0x40){r+=7;t>>>=7;}if(t>=0x8){r+=4;t>>>=4;}if(t>=0x02){r+=2;t>>>=2;}return r+t;};}BN.prototype._zeroBits=function _zeroBits(w){// Short-cut
if(w===0)return 26;var t=w;var r=0;if((t&0x1fff)===0){r+=13;t>>>=13;}if((t&0x7f)===0){r+=7;t>>>=7;}if((t&0xf)===0){r+=4;t>>>=4;}if((t&0x3)===0){r+=2;t>>>=2;}if((t&0x1)===0){r++;}return r;};// Return number of used bits in a BN
BN.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi;};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=(num.words[off]&1<<wbit)>>>wbit;}return w;}// Number of trailing zero bits
BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b=this._zeroBits(this.words[i]);r+=b;if(b!==26)break;}return r;};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8);};BN.prototype.toTwos=function toTwos(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1);}return this.clone();};BN.prototype.fromTwos=function fromTwos(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg();}return this.clone();};BN.prototype.isNeg=function isNeg(){return this.negative!==0;};// Return negative clone of `this`
BN.prototype.neg=function neg(){return this.clone().ineg();};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1;}return this;};// Or `num` with `this` in-place
BN.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0;}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i];}return this.strip();};BN.prototype.ior=function ior(num){assert((this.negative|num.negative)===0);return this.iuor(num);};// Or `num` with `this`
BN.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this);};BN.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this);};// And `num` with `this` in-place
BN.prototype.iuand=function iuand(num){// b = min-length(num, this)
var b;if(this.length>num.length){b=num;}else{b=this;}for(var i=0;i<b.length;i++){this.words[i]=this.words[i]&num.words[i];}this.length=b.length;return this.strip();};BN.prototype.iand=function iand(num){assert((this.negative|num.negative)===0);return this.iuand(num);};// And `num` with `this`
BN.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this);};BN.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this);};// Xor `num` with `this` in-place
BN.prototype.iuxor=function iuxor(num){// a.length > b.length
var a;var b;if(this.length>num.length){a=this;b=num;}else{a=num;b=this;}for(var i=0;i<b.length;i++){this.words[i]=a.words[i]^b.words[i];}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i];}}this.length=a.length;return this.strip();};BN.prototype.ixor=function ixor(num){assert((this.negative|num.negative)===0);return this.iuxor(num);};// Xor `num` with `this`
BN.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this);};BN.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this);};// Not ``this`` with ``width`` bitwidth
BN.prototype.inotn=function inotn(width){assert(typeof width==='number'&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;// Extend the buffer with leading zeroes
this._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--;}// Handle complete words
for(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&0x3ffffff;}// Handle the residue
if(bitsLeft>0){this.words[i]=~this.words[i]&0x3ffffff>>26-bitsLeft;}// And remove leading zeroes
return this.strip();};BN.prototype.notn=function notn(width){return this.clone().inotn(width);};// Set `bit` of `this`
BN.prototype.setn=function setn(bit,val){assert(typeof bit==='number'&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit;}else{this.words[off]=this.words[off]&~(1<<wbit);}return this.strip();};// Add `num` to `this` in-place
BN.prototype.iadd=function iadd(num){var r;// negative + positive
if(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign();// positive + negative
}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign();}// a.length > b.length
var a,b;if(this.length>num.length){a=this;b=num;}else{a=num;b=this;}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)+(b.words[i]|0)+carry;this.words[i]=r&0x3ffffff;carry=r>>>26;}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&0x3ffffff;carry=r>>>26;}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++;// Copy the rest of the words
}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i];}}return this;};// Add `num` to `this`
BN.prototype.add=function add(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res;}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res;}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this);};// Subtract `num` from `this` in-place
BN.prototype.isub=function isub(num){// this - (-num) = this + num
if(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign();// -this - num = -(this + num)
}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign();}// At this point both numbers are positive
var cmp=this.cmp(num);// Optimization - zeroify
if(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this;}// a > b
var a,b;if(cmp>0){a=this;b=num;}else{a=num;b=this;}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)-(b.words[i]|0)+carry;carry=r>>26;this.words[i]=r&0x3ffffff;}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&0x3ffffff;}// Copy rest of the words
if(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i];}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1;}return this.strip();};// Subtract `num` from `this`
BN.prototype.sub=function sub(num){return this.clone().isub(num);};function smallMulTo(self,num,out){out.negative=num.negative^self.negative;var len=self.length+num.length|0;out.length=len;len=len-1|0;// Peel one iteration (compiler can't do it, because of code complexity)
var a=self.words[0]|0;var b=num.words[0]|0;var r=a*b;var lo=r&0x3ffffff;var carry=r/0x4000000|0;out.words[0]=lo;for(var k=1;k<len;k++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,
// note that ncarry could be >= 0x3ffffff
var ncarry=carry>>>26;var rword=carry&0x3ffffff;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j|0;a=self.words[i]|0;b=num.words[j]|0;r=a*b+rword;ncarry+=r/0x4000000|0;rword=r&0x3ffffff;}out.words[k]=rword|0;carry=ncarry|0;}if(carry!==0){out.words[k]=carry|0;}else{out.length--;}return out.strip();}// TODO(indutny): it may be reasonable to omit it for users who don't need
// to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
// multiplication (like elliptic secp256k1).
var comb10MulTo=function comb10MulTo(self,num,out){var a=self.words;var b=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&0x1fff;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&0x1fff;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&0x1fff;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&0x1fff;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&0x1fff;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&0x1fff;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&0x1fff;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&0x1fff;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&0x1fff;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&0x1fff;var ah9=a9>>>13;var b0=b[0]|0;var bl0=b0&0x1fff;var bh0=b0>>>13;var b1=b[1]|0;var bl1=b1&0x1fff;var bh1=b1>>>13;var b2=b[2]|0;var bl2=b2&0x1fff;var bh2=b2>>>13;var b3=b[3]|0;var bl3=b3&0x1fff;var bh3=b3>>>13;var b4=b[4]|0;var bl4=b4&0x1fff;var bh4=b4>>>13;var b5=b[5]|0;var bl5=b5&0x1fff;var bh5=b5>>>13;var b6=b[6]|0;var bl6=b6&0x1fff;var bh6=b6>>>13;var b7=b[7]|0;var bl7=b7&0x1fff;var bh7=b7>>>13;var b8=b[8]|0;var bl8=b8&0x1fff;var bh8=b8>>>13;var b9=b[9]|0;var bl9=b9&0x1fff;var bh9=b9>>>13;out.negative=self.negative^num.negative;out.length=19;/* k = 0 */lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=0x3ffffff;/* k = 1 */lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=0x3ffffff;/* k = 2 */lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=0x3ffffff;/* k = 3 */lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=0x3ffffff;/* k = 4 */lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=0x3ffffff;/* k = 5 */lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=0x3ffffff;/* k = 6 */lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=0x3ffffff;/* k = 7 */lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=0x3ffffff;/* k = 8 */lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=0x3ffffff;/* k = 9 */lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=0x3ffffff;/* k = 10 */lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=0x3ffffff;/* k = 11 */lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=0x3ffffff;/* k = 12 */lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=0x3ffffff;/* k = 13 */lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=0x3ffffff;/* k = 14 */lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=0x3ffffff;/* k = 15 */lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=0x3ffffff;/* k = 16 */lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=0x3ffffff;/* k = 17 */lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=0x3ffffff;/* k = 18 */lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=0x3ffffff;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++;}return out;};// Polyfill comb
if(!Math.imul){comb10MulTo=smallMulTo;}function bigMulTo(self,num,out){out.negative=num.negative^self.negative;out.length=self.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,
// note that ncarry could be >= 0x3ffffff
var ncarry=hncarry;hncarry=0;var rword=carry&0x3ffffff;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j;var a=self.words[i]|0;var b=num.words[j]|0;var r=a*b;var lo=r&0x3ffffff;ncarry=ncarry+(r/0x4000000|0)|0;lo=lo+rword|0;rword=lo&0x3ffffff;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=0x3ffffff;}out.words[k]=rword;carry=ncarry;ncarry=hncarry;}if(carry!==0){out.words[k]=carry;}else{out.length--;}return out.strip();}function jumboMulTo(self,num,out){var fftm=new FFTM();return fftm.mulp(self,num,out);}BN.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out);}else if(len<63){res=smallMulTo(this,num,out);}else if(len<1024){res=bigMulTo(this,num,out);}else{res=jumboMulTo(this,num,out);}return res;};// Cooley-Tukey algorithm for FFT
// slightly revisited to rely on looping instead of recursion
function FFTM(x,y){this.x=x;this.y=y;}FFTM.prototype.makeRBT=function makeRBT(N){var t=new Array(N);var l=BN.prototype._countBits(N)-1;for(var i=0;i<N;i++){t[i]=this.revBin(i,l,N);}return t;};// Returns binary-reversed representation of `x`
FFTM.prototype.revBin=function revBin(x,l,N){if(x===0||x===N-1)return x;var rb=0;for(var i=0;i<l;i++){rb|=(x&1)<<l-i-1;x>>=1;}return rb;};// Performs "tweedling" phase, therefore 'emulating'
// behaviour of the recursive algorithm
FFTM.prototype.permute=function permute(rbt,rws,iws,rtws,itws,N){for(var i=0;i<N;i++){rtws[i]=rws[rbt[i]];itws[i]=iws[rbt[i]];}};FFTM.prototype.transform=function transform(rws,iws,rtws,itws,N,rbt){this.permute(rbt,rws,iws,rtws,itws,N);for(var s=1;s<N;s<<=1){var l=s<<1;var rtwdf=Math.cos(2*Math.PI/l);var itwdf=Math.sin(2*Math.PI/l);for(var p=0;p<N;p+=l){var rtwdf_=rtwdf;var itwdf_=itwdf;for(var j=0;j<s;j++){var re=rtws[p+j];var ie=itws[p+j];var ro=rtws[p+j+s];var io=itws[p+j+s];var rx=rtwdf_*ro-itwdf_*io;io=rtwdf_*io+itwdf_*ro;ro=rx;rtws[p+j]=re+ro;itws[p+j]=ie+io;rtws[p+j+s]=re-ro;itws[p+j+s]=ie-io;/* jshint maxdepth : false */if(j!==l){rx=rtwdf*rtwdf_-itwdf*itwdf_;itwdf_=rtwdf*itwdf_+itwdf*rtwdf_;rtwdf_=rx;}}}}};FFTM.prototype.guessLen13b=function guessLen13b(n,m){var N=Math.max(m,n)|1;var odd=N&1;var i=0;for(N=N/2|0;N;N=N>>>1){i++;}return 1<<i+1+odd;};FFTM.prototype.conjugate=function conjugate(rws,iws,N){if(N<=1)return;for(var i=0;i<N/2;i++){var t=rws[i];rws[i]=rws[N-i-1];rws[N-i-1]=t;t=iws[i];iws[i]=-iws[N-i-1];iws[N-i-1]=-t;}};FFTM.prototype.normalize13b=function normalize13b(ws,N){var carry=0;for(var i=0;i<N/2;i++){var w=Math.round(ws[2*i+1]/N)*0x2000+Math.round(ws[2*i]/N)+carry;ws[i]=w&0x3ffffff;if(w<0x4000000){carry=0;}else{carry=w/0x4000000|0;}}return ws;};FFTM.prototype.convert13b=function convert13b(ws,len,rws,N){var carry=0;for(var i=0;i<len;i++){carry=carry+(ws[i]|0);rws[2*i]=carry&0x1fff;carry=carry>>>13;rws[2*i+1]=carry&0x1fff;carry=carry>>>13;}// Pad with zeroes
for(i=2*len;i<N;++i){rws[i]=0;}assert(carry===0);assert((carry&~0x1fff)===0);};FFTM.prototype.stub=function stub(N){var ph=new Array(N);for(var i=0;i<N;i++){ph[i]=0;}return ph;};FFTM.prototype.mulp=function mulp(x,y,out){var N=2*this.guessLen13b(x.length,y.length);var rbt=this.makeRBT(N);var _=this.stub(N);var rws=new Array(N);var rwst=new Array(N);var iwst=new Array(N);var nrws=new Array(N);var nrwst=new Array(N);var niwst=new Array(N);var rmws=out.words;rmws.length=N;this.convert13b(x.words,x.length,rws,N);this.convert13b(y.words,y.length,nrws,N);this.transform(rws,_,rwst,iwst,N,rbt);this.transform(nrws,_,nrwst,niwst,N,rbt);for(var i=0;i<N;i++){var rx=rwst[i]*nrwst[i]-iwst[i]*niwst[i];iwst[i]=rwst[i]*niwst[i]+iwst[i]*nrwst[i];rwst[i]=rx;}this.conjugate(rwst,iwst,N);this.transform(rwst,iwst,rmws,_,N,rbt);this.conjugate(rmws,_,N);this.normalize13b(rmws,N);out.negative=x.negative^y.negative;out.length=x.length+y.length;return out.strip();};// Multiply `this` by `num`
BN.prototype.mul=function mul(num){var out=new BN(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out);};// Multiply employing FFT
BN.prototype.mulf=function mulf(num){var out=new BN(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out);};// In-place Multiplication
BN.prototype.imul=function imul(num){return this.clone().mulTo(num,this);};BN.prototype.imuln=function imuln(num){assert(typeof num==='number');assert(num<0x4000000);// Carry
var carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&0x3ffffff)+(carry&0x3ffffff);carry>>=26;carry+=w/0x4000000|0;// NOTE: lo is 27bit maximum
carry+=lo>>>26;this.words[i]=lo&0x3ffffff;}if(carry!==0){this.words[i]=carry;this.length++;}return this;};BN.prototype.muln=function muln(num){return this.clone().imuln(num);};// `this` * `this`
BN.prototype.sqr=function sqr(){return this.mul(this);};// `this` * `this` in-place
BN.prototype.isqr=function isqr(){return this.imul(this.clone());};// Math.pow(`this`, `num`)
BN.prototype.pow=function pow(num){var w=toBitArray(num);if(w.length===0)return new BN(1);// Skip leading zeroes
var res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break;}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q);}}return res;};// Shift-left in-place
BN.prototype.iushln=function iushln(bits){assert(typeof bits==='number'&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=0x3ffffff>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r;}if(carry){this.words[i]=carry;this.length++;}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i];}for(i=0;i<s;i++){this.words[i]=0;}this.length+=s;}return this.strip();};BN.prototype.ishln=function ishln(bits){// TODO(indutny): implement me
assert(this.negative===0);return this.iushln(bits);};// Shift-right in-place
// NOTE: `hint` is a lowest bit before trailing zeroes
// NOTE: if `extended` is present - it will be filled with destroyed bits
BN.prototype.iushrn=function iushrn(bits,hint,extended){assert(typeof bits==='number'&&bits>=0);var h;if(hint){h=(hint-hint%26)/26;}else{h=0;}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask=0x3ffffff^0x3ffffff>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);// Extended mode, copy masked part
if(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i];}maskedWords.length=s;}if(s===0){// No-op, we should not move anything at all
}else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s];}}else{this.words[0]=0;this.length=1;}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask;}// Push carried bits as a mask
if(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry;}if(this.length===0){this.words[0]=0;this.length=1;}return this.strip();};BN.prototype.ishrn=function ishrn(bits,hint,extended){// TODO(indutny): implement me
assert(this.negative===0);return this.iushrn(bits,hint,extended);};// Shift-left
BN.prototype.shln=function shln(bits){return this.clone().ishln(bits);};BN.prototype.ushln=function ushln(bits){return this.clone().iushln(bits);};// Shift-right
BN.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits);};BN.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits);};// Test if n bit is set
BN.prototype.testn=function testn(bit){assert(typeof bit==='number'&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;// Fast case: bit is much higher than all existing words
if(this.length<=s)return false;// Check bit and return
var w=this.words[s];return!!(w&q);};// Return only lowers bits of number (in-place)
BN.prototype.imaskn=function imaskn(bits){assert(typeof bits==='number'&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert(this.negative===0,'imaskn works only with positive numbers');if(this.length<=s){return this;}if(r!==0){s++;}this.length=Math.min(s,this.length);if(r!==0){var mask=0x3ffffff^0x3ffffff>>>r<<r;this.words[this.length-1]&=mask;}return this.strip();};// Return only lowers bits of number
BN.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits);};// Add plain number `num` to `this`
BN.prototype.iaddn=function iaddn(num){assert(typeof num==='number');assert(num<0x4000000);if(num<0)return this.isubn(-num);// Possible sign change
if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this;}this.negative=0;this.isubn(num);this.negative=1;return this;}// Add without checks
return this._iaddn(num);};BN.prototype._iaddn=function _iaddn(num){this.words[0]+=num;// Carry
for(var i=0;i<this.length&&this.words[i]>=0x4000000;i++){this.words[i]-=0x4000000;if(i===this.length-1){this.words[i+1]=1;}else{this.words[i+1]++;}}this.length=Math.max(this.length,i+1);return this;};// Subtract plain number `num` from `this`
BN.prototype.isubn=function isubn(num){assert(typeof num==='number');assert(num<0x4000000);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this;}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1;}else{// Carry
for(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=0x4000000;this.words[i+1]-=1;}}return this.strip();};BN.prototype.addn=function addn(num){return this.clone().iaddn(num);};BN.prototype.subn=function subn(num){return this.clone().isubn(num);};BN.prototype.iabs=function iabs(){this.negative=0;return this;};BN.prototype.abs=function abs(){return this.clone().iabs();};BN.prototype._ishlnsubmul=function _ishlnsubmul(num,mul,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul;w-=right&0x3ffffff;carry=(w>>26)-(right/0x4000000|0);this.words[i+shift]=w&0x3ffffff;}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&0x3ffffff;}if(carry===0)return this.strip();// Subtraction overflow
assert(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&0x3ffffff;}this.negative=1;return this.strip();};BN.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b=num;// Normalize
var bhi=b.words[b.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b=b.ushln(shift);a.iushln(shift);bhi=b.words[b.length-1]|0;}// Initialize quotient
var m=a.length-b.length;var q;if(mode!=='mod'){q=new BN(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0;}}var diff=a.clone()._ishlnsubmul(b,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1;}}for(var j=m-1;j>=0;j--){var qj=(a.words[b.length+j]|0)*0x4000000+(a.words[b.length+j-1]|0);// NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
// (0x7ffffff)
qj=Math.min(qj/bhi|0,0x3ffffff);a._ishlnsubmul(b,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b,1,j);if(!a.isZero()){a.negative^=1;}}if(q){q.words[j]=qj;}}if(q){q.strip();}a.strip();// Denormalize
if(mode!=='div'&&shift!==0){a.iushrn(shift);}return{div:q||null,mod:a};};// NOTE: 1) `mode` can be set to `mod` to request mod only,
//       to `div` to request div only, or be absent to
//       request both div & mod
//       2) `positive` is true if unsigned mod is requested
BN.prototype.divmod=function divmod(num,mode,positive){assert(!num.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)};}var div,mod,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!=='mod'){div=res.div.neg();}if(mode!=='div'){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.iadd(num);}}return{div:div,mod:mod};}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!=='mod'){div=res.div.neg();}return{div:div,mod:res.mod};}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!=='div'){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.isub(num);}}return{div:res.div,mod:mod};}// Both numbers are positive at this point
// Strip both numbers to approximate shift value
if(num.length>this.length||this.cmp(num)<0){return{div:new BN(0),mod:this};}// Very short reduction
if(num.length===1){if(mode==='div'){return{div:this.divn(num.words[0]),mod:null};}if(mode==='mod'){return{div:null,mod:new BN(this.modn(num.words[0]))};}return{div:this.divn(num.words[0]),mod:new BN(this.modn(num.words[0]))};}return this._wordDiv(num,mode);};// Find `this` / `num`
BN.prototype.div=function div(num){return this.divmod(num,'div',false).div;};// Find `this` % `num`
BN.prototype.mod=function mod(num){return this.divmod(num,'mod',false).mod;};BN.prototype.umod=function umod(num){return this.divmod(num,'mod',true).mod;};// Find Round(`this` / `num`)
BN.prototype.divRound=function divRound(num){var dm=this.divmod(num);// Fast case - exact division
if(dm.mod.isZero())return dm.div;var mod=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod.cmp(half);// Round down
if(cmp<0||r2===1&&cmp===0)return dm.div;// Round up
return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1);};BN.prototype.modn=function modn(num){assert(num<=0x3ffffff);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num;}return acc;};// In-place division by number
BN.prototype.idivn=function idivn(num){assert(num<=0x3ffffff);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*0x4000000;this.words[i]=w/num|0;carry=w%num;}return this.strip();};BN.prototype.divn=function divn(num){return this.clone().idivn(num);};BN.prototype.egcd=function egcd(p){assert(p.negative===0);assert(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p);}else{x=x.clone();}// A * x + B * y = x
var A=new BN(1);var B=new BN(0);// C * x + D * y = y
var C=new BN(0);var D=new BN(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g;}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){x.iushrn(i);while(i-->0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp);}A.iushrn(1);B.iushrn(1);}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){y.iushrn(j);while(j-->0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp);}C.iushrn(1);D.iushrn(1);}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D);}else{y.isub(x);C.isub(A);D.isub(B);}}return{a:C,b:D,gcd:y.iushln(g)};};// This is reduced incarnation of the binary EEA
// above, designated to invert members of the
// _prime_ fields F(p) at a maximal speed
BN.prototype._invmp=function _invmp(p){assert(p.negative===0);assert(!p.isZero());var a=this;var b=p.clone();if(a.negative!==0){a=a.umod(p);}else{a=a.clone();}var x1=new BN(1);var x2=new BN(0);var delta=b.clone();while(a.cmpn(1)>0&&b.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){a.iushrn(i);while(i-->0){if(x1.isOdd()){x1.iadd(delta);}x1.iushrn(1);}}for(var j=0,jm=1;(b.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){b.iushrn(j);while(j-->0){if(x2.isOdd()){x2.iadd(delta);}x2.iushrn(1);}}if(a.cmp(b)>=0){a.isub(b);x1.isub(x2);}else{b.isub(a);x2.isub(x1);}}var res;if(a.cmpn(1)===0){res=x1;}else{res=x2;}if(res.cmpn(0)<0){res.iadd(p);}return res;};BN.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b=num.clone();a.negative=0;b.negative=0;// Remove common factor of two
for(var shift=0;a.isEven()&&b.isEven();shift++){a.iushrn(1);b.iushrn(1);}do{while(a.isEven()){a.iushrn(1);}while(b.isEven()){b.iushrn(1);}var r=a.cmp(b);if(r<0){// Swap `a` and `b` to make `a` always bigger than `b`
var t=a;a=b;b=t;}else if(r===0||b.cmpn(1)===0){break;}a.isub(b);}while(true);return b.iushln(shift);};// Invert number in the field F(num)
BN.prototype.invm=function invm(num){return this.egcd(num).a.umod(num);};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0;};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1;};// And first word and num
BN.prototype.andln=function andln(num){return this.words[0]&num;};// Increment at the bit position in-line
BN.prototype.bincn=function bincn(bit){assert(typeof bit==='number');var r=bit%26;var s=(bit-r)/26;var q=1<<r;// Fast case: bit is much higher than all existing words
if(this.length<=s){this._expand(s+1);this.words[s]|=q;return this;}// Add bit and propagate, if needed
var carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=0x3ffffff;this.words[i]=w;}if(carry!==0){this.words[i]=carry;this.length++;}return this;};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0;};BN.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this.strip();var res;if(this.length>1){res=1;}else{if(negative){num=-num;}assert(num<=0x3ffffff,'Number is too big');var w=this.words[0]|0;res=w===num?0:w<num?-1:1;}if(this.negative!==0)return-res|0;return res;};// Compare two numbers and return:
// 1 - if `this` > `num`
// 0 - if `this` == `num`
// -1 - if `this` < `num`
BN.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res;};// Unsigned comparison
BN.prototype.ucmp=function ucmp(num){// At this point both numbers have the same sign
if(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b=num.words[i]|0;if(a===b)continue;if(a<b){res=-1;}else if(a>b){res=1;}break;}return res;};BN.prototype.gtn=function gtn(num){return this.cmpn(num)===1;};BN.prototype.gt=function gt(num){return this.cmp(num)===1;};BN.prototype.gten=function gten(num){return this.cmpn(num)>=0;};BN.prototype.gte=function gte(num){return this.cmp(num)>=0;};BN.prototype.ltn=function ltn(num){return this.cmpn(num)===-1;};BN.prototype.lt=function lt(num){return this.cmp(num)===-1;};BN.prototype.lten=function lten(num){return this.cmpn(num)<=0;};BN.prototype.lte=function lte(num){return this.cmp(num)<=0;};BN.prototype.eqn=function eqn(num){return this.cmpn(num)===0;};BN.prototype.eq=function eq(num){return this.cmp(num)===0;};//
// A reduce context, could be using montgomery or something better, depending
// on the `m` itself.
//
BN.red=function red(num){return new Red(num);};BN.prototype.toRed=function toRed(ctx){assert(!this.red,'Already a number in reduction context');assert(this.negative===0,'red works only with positives');return ctx.convertTo(this)._forceRed(ctx);};BN.prototype.fromRed=function fromRed(){assert(this.red,'fromRed works only with numbers in reduction context');return this.red.convertFrom(this);};BN.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this;};BN.prototype.forceRed=function forceRed(ctx){assert(!this.red,'Already a number in reduction context');return this._forceRed(ctx);};BN.prototype.redAdd=function redAdd(num){assert(this.red,'redAdd works only with red numbers');return this.red.add(this,num);};BN.prototype.redIAdd=function redIAdd(num){assert(this.red,'redIAdd works only with red numbers');return this.red.iadd(this,num);};BN.prototype.redSub=function redSub(num){assert(this.red,'redSub works only with red numbers');return this.red.sub(this,num);};BN.prototype.redISub=function redISub(num){assert(this.red,'redISub works only with red numbers');return this.red.isub(this,num);};BN.prototype.redShl=function redShl(num){assert(this.red,'redShl works only with red numbers');return this.red.shl(this,num);};BN.prototype.redMul=function redMul(num){assert(this.red,'redMul works only with red numbers');this.red._verify2(this,num);return this.red.mul(this,num);};BN.prototype.redIMul=function redIMul(num){assert(this.red,'redMul works only with red numbers');this.red._verify2(this,num);return this.red.imul(this,num);};BN.prototype.redSqr=function redSqr(){assert(this.red,'redSqr works only with red numbers');this.red._verify1(this);return this.red.sqr(this);};BN.prototype.redISqr=function redISqr(){assert(this.red,'redISqr works only with red numbers');this.red._verify1(this);return this.red.isqr(this);};// Square root over p
BN.prototype.redSqrt=function redSqrt(){assert(this.red,'redSqrt works only with red numbers');this.red._verify1(this);return this.red.sqrt(this);};BN.prototype.redInvm=function redInvm(){assert(this.red,'redInvm works only with red numbers');this.red._verify1(this);return this.red.invm(this);};// Return negative clone of `this` % `red modulo`
BN.prototype.redNeg=function redNeg(){assert(this.red,'redNeg works only with red numbers');this.red._verify1(this);return this.red.neg(this);};BN.prototype.redPow=function redPow(num){assert(this.red&&!num.red,'redPow(normalNum)');this.red._verify1(this);return this.red.pow(this,num);};// Prime numbers with efficient reduction
var primes={k256:null,p224:null,p192:null,p25519:null};// Pseudo-Mersenne prime
function MPrime(name,p){// P = 2 ^ N - K
this.name=name;this.p=new BN(p,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp();}MPrime.prototype._tmp=function _tmp(){var tmp=new BN(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp;};MPrime.prototype.ireduce=function ireduce(num){// Assumes that `num` is less than `P^2`
// num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
var r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength();}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1;}else if(cmp>0){r.isub(this.p);}else{if(r.strip!==undefined){// r is BN v4 instance
r.strip();}else{// r is BN v5 instance
r._strip();}}return r;};MPrime.prototype.split=function split(input,out){input.iushrn(this.n,0,out);};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k);};function K256(){MPrime.call(this,'k256','ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');}inherits(K256,MPrime);K256.prototype.split=function split(input,output){// 256 = 9 * 26 + 22
var mask=0x3fffff;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output.words[i]=input.words[i];}output.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return;}// Shift by 9 limbs
var prev=input.words[9];output.words[output.length++]=prev&mask;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask)<<4|prev>>>22;prev=next;}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10;}else{input.length-=9;}};K256.prototype.imulK=function imulK(num){// K = 0x1000003d1 = [ 0x40, 0x3d1 ]
num.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;// bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
var lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*0x3d1;num.words[i]=lo&0x3ffffff;lo=w*0x40+(lo/0x4000000|0);}// Fast length reduction
if(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--;}}return num;};function P224(){MPrime.call(this,'p224','ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');}inherits(P224,MPrime);function P192(){MPrime.call(this,'p192','ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');}inherits(P192,MPrime);function P25519(){// 2 ^ 255 - 19
MPrime.call(this,'25519','7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(num){// K = 0x13
var carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*0x13+carry;var lo=hi&0x3ffffff;hi>>>=26;num.words[i]=lo;carry=hi;}if(carry!==0){num.words[num.length++]=carry;}return num;};// Exported mostly for testing purposes, use plain name instead
BN._prime=function prime(name){// Cached version of prime
if(primes[name])return primes[name];var prime;if(name==='k256'){prime=new K256();}else if(name==='p224'){prime=new P224();}else if(name==='p192'){prime=new P192();}else if(name==='p25519'){prime=new P25519();}else{throw new Error('Unknown prime '+name);}primes[name]=prime;return prime;};//
// Base reduction engine
//
function Red(m){if(typeof m==='string'){var prime=BN._prime(m);this.m=prime.p;this.prime=prime;}else{assert(m.gtn(1),'modulus must be greater than 1');this.m=m;this.prime=null;}}Red.prototype._verify1=function _verify1(a){assert(a.negative===0,'red works only with positives');assert(a.red,'red works only with red numbers');};Red.prototype._verify2=function _verify2(a,b){assert((a.negative|b.negative)===0,'red works only with positives');assert(a.red&&a.red===b.red,'red works only with red numbers');};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);return a.umod(this.m)._forceRed(this);};Red.prototype.neg=function neg(a){if(a.isZero()){return a.clone();}return this.m.sub(a)._forceRed(this);};Red.prototype.add=function add(a,b){this._verify2(a,b);var res=a.add(b);if(res.cmp(this.m)>=0){res.isub(this.m);}return res._forceRed(this);};Red.prototype.iadd=function iadd(a,b){this._verify2(a,b);var res=a.iadd(b);if(res.cmp(this.m)>=0){res.isub(this.m);}return res;};Red.prototype.sub=function sub(a,b){this._verify2(a,b);var res=a.sub(b);if(res.cmpn(0)<0){res.iadd(this.m);}return res._forceRed(this);};Red.prototype.isub=function isub(a,b){this._verify2(a,b);var res=a.isub(b);if(res.cmpn(0)<0){res.iadd(this.m);}return res;};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num));};Red.prototype.imul=function imul(a,b){this._verify2(a,b);return this.imod(a.imul(b));};Red.prototype.mul=function mul(a,b){this._verify2(a,b);return this.imod(a.mul(b));};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone());};Red.prototype.sqr=function sqr(a){return this.mul(a,a);};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert(mod3%2===1);// Fast case
if(mod3===3){var pow=this.m.add(new BN(1)).iushrn(2);return this.pow(a,pow);}// Tonelli-Shanks algorithm (Totally unoptimized and slow)
//
// Find Q and S, that Q * 2 ^ S = (P - 1)
var q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1);}assert(!q.isZero());var one=new BN(1).toRed(this);var nOne=one.redNeg();// Find quadratic non-residue
// NOTE: Max is such because of generalized Riemann hypothesis.
var lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne);}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr();}assert(i<m);var b=this.pow(c,new BN(1).iushln(m-i-1));r=r.redMul(b);c=b.redSqr();t=t.redMul(c);m=i;}return r;};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg();}else{return this.imod(inv);}};Red.prototype.pow=function pow(a,num){if(num.isZero())return new BN(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a);}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26;}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res);}if(bit===0&&current===0){currentLen=0;continue;}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0;}start=26;}return res;};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r;};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res;};//
// Montgomery method engine
//
BN.mont=function mont(num){return new Mont(num);};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26;}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv);}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift));};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r;};Mont.prototype.imul=function imul(a,b){if(a.isZero()||b.isZero()){a.words[0]=0;a.length=1;return a;}var t=a.imul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m);}else if(u.cmpn(0)<0){res=u.iadd(this.m);}return res._forceRed(this);};Mont.prototype.mul=function mul(a,b){if(a.isZero()||b.isZero())return new BN(0)._forceRed(this);var t=a.mul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m);}else if(u.cmpn(0)<0){res=u.iadd(this.m);}return res._forceRed(this);};Mont.prototype.invm=function invm(a){// (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
var res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this);};})(typeof module==='undefined'||module,this);},{"buffer":96}],3:[function(require,module,exports){"use strict";/**
 * Returns a Promise that resolves to the value of window.ethereum if it is
 * set within the given timeout, or null.
 * The Promise will not reject, but an error will be thrown if invalid options
 * are provided.
 *
 * @param options - Options bag.
 * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.
 * Default: false
 * @param options.silent - Whether to silence console errors. Does not affect
 * thrown errors. Default: false
 * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to
 * be dispatched. Default: 3000
 * @returns A Promise that resolves with the Provider if it is detected within
 * given timeout, otherwise null.
 */function detectEthereumProvider({mustBeMetaMask=false,silent=false,timeout=3000}={}){_validateInputs();let handled=false;return new Promise(resolve=>{if(window.ethereum){handleEthereum();}else{window.addEventListener('ethereum#initialized',handleEthereum,{once:true});setTimeout(()=>{handleEthereum();},timeout);}function handleEthereum(){if(handled){return;}handled=true;window.removeEventListener('ethereum#initialized',handleEthereum);const{ethereum}=window;if(ethereum&&(!mustBeMetaMask||ethereum.isMetaMask)){resolve(ethereum);}else{const message=mustBeMetaMask&&ethereum?'Non-MetaMask window.ethereum detected.':'Unable to detect window.ethereum.';!silent&&console.error('@metamask/detect-provider:',message);resolve(null);}}});function _validateInputs(){if(typeof mustBeMetaMask!=='boolean'){throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);}if(typeof silent!=='boolean'){throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);}if(typeof timeout!=='number'){throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);}}}module.exports=detectEthereumProvider;},{}],4:[function(require,module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,"__esModule",{value:true});class WaxEventSource{constructor(waxSigningURL="http://localhost:3000"){this.waxSigningURL=waxSigningURL;this.timeout=()=>{return new Promise((resolve,reject)=>{const wait=setTimeout(()=>{clearTimeout(wait);reject(new Error("Timeout"));},2000);});};this.openEventSource=this.openEventSource.bind(this);this.onceEvent=this.onceEvent.bind(this);}openEventSource(url,message,win){return __awaiter(this,void 0,void 0,function*(){const openedWindow=win?win:yield window.open(url,"WaxPopup","height=800,width=600");if(!openedWindow){throw new Error("Unable to open a popup window");}if(typeof message==="undefined"){return openedWindow;}const postTransaction=event=>__awaiter(this,void 0,void 0,function*(){if(event.data.type==="READY"){// @ts-ignore
openedWindow.postMessage(message,this.waxSigningURL);}});const eventPromise=this.onceEvent(// @ts-ignore
openedWindow,this.waxSigningURL,postTransaction);yield Promise.race([eventPromise,this.timeout()]).catch(err=>{if(err.message!=="Timeout"){throw err;}openedWindow.postMessage(message,this.waxSigningURL);});return openedWindow;});}onceEvent(source,origin,action){return __awaiter(this,void 0,void 0,function*(){return new Promise((resolve,reject)=>{window.addEventListener("message",function onEvent(event){return __awaiter(this,void 0,void 0,function*(){// Validate expected origin for event
if(event.origin!==origin){return;}// Validate expected source for event
if(event.source!==source){return;}if(typeof event.data!=="object"){return;}try{const result=yield action(event);resolve(result);}catch(e){reject(e);}window.removeEventListener("message",onEvent,false);});},false);});});}}exports.WaxEventSource=WaxEventSource;},{}],5:[function(require,module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,"__esModule",{value:true});const eosjs_1=require("eosjs");const WaxEventSource_1=require("./WaxEventSource");class WaxJS{constructor(rcpEndpoint,userAccount=null,pubKeys=null,tryAutoLogin=true,apiSigner=null,waxSigningURL="https://all-access.wax.io",waxAutoSigningURL="https://api-idm.wax.io/v1/accounts/auto-accept/"){this.apiSigner=apiSigner;this.waxSigningURL=waxSigningURL;this.waxAutoSigningURL=waxAutoSigningURL;this.waxEventSource=new WaxEventSource_1.WaxEventSource(waxSigningURL);this.rpc=new eosjs_1.JsonRpc(rcpEndpoint);if(userAccount&&Array.isArray(pubKeys)){// login from constructor
const data={userAccount,pubKeys,verified:true};this.receiveLogin({data});}else{// try to auto-login via endpoint
if(tryAutoLogin){this.loginViaEndpoint();}}}login(){return __awaiter(this,void 0,void 0,function*(){if(this.userAccount&&Array.isArray(this.pubKeys)){return this.userAccount;}else{// login via UI
return this.loginViaWindow();}});}isAutoLoginAvailable(){return __awaiter(this,void 0,void 0,function*(){if(this.userAccount&&Array.isArray(this.pubKeys)){return true;}else{// try to auto-login via endpoint
try{yield this.loginViaEndpoint();return true;}catch(e){return false;}}return false;});}loginViaWindow(){return __awaiter(this,void 0,void 0,function*(){const confirmationWindow=yield this.waxEventSource.openEventSource(this.waxSigningURL+"/cloud-wallet/login/");return this.waxEventSource.onceEvent(confirmationWindow,this.waxSigningURL,this.receiveLogin.bind(this));});}loginViaEndpoint(){return __awaiter(this,void 0,void 0,function*(){const response=yield fetch(this.waxAutoSigningURL+"login",{credentials:"include",method:"get"});if(!response.ok){throw new Error(`Login Endpoint Error ${response.status} ${response.statusText}`);}const data=yield response.json();if(data.processed&&data.processed.except){throw new Error(data);}return this.receiveLogin({data});});}receiveLogin(event){return __awaiter(this,void 0,void 0,function*(){const{verified,userAccount,pubKeys,whitelistedContracts,autoLogin}=event.data;if(!verified){throw new Error("User declined to share their user account");}if(userAccount==null||pubKeys==null){throw new Error("User does not have a blockchain account");}localStorage.setItem("autoLogin",autoLogin);this.whitelistedContracts=whitelistedContracts||[];this.userAccount=userAccount;this.pubKeys=pubKeys;const signer={getAvailableKeys:()=>__awaiter(this,void 0,void 0,function*(){return[...this.pubKeys,...(this.apiSigner&&(yield this.apiSigner.getAvailableKeys())||[])];}),sign:data=>__awaiter(this,void 0,void 0,function*(){return{serializedTransaction:data.serializedTransaction,signatures:[...(yield this.signing(data.serializedTransaction)),...(this.apiSigner&&(yield this.apiSigner.sign(data)).signatures||[])]};})};// @ts-ignore
this.api=new eosjs_1.Api({rpc:this.rpc,signatureProvider:signer});const transact=this.api.transact.bind(this.api);const url=this.waxSigningURL+"/cloud-wallet/signing/";// We monkeypatch the transact method to overcome timeouts
// firing the pop-up which some browsers enforce, such as Safari.
// By pre-creating the pop-up window we will interact with,
// we ensure that it is not going to be rejected due to a delayed
// pop up that would otherwise occur post transaction creation
this.api.transact=(transaction,namedParams)=>__awaiter(this,void 0,void 0,function*(){if(!(yield this.canAutoSign(transaction))){this.signingWindow=yield window.open(url,"WaxPopup","height=800,width=600");}return yield transact(transaction,namedParams);});return this.userAccount;});}canAutoSign(transaction){return __awaiter(this,void 0,void 0,function*(){const deserializedTransaction=transaction.actions?transaction:yield this.api.deserializeTransactionWithActions(transaction);return!deserializedTransaction.actions.find(action=>{return!this.isWhitelisted(action);});});}isWhitelisted(action){return!!this.whitelistedContracts.find(w=>{if(w.contract===action.account){if(action.account==="eosio.token"&&action.name==="transfer"){return w.recipients.includes(action.data.to);}return true;}return false;});}signing(transaction){return __awaiter(this,void 0,void 0,function*(){if(yield this.canAutoSign(transaction)){return this.signViaEndpoint(transaction).catch(()=>// Attempt to recover by signing via the window method
this.signViaWindow(undefined,transaction));}return this.signViaWindow(this.signingWindow,transaction);});}signViaEndpoint(transaction){return __awaiter(this,void 0,void 0,function*(){try{const response=yield fetch(this.waxAutoSigningURL+"signing",{body:JSON.stringify({transaction:Object.values(transaction)}),credentials:"include",headers:{"Content-Type":"application/json"},method:"POST"});if(!response.ok){throw new Error(`Signing Endpoint Error ${response.status} ${response.statusText}`);}const data=yield response.json();if(data.processed&&data.processed.except){throw new Error(data);}return this.receiveSignatures({data});}catch(e){// clear the whitelist to make sure we don't repeatedly attempt blocked actions
this.whitelistedContracts=[];throw e;}});}signViaWindow(window,transaction){return __awaiter(this,void 0,void 0,function*(){const confirmationWindow=yield this.waxEventSource.openEventSource(this.waxSigningURL+"/cloud-wallet/signing/",{type:"TRANSACTION",transaction},window);return this.waxEventSource.onceEvent(confirmationWindow,this.waxSigningURL,this.receiveSignatures.bind(this));});}receiveSignatures(event){return __awaiter(this,void 0,void 0,function*(){if(event.data.type==="TX_SIGNED"){const{verified,signatures,whitelistedContracts}=event.data;if(!verified||signatures==null){throw new Error("User declined to sign the transaction");}this.whitelistedContracts=whitelistedContracts||[];return signatures;}else if(event.data.type!=="READY"){throw new Error(`Unexpected response received when attempting signing: ${JSON.stringify(event.data,undefined,2)}`);}return[];});}}exports.WaxJS=WaxJS;},{"./WaxEventSource":4,"eosjs":186}],6:[function(require,module,exports){/**
 * Anchor Link Browser Transport v3.1.3
 * https://github.com/greymass/anchor-link-browser-transport
 *
 * @license
 * Copyright (c) 2020 Greymass Inc. All Rights Reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 
 *  1. Redistribution of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 * 
 *  2. Redistribution in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 * 
 *  3. Neither the name of the copyright holder nor the names of its contributors
 *     may be used to endorse or promote products derived from this software without
 *     specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR INTENDED FOR USE
 * IN THE DESIGN, CONSTRUCTION, OPERATION OR MAINTENANCE OF ANY MILITARY FACILITY.
 */'use strict';var tslib=require('tslib');var anchorLink=require('anchor-link');var styleText="\n/* Anchor Link */\n\n.%prefix% * {\n    box-sizing: border-box;\n    line-height: 1;\n}\n\n.%prefix% {\n    font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue',\n        Arial, sans-serif;\n    font-size: 13px;\n    background: rgba(0, 0, 0, 0.65);\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    z-index: 2147483647;\n    display: none;\n    align-items: center;\n    justify-content: center;\n}\n\n.%prefix%-active {\n    display: flex;\n}\n\n.%prefix%-inner {\n    background: #EFF1F7;\n    margin: 20px;\n    padding-top: 50px;\n    border-radius: 20px;\n    box-shadow: 0px 4px 100px rgba(0, 0, 0, .5);\n    width: 340px;\n    position: relative;\n}\n\n.%prefix%-close {\n    display: block;\n    position: absolute;\n    top: 11px;\n    right: 16px;\n    width: 28px;\n    height: 28px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M.57 12.1a.96.96 0 000 1.34c.37.36 1 .36 1.34 0L7 8.37l5.09 5.09c.36.35.97.35 1.34-.01a.96.96 0 000-1.34L8.34 7.01l5.08-5.08a.95.95 0 000-1.33.97.97 0 00-1.34-.01L6.99 5.68 1.91.59a.96.96 0 00-1.33 0 .97.97 0 00-.01 1.34l5.09 5.08-5.1 5.1z' fill='%23007AFF'/%3E%3C/svg%3E\");\n    background-size: 14px;\n    background-repeat: no-repeat;\n    background-position: 50% 7px;\n    border-radius: 100%;\n    cursor: pointer;\n}\n\n.%prefix%-close:hover {\n    background-color: white;\n}\n\n.%prefix%-version {\n    position: absolute;\n    top: 19px;\n    left: 20px;\n    cursor: help;\n    color: #B8C0DA;\n    opacity: 0.1;\n}\n\n.%prefix%-version:hover {\n    opacity: 1;\n}\n\n.%prefix%-logo {\n    width: 70px;\n    height: 70px;\n    margin: 0 auto;\n    margin-top: -56px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23fff' d='M18.81 9.19h33.25V59.5H18.81z'/%3E%3Cpath d='M38.45 28.88h-6.9L35 21.77l3.45 7.1z' fill='%233650A2'/%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M35 70a35 35 0 100-70 35 35 0 000 70zm2.36-55.4a2.62 2.62 0 00-4.72 0L21.9 36.75h5.84l1.7-3.5h11.13l1.7 3.5h5.83L37.36 14.6zM48.13 44.2h-5.26a7.76 7.76 0 01-5.24 7v-10.5a2.62 2.62 0 10-5.25 0v10.5a7.76 7.76 0 01-5.25-7h-5.25c.16 7.06 6 12.69 13.12 12.69 7.12 0 12.97-5.63 13.13-12.7z' fill='%233650A2'/%3E%3C/svg%3E\");\n}\n\n.%prefix%-fuel {\n    width: 70px;\n    height: 70px;\n    margin: 0 auto;\n    margin-top: -56px;\n    background-image: url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3ClinearGradient id='linear-gradient-25' x1='104.79' y1='197.49' x2='131.55' y2='108.35' gradientUnits='userSpaceOnUse'%3E%3Cstop offset='0.38' stop-color='%23f6b621'/%3E%3Cstop offset='0.59' stop-color='%23e89124'/%3E%3C/linearGradient%3E%3C/defs%3E%3Cg id='brain-logo' style='' transform='matrix(1, 0, 0, 1, -0.005538, -0.040005)'%3E%3Cg%3E%3Cpath class='cls-4' d='M251.93,111.13,221.28,71.51A23.76,23.76,0,0,0,209,63.61l-77.7-18.09a25.86,25.86,0,0,0-5.78-.6,28.22,28.22,0,0,0-7.88,1L99.06,51.58a6.31,6.31,0,0,0-.61-5l-5.3-9a6.36,6.36,0,0,0-5.47-3.13h0a6.57,6.57,0,0,0-1.92.29L49.61,46.21a6.34,6.34,0,0,0-4.41,6.28l.46,12.2a6.2,6.2,0,0,0,.78,2.81L38.2,70a21.1,21.1,0,0,0-11.73,9.76L3,125.21a17.78,17.78,0,0,0,.54,16.32l12.68,21A16.19,16.19,0,0,0,29.69,170a13.25,13.25,0,0,0,1.67-.1L65,165.81a17.22,17.22,0,0,0,9.2,13.64l12.86,6.08a32.51,32.51,0,0,0,12.26,2.63c.35,0,.7,0,1,0l29.17-1.61a6.12,6.12,0,0,1,2.64,1l29.05,28.79a20,20,0,0,0,13.27,5.29c.52,0,1,0,1.53-.07l23.93-2.47c4.31-.44,7.67-2.87,9-6.48s.36-7.64-2.63-10.78l-10.09-10.64,19.07-5.64a15.76,15.76,0,0,0,10.83-13.09L227.65,157a10.69,10.69,0,0,1,1.86-4.19l21.74-24a14,14,0,0,0,.68-17.65Z' style='fill: rgb(255, 255, 255);'/%3E%3Cg%3E%3Ccircle class='cls-2' cx='173.24' cy='107.45' r='6.19' transform='translate(7.67 226.39) rotate(-67.5)' style='fill: rgb(246, 182, 33);'/%3E%3Cpath class='cls-2' d='M101,97.06a3.71,3.71,0,1,0-3.71-3.71A3.71,3.71,0,0,0,101,97.06Z' style='fill: rgb(246, 182, 33);'/%3E%3Ccircle class='cls-2' cx='135.4' cy='76.29' r='3.71' style='fill: rgb(246, 182, 33);'/%3E%3Cg%3E%3Cpath class='cls-21' d='M79.24,128c-16.71,0-37.79,7.36-48.93,11.68a2.39,2.39,0,0,0-1.19,3.46L33.8,151a2.38,2.38,0,0,0,2.34,1.14L69.27,148a12.74,12.74,0,0,1,1.63-.1,13.22,13.22,0,0,1,13.26,12.74l0,1.1a2.4,2.4,0,0,0,1.37,2.07l10.56,5a14.8,14.8,0,0,0,4.69.95H101L129,168.24c.28,0,.57,0,.85,0a21.23,21.23,0,0,1,14.06,5.68l27.82,27.56a4,4,0,0,0,1.26.45l6.07-.75a1.22,1.22,0,0,0,.86-1.9l-3-4.36a11.51,11.51,0,0,1,5.21-19.44l23.4-6.93a1.44,1.44,0,0,0,1-1.23l1.26-12.72v0a1.44,1.44,0,0,0-1.81-1.54c-8.26,2.21-22.73,5.72-31.63,5.72C136.65,158.74,108.72,128,79.24,128Zm32.48,27a2.77,2.77,0,0,1-1,1,3.78,3.78,0,0,1-5.23-5.23,2.77,2.77,0,0,1,1-1A3.78,3.78,0,0,1,111.72,155Zm63.76,13.39a2.62,2.62,0,0,1-1,1,3.78,3.78,0,0,1-5.23-5.23,2.77,2.77,0,0,1,1-1A3.78,3.78,0,0,1,175.48,168.36Z' style='fill: url(%23linear-gradient-25);'/%3E%3Cpath class='cls-2' d='M173.34,127.62c-37.69,0-69.59-16.73-92.46-16.73-16.08,0-43.36,12.17-55.32,21a2,2,0,0,0-.65,2.46c.35.8.82,1.84,1.26,2.82a2,2,0,0,0,2.62,1C39.07,134,61,125.9,79.24,125.9c30.45,0,58.48,27,91.13,27,14.49,0,35.75-5.69,41.3-10.16,2.42-2.52,10.36-11.93,16-17.78a2.39,2.39,0,0,0-2.32-3.94C214.49,123.51,193.73,127.62,173.34,127.62Zm-1.68,14.25a5.28,5.28,0,0,1-2.49,2.49,6.27,6.27,0,0,1-8.48-8.48,5.37,5.37,0,0,1,2.49-2.49A6.27,6.27,0,0,1,171.66,141.87Z' style='fill: rgb(246, 182, 33);'/%3E%3C/g%3E%3Cpath class='cls-1' d='M248.71,113.13,218.06,73.51a20.05,20.05,0,0,0-10-6.43L130.34,49a25.7,25.7,0,0,0-11.57.38L91.41,57.65a.05.05,0,0,1-.07,0L89.56,53a.05.05,0,0,1,0-.07l4.06-1.46a2.45,2.45,0,0,0,1-.62,2.29,2.29,0,0,0,.29-2.72l-5.29-9a2.3,2.3,0,0,0-2.67-1L50.83,49.59a2.28,2.28,0,0,0-1.59,2.27l.46,12.2a2.27,2.27,0,0,0,1,1.8,2.3,2.3,0,0,0,1.28.4,2.33,2.33,0,0,0,.78-.14l9.18-3.29a0,0,0,0,1,.06,0L63.58,66a0,0,0,0,1,0,.07L39.37,73.4a17.25,17.25,0,0,0-9.31,7.74L6.58,126.59A13.67,13.67,0,0,0,7,139l12.68,21a12.1,12.1,0,0,0,11.19,5.45l37.08-4.54a.83.83,0,0,1,.68.18.82.82,0,0,1,.28.64l.14,3.22a13.25,13.25,0,0,0,6.88,10.39l12.86,6.08a28,28,0,0,0,11.32,2.21l29.2-1.61a9.38,9.38,0,0,1,5.68,2.16L164,212.94a16,16,0,0,0,10.41,4.12,10,10,0,0,0,1.11-.06l23.93-2.46c2.77-.29,4.82-1.69,5.62-3.85s.15-4.56-1.77-6.58l-14.6-15.38a.06.06,0,0,1,0-.09l25.35-7.5a11.74,11.74,0,0,0,7.94-9.59l1.53-15.46a14.22,14.22,0,0,1,2.9-6.52l21.74-24A9.94,9.94,0,0,0,248.71,113.13ZM56.08,56.65,56,54.81a1.29,1.29,0,0,1,.88-1.29l28-9a1.28,1.28,0,0,1,1.48.57l.48.83a1.27,1.27,0,0,1-.68,1.83l-28.35,10A1.27,1.27,0,0,1,56.08,56.65Zm186.57,63.93-21.71,24a21.37,21.37,0,0,0-4.79,10.8l-1.54,15.46A4.37,4.37,0,0,1,212,174l-26.5,7.84a6.52,6.52,0,0,0-3,11.2L194,205.17a1.49,1.49,0,0,1-.93,2.5l-18.31,1.89a8.37,8.37,0,0,1-5.49-1.94l-29.06-28.8a16.74,16.74,0,0,0-10.77-4.33l-.59,0-29.21,1.61a20.07,20.07,0,0,1-7.69-1.5l-12.87-6.09a5,5,0,0,1-2.61-3.93l-.13-3.22A8.27,8.27,0,0,0,67,153.44L29.94,158a4.75,4.75,0,0,1-3.87-1.88l-12.68-21a6.38,6.38,0,0,1-.17-5.05L36.71,84.58a10.08,10.08,0,0,1,4.82-4l79.41-24a18.68,18.68,0,0,1,7.7-.25l77.7,18.09a12.72,12.72,0,0,1,5.8,3.72l30.62,39.59A2.35,2.35,0,0,1,242.65,120.58Z' style='fill: rgb(42, 54, 64);'/%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\n\n.%prefix%-logo.loading {\n    border-radius: 100%;\n    background-color: #3650A2;\n    background-image: url(\"data:image/svg+xml,%3Csvg viewBox='0.5 0.5 45 45' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' transform='translate(1 1)' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='6' stroke-opacity='0'%3E%3Canimate attributeName='r' begin='1.5s' dur='3s' values='6;22' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='1.5s' dur='3s' values='1;0' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-width' begin='1.5s' dur='3s' values='2;0' calcMode='linear' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='6' stroke-opacity='0'%3E%3Canimate attributeName='r' begin='3s' dur='3s' values='6;22' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='3s' dur='3s' values='1;0' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-width' begin='3s' dur='3s' values='2;0' calcMode='linear' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='8'%3E%3Canimate attributeName='r' begin='0s' dur='1.5s' values='6;1;2;3;4;5;6' calcMode='linear' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\n\n.%prefix%-logo.error {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 70 70'%3E%3Cdefs/%3E%3Ccircle cx='35' cy='35' r='35' fill='%23FC3D39'/%3E%3Cpath fill='%23fff' d='M22.3 48h25.4c2.5 0 4-1.7 4-4a4 4 0 00-.5-2L38.5 19.3a4 4 0 00-3.5-2 4 4 0 00-3.5 2L18.8 42.1c-.3.6-.5 1.3-.5 2 0 2.2 1.6 4 4 4zM35 37c-.9 0-1.4-.6-1.4-1.5l-.2-7.7c0-.9.6-1.6 1.6-1.6s1.7.7 1.7 1.6l-.3 7.7c0 1-.5 1.5-1.4 1.5zm0 6c-1 0-1.9-.8-1.9-1.8s.9-1.8 2-1.8c1 0 1.8.7 1.8 1.8 0 1-.9 1.8-1.9 1.8z'/%3E%3C/svg%3E\");\n}\n\n.%prefix%-logo.success {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 70 70'%3E%3Cdefs/%3E%3Ccircle cx='35' cy='35' r='35' fill='%233DC55D'/%3E%3Cpath fill='%23fff' d='M30.9 49.7a2 2 0 001.8-1L48 24.9c.3-.5.4-1 .4-1.4 0-1-.7-1.7-1.7-1.7-.8 0-1.2.3-1.6 1L30.8 45.4 23.5 36c-.5-.6-1-.9-1.6-.9-1 0-1.8.8-1.8 1.8 0 .4.2.9.6 1.3L29 48.7c.6.7 1.1 1 1.9 1z'/%3E%3C/svg%3E\");\n}\n\n.%prefix%-request {\n    padding: 20px;\n    border-radius: 20px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    background: white;\n}\n\n.%prefix%-fee,\n.%prefix%-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.%prefix%-title {\n    color: #000000;\n    font-size: 25px;\n    margin-top: 14px;\n    font-weight: 700;\n    line-height: 30px;\n    letter-spacing: 0.5px;\n}\n\n.%prefix%-subtitle {\n    margin-top: 14px;\n    color: #5C5C5C;\n    text-align: center;\n    line-height: 1.4;\n    word-break: break-word;\n}\n\n.%prefix%-subtitle a {\n    color: #000000;\n    cursor: pointer;\n    text-decoration: underline;\n}\n\n.%prefix%-actions {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.%prefix%-uri {\n    width: 100%;\n}\n\n.%prefix%-button {\n    color: #007AFF;\n    background: #EFF1F7;\n    border: 1px solid #EFF1F7;\n    text-decoration: none;\n    font-size: 17px;\n    flex-grow: 1;\n    flex: 1;\n    width: 100%;\n    line-height: 1;\n    padding: 20px 18px;\n    border-radius: 12px;\n    font-weight: 400;\n    text-align: center;\n    display: block;\n    margin-top: 21px;\n    cursor: pointer;\n}\n\n.%prefix%-button:hover {\n    border: 1px solid #007AFF;\n}\n\n.%prefix%-qr {\n    margin-top: 21px;\n}\n\n.%prefix%-qr svg {\n    width: 100%;\n    display: block;\n    shape-rendering: crispEdges;\n}\n\n.%prefix%-qr svg rect {\n    fill: black;\n}\n\n.%prefix%-footnote {\n    text-align: center;\n    width: 100%;\n    position: absolute;\n    bottom: -26px;\n    left: 0;\n    color: white;\n}\n\n.%prefix%-footnote a {\n    color: white;\n    text-decoration: underline;\n}\n\n.%prefix%-wskeepalive {\n    display: none;\n}\n\n.%prefix%-choice {\n    text-align: center;\n    width: 100%;\n    color: #666;\n}\n\n.%prefix%-choice span {\n    display: block;\n    margin-top: 1em;\n}\n\n.%prefix%-choice a:not(.%prefix%-button) {\n    display: block;\n    cursor: pointer;\n    text-decoration: underline;\n    margin-top: 1em;\n}\n\n@media (prefers-color-scheme: dark) {\n    .%prefix%-inner {\n        background: #262D43;\n        color: white;\n    }\n    .%prefix%-request {\n        background: #131B33;\n    }\n    .%prefix%-title {\n        color: #FCFCFC;\n    }\n    .%prefix%-subtitle {\n        color: #B8C0DA;\n    }\n    .%prefix%-subtitle a {\n        color: #FCFCFC;\n    }\n    .%prefix%-qr svg rect {\n        fill: white;\n    }\n    .%prefix%-version {\n        color: #546AAF;\n    }\n    .%prefix%-choice {\n        color: #888ea1;\n    }\n    .%prefix%-button {\n        color: #FCFCFC;\n        background: #262D43;\n        border: 1px solid #262D43;\n    }\n    .%prefix%-button:hover {\n        color: #FCFCFC;\n        border: 1px solid #FCFCFC;\n        background: #333A50;\n    }\n    .%prefix%-close {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M.57 12.1a.96.96 0 000 1.34c.37.36 1 .36 1.34 0L7 8.37l5.09 5.09c.36.35.97.35 1.34-.01a.96.96 0 000-1.34L8.34 7.01l5.08-5.08a.95.95 0 000-1.33.97.97 0 00-1.34-.01L6.99 5.68 1.91.59a.96.96 0 00-1.33 0 .97.97 0 00-.01 1.34l5.09 5.08-5.1 5.1z' fill='%23FCFCFC'/%3E%3C/svg%3E\");\n    }\n    .%prefix%-close:hover {\n        background-color: black;\n    }\n}\n\n@media (max-height: 600px) { .%prefix%-inner { transform: scale(0.9); } }\n@media (max-height: 540px) { .%prefix%-inner { transform: scale(0.8); } }\n@media (max-height: 480px) { .%prefix%-inner { transform: scale(0.7); } }\n@media (max-height: 420px) { .%prefix%-inner { transform: scale(0.6); } }\n@media (max-height: 360px) { .%prefix%-inner { transform: scale(0.5); } }\n@media (max-height: 300px) { .%prefix%-inner { transform: scale(0.4); } }\n\n";var ErrorCorrectLevel={L:1,M:0,Q:3,H:2};var Mode={MODE_NUMBER:1<<0,MODE_ALPHA_NUM:1<<1,MODE_8BIT_BYTE:1<<2,MODE_KANJI:1<<3};var QR8bitByte=/** @class */function(){function QR8bitByte(data){this.mode=Mode.MODE_8BIT_BYTE;this.data=data;}QR8bitByte.prototype.getLength=function(){return this.data.length;};QR8bitByte.prototype.write=function(buffer){for(var i=0;i<this.data.length;i++){// not JIS ...
buffer.put(this.data.charCodeAt(i),8);}};return QR8bitByte;}();var QRBitBuffer=/** @class */function(){function QRBitBuffer(){this.buffer=[];this.length=0;}QRBitBuffer.prototype.get=function(index){var bufIndex=Math.floor(index/8);return(this.buffer[bufIndex]>>>7-index%8&1)==1;};QRBitBuffer.prototype.put=function(num,length){for(var i=0;i<length;i++){this.putBit((num>>>length-i-1&1)==1);}};QRBitBuffer.prototype.getLengthInBits=function(){return this.length;};QRBitBuffer.prototype.putBit=function(bit){var bufIndex=Math.floor(this.length/8);if(this.buffer.length<=bufIndex){this.buffer.push(0);}if(bit){this.buffer[bufIndex]|=0x80>>>this.length%8;}this.length++;};return QRBitBuffer;}();var QRMath={glog:function(n){if(n<1){throw new Error('glog('+n+')');}return QRMath.LOG_TABLE[n];},gexp:function(n){while(n<0){n+=255;}while(n>=256){n-=255;}return QRMath.EXP_TABLE[n];},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)};for(var i=0;i<8;i++){QRMath.EXP_TABLE[i]=1<<i;}for(var i=8;i<256;i++){QRMath.EXP_TABLE[i]=QRMath.EXP_TABLE[i-4]^QRMath.EXP_TABLE[i-5]^QRMath.EXP_TABLE[i-6]^QRMath.EXP_TABLE[i-8];}for(var i=0;i<255;i++){QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]]=i;}var QRPolynomial=/** @class */function(){function QRPolynomial(num,shift){if(num.length==undefined){throw new Error(num.length+'/'+shift);}var offset=0;while(offset<num.length&&num[offset]==0){offset++;}this.num=new Array(num.length-offset+shift);for(var i=0;i<num.length-offset;i++){this.num[i]=num[i+offset];}}QRPolynomial.prototype.get=function(index){return this.num[index];};QRPolynomial.prototype.getLength=function(){return this.num.length;};QRPolynomial.prototype.multiply=function(e){var num=new Array(this.getLength()+e.getLength()-1);for(var i=0;i<this.getLength();i++){for(var j=0;j<e.getLength();j++){num[i+j]^=QRMath.gexp(QRMath.glog(this.get(i))+QRMath.glog(e.get(j)));}}return new QRPolynomial(num,0);};QRPolynomial.prototype.mod=function(e){if(this.getLength()-e.getLength()<0){return this;}var ratio=QRMath.glog(this.get(0))-QRMath.glog(e.get(0));var num=new Array(this.getLength());for(var i=0;i<this.getLength();i++){num[i]=this.get(i);}for(var i=0;i<e.getLength();i++){num[i]^=QRMath.gexp(QRMath.glog(e.get(i))+ratio);}// recursive call
return new QRPolynomial(num,0).mod(e);};return QRPolynomial;}();// ErrorCorrectLevel
var QRRSBlock=/** @class */function(){function QRRSBlock(totalCount,dataCount){this.totalCount=totalCount;this.dataCount=dataCount;}QRRSBlock.getRSBlocks=function(typeNumber,errorCorrectLevel){var rsBlock=QRRSBlock.getRsBlockTable(typeNumber,errorCorrectLevel);if(rsBlock==undefined){throw new Error('bad rs block @ typeNumber:'+typeNumber+'/errorCorrectLevel:'+errorCorrectLevel);}var length=rsBlock.length/3;var list=[];for(var i=0;i<length;i++){var count=rsBlock[i*3+0];var totalCount=rsBlock[i*3+1];var dataCount=rsBlock[i*3+2];for(var j=0;j<count;j++){list.push(new QRRSBlock(totalCount,dataCount));}}return list;};QRRSBlock.getRsBlockTable=function(typeNumber,errorCorrectLevel){switch(errorCorrectLevel){case ErrorCorrectLevel.L:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+0];case ErrorCorrectLevel.M:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+1];case ErrorCorrectLevel.Q:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+2];case ErrorCorrectLevel.H:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+3];default:return undefined;}};QRRSBlock.RS_BLOCK_TABLE=[// L
// M
// Q
// H
// 1
[1,26,19],[1,26,16],[1,26,13],[1,26,9],// 2
[1,44,34],[1,44,28],[1,44,22],[1,44,16],// 3
[1,70,55],[1,70,44],[2,35,17],[2,35,13],// 4
[1,100,80],[2,50,32],[2,50,24],[4,25,9],// 5
[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],// 6
[2,86,68],[4,43,27],[4,43,19],[4,43,15],// 7
[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],// 8
[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],// 9
[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],// 10
[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],// 11
[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],// 12
[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],// 13
[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],// 14
[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],// 15
[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],// 16
[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],// 17
[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],// 18
[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],// 19
[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],// 20
[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],// 21
[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],// 22
[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],// 23
[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],// 24
[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],// 25
[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],// 26
[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],// 27
[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],// 28
[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],// 29
[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],// 30
[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],// 31
[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],// 32
[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],// 33
[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],// 34
[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],// 35
[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],// 36
[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],// 37
[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],// 38
[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],// 39
[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],// 40
[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];return QRRSBlock;}();var QRMaskPattern={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};var QRUtil={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1<<10|1<<8|1<<5|1<<4|1<<2|1<<1|1<<0,G18:1<<12|1<<11|1<<10|1<<9|1<<8|1<<5|1<<2|1<<0,G15_MASK:1<<14|1<<12|1<<10|1<<4|1<<1,getBCHTypeInfo:function(data){var d=data<<10;while(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G15)>=0){d^=QRUtil.G15<<QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G15);}return(data<<10|d)^QRUtil.G15_MASK;},getBCHTypeNumber:function(data){var d=data<<12;while(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G18)>=0){d^=QRUtil.G18<<QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G18);}return data<<12|d;},getBCHDigit:function(data){var digit=0;while(data!=0){digit++;data>>>=1;}return digit;},getPatternPosition:function(typeNumber){return QRUtil.PATTERN_POSITION_TABLE[typeNumber-1];},getMask:function(maskPattern,i,j){switch(maskPattern){case QRMaskPattern.PATTERN000:return(i+j)%2==0;case QRMaskPattern.PATTERN001:return i%2==0;case QRMaskPattern.PATTERN010:return j%3==0;case QRMaskPattern.PATTERN011:return(i+j)%3==0;case QRMaskPattern.PATTERN100:return(Math.floor(i/2)+Math.floor(j/3))%2==0;case QRMaskPattern.PATTERN101:return i*j%2+i*j%3==0;case QRMaskPattern.PATTERN110:return(i*j%2+i*j%3)%2==0;case QRMaskPattern.PATTERN111:return(i*j%3+(i+j)%2)%2==0;default:throw new Error('bad maskPattern:'+maskPattern);}},getErrorCorrectPolynomial:function(errorCorrectLength){var a=new QRPolynomial([1],0);for(var i=0;i<errorCorrectLength;i++){a=a.multiply(new QRPolynomial([1,QRMath.gexp(i)],0));}return a;},getLengthInBits:function(mode,type){if(1<=type&&type<10){// 1 - 9
switch(mode){case Mode.MODE_NUMBER:return 10;case Mode.MODE_ALPHA_NUM:return 9;case Mode.MODE_8BIT_BYTE:return 8;case Mode.MODE_KANJI:return 8;default:throw new Error('mode:'+mode);}}else if(type<27){// 10 - 26
switch(mode){case Mode.MODE_NUMBER:return 12;case Mode.MODE_ALPHA_NUM:return 11;case Mode.MODE_8BIT_BYTE:return 16;case Mode.MODE_KANJI:return 10;default:throw new Error('mode:'+mode);}}else if(type<41){// 27 - 40
switch(mode){case Mode.MODE_NUMBER:return 14;case Mode.MODE_ALPHA_NUM:return 13;case Mode.MODE_8BIT_BYTE:return 16;case Mode.MODE_KANJI:return 12;default:throw new Error('mode:'+mode);}}else{throw new Error('type:'+type);}},getLostPoint:function(qrCode){var moduleCount=qrCode.getModuleCount();var lostPoint=0;// LEVEL1
for(var row=0;row<moduleCount;row++){for(var col=0;col<moduleCount;col++){var sameCount=0;var dark=qrCode.isDark(row,col);for(var r=-1;r<=1;r++){if(row+r<0||moduleCount<=row+r){continue;}for(var c=-1;c<=1;c++){if(col+c<0||moduleCount<=col+c){continue;}if(r==0&&c==0){continue;}if(dark==qrCode.isDark(row+r,col+c)){sameCount++;}}}if(sameCount>5){lostPoint+=3+sameCount-5;}}}// LEVEL2
for(var row=0;row<moduleCount-1;row++){for(var col=0;col<moduleCount-1;col++){var count=0;if(qrCode.isDark(row,col))count++;if(qrCode.isDark(row+1,col))count++;if(qrCode.isDark(row,col+1))count++;if(qrCode.isDark(row+1,col+1))count++;if(count==0||count==4){lostPoint+=3;}}}// LEVEL3
for(var row=0;row<moduleCount;row++){for(var col=0;col<moduleCount-6;col++){if(qrCode.isDark(row,col)&&!qrCode.isDark(row,col+1)&&qrCode.isDark(row,col+2)&&qrCode.isDark(row,col+3)&&qrCode.isDark(row,col+4)&&!qrCode.isDark(row,col+5)&&qrCode.isDark(row,col+6)){lostPoint+=40;}}}for(var col=0;col<moduleCount;col++){for(var row=0;row<moduleCount-6;row++){if(qrCode.isDark(row,col)&&!qrCode.isDark(row+1,col)&&qrCode.isDark(row+2,col)&&qrCode.isDark(row+3,col)&&qrCode.isDark(row+4,col)&&!qrCode.isDark(row+5,col)&&qrCode.isDark(row+6,col)){lostPoint+=40;}}}// LEVEL4
var darkCount=0;for(var col=0;col<moduleCount;col++){for(var row=0;row<moduleCount;row++){if(qrCode.isDark(row,col)){darkCount++;}}}var ratio=Math.abs(100*darkCount/moduleCount/moduleCount-50)/5;lostPoint+=ratio*10;return lostPoint;}};var QRCode=/** @class */function(){function QRCode(typeNumber,errorCorrectLevel){this.typeNumber=typeNumber;this.errorCorrectLevel=errorCorrectLevel;this.modules=null;this.moduleCount=0;this.dataCache=null;this.dataList=[];}QRCode.prototype.addData=function(data){var newData=new QR8bitByte(data);this.dataList.push(newData);this.dataCache=null;};QRCode.prototype.isDark=function(row,col){if(row<0||this.moduleCount<=row||col<0||this.moduleCount<=col){throw new Error(row+','+col);}return this.modules[row][col];};QRCode.prototype.getModuleCount=function(){return this.moduleCount;};QRCode.prototype.make=function(){// Calculate automatically typeNumber if provided is < 1
if(this.typeNumber<1){var typeNumber=1;for(typeNumber=1;typeNumber<40;typeNumber++){var rsBlocks=QRRSBlock.getRSBlocks(typeNumber,this.errorCorrectLevel);var buffer=new QRBitBuffer();var totalDataCount=0;for(var i=0;i<rsBlocks.length;i++){totalDataCount+=rsBlocks[i].dataCount;}for(var i=0;i<this.dataList.length;i++){var data=this.dataList[i];buffer.put(data.mode,4);buffer.put(data.getLength(),QRUtil.getLengthInBits(data.mode,typeNumber));data.write(buffer);}if(buffer.getLengthInBits()<=totalDataCount*8)break;}this.typeNumber=typeNumber;}this.makeImpl(false,this.getBestMaskPattern());};QRCode.prototype.makeImpl=function(test,maskPattern){this.moduleCount=this.typeNumber*4+17;this.modules=new Array(this.moduleCount);for(var row=0;row<this.moduleCount;row++){this.modules[row]=new Array(this.moduleCount);for(var col=0;col<this.moduleCount;col++){this.modules[row][col]=null;//(col + row) % 3;
}}this.setupPositionProbePattern(0,0);this.setupPositionProbePattern(this.moduleCount-7,0);this.setupPositionProbePattern(0,this.moduleCount-7);this.setupPositionAdjustPattern();this.setupTimingPattern();this.setupTypeInfo(test,maskPattern);if(this.typeNumber>=7){this.setupTypeNumber(test);}if(this.dataCache==null){this.dataCache=QRCode.createData(this.typeNumber,this.errorCorrectLevel,this.dataList);}this.mapData(this.dataCache,maskPattern);};QRCode.prototype.setupPositionProbePattern=function(row,col){for(var r=-1;r<=7;r++){if(row+r<=-1||this.moduleCount<=row+r)continue;for(var c=-1;c<=7;c++){if(col+c<=-1||this.moduleCount<=col+c)continue;if(0<=r&&r<=6&&(c==0||c==6)||0<=c&&c<=6&&(r==0||r==6)||2<=r&&r<=4&&2<=c&&c<=4){this.modules[row+r][col+c]=true;}else{this.modules[row+r][col+c]=false;}}}};QRCode.prototype.getBestMaskPattern=function(){var minLostPoint=0;var pattern=0;for(var i=0;i<8;i++){this.makeImpl(true,i);var lostPoint=QRUtil.getLostPoint(this);if(i==0||minLostPoint>lostPoint){minLostPoint=lostPoint;pattern=i;}}return pattern;};QRCode.prototype.setupTimingPattern=function(){for(var r=8;r<this.moduleCount-8;r++){if(this.modules[r][6]!=null){continue;}this.modules[r][6]=r%2==0;}for(var c=8;c<this.moduleCount-8;c++){if(this.modules[6][c]!=null){continue;}this.modules[6][c]=c%2==0;}};QRCode.prototype.setupPositionAdjustPattern=function(){var pos=QRUtil.getPatternPosition(this.typeNumber);for(var i=0;i<pos.length;i++){for(var j=0;j<pos.length;j++){var row=pos[i];var col=pos[j];if(this.modules[row][col]!=null){continue;}for(var r=-2;r<=2;r++){for(var c=-2;c<=2;c++){if(r==-2||r==2||c==-2||c==2||r==0&&c==0){this.modules[row+r][col+c]=true;}else{this.modules[row+r][col+c]=false;}}}}}};QRCode.prototype.setupTypeNumber=function(test){var bits=QRUtil.getBCHTypeNumber(this.typeNumber);for(var i=0;i<18;i++){var mod=!test&&(bits>>i&1)==1;this.modules[Math.floor(i/3)][i%3+this.moduleCount-8-3]=mod;}for(var i=0;i<18;i++){var mod=!test&&(bits>>i&1)==1;this.modules[i%3+this.moduleCount-8-3][Math.floor(i/3)]=mod;}};QRCode.prototype.setupTypeInfo=function(test,maskPattern){var data=this.errorCorrectLevel<<3|maskPattern;var bits=QRUtil.getBCHTypeInfo(data);// vertical
for(var i=0;i<15;i++){var mod=!test&&(bits>>i&1)==1;if(i<6){this.modules[i][8]=mod;}else if(i<8){this.modules[i+1][8]=mod;}else{this.modules[this.moduleCount-15+i][8]=mod;}}// horizontal
for(var i=0;i<15;i++){var mod=!test&&(bits>>i&1)==1;if(i<8){this.modules[8][this.moduleCount-i-1]=mod;}else if(i<9){this.modules[8][15-i-1+1]=mod;}else{this.modules[8][15-i-1]=mod;}}// fixed module
this.modules[this.moduleCount-8][8]=!test;};QRCode.prototype.mapData=function(data,maskPattern){var inc=-1;var row=this.moduleCount-1;var bitIndex=7;var byteIndex=0;for(var col=this.moduleCount-1;col>0;col-=2){if(col==6)col--;for(;;){for(var c=0;c<2;c++){if(this.modules[row][col-c]==null){var dark=false;if(byteIndex<data.length){dark=(data[byteIndex]>>>bitIndex&1)==1;}var mask=QRUtil.getMask(maskPattern,row,col-c);if(mask){dark=!dark;}this.modules[row][col-c]=dark;bitIndex--;if(bitIndex==-1){byteIndex++;bitIndex=7;}}}row+=inc;if(row<0||this.moduleCount<=row){row-=inc;inc=-inc;break;}}}};QRCode.createData=function(typeNumber,errorCorrectLevel,dataList){var rsBlocks=QRRSBlock.getRSBlocks(typeNumber,errorCorrectLevel);var buffer=new QRBitBuffer();for(var i=0;i<dataList.length;i++){var data=dataList[i];buffer.put(data.mode,4);buffer.put(data.getLength(),QRUtil.getLengthInBits(data.mode,typeNumber));data.write(buffer);}// calc num max data.
var totalDataCount=0;for(var i=0;i<rsBlocks.length;i++){totalDataCount+=rsBlocks[i].dataCount;}if(buffer.getLengthInBits()>totalDataCount*8){throw new Error('code length overflow. ('+buffer.getLengthInBits()+'>'+totalDataCount*8+')');}// end code
if(buffer.getLengthInBits()+4<=totalDataCount*8){buffer.put(0,4);}// padding
while(buffer.getLengthInBits()%8!=0){buffer.putBit(false);}// padding
for(;;){if(buffer.getLengthInBits()>=totalDataCount*8){break;}buffer.put(QRCode.PAD0,8);if(buffer.getLengthInBits()>=totalDataCount*8){break;}buffer.put(QRCode.PAD1,8);}return QRCode.createBytes(buffer,rsBlocks);};QRCode.createBytes=function(buffer,rsBlocks){var offset=0;var maxDcCount=0;var maxEcCount=0;var dcdata=new Array(rsBlocks.length);var ecdata=new Array(rsBlocks.length);for(var r=0;r<rsBlocks.length;r++){var dcCount=rsBlocks[r].dataCount;var ecCount=rsBlocks[r].totalCount-dcCount;maxDcCount=Math.max(maxDcCount,dcCount);maxEcCount=Math.max(maxEcCount,ecCount);dcdata[r]=new Array(dcCount);for(var i=0;i<dcdata[r].length;i++){dcdata[r][i]=0xff&buffer.buffer[i+offset];}offset+=dcCount;var rsPoly=QRUtil.getErrorCorrectPolynomial(ecCount);var rawPoly=new QRPolynomial(dcdata[r],rsPoly.getLength()-1);var modPoly=rawPoly.mod(rsPoly);ecdata[r]=new Array(rsPoly.getLength()-1);for(var i=0;i<ecdata[r].length;i++){var modIndex=i+modPoly.getLength()-ecdata[r].length;ecdata[r][i]=modIndex>=0?modPoly.get(modIndex):0;}}var totalCodeCount=0;for(var i=0;i<rsBlocks.length;i++){totalCodeCount+=rsBlocks[i].totalCount;}var data=new Array(totalCodeCount);var index=0;for(var i=0;i<maxDcCount;i++){for(var r=0;r<rsBlocks.length;r++){if(i<dcdata[r].length){data[index++]=dcdata[r][i];}}}for(var i=0;i<maxEcCount;i++){for(var r=0;r<rsBlocks.length;r++){if(i<ecdata[r].length){data[index++]=ecdata[r][i];}}}return data;};QRCode.PAD0=0xec;QRCode.PAD1=0x11;return QRCode;}();/**
 * Generate QR SVG
 * @author Johan Nordberg <code@johan-nordberg.com>
 */function generate(text,level,version){var e_1,_a,e_2,_b,e_3,_c;if(level===void 0){level='L';}if(version===void 0){version=-1;}var qr=new QRCode(version,ErrorCorrectLevel[level]);var rects=[];qr.addData(text);qr.make();var rows=qr.modules;var size=rows.length;try{for(var _d=tslib.__values(rows.entries()),_e=_d.next();!_e.done;_e=_d.next()){var _f=tslib.__read(_e.value,2),y=_f[0],row=_f[1];var rect=void 0;try{for(var _g=(e_2=void 0,tslib.__values(row.entries())),_h=_g.next();!_h.done;_h=_g.next()){var _j=tslib.__read(_h.value,2),x=_j[0],on=_j[1];if(on){if(!rect)rect={x:x,y:y,width:0,height:1};rect.width++;}else{if(rect&&rect.width>0){rects.push(rect);}rect=undefined;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_h&&!_h.done&&(_b=_g.return))_b.call(_g);}finally{if(e_2)throw e_2.error;}}if(rect&&rect.width>0){rects.push(rect);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_e&&!_e.done&&(_a=_d.return))_a.call(_d);}finally{if(e_1)throw e_1.error;}}var svg=["<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 "+size+" "+size+"\">"];try{for(var rects_1=tslib.__values(rects),rects_1_1=rects_1.next();!rects_1_1.done;rects_1_1=rects_1.next()){var _k=rects_1_1.value,x=_k.x,y=_k.y,width=_k.width,height=_k.height;svg.push("<rect x=\""+x+"\" y=\""+y+"\" width=\""+width+"\" height=\""+height+"\" />");}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(rects_1_1&&!rects_1_1.done&&(_c=rects_1.return))_c.call(rects_1);}finally{if(e_3)throw e_3.error;}}svg.push('</svg>');return svg.join('');}function apiCall(url,body){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:body?JSON.stringify(body):undefined})];case 1:return[2/*return*/,_a.sent().json()];}});});}var version='fuel/2';/** Return true if otherVersion is same or greater than current fuel version. */function compareVersion(otherVersion){return parseVersion(otherVersion)>=parseVersion(version);}function parseVersion(string){var parts=string.trim().split('/');if(parts.length===2&&parts[0]==='fuel'){return parseInt(parts[1])||0;}return-1;}function fuel(request,session,updatePrepareStatus,supportedChains,referrer){return tslib.__awaiter(this,void 0,void 0,function(){var chainId,nodeUrl,result,cloned,signatures,_a;return tslib.__generator(this,function(_b){switch(_b.label){case 0:assertEligible(request,session);updatePrepareStatus('Detecting if network resources are required.');chainId=request.getChainId();nodeUrl=supportedChains[String(chainId)];if(!nodeUrl){throw new Error("Blockchain not supported by this resource provider.");}return[4/*yield*/,apiCall(nodeUrl+'/v1/resource_provider/request_transaction',{ref:referrer,request:request,signer:session.auth})];case 1:result=_b.sent();if(!result||!result.data){throw new Error('Invalid response from resource provider.');}if(!result.data.signatures||!result.data.signatures[0]){throw new Error('No signature returned from resource provider.');}if(result.code===402&&!result.data.fee){throw new Error('Resource provider returned a response indicating required payment, but provided no fee amount.');}cloned=request.clone();// Set the required fee onto the request for signature providers
if(result.code===402){if(request.getInfoKey('no_fee')){throw new Error('Fee required but sender opted out.');}cloned.setInfoKey('txfee',result.data.fee);}// If the fee costs exist, set them on the request for the signature provider to consume
if(result.data.costs){cloned.setInfoKey('txfeecpu',result.data.costs.cpu);cloned.setInfoKey('txfeenet',result.data.costs.net);cloned.setInfoKey('txfeeram',result.data.costs.ram);}signatures=result.data.signatures.map(function(s){return anchorLink.Signature.from(s);});cloned.setInfoKey('cosig',signatures,{type:anchorLink.Signature,array:true});// Modify the request based on the response from the API
_a=cloned.data;return[4/*yield*/,anchorLink.SigningRequest.create({transaction:tslib.__assign({},result.data.request[1])},{abiProvider:request.abiProvider})];case 2:// Modify the request based on the response from the API
_a.req=_b.sent().data.req;return[2/*return*/,cloned];}});});}function assertEligible(request,session){if(request.getRawInfoKey('no_modify')){throw new Error('Request cannot be modified.');}if(request.isIdentity()){throw new Error('Identity requests cannot be co-signed.');}var firstAction=request.getRawActions()[0];if(!firstAction){throw new Error('No actions in request.');}var firstAuthorizer=firstAction.authorization[0];if(!firstAction){throw new Error('First authorization missing.');}if(!firstAuthorizer.actor.equals(session.auth.actor)&&!firstAuthorizer.actor.equals(anchorLink.PlaceholderName)){throw new Error('Not first authorizer.');}}var AbortPrepare=Symbol();var SkipFee=Symbol();var defaultSupportedChains={aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906:'https://eos.greymass.com','2a02a0053e5a8cf73a56ba0fda11e4d92e0238a4a2aa74fccf46d5a910746840':'https://jungle3.greymass.com','4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11':'https://telos.greymass.com','1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4':'https://wax.greymass.com'};var Storage=/** @class */function(){function Storage(keyPrefix){this.keyPrefix=keyPrefix;}Storage.prototype.write=function(key,data){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){localStorage.setItem(this.storageKey(key),data);return[2/*return*/];});});};Storage.prototype.read=function(key){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){return[2/*return*/,localStorage.getItem(this.storageKey(key))];});});};Storage.prototype.remove=function(key){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){localStorage.removeItem(this.storageKey(key));return[2/*return*/];});});};Storage.prototype.storageKey=function(key){return this.keyPrefix+"-"+key;};return Storage;}();var BrowserTransport=/** @class */function(){function BrowserTransport(options){if(options===void 0){options={};}this.options=options;this.classPrefix=options.classPrefix||'anchor-link';this.injectStyles=!(options.injectStyles===false);this.importantStyles=!(options.importantStyles===false);this.requestStatus=!(options.requestStatus===false);this.fuelEnabled=options.disableGreymassFuel!==true;this.fuelReferrer=options.fuelReferrer||'teamgreymass';this.storage=new Storage(options.storagePrefix||'anchor-link');this.supportedChains=options.supportedChains||defaultSupportedChains;}BrowserTransport.prototype.closeModal=function(){this.hide();if(this.activeCancel){this.activeRequest=undefined;this.activeCancel('Modal closed');this.activeCancel=undefined;}};BrowserTransport.prototype.setupElements=function(){var _this=this;if(this.injectStyles&&!this.styleEl){this.styleEl=document.createElement('style');this.styleEl.type='text/css';var css=styleText.replace(/%prefix%/g,this.classPrefix);if(this.importantStyles){css=css.split('\n').map(function(line){return line.replace(/;$/i,' !important;');}).join('\n');}this.styleEl.appendChild(document.createTextNode(css));document.head.appendChild(this.styleEl);}if(!this.containerEl){this.containerEl=this.createEl();this.containerEl.className=this.classPrefix;this.containerEl.onclick=function(event){if(event.target===_this.containerEl){event.stopPropagation();_this.closeModal();}};document.body.appendChild(this.containerEl);}if(!this.requestEl){var wrapper=this.createEl({class:'inner'});var closeButton=this.createEl({class:'close'});closeButton.onclick=function(event){event.stopPropagation();_this.closeModal();};this.requestEl=this.createEl({class:'request'});wrapper.appendChild(this.requestEl);wrapper.appendChild(closeButton);var version=this.createEl({class:'version',text:BrowserTransport.version+" ("+anchorLink.Link.version+")"});version.onclick=function(event){event.stopPropagation();window.open('https://github.com/greymass/anchor-link','_blank');};wrapper.appendChild(version);this.containerEl.appendChild(wrapper);}};BrowserTransport.prototype.createEl=function(attrs){var e_1,_a;if(!attrs)attrs={};var el=document.createElement(attrs.tag||'div');if(attrs){try{for(var _b=tslib.__values(Object.keys(attrs)),_c=_b.next();!_c.done;_c=_b.next()){var attr=_c.value;var value=attrs[attr];switch(attr){case'src':el.setAttribute(attr,value);break;case'tag':break;case'text':el.appendChild(document.createTextNode(value));break;case'class':el.className=this.classPrefix+"-"+value;break;default:el.setAttribute(attr,value);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}return el;};BrowserTransport.prototype.hide=function(){if(this.containerEl){this.containerEl.classList.remove(this.classPrefix+"-active");}this.clearTimers();};BrowserTransport.prototype.show=function(){if(this.containerEl){this.containerEl.classList.add(this.classPrefix+"-active");}};BrowserTransport.prototype.displayRequest=function(request){return tslib.__awaiter(this,void 0,void 0,function(){var sameDeviceRequest,returnUrl,sameDeviceUri,crossDeviceUri,isIdentity,title,subtitle,qrEl,linkEl,linkA,iframe_1,infoEl,infoTitle,infoSubtitle,actionEl,footnoteEl,footnoteLink,footnoteLink,logoEl;return tslib.__generator(this,function(_a){this.setupElements();sameDeviceRequest=request.clone();returnUrl=generateReturnUrl();sameDeviceRequest.setInfoKey('same_device',true);sameDeviceRequest.setInfoKey('return_path',returnUrl);sameDeviceUri=sameDeviceRequest.encode(true,false);crossDeviceUri=request.encode(true,false);isIdentity=request.isIdentity();title=isIdentity?'Login':'Sign';subtitle='Scan the QR-code with Anchor on another device or use the button to open Anchor on this device.';qrEl=this.createEl({class:'qr'});try{qrEl.innerHTML=generate(crossDeviceUri);}catch(error){// eslint-disable-next-line no-console
console.warn('Unable to generate QR code',error);}linkEl=this.createEl({class:'uri'});linkA=this.createEl({tag:'a',class:'button',href:crossDeviceUri,text:'Launch Anchor'});linkEl.appendChild(linkA);if(isFirefox()||isBrave()){iframe_1=this.createEl({class:'wskeepalive',src:'about:blank',tag:'iframe'});linkEl.appendChild(iframe_1);linkA.addEventListener('click',function(event){event.preventDefault();iframe_1.setAttribute('src',sameDeviceUri);});}else{linkA.addEventListener('click',function(event){event.preventDefault();window.location.href=sameDeviceUri;});}infoEl=this.createEl({class:'info'});infoTitle=this.createEl({class:'title',tag:'span',text:title});infoSubtitle=this.createEl({class:'subtitle',tag:'span',text:subtitle});infoEl.appendChild(infoTitle);infoEl.appendChild(infoSubtitle);actionEl=this.createEl({class:'actions'});actionEl.appendChild(qrEl);actionEl.appendChild(linkEl);if(isIdentity){footnoteEl=this.createEl({class:'footnote',text:"Don't have Anchor yet? "});footnoteLink=this.createEl({tag:'a',target:'_blank',href:'https://greymass.com/anchor',text:'Download now'});footnoteEl.appendChild(footnoteLink);}else{footnoteEl=this.createEl({class:'footnote',text:'Anchor signing is brought to you by '});footnoteLink=this.createEl({tag:'a',target:'_blank',href:'https://greymass.com',text:'Greymass'});footnoteEl.appendChild(footnoteLink);}emptyElement(this.requestEl);logoEl=this.createEl({class:'logo'});this.requestEl.appendChild(logoEl);this.requestEl.appendChild(infoEl);this.requestEl.appendChild(actionEl);this.requestEl.appendChild(footnoteEl);this.show();return[2/*return*/];});});};BrowserTransport.prototype.showLoading=function(){return tslib.__awaiter(this,void 0,void 0,function(){var infoEl,infoTitle,infoSubtitle,logoEl;return tslib.__generator(this,function(_a){this.setupElements();emptyElement(this.requestEl);infoEl=this.createEl({class:'info'});infoTitle=this.createEl({class:'title',tag:'span',text:'Loading'});infoSubtitle=this.createEl({class:'subtitle',tag:'span',text:'Preparing request...'});this.prepareStatusEl=infoSubtitle;infoEl.appendChild(infoTitle);infoEl.appendChild(infoSubtitle);logoEl=this.createEl({class:'logo loading'});this.requestEl.appendChild(logoEl);this.requestEl.appendChild(infoEl);this.show();return[2/*return*/];});});};BrowserTransport.prototype.onRequest=function(request,cancel){this.activeRequest=request;this.activeCancel=cancel;this.displayRequest(request).catch(cancel);};BrowserTransport.prototype.onSessionRequest=function(session,request,cancel){if(session.metadata.sameDevice){request.setInfoKey('return_path',generateReturnUrl());}if(session.type==='fallback'){this.onRequest(request,cancel);if(session.metadata.sameDevice){// trigger directly on a fallback same-device session
window.location.href=request.encode();}return;}this.activeRequest=request;this.activeCancel=cancel;this.setupElements();var timeout=session.metadata.timeout||60*1000*5;var deviceName=session.metadata.name;var infoTitle=this.createEl({class:'title',tag:'span',text:'Sign'});var expires=this.getExpiration(request,timeout);var updateCountdown=function(){infoTitle.textContent="Sign - "+countdownFormat(expires);};this.countdownTimer=setInterval(updateCountdown,200);updateCountdown();var infoEl=this.createEl({class:'info'});infoEl.appendChild(infoTitle);var subtitle;if(deviceName&&deviceName.length>0){subtitle="Please open your Anchor Wallet on your device \u201C"+deviceName+"\u201D to review and sign the transaction.";}else{subtitle='Please review and sign the transaction in the linked wallet.';}var infoSubtitle=this.createEl({class:'subtitle',tag:'span',text:subtitle});infoEl.appendChild(infoSubtitle);emptyElement(this.requestEl);var logoEl=this.createEl({class:'logo'});this.requestEl.appendChild(logoEl);this.requestEl.appendChild(infoEl);this.show();if(session.metadata.sameDevice){if(session.metadata.launchUrl){window.location.href=session.metadata.launchUrl;}else if(isAppleHandheld()){window.location.href='anchor://link';}}};BrowserTransport.prototype.sendSessionPayload=function(payload,session){if(!session.metadata.triggerUrl||!session.metadata.sameDevice){// not same device or no trigger url supported
return false;}if(payload.array.length>700){// url could be clipped by iOS
return false;}window.location.href=session.metadata.triggerUrl.replace('%s',anchorLink.Base64u.encode(payload.array));return true;};BrowserTransport.prototype.clearTimers=function(){if(this.closeTimer){clearTimeout(this.closeTimer);this.closeTimer=undefined;}if(this.countdownTimer){clearTimeout(this.countdownTimer);this.countdownTimer=undefined;}};BrowserTransport.prototype.getExpiration=function(request,timeout){if(timeout===void 0){timeout=0;}// Get expiration of the transaction
var expiration=request.getRawTransaction().expiration;if(expiration.equals(0)){// If no expiration is present, use the timeout on the session
return new Date(Date.now()+timeout);}else{return expiration.toDate();}};BrowserTransport.prototype.showFee=function(request,fee){return tslib.__awaiter(this,void 0,void 0,function(){var cancelPromise,feeEl,feeTitle,feeSubtitle,feePart1,feeBypass,feePart2,feeDescription,logoEl,choiceEl,confirmEl,expireEl,expires,expireTimer,footnoteEl,footnoteLink,skipPromise,confirmPromise;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.activeRequest=request;cancelPromise=new Promise(function(resolve,reject){_this.activeCancel=function(reason){var error;if(typeof reason==='string'){error=new Error(reason);}else{error=reason;}error[AbortPrepare]=true;reject(error);};});this.setupElements();emptyElement(this.requestEl);feeEl=this.createEl({class:'fee'});feeTitle=this.createEl({class:'title',tag:'div',text:'Transaction Fee'});feeSubtitle=this.createEl({class:'subtitle',tag:'span',text:"Your account lacks the network resources for this transaction and it cannot be covered for free."});feePart1=this.createEl({tag:'span',text:'You can try to '});feeBypass=this.createEl({tag:'a',text:'proceed without the fee'});feePart2=this.createEl({tag:'span',text:' or accept the fee shown below to pay for these costs.'});feeDescription=this.createEl({class:'subtitle',tag:'span'});feeDescription.appendChild(feePart1);feeDescription.appendChild(feeBypass);feeDescription.appendChild(feePart2);feeEl.appendChild(feeTitle);feeEl.appendChild(feeSubtitle);feeEl.appendChild(feeDescription);logoEl=this.createEl({class:'fuel'});this.requestEl.appendChild(logoEl);this.requestEl.appendChild(feeEl);choiceEl=this.createEl({class:'choice'});confirmEl=this.createEl({tag:'a',class:'button',text:"Accept Fee of "+fee});expireEl=this.createEl({tag:'span',text:'Offer expires in --:--'});choiceEl.appendChild(expireEl);choiceEl.appendChild(confirmEl);feeEl.appendChild(choiceEl);expires=this.getExpiration(request);expireTimer=setInterval(function(){expireEl.textContent="Offer expires in "+countdownFormat(expires);if(expires.getTime()<Date.now()){_this.activeCancel('Offer expired');}},200);footnoteEl=this.createEl({class:'footnote',text:'Resources offered by '});footnoteLink=this.createEl({tag:'a',target:'_blank',href:'https://greymass.com/en/fuel',text:'Greymass Fuel'});footnoteEl.appendChild(footnoteLink);this.requestEl.appendChild(footnoteEl);skipPromise=waitForEvent(feeBypass,'click').then(function(){var error=new Error('Skipped fee');error[SkipFee]=true;throw error;});confirmPromise=waitForEvent(confirmEl,'click');this.show();return[4/*yield*/,Promise.race([confirmPromise,skipPromise,cancelPromise]).finally(function(){clearInterval(expireTimer);})];case 1:_a.sent();return[2/*return*/];}});});};BrowserTransport.prototype.prepare=function(request,session){return tslib.__awaiter(this,void 0,void 0,function(){var result,timeout,modified,fee,error_1,modified;var _this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:this.showLoading();if(!this.fuelEnabled||!session||request.isIdentity()){// don't attempt to cosign id request or if we don't have a session attached
return[2/*return*/,request];}if(typeof session.metadata.cosignerVersion==='string'&&compareVersion(session.metadata.cosignerVersion)){// if signer has cosigner, only attempt to cosign here if we have a newer version
return[2/*return*/,request];}_a.label=1;case 1:_a.trys.push([1,5,,6]);result=fuel(request,session,function(message){if(_this.prepareStatusEl){_this.prepareStatusEl.textContent=message;}},this.supportedChains,this.fuelReferrer);timeout=new Promise(function(r){return setTimeout(r,5000);}).then(function(){throw new Error('API timeout after 5000ms');});return[4/*yield*/,Promise.race([result,timeout])];case 2:modified=_a.sent();fee=modified.getInfoKey('txfee');if(!fee)return[3/*break*/,4];return[4/*yield*/,this.showFee(modified,String(fee))];case 3:_a.sent();_a.label=4;case 4:return[2/*return*/,modified];case 5:error_1=_a.sent();if(error_1[AbortPrepare]){this.hide();throw error_1;}else{// eslint-disable-next-line no-console
console.info("Skipping resource provider: "+(error_1.message||error_1));if(error_1[SkipFee]){modified=request.clone();modified.setInfoKey('no_fee',true,'bool');return[2/*return*/,modified];}}return[3/*break*/,6];case 6:return[2/*return*/,request];}});});};BrowserTransport.prototype.onSuccess=function(request){var _this=this;if(request===this.activeRequest){this.clearTimers();if(this.requestStatus){this.setupElements();var infoEl=this.createEl({class:'info'});var logoEl=this.createEl({class:'logo'});logoEl.classList.add('success');var infoTitle=this.createEl({class:'title',tag:'span',text:'Success!'});var subtitle=request.isIdentity()?'Login completed.':'Transaction signed.';var infoSubtitle=this.createEl({class:'subtitle',tag:'span',text:subtitle});infoEl.appendChild(infoTitle);infoEl.appendChild(infoSubtitle);emptyElement(this.requestEl);this.requestEl.appendChild(logoEl);this.requestEl.appendChild(infoEl);this.show();this.closeTimer=setTimeout(function(){_this.hide();},1.5*1000);}else{this.hide();}}};BrowserTransport.prototype.onFailure=function(request,error){if(request===this.activeRequest&&error['code']!=='E_CANCEL'){this.clearTimers();if(this.requestStatus){this.setupElements();var infoEl=this.createEl({class:'info'});var logoEl=this.createEl({class:'logo'});logoEl.classList.add('error');var infoTitle=this.createEl({class:'title',tag:'span',text:'Transaction Error'});var errorMessage=void 0;if(anchorLink.isInstanceOf(error,anchorLink.APIError)){if(error.name==='eosio_assert_message_exception'){errorMessage=error.details[0].message;}else if(error.details.length>0){errorMessage=error.details.map(function(d){return d.message;}).join('\n');}else{errorMessage=error.message;}}else{errorMessage=error.message||String(error);}var infoSubtitle=this.createEl({class:'subtitle',tag:'span',text:errorMessage});infoEl.appendChild(infoTitle);infoEl.appendChild(infoSubtitle);emptyElement(this.requestEl);this.requestEl.appendChild(logoEl);this.requestEl.appendChild(infoEl);this.show();}else{this.hide();}}else{this.hide();}};BrowserTransport.prototype.userAgent=function(){return"BrowserTransport/"+BrowserTransport.version+" "+navigator.userAgent;};/** Package version. */BrowserTransport.version='3.1.3';// replaced by build script
return BrowserTransport;}();function waitForEvent(element,eventName,timeout){return new Promise(function(resolve,reject){var listener=function(event){element.removeEventListener(eventName,listener);resolve(event);};element.addEventListener(eventName,listener);if(timeout){setTimeout(function(){element.removeEventListener(eventName,listener);reject(new Error("Timed out waiting for "+eventName));},timeout);}});}function countdownFormat(date){var timeLeft=date.getTime()-Date.now();if(timeLeft>0){return new Date(timeLeft).toISOString().substr(14,5);}return'00:00';}function emptyElement(el){while(el.firstChild){el.removeChild(el.firstChild);}}/** Generate a return url that Anchor will redirect back to w/o reload. */function generateReturnUrl(){if(isChromeiOS()){// google chrome on iOS will always open new tab so we just ask it to open again as a workaround
return'googlechrome://';}if(isFirefoxiOS()){// same for firefox
return'firefox:://';}if(isAppleHandheld()&&isBrave()){// and brave ios
return'brave://';}if(isAppleHandheld()){// return url with unique fragment required for iOS safari to trigger the return url
var alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var rv=window.location.href.split('#')[0]+'#';for(var i=0;i<8;i++){rv+=alphabet.charAt(Math.floor(Math.random()*alphabet.length));}return rv;}if(isAndroid()&&isFirefox()){return'android-intent://org.mozilla.firefox';}if(isAndroid()&&isEdge()){return'android-intent://com.microsoft.emmx';}if(isAndroid()&&isOpera()){return'android-intent://com.opera.browser';}if(isAndroid()&&isBrave()){return'android-intent://com.brave.browser';}if(isAndroid()&&isAndroidWebView()){return'android-intent://webview';}if(isAndroid()&&isChromeMobile()){return'android-intent://com.android.chrome';}return window.location.href;}function isAppleHandheld(){return /iP(ad|od|hone)/i.test(navigator.userAgent);}function isChromeiOS(){return /CriOS/.test(navigator.userAgent);}function isChromeMobile(){return /Chrome\/[.0-9]* Mobile/i.test(navigator.userAgent);}function isFirefox(){return /Firefox/i.test(navigator.userAgent);}function isFirefoxiOS(){return /FxiOS/.test(navigator.userAgent);}function isOpera(){return /OPR/.test(navigator.userAgent)||/Opera/.test(navigator.userAgent);}function isEdge(){return /Edg/.test(navigator.userAgent);}function isBrave(){return navigator['brave']&&typeof navigator['brave'].isBrave==='function';}function isAndroid(){return /Android/.test(navigator.userAgent);}function isAndroidWebView(){return /wv/.test(navigator.userAgent);}module.exports=BrowserTransport;},{"anchor-link":7,"tslib":281}],7:[function(require,module,exports){/**
 * Anchor Link v3.2.3
 * https://github.com/greymass/anchor-link
 *
 * @license
 * Copyright (c) 2020 Greymass Inc. All Rights Reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 
 *  1. Redistribution of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 * 
 *  2. Redistribution in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 * 
 *  3. Neither the name of the copyright holder nor the names of its contributors
 *     may be used to endorse or promote products derived from this software without
 *     specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR INTENDED FOR USE
 * IN THE DESIGN, CONSTRUCTION, OPERATION OR MAINTENANCE OF ANY MILITARY FACILITY.
 */'use strict';var tslib=require('tslib');var zlib=require('pako');var eosio=require('@greymass/eosio');var eosioSigningRequest=require('eosio-signing-request');var makeFetch=require('fetch-ponyfill');var asmcrypto_js=require('asmcrypto.js');var uuid=require('uuid');var WebSocket=require('isomorphic-ws');function _interopDefaultLegacy(e){return e&&typeof e==='object'&&'default'in e?e:{'default':e};}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=='default'){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k];}});}});}n['default']=e;return Object.freeze(n);}var zlib__default=/*#__PURE__*/_interopDefaultLegacy(zlib);var eosio__namespace=/*#__PURE__*/_interopNamespace(eosio);var eosioSigningRequest__namespace=/*#__PURE__*/_interopNamespace(eosioSigningRequest);var makeFetch__default=/*#__PURE__*/_interopDefaultLegacy(makeFetch);var WebSocket__default=/*#__PURE__*/_interopDefaultLegacy(WebSocket);/**
 * Error that is thrown if a [[LinkTransport]] cancels a request.
 * @internal
 */var CancelError=/** @class */function(_super){tslib.__extends(CancelError,_super);function CancelError(reason){var _this=_super.call(this,"User canceled request "+(reason?'('+reason+')':''))||this;_this.code='E_CANCEL';return _this;}return CancelError;}(Error);/**
 * Error that is thrown if an identity request fails to verify.
 * @internal
 */var IdentityError=/** @class */function(_super){tslib.__extends(IdentityError,_super);function IdentityError(reason){var _this=_super.call(this,"Unable to verify identity "+(reason?'('+reason+')':''))||this;_this.code='E_IDENTITY';return _this;}return IdentityError;}(Error);/**
 * Error originating from a [[LinkSession]].
 * @internal
 */var SessionError=/** @class */function(_super){tslib.__extends(SessionError,_super);function SessionError(reason,code){var _this=_super.call(this,reason)||this;_this.code=code;return _this;}return SessionError;}(Error);/** @internal */var LinkOptions;(function(LinkOptions){/** @internal */LinkOptions.defaults={service:'https://cb.anchor.link',verifyProofs:false,encodeChainIds:true};})(LinkOptions||(LinkOptions={}));var SealedMessage=/** @class */function(_super){tslib.__extends(SealedMessage,_super);function SealedMessage(){return _super!==null&&_super.apply(this,arguments)||this;}tslib.__decorate([eosio.Struct.field('public_key')],SealedMessage.prototype,"from",void 0);tslib.__decorate([eosio.Struct.field('uint64')],SealedMessage.prototype,"nonce",void 0);tslib.__decorate([eosio.Struct.field('bytes')],SealedMessage.prototype,"ciphertext",void 0);tslib.__decorate([eosio.Struct.field('uint32')],SealedMessage.prototype,"checksum",void 0);SealedMessage=tslib.__decorate([eosio.Struct.type('sealed_message')],SealedMessage);return SealedMessage;}(eosio.Struct);var LinkCreate=/** @class */function(_super){tslib.__extends(LinkCreate,_super);function LinkCreate(){return _super!==null&&_super.apply(this,arguments)||this;}tslib.__decorate([eosio.Struct.field('name')],LinkCreate.prototype,"session_name",void 0);tslib.__decorate([eosio.Struct.field('public_key')],LinkCreate.prototype,"request_key",void 0);tslib.__decorate([eosio.Struct.field('string',{extension:true})],LinkCreate.prototype,"user_agent",void 0);LinkCreate=tslib.__decorate([eosio.Struct.type('link_create')],LinkCreate);return LinkCreate;}(eosio.Struct);var LinkInfo=/** @class */function(_super){tslib.__extends(LinkInfo,_super);function LinkInfo(){return _super!==null&&_super.apply(this,arguments)||this;}tslib.__decorate([eosio.Struct.field('time_point_sec')],LinkInfo.prototype,"expiration",void 0);LinkInfo=tslib.__decorate([eosio.Struct.type('link_info')],LinkInfo);return LinkInfo;}(eosio.Struct);/** @internal */var fetch=makeFetch__default['default']().fetch;/**
 * Encrypt a message using AES and shared secret derived from given keys.
 * @internal
 */function sealMessage(message,privateKey,publicKey,nonce){var secret=privateKey.sharedSecret(publicKey);if(!nonce){nonce=eosio.UInt64.random();}var key=eosio.Checksum512.hash(eosio.Serializer.encode({object:nonce}).appending(secret.array));var cbc=new asmcrypto_js.AES_CBC(key.array.slice(0,32),key.array.slice(32,48));var ciphertext=eosio.Bytes.from(cbc.encrypt(eosio.Bytes.from(message,'utf8').array));var checksumView=new DataView(eosio.Checksum256.hash(key.array).array.buffer);var checksum=checksumView.getUint32(0,true);return SealedMessage.from({from:privateKey.toPublic(),nonce:nonce,ciphertext:ciphertext,checksum:checksum});}/**
 * Type describing a link session that can create a eosjs compatible
 * signature provider and transact for a specific auth.
 */var LinkSession=/** @class */function(){/** @internal */function LinkSession(){}// eslint-disable-line @typescript-eslint/no-empty-function
/**
     * Convenience, remove this session from associated [[Link]] storage if set.
     * Equivalent to:
     * ```ts
     * session.link.removeSession(session.identifier, session.auth, session.chainId)
     * ```
     */LinkSession.prototype.remove=function(){return tslib.__awaiter(this,void 0,void 0,function(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.link.storage)return[3/*break*/,2];return[4/*yield*/,this.link.removeSession(this.identifier,this.auth,this.chainId)];case 1:_a.sent();_a.label=2;case 2:return[2/*return*/];}});});};Object.defineProperty(LinkSession.prototype,"client",{/** API client for the chain this session is valid on. */get:function(){return this.link.getChain(this.chainId).client;},enumerable:false,configurable:true});/** Restore a previously serialized session. */LinkSession.restore=function(link,data){switch(data.type){case'channel':return new LinkChannelSession(link,data.data,data.metadata);case'fallback':return new LinkFallbackSession(link,data.data,data.metadata);default:throw new Error('Unable to restore, session data invalid');}};return LinkSession;}();/**
 * Link session that pushes requests over a channel.
 * @internal
 */var LinkChannelSession=/** @class */function(_super){tslib.__extends(LinkChannelSession,_super);function LinkChannelSession(link,data,metadata){var _this=_super.call(this)||this;_this.type='channel';_this.timeout=2*60*1000;// ms
_this.link=link;_this.chainId=eosioSigningRequest.ChainId.from(data.chainId);_this.auth=eosio.PermissionLevel.from(data.auth);_this.publicKey=eosio.PublicKey.from(data.publicKey);_this.channel=data.channel;_this.identifier=eosio.Name.from(data.identifier);var privateKey=eosio.PrivateKey.from(data.requestKey);var publicKey=eosio.PublicKey.from(data.channel.key);_this.encrypt=function(request){return sealMessage(request.encode(true,false),privateKey,publicKey);};_this.metadata=tslib.__assign(tslib.__assign({},metadata||{}),{timeout:_this.timeout,name:_this.channel.name});_this.serialize=function(){return{type:'channel',data:data,metadata:_this.metadata};};return _this;}LinkChannelSession.prototype.onSuccess=function(request,result){if(this.link.transport.onSuccess){this.link.transport.onSuccess(request,result);}};LinkChannelSession.prototype.onFailure=function(request,error){if(this.link.transport.onFailure){this.link.transport.onFailure(request,error);}};LinkChannelSession.prototype.onRequest=function(request,cancel){var info=LinkInfo.from({expiration:new Date(Date.now()+this.timeout).toISOString().slice(0,-1)});if(this.link.transport.onSessionRequest){this.link.transport.onSessionRequest(this,request,cancel);}setTimeout(function(){cancel(new SessionError('Wallet did not respond in time','E_TIMEOUT'));},this.timeout+500);request.setInfoKey('link',info);var payloadSent=false;var payload=eosio.Serializer.encode({object:this.encrypt(request)});if(this.link.transport.sendSessionPayload){try{payloadSent=this.link.transport.sendSessionPayload(payload,this);}catch(error){// eslint-disable-next-line no-console
console.warn('Unexpected error when transport tried to send session payload',error);}}if(payloadSent){return;}fetch(this.channel.url,{method:'POST',headers:{'X-Buoy-Wait':(this.timeout/1000).toFixed(0)},body:payload.array}).then(function(response){if(response.status!==200){cancel(new SessionError('Unable to push message','E_DELIVERY'));}}).catch(function(error){cancel(new SessionError("Unable to reach link service ("+(error.message||String(error))+")",'E_DELIVERY'));});};LinkChannelSession.prototype.prepare=function(request){if(this.link.transport.prepare){return this.link.transport.prepare(request,this);}return Promise.resolve(request);};LinkChannelSession.prototype.showLoading=function(){if(this.link.transport.showLoading){return this.link.transport.showLoading();}};LinkChannelSession.prototype.makeSignatureProvider=function(){return this.link.makeSignatureProvider([this.publicKey.toString()],this.chainId,this);};LinkChannelSession.prototype.transact=function(args,options){return this.link.transact(args,tslib.__assign(tslib.__assign({},options),{chain:this.chainId}),this);};return LinkChannelSession;}(LinkSession);/**
 * Link session that sends every request over the transport.
 * @internal
 */var LinkFallbackSession=/** @class */function(_super){tslib.__extends(LinkFallbackSession,_super);function LinkFallbackSession(link,data,metadata){var _this=_super.call(this)||this;_this.type='fallback';_this.link=link;_this.auth=eosio.PermissionLevel.from(data.auth);_this.publicKey=eosio.PublicKey.from(data.publicKey);_this.chainId=eosioSigningRequest.ChainId.from(data.chainId);_this.metadata=metadata||{};_this.identifier=eosio.Name.from(data.identifier);_this.serialize=function(){return{type:_this.type,data:data,metadata:_this.metadata};};return _this;}LinkFallbackSession.prototype.onSuccess=function(request,result){if(this.link.transport.onSuccess){this.link.transport.onSuccess(request,result);}};LinkFallbackSession.prototype.onFailure=function(request,error){if(this.link.transport.onFailure){this.link.transport.onFailure(request,error);}};LinkFallbackSession.prototype.onRequest=function(request,cancel){if(this.link.transport.onSessionRequest){this.link.transport.onSessionRequest(this,request,cancel);}else{this.link.transport.onRequest(request,cancel);}};LinkFallbackSession.prototype.prepare=function(request){if(this.link.transport.prepare){return this.link.transport.prepare(request,this);}return Promise.resolve(request);};LinkFallbackSession.prototype.showLoading=function(){if(this.link.transport.showLoading){return this.link.transport.showLoading();}};LinkFallbackSession.prototype.makeSignatureProvider=function(){return this.link.makeSignatureProvider([this.publicKey.toString()],this.chainId,this);};LinkFallbackSession.prototype.transact=function(args,options){return this.link.transact(args,tslib.__assign(tslib.__assign({},options),{chain:this.chainId}),this);};return LinkFallbackSession;}(LinkSession);/** @internal */var BuoyCallbackService=/** @class */function(){function BuoyCallbackService(address){this.address=address.trim().replace(/\/$/,'');}BuoyCallbackService.prototype.create=function(){var url=this.address+"/"+uuid.v4();return new BuoyCallback(url);};return BuoyCallbackService;}();/** @internal */var BuoyCallback=/** @class */function(){function BuoyCallback(url){this.url=url;this.ctx={};}BuoyCallback.prototype.wait=function(){if(this.url.includes('hyperbuoy')){return pollForCallback(this.url,this.ctx);}else{return waitForCallback(this.url,this.ctx);}};BuoyCallback.prototype.cancel=function(){if(this.ctx.cancel){this.ctx.cancel();}};return BuoyCallback;}();/**
 * Connect to a WebSocket channel and wait for a message.
 * @internal
 */function waitForCallback(url,ctx){return new Promise(function(resolve,reject){var active=true;var retries=0;var socketUrl=url.replace(/^http/,'ws');var handleResponse=function(response){try{resolve(JSON.parse(response));}catch(error){error.message='Unable to parse callback JSON: '+error.message;reject(error);}};var connect=function(){var socket=new WebSocket__default['default'](socketUrl);ctx.cancel=function(){active=false;if(socket.readyState===WebSocket__default['default'].OPEN||socket.readyState===WebSocket__default['default'].CONNECTING){socket.close();}};socket.onmessage=function(event){active=false;if(socket.readyState===WebSocket__default['default'].OPEN){socket.close();}if(typeof Blob!=='undefined'&&event.data instanceof Blob){var reader_1=new FileReader();reader_1.onload=function(){handleResponse(reader_1.result);};reader_1.onerror=function(error){reject(error);};reader_1.readAsText(event.data);}else{if(typeof event.data==='string'){handleResponse(event.data);}else{handleResponse(event.data.toString());}}};socket.onopen=function(){retries=0;};socket.onclose=function(){if(active){setTimeout(connect,backoff(retries++));}};};connect();});}/**
 * Long-poll for message.
 * @internal
 */function pollForCallback(url,ctx){return tslib.__awaiter(this,void 0,void 0,function(){var active,res,error_1;return tslib.__generator(this,function(_a){switch(_a.label){case 0:active=true;ctx.cancel=function(){active=false;};_a.label=1;case 1:if(!active)return[3/*break*/,11];_a.label=2;case 2:_a.trys.push([2,8,,9]);return[4/*yield*/,fetch(url)];case 3:res=_a.sent();if(!(res.status===408))return[3/*break*/,4];return[3/*break*/,1];case 4:if(!(res.status===200))return[3/*break*/,6];return[4/*yield*/,res.json()];case 5:return[2/*return*/,_a.sent()];case 6:throw new Error("HTTP "+res.status+": "+res.statusText);case 7:return[3/*break*/,9];case 8:error_1=_a.sent();// eslint-disable-next-line no-console
console.warn('Unexpected hyperbuoy error',error_1);return[3/*break*/,9];case 9:return[4/*yield*/,sleep(1000)];case 10:_a.sent();return[3/*break*/,1];case 11:return[2/*return*/,null];}});});}/**
 * Exponential backoff function that caps off at 10s after 10 tries.
 * https://i.imgur.com/IrUDcJp.png
 * @internal
 */function backoff(tries){return Math.min(Math.pow(tries*10,2),10*1000);}/**
 * Return promise that resolves after given milliseconds.
 * @internal
 */function sleep(ms){return new Promise(function(resolve){setTimeout(resolve,ms);});}/**
 * Class representing a EOSIO chain.
 */var LinkChain=/** @class */function(){/** @internal */function LinkChain(chainId,clientOrUrl){this.abiCache=new Map();this.pendingAbis=new Map();this.chainId=eosioSigningRequest.ChainId.from(chainId);this.client=typeof clientOrUrl==='string'?new eosio.APIClient({url:clientOrUrl}):clientOrUrl;}/**
     * Fetch the ABI for given account, cached.
     * @internal
     */LinkChain.prototype.getAbi=function(account){return tslib.__awaiter(this,void 0,void 0,function(){var key,rv,getAbi;return tslib.__generator(this,function(_a){switch(_a.label){case 0:key=String(account);rv=this.abiCache.get(key);if(!!rv)return[3/*break*/,2];getAbi=this.pendingAbis.get(key);if(!getAbi){getAbi=this.client.v1.chain.get_abi(account);this.pendingAbis.set(key,getAbi);}return[4/*yield*/,getAbi];case 1:rv=_a.sent().abi;this.pendingAbis.delete(key);if(rv){this.abiCache.set(key,rv);}_a.label=2;case 2:return[2/*return*/,rv];}});});};return LinkChain;}();/**
 * Anchor Link main class.
 *
 * @example
 *
 * ```ts
 * import AnchorLink from 'anchor-link'
 * import ConsoleTransport from 'anchor-link-console-transport'
 *
 * const link = new AnchorLink({
 *     transport: new ConsoleTransport(),
 *     chains: [
 *         {
 *             chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',
 *             nodeUrl: 'https://eos.greymass.com',
 *         },
 *     ],
 * })
 *
 * const result = await link.transact({actions: myActions})
 * ```
 */var Link=/** @class */function(){/** Create a new link instance. */function Link(options){if(typeof options!=='object'){throw new TypeError('Missing options object');}if(!options.transport){throw new TypeError('options.transport is required');}var chains=options.chains||[];if(options.chainId&&options.client){chains=[{chainId:options.chainId,nodeUrl:options.client}];}if(chains.length===0){throw new TypeError('options.chains is required');}this.chains=chains.map(function(_a){var chainId=_a.chainId,nodeUrl=_a.nodeUrl;if(!chainId){throw new Error('options.chains[].chainId is required');}if(!nodeUrl){throw new Error('options.chains[].nodeUrl is required');}return new LinkChain(chainId,nodeUrl);});if(options.service===undefined||typeof options.service==='string'){this.callbackService=new BuoyCallbackService(options.service||LinkOptions.defaults.service);}else{this.callbackService=options.service;}this.transport=options.transport;if(options.storage!==null){this.storage=options.storage||this.transport.storage;}this.verifyProofs=options.verifyProofs!==undefined?options.verifyProofs:LinkOptions.defaults.verifyProofs;this.encodeChainIds=options.encodeChainIds!==undefined?options.encodeChainIds:LinkOptions.defaults.encodeChainIds;}Object.defineProperty(Link.prototype,"client",{/**
         * The APIClient instance for communicating with the node.
         * @note This returns the first APIClient when link is configured with multiple chains.
         */get:function(){return this.chains[0].client;},enumerable:false,configurable:true});/**
     * Return a [[LinkChain]] object for given chainId or chain reference.
     * @throws If this link instance has no configured chain for given reference.
     * @internal
     */Link.prototype.getChain=function(chain){if(chain instanceof LinkChain){return chain;}if(typeof chain==='number'){var rv_1=this.chains[chain];if(!rv_1){throw new Error("Invalid chain index: "+chain);}return rv_1;}var id=eosioSigningRequest.ChainId.from(chain);var rv=this.chains.find(function(c){return c.chainId.equals(id);});if(!rv){throw new Error("Unsupported chain: "+id);}return rv;};/**
     * Create a SigningRequest instance configured for this link.
     * @internal
     */Link.prototype.createRequest=function(args,chain,transport){return tslib.__awaiter(this,void 0,void 0,function(){var t,request,c,callback;return tslib.__generator(this,function(_a){switch(_a.label){case 0:t=transport||this.transport;if(!(chain||this.chains.length===1))return[3/*break*/,2];c=chain||this.chains[0];return[4/*yield*/,eosioSigningRequest.SigningRequest.create(tslib.__assign(tslib.__assign({},args),{chainId:c.chainId,broadcast:false}),{abiProvider:c,zlib:zlib__default['default']})];case 1:request=_a.sent();return[3/*break*/,4];case 2:return[4/*yield*/,eosioSigningRequest.SigningRequest.create(tslib.__assign(tslib.__assign({},args),{chainId:null,chainIds:this.encodeChainIds?this.chains.map(function(c){return c.chainId;}):undefined,broadcast:false}),// abi's will be pulled from the first chain and assumed to be identical on all chains
{abiProvider:this.chains[0],zlib:zlib__default['default']})];case 3:// multi-chain request
request=_a.sent();_a.label=4;case 4:if(!t.prepare)return[3/*break*/,6];return[4/*yield*/,t.prepare(request)];case 5:request=_a.sent();_a.label=6;case 6:callback=this.callbackService.create();request.setCallback(callback.url,true);return[2/*return*/,{request:request,callback:callback}];}});});};/**
     * Send a SigningRequest instance using this link.
     * @internal
     */Link.prototype.sendRequest=function(request,callback,chain,transport,broadcast){if(broadcast===void 0){broadcast=false;}return tslib.__awaiter(this,void 0,void 0,function(){var t,linkUrl,cancel,callbackResponse,payload_1,signer,signatures,c,resolved,cosignerSig,result,signedTx,res,error_1;return tslib.__generator(this,function(_a){switch(_a.label){case 0:t=transport||this.transport;_a.label=1;case 1:_a.trys.push([1,6,,7]);linkUrl=request.data.callback;if(linkUrl!==callback.url){throw new Error('Invalid request callback');}if(request.data.flags.broadcast===true||request.data.flags.background===false){throw new Error('Invalid request flags');}cancel=new Promise(function(resolve,reject){t.onRequest(request,function(reason){callback.cancel();if(typeof reason==='string'){reject(new CancelError(reason));}else{reject(reason);}});});return[4/*yield*/,Promise.race([callback.wait(),cancel])];case 2:callbackResponse=_a.sent();if(typeof callbackResponse.rejected==='string'){throw new CancelError(callbackResponse.rejected);}payload_1=callbackResponse;signer=eosio.PermissionLevel.from({actor:payload_1.sa,permission:payload_1.sp});signatures=Object.keys(payload_1).filter(function(key){return key.startsWith('sig')&&key!=='sig0';}).map(function(key){return eosio.Signature.from(payload_1[key]);});c=void 0;if(!chain&&this.chains.length>1){if(!payload_1.cid){throw new Error('Multi chain response payload must specify resolved chain id (cid)');}c=this.getChain(payload_1.cid);}else{c=chain||this.getChain(0);if(payload_1.cid&&!c.chainId.equals(payload_1.cid)){throw new Error('Got response for wrong chain id');}}return[4/*yield*/,eosioSigningRequest.ResolvedSigningRequest.fromPayload(payload_1,{zlib:zlib__default['default'],abiProvider:c})// prepend cosigner signature if present
];case 3:resolved=_a.sent();cosignerSig=resolved.request.getInfoKey('cosig',{type:eosio.Signature,array:true});if(cosignerSig){signatures.unshift.apply(signatures,tslib.__spreadArray([],tslib.__read(cosignerSig)));}result={resolved:resolved,chain:c,transaction:resolved.transaction,resolvedTransaction:resolved.resolvedTransaction,signatures:signatures,payload:payload_1,signer:signer};if(!broadcast)return[3/*break*/,5];signedTx=eosio.SignedTransaction.from(tslib.__assign(tslib.__assign({},resolved.transaction),{signatures:signatures}));return[4/*yield*/,c.client.v1.chain.push_transaction(signedTx)];case 4:res=_a.sent();result.processed=res.processed;_a.label=5;case 5:if(t.onSuccess){t.onSuccess(request,result);}return[2/*return*/,result];case 6:error_1=_a.sent();if(t.onFailure){t.onFailure(request,error_1);}throw error_1;case 7:return[2/*return*/];}});});};/**
     * Sign and optionally broadcast a EOSIO transaction, action or actions.
     *
     * Example:
     *
     * ```ts
     * let result = await myLink.transact({transaction: myTx})
     * ```
     *
     * @param args The action, actions or transaction to use.
     * @param options Options for this transact call.
     * @param transport Transport override, for internal use.
     */Link.prototype.transact=function(args,options,transport){return tslib.__awaiter(this,void 0,void 0,function(){var o,t,c,broadcast,noModify,anyArgs,_a,request,callback,result;return tslib.__generator(this,function(_b){switch(_b.label){case 0:o=options||{};t=transport||this.transport;c=o.chain!==undefined?this.getChain(o.chain):undefined;broadcast=o.broadcast!==false;noModify=o.noModify!==undefined?o.noModify:!broadcast;// Initialize the loading state of the transport
if(t&&t.showLoading){t.showLoading();}anyArgs=args;if(args.actions&&(anyArgs.expiration||anyArgs.ref_block_num||anyArgs.ref_block_prefix||anyArgs.max_net_usage_words||anyArgs.max_cpu_usage_ms||anyArgs.delay_sec)){args={transaction:tslib.__assign({expiration:'1970-01-01T00:00:00',ref_block_num:0,ref_block_prefix:0,max_net_usage_words:0,max_cpu_usage_ms:0,delay_sec:0},anyArgs)};}return[4/*yield*/,this.createRequest(args,c,t)];case 1:_a=_b.sent(),request=_a.request,callback=_a.callback;if(noModify){request.setInfoKey('no_modify',true,'bool');}return[4/*yield*/,this.sendRequest(request,callback,c,t,broadcast)];case 2:result=_b.sent();return[2/*return*/,result];}});});};/**
     * Send an identity request and verify the identity proof if [[LinkOptions.verifyProofs]] is true.
     * @param args.scope The scope of the identity request.
     * @param args.requestPermission Optional request permission if the request is for a specific account or permission.
     * @param args.info Metadata to add to the request.
     * @note This is for advanced use-cases, you probably want to use [[Link.login]] instead.
     */Link.prototype.identify=function(args){return tslib.__awaiter(this,void 0,void 0,function(){var _a,request,callback,res,account,proof,accountPermission,proofValid,perm;return tslib.__generator(this,function(_b){switch(_b.label){case 0:return[4/*yield*/,this.createRequest({identity:{permission:args.requestPermission,scope:args.scope},info:args.info})];case 1:_a=_b.sent(),request=_a.request,callback=_a.callback;return[4/*yield*/,this.sendRequest(request,callback)];case 2:res=_b.sent();if(!res.resolved.request.isIdentity()){throw new IdentityError('Unexpected response');}proof=res.resolved.getIdentityProof(res.signatures[0]);if(!this.verifyProofs)return[3/*break*/,4];return[4/*yield*/,res.chain.client.v1.chain.get_account(res.signer.actor)];case 3:account=_b.sent();if(!account){throw new IdentityError("Signature from unknown account: "+proof.signer.actor);}accountPermission=account.permissions.find(function(_a){var perm_name=_a.perm_name;return proof.signer.permission.equals(perm_name);});if(!accountPermission){throw new IdentityError(proof.signer.actor+" signed for unknown permission: "+proof.signer.permission);}proofValid=proof.verify(accountPermission.required_auth,account.head_block_time);if(!proofValid){throw new IdentityError("Invalid identify proof for: "+proof.signer);}_b.label=4;case 4:if(args.requestPermission){perm=eosio.PermissionLevel.from(args.requestPermission);if(!perm.actor.equals(eosioSigningRequest.PlaceholderName)&&!perm.actor.equals(proof.signer.actor)||!perm.permission.equals(eosioSigningRequest.PlaceholderPermission)&&!perm.permission.equals(proof.signer.permission)){throw new IdentityError("Identity proof singed by "+proof.signer+", expected: "+formatAuth(perm)+" ");}}return[2/*return*/,tslib.__assign(tslib.__assign({},res),{account:account,proof:proof})];}});});};/**
     * Login and create a persistent session.
     * @param identifier The session identifier, an EOSIO name (`[a-z1-5]{1,12}`).
     *                   Should be set to the contract account if applicable.
     */Link.prototype.login=function(identifier){return tslib.__awaiter(this,void 0,void 0,function(){var privateKey,requestKey,createInfo,res,metadata,parsed,_a,_b,key,signerKey,session;var e_1,_c;return tslib.__generator(this,function(_d){switch(_d.label){case 0:privateKey=eosio.PrivateKey.generate('K1');requestKey=privateKey.toPublic();createInfo=LinkCreate.from({session_name:identifier,request_key:requestKey,user_agent:this.getUserAgent()});return[4/*yield*/,this.identify({scope:identifier,info:{link:createInfo,scope:identifier}})];case 1:res=_d.sent();metadata={// backwards compat, can be removed next major release
sameDevice:res.resolved.request.getRawInfo()['return_path']!==undefined};// append extra metadata from the signer
if(res.payload.link_meta){try{parsed=JSON.parse(res.payload.link_meta);try{for(_a=tslib.__values(Object.keys(parsed)),_b=_a.next();!_b.done;_b=_a.next()){key=_b.value;// normalize key names to camelCase
metadata[snakeToCamel(key)]=parsed[key];}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_1)throw e_1.error;}}}catch(error){// eslint-disable-next-line no-console
console.warn('Unable to parse link metadata',error,res.payload.link_meta);}}signerKey=res.proof.recover();if(res.payload.link_ch&&res.payload.link_key&&res.payload.link_name){session=new LinkChannelSession(this,{identifier:identifier,chainId:res.chain.chainId,auth:res.signer,publicKey:signerKey,channel:{url:res.payload.link_ch,key:res.payload.link_key,name:res.payload.link_name},requestKey:privateKey},metadata);}else{session=new LinkFallbackSession(this,{identifier:identifier,chainId:res.chain.chainId,auth:res.signer,publicKey:signerKey},metadata);}if(!this.storage)return[3/*break*/,3];return[4/*yield*/,this.storeSession(identifier,session)];case 2:_d.sent();_d.label=3;case 3:return[2/*return*/,tslib.__assign(tslib.__assign({},res),{session:session})];}});});};/**
     * Restore previous session, use [[login]] to create a new session.
     * @param identifier The session identifier, must be same as what was used when creating the session with [[login]].
     * @param auth A specific session auth to restore, if omitted the most recently used session will be restored.
     * @param chainId If given function will only consider that specific chain when restoring session.
     * @returns A [[LinkSession]] instance or null if no session can be found.
     * @throws If no [[LinkStorage]] adapter is configured or there was an error retrieving the session data.
     **/Link.prototype.restoreSession=function(identifier,auth,chainId){return tslib.__awaiter(this,void 0,void 0,function(){var key,list,id_1,latest,data,sessionData,session;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.storage){throw new Error('Unable to restore session: No storage adapter configured');}if(!(auth&&chainId))return[3/*break*/,1];// both auth and chain id given, we can look up on specific key
key=this.sessionKey(identifier,formatAuth(eosio.PermissionLevel.from(auth)),String(eosioSigningRequest.ChainId.from(chainId)));return[3/*break*/,3];case 1:return[4/*yield*/,this.listSessions(identifier)];case 2:list=_a.sent();if(auth){list=list.filter(function(item){return item.auth.equals(auth);});}if(chainId){id_1=eosioSigningRequest.ChainId.from(chainId);list=list.filter(function(item){return item.chainId.equals(id_1);});}latest=list[0];if(!latest){return[2/*return*/,null];}key=this.sessionKey(identifier,formatAuth(latest.auth),String(latest.chainId));_a.label=3;case 3:return[4/*yield*/,this.storage.read(key)];case 4:data=_a.sent();if(!data){return[2/*return*/,null];}try{sessionData=JSON.parse(data);}catch(error){throw new Error("Unable to restore session: Stored JSON invalid ("+(error.message||String(error))+")");}session=LinkSession.restore(this,sessionData);if(!(auth||chainId))return[3/*break*/,6];// update latest used
return[4/*yield*/,this.touchSession(identifier,session.auth,session.chainId)];case 5:// update latest used
_a.sent();_a.label=6;case 6:return[2/*return*/,session];}});});};/**
     * List stored session auths for given identifier.
     * The most recently used session is at the top (index 0).
     * @throws If no [[LinkStorage]] adapter is configured or there was an error retrieving the session list.
     **/Link.prototype.listSessions=function(identifier){return tslib.__awaiter(this,void 0,void 0,function(){var key,list,_a,_b,error_2;return tslib.__generator(this,function(_c){switch(_c.label){case 0:if(!this.storage){throw new Error('Unable to list sessions: No storage adapter configured');}key=this.sessionKey(identifier,'list');_c.label=1;case 1:_c.trys.push([1,3,,4]);_b=(_a=JSON).parse;return[4/*yield*/,this.storage.read(key)];case 2:list=_b.apply(_a,[_c.sent()||'[]']);return[3/*break*/,4];case 3:error_2=_c.sent();throw new Error("Unable to list sessions: "+(error_2.message||String(error_2)));case 4:return[2/*return*/,list.map(function(_a){var auth=_a.auth,chainId=_a.chainId;return{auth:eosio.PermissionLevel.from(auth),chainId:eosioSigningRequest.ChainId.from(chainId)};})];}});});};/**
     * Remove stored session for given identifier and auth.
     * @throws If no [[LinkStorage]] adapter is configured or there was an error removing the session data.
     */Link.prototype.removeSession=function(identifier,auth,chainId){return tslib.__awaiter(this,void 0,void 0,function(){var key;return tslib.__generator(this,function(_a){switch(_a.label){case 0:if(!this.storage){throw new Error('Unable to remove session: No storage adapter configured');}key=this.sessionKey(identifier,formatAuth(auth),String(chainId));return[4/*yield*/,this.storage.remove(key)];case 1:_a.sent();return[4/*yield*/,this.touchSession(identifier,auth,chainId,true)];case 2:_a.sent();return[2/*return*/];}});});};/**
     * Remove all stored sessions for given identifier.
     * @throws If no [[LinkStorage]] adapter is configured or there was an error removing the session data.
     */Link.prototype.clearSessions=function(identifier){return tslib.__awaiter(this,void 0,void 0,function(){var _a,_b,_c,auth,chainId,e_2_1;var e_2,_d;return tslib.__generator(this,function(_e){switch(_e.label){case 0:if(!this.storage){throw new Error('Unable to clear sessions: No storage adapter configured');}_e.label=1;case 1:_e.trys.push([1,7,8,9]);return[4/*yield*/,this.listSessions(identifier)];case 2:_a=tslib.__values.apply(void 0,[_e.sent()]),_b=_a.next();_e.label=3;case 3:if(!!_b.done)return[3/*break*/,6];_c=_b.value,auth=_c.auth,chainId=_c.chainId;return[4/*yield*/,this.removeSession(identifier,auth,chainId)];case 4:_e.sent();_e.label=5;case 5:_b=_a.next();return[3/*break*/,3];case 6:return[3/*break*/,9];case 7:e_2_1=_e.sent();e_2={error:e_2_1};return[3/*break*/,9];case 8:try{if(_b&&!_b.done&&(_d=_a.return))_d.call(_a);}finally{if(e_2)throw e_2.error;}return[7/*endfinally*/];case 9:return[2/*return*/];}});});};/**
     * Create an eosjs compatible signature provider using this link.
     * @param availableKeys Keys the created provider will claim to be able to sign for.
     * @param chain Chain to use when configured with multiple chains.
     * @param transport (internal) Transport override for this call.
     * @note We don't know what keys are available so those have to be provided,
     *       to avoid this use [[LinkSession.makeSignatureProvider]] instead. Sessions can be created with [[Link.login]].
     */Link.prototype.makeSignatureProvider=function(availableKeys,chain,transport){var _this=this;return{getAvailableKeys:function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){return[2/*return*/,availableKeys];});});},sign:function(args){return tslib.__awaiter(_this,void 0,void 0,function(){var t,c,request,callback,_a,transaction,signatures,serializedTransaction;return tslib.__generator(this,function(_b){switch(_b.label){case 0:t=transport||this.transport;c=chain?this.getChain(chain):this.chains[0];request=eosioSigningRequest.SigningRequest.fromTransaction(args.chainId,args.serializedTransaction,{abiProvider:c,zlib:zlib__default['default']});callback=this.callbackService.create();request.setCallback(callback.url,true);request.setBroadcast(false);if(!t.prepare)return[3/*break*/,2];return[4/*yield*/,t.prepare(request)];case 1:request=_b.sent();_b.label=2;case 2:return[4/*yield*/,this.sendRequest(request,callback,c,t)];case 3:_a=_b.sent(),transaction=_a.transaction,signatures=_a.signatures;serializedTransaction=eosio.Serializer.encode({object:transaction});return[2/*return*/,tslib.__assign(tslib.__assign({},args),{serializedTransaction:serializedTransaction,signatures:signatures})];}});});}};};/** Makes sure session is in storage list of sessions and moves it to top (most recently used). */Link.prototype.touchSession=function(identifier,auth,chainId,remove){if(remove===void 0){remove=false;}return tslib.__awaiter(this,void 0,void 0,function(){var list,existing,key;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.listSessions(identifier)];case 1:list=_a.sent();existing=list.findIndex(function(item){return item.auth.equals(auth)&&item.chainId.equals(chainId);});if(existing>=0){list.splice(existing,1);}if(remove===false){list.unshift({auth:auth,chainId:chainId});}key=this.sessionKey(identifier,'list');return[4/*yield*/,this.storage.write(key,JSON.stringify(list))];case 2:_a.sent();return[2/*return*/];}});});};/** Makes sure session is in storage list of sessions and moves it to top (most recently used). */Link.prototype.storeSession=function(identifier,session){return tslib.__awaiter(this,void 0,void 0,function(){var key,data;return tslib.__generator(this,function(_a){switch(_a.label){case 0:key=this.sessionKey(identifier,formatAuth(session.auth),String(session.chainId));data=JSON.stringify(session.serialize());return[4/*yield*/,this.storage.write(key,data)];case 1:_a.sent();return[4/*yield*/,this.touchSession(identifier,session.auth,session.chainId)];case 2:_a.sent();return[2/*return*/];}});});};/** Session storage key for identifier and suffix. */Link.prototype.sessionKey=function(identifier){var suffix=[];for(var _i=1;_i<arguments.length;_i++){suffix[_i-1]=arguments[_i];}return tslib.__spreadArray([String(eosio.Name.from(identifier))],tslib.__read(suffix)).join('-');};/** Return user agent of this link. */Link.prototype.getUserAgent=function(){var rv="AnchorLink/"+Link.version;if(this.transport.userAgent){rv+=' '+this.transport.userAgent();}return rv;};/** Package version. */Link.version='3.2.3';// eslint-disable-line @typescript-eslint/no-inferrable-types
return Link;}();/**
 * Format a EOSIO permission level in the format `actor@permission` taking placeholders into consideration.
 * @internal
 */function formatAuth(auth){var a=eosio.PermissionLevel.from(auth);var actor=a.actor.equals(eosioSigningRequest.PlaceholderName)?'<any>':String(a.actor);var permission;if(a.permission.equals(eosioSigningRequest.PlaceholderName)||a.permission.equals(eosioSigningRequest.PlaceholderPermission)){permission='<any>';}else{permission=String(a.permission);}return actor+"@"+permission;}/**
 * Return PascalCase version of snake_case string.
 * @internal
 */function snakeToPascal(name){return name.split('_').map(function(v){return(v[0]?v[0].toUpperCase():'_')+v.slice(1);}).join('');}/**
 * Return camelCase version of snake_case string.
 * @internal
 */function snakeToCamel(name){var pascal=snakeToPascal(name);return pascal[0].toLowerCase()+pascal.slice(1);}// export library
var pkg=/*#__PURE__*/Object.freeze(/*#__PURE__*/Object.assign(/*#__PURE__*/Object.create(null),eosioSigningRequest__namespace,eosio__namespace,{'default':Link,IdentityProof:eosioSigningRequest.IdentityProof,ChainId:eosioSigningRequest.ChainId,ChainName:eosioSigningRequest.ChainName,LinkChain:LinkChain,Link:Link,LinkSession:LinkSession,LinkChannelSession:LinkChannelSession,LinkFallbackSession:LinkFallbackSession,CancelError:CancelError,IdentityError:IdentityError,SessionError:SessionError}));var e_1,_a;var AnchorLink=Link;try{for(var _b=tslib.__values(Object.keys(pkg)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;if(key==='default')continue;AnchorLink[key]=pkg[key];}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}module.exports=AnchorLink;},{"@greymass/eosio":1,"asmcrypto.js":39,"eosio-signing-request":178,"fetch-ponyfill":192,"isomorphic-ws":224,"pako":8,"tslib":281,"uuid":24}],8:[function(require,module,exports){// Top level file is just a mixin of submodules & constants
'use strict';const{Deflate,deflate,deflateRaw,gzip}=require('./lib/deflate');const{Inflate,inflate,inflateRaw,ungzip}=require('./lib/inflate');const constants=require('./lib/zlib/constants');module.exports.Deflate=Deflate;module.exports.deflate=deflate;module.exports.deflateRaw=deflateRaw;module.exports.gzip=gzip;module.exports.Inflate=Inflate;module.exports.inflate=inflate;module.exports.inflateRaw=inflateRaw;module.exports.ungzip=ungzip;module.exports.constants=constants;},{"./lib/deflate":9,"./lib/inflate":10,"./lib/zlib/constants":14}],9:[function(require,module,exports){'use strict';const zlib_deflate=require('./zlib/deflate');const utils=require('./utils/common');const strings=require('./utils/strings');const msg=require('./zlib/messages');const ZStream=require('./zlib/zstream');const toString=Object.prototype.toString;/* Public constants ==========================================================*//* ===========================================================================*/const{Z_NO_FLUSH,Z_SYNC_FLUSH,Z_FULL_FLUSH,Z_FINISH,Z_OK,Z_STREAM_END,Z_DEFAULT_COMPRESSION,Z_DEFAULT_STRATEGY,Z_DEFLATED}=require('./zlib/constants');/* ===========================================================================*//**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **//* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **//**
 * Deflate.result -> Uint8Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param).
 **//**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **//**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **//**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/function Deflate(options){this.options=utils.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY},options||{});let opt=this.options;if(opt.raw&&opt.windowBits>0){opt.windowBits=-opt.windowBits;}else if(opt.gzip&&opt.windowBits>0&&opt.windowBits<16){opt.windowBits+=16;}this.err=0;// error code, if happens (0 = Z_OK)
this.msg='';// error message
this.ended=false;// used to avoid multiple onEnd() calls
this.chunks=[];// chunks of compressed data
this.strm=new ZStream();this.strm.avail_out=0;let status=zlib_deflate.deflateInit2(this.strm,opt.level,opt.method,opt.windowBits,opt.memLevel,opt.strategy);if(status!==Z_OK){throw new Error(msg[status]);}if(opt.header){zlib_deflate.deflateSetHeader(this.strm,opt.header);}if(opt.dictionary){let dict;// Convert data if needed
if(typeof opt.dictionary==='string'){// If we need to compress text, change encoding to utf8.
dict=strings.string2buf(opt.dictionary);}else if(toString.call(opt.dictionary)==='[object ArrayBuffer]'){dict=new Uint8Array(opt.dictionary);}else{dict=opt.dictionary;}status=zlib_deflate.deflateSetDictionary(this.strm,dict);if(status!==Z_OK){throw new Error(msg[status]);}this._dict_set=true;}}/**
 * Deflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must
 * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending
 * buffers and call [[Deflate#onEnd]].
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/Deflate.prototype.push=function(data,flush_mode){const strm=this.strm;const chunkSize=this.options.chunkSize;let status,_flush_mode;if(this.ended){return false;}if(flush_mode===~~flush_mode)_flush_mode=flush_mode;else _flush_mode=flush_mode===true?Z_FINISH:Z_NO_FLUSH;// Convert data if needed
if(typeof data==='string'){// If we need to compress text, change encoding to utf8.
strm.input=strings.string2buf(data);}else if(toString.call(data)==='[object ArrayBuffer]'){strm.input=new Uint8Array(data);}else{strm.input=data;}strm.next_in=0;strm.avail_in=strm.input.length;for(;;){if(strm.avail_out===0){strm.output=new Uint8Array(chunkSize);strm.next_out=0;strm.avail_out=chunkSize;}// Make sure avail_out > 6 to avoid repeating markers
if((_flush_mode===Z_SYNC_FLUSH||_flush_mode===Z_FULL_FLUSH)&&strm.avail_out<=6){this.onData(strm.output.subarray(0,strm.next_out));strm.avail_out=0;continue;}status=zlib_deflate.deflate(strm,_flush_mode);// Ended => flush and finish
if(status===Z_STREAM_END){if(strm.next_out>0){this.onData(strm.output.subarray(0,strm.next_out));}status=zlib_deflate.deflateEnd(this.strm);this.onEnd(status);this.ended=true;return status===Z_OK;}// Flush if out buffer full
if(strm.avail_out===0){this.onData(strm.output);continue;}// Flush if requested and has data
if(_flush_mode>0&&strm.next_out>0){this.onData(strm.output.subarray(0,strm.next_out));strm.avail_out=0;continue;}if(strm.avail_in===0)break;}return true;};/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array): output data.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/Deflate.prototype.onData=function(chunk){this.chunks.push(chunk);};/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/Deflate.prototype.onEnd=function(status){// On success - join
if(status===Z_OK){this.result=utils.flattenChunks(this.chunks);}this.chunks=[];this.err=status;this.msg=this.strm.msg;};/**
 * deflate(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/function deflate(input,options){const deflator=new Deflate(options);deflator.push(input,true);// That will never happens, if you don't cheat with options :)
if(deflator.err){throw deflator.msg||msg[deflator.err];}return deflator.result;}/**
 * deflateRaw(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/function deflateRaw(input,options){options=options||{};options.raw=true;return deflate(input,options);}/**
 * gzip(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/function gzip(input,options){options=options||{};options.gzip=true;return deflate(input,options);}module.exports.Deflate=Deflate;module.exports.deflate=deflate;module.exports.deflateRaw=deflateRaw;module.exports.gzip=gzip;module.exports.constants=require('./zlib/constants');},{"./utils/common":11,"./utils/strings":12,"./zlib/constants":14,"./zlib/deflate":16,"./zlib/messages":21,"./zlib/zstream":23}],10:[function(require,module,exports){'use strict';const zlib_inflate=require('./zlib/inflate');const utils=require('./utils/common');const strings=require('./utils/strings');const msg=require('./zlib/messages');const ZStream=require('./zlib/zstream');const GZheader=require('./zlib/gzheader');const toString=Object.prototype.toString;/* Public constants ==========================================================*//* ===========================================================================*/const{Z_NO_FLUSH,Z_FINISH,Z_OK,Z_STREAM_END,Z_NEED_DICT,Z_STREAM_ERROR,Z_DATA_ERROR,Z_MEM_ERROR}=require('./zlib/constants');/* ===========================================================================*//**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **//* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **//**
 * Inflate.result -> Uint8Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param).
 **//**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **//**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **//**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/function Inflate(options){this.options=utils.assign({chunkSize:1024*64,windowBits:15,to:''},options||{});const opt=this.options;// Force window size for `raw` data, if not set directly,
// because we have no header for autodetect.
if(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){opt.windowBits=-opt.windowBits;if(opt.windowBits===0){opt.windowBits=-15;}}// If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
if(opt.windowBits>=0&&opt.windowBits<16&&!(options&&options.windowBits)){opt.windowBits+=32;}// Gzip header has no info about windows size, we can do autodetect only
// for deflate. So, if window size not set, force it to max when gzip possible
if(opt.windowBits>15&&opt.windowBits<48){// bit 3 (16) -> gzipped data
// bit 4 (32) -> autodetect gzip/deflate
if((opt.windowBits&15)===0){opt.windowBits|=15;}}this.err=0;// error code, if happens (0 = Z_OK)
this.msg='';// error message
this.ended=false;// used to avoid multiple onEnd() calls
this.chunks=[];// chunks of compressed data
this.strm=new ZStream();this.strm.avail_out=0;let status=zlib_inflate.inflateInit2(this.strm,opt.windowBits);if(status!==Z_OK){throw new Error(msg[status]);}this.header=new GZheader();zlib_inflate.inflateGetHeader(this.strm,this.header);// Setup dictionary
if(opt.dictionary){// Convert data if needed
if(typeof opt.dictionary==='string'){opt.dictionary=strings.string2buf(opt.dictionary);}else if(toString.call(opt.dictionary)==='[object ArrayBuffer]'){opt.dictionary=new Uint8Array(opt.dictionary);}if(opt.raw){//In raw mode we need to set the dictionary early
status=zlib_inflate.inflateSetDictionary(this.strm,opt.dictionary);if(status!==Z_OK){throw new Error(msg[status]);}}}}/**
 * Inflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer): input data
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE
 *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,
 *   `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. If end of stream detected,
 * [[Inflate#onEnd]] will be called.
 *
 * `flush_mode` is not needed for normal operation, because end of stream
 * detected automatically. You may try to use it for advanced things, but
 * this functionality was not tested.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/Inflate.prototype.push=function(data,flush_mode){const strm=this.strm;const chunkSize=this.options.chunkSize;const dictionary=this.options.dictionary;let status,_flush_mode,last_avail_out;if(this.ended)return false;if(flush_mode===~~flush_mode)_flush_mode=flush_mode;else _flush_mode=flush_mode===true?Z_FINISH:Z_NO_FLUSH;// Convert data if needed
if(toString.call(data)==='[object ArrayBuffer]'){strm.input=new Uint8Array(data);}else{strm.input=data;}strm.next_in=0;strm.avail_in=strm.input.length;for(;;){if(strm.avail_out===0){strm.output=new Uint8Array(chunkSize);strm.next_out=0;strm.avail_out=chunkSize;}status=zlib_inflate.inflate(strm,_flush_mode);if(status===Z_NEED_DICT&&dictionary){status=zlib_inflate.inflateSetDictionary(strm,dictionary);if(status===Z_OK){status=zlib_inflate.inflate(strm,_flush_mode);}else if(status===Z_DATA_ERROR){// Replace code with more verbose
status=Z_NEED_DICT;}}// Skip snyc markers if more data follows and not raw mode
while(strm.avail_in>0&&status===Z_STREAM_END&&strm.state.wrap>0&&data[strm.next_in]!==0){zlib_inflate.inflateReset(strm);status=zlib_inflate.inflate(strm,_flush_mode);}switch(status){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:this.onEnd(status);this.ended=true;return false;}// Remember real `avail_out` value, because we may patch out buffer content
// to align utf8 strings boundaries.
last_avail_out=strm.avail_out;if(strm.next_out){if(strm.avail_out===0||status===Z_STREAM_END){if(this.options.to==='string'){let next_out_utf8=strings.utf8border(strm.output,strm.next_out);let tail=strm.next_out-next_out_utf8;let utf8str=strings.buf2string(strm.output,next_out_utf8);// move tail & realign counters
strm.next_out=tail;strm.avail_out=chunkSize-tail;if(tail)strm.output.set(strm.output.subarray(next_out_utf8,next_out_utf8+tail),0);this.onData(utf8str);}else{this.onData(strm.output.length===strm.next_out?strm.output:strm.output.subarray(0,strm.next_out));}}}// Must repeat iteration if out buffer is full
if(status===Z_OK&&last_avail_out===0)continue;// Finalize if end of stream reached.
if(status===Z_STREAM_END){status=zlib_inflate.inflateEnd(this.strm);this.onEnd(status);this.ended=true;return true;}if(strm.avail_in===0)break;}return true;};/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|String): output data. When string output requested,
 *   each chunk will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/Inflate.prototype.onData=function(chunk){this.chunks.push(chunk);};/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/Inflate.prototype.onEnd=function(status){// On success - join
if(status===Z_OK){if(this.options.to==='string'){this.result=this.chunks.join('');}else{this.result=utils.flattenChunks(this.chunks);}}this.chunks=[];this.err=status;this.msg=this.strm.msg;};/**
 * inflate(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako');
 * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));
 * let output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/function inflate(input,options){const inflator=new Inflate(options);inflator.push(input);// That will never happens, if you don't cheat with options :)
if(inflator.err)throw inflator.msg||msg[inflator.err];return inflator.result;}/**
 * inflateRaw(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/function inflateRaw(input,options){options=options||{};options.raw=true;return inflate(input,options);}/**
 * ungzip(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/module.exports.Inflate=Inflate;module.exports.inflate=inflate;module.exports.inflateRaw=inflateRaw;module.exports.ungzip=inflate;module.exports.constants=require('./zlib/constants');},{"./utils/common":11,"./utils/strings":12,"./zlib/constants":14,"./zlib/gzheader":17,"./zlib/inflate":19,"./zlib/messages":21,"./zlib/zstream":23}],11:[function(require,module,exports){'use strict';const _has=(obj,key)=>{return Object.prototype.hasOwnProperty.call(obj,key);};module.exports.assign=function(obj/*from1, from2, from3, ...*/){const sources=Array.prototype.slice.call(arguments,1);while(sources.length){const source=sources.shift();if(!source){continue;}if(typeof source!=='object'){throw new TypeError(source+'must be non-object');}for(const p in source){if(_has(source,p)){obj[p]=source[p];}}}return obj;};// Join array of chunks to single array.
module.exports.flattenChunks=chunks=>{// calculate data length
let len=0;for(let i=0,l=chunks.length;i<l;i++){len+=chunks[i].length;}// join chunks
const result=new Uint8Array(len);for(let i=0,pos=0,l=chunks.length;i<l;i++){let chunk=chunks[i];result.set(chunk,pos);pos+=chunk.length;}return result;};},{}],12:[function(require,module,exports){// String encode/decode helpers
'use strict';// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
let STR_APPLY_UIA_OK=true;try{String.fromCharCode.apply(null,new Uint8Array(1));}catch(__){STR_APPLY_UIA_OK=false;}// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
const _utf8len=new Uint8Array(256);for(let q=0;q<256;q++){_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;}_utf8len[254]=_utf8len[254]=1;// Invalid sequence start
// convert string to array (typed, when possible)
module.exports.string2buf=str=>{let buf,c,c2,m_pos,i,str_len=str.length,buf_len=0;// count binary size
for(m_pos=0;m_pos<str_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}buf_len+=c<0x80?1:c<0x800?2:c<0x10000?3:4;}// allocate buffer
buf=new Uint8Array(buf_len);// convert
for(i=0,m_pos=0;i<buf_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}if(c<0x80){/* one byte */buf[i++]=c;}else if(c<0x800){/* two bytes */buf[i++]=0xC0|c>>>6;buf[i++]=0x80|c&0x3f;}else if(c<0x10000){/* three bytes */buf[i++]=0xE0|c>>>12;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}else{/* four bytes */buf[i++]=0xf0|c>>>18;buf[i++]=0x80|c>>>12&0x3f;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}}return buf;};// Helper
const buf2binstring=(buf,len)=>{// On Chrome, the arguments in a function call that are allowed is `65534`.
// If the length of the buffer is smaller than that, we can use this optimization,
// otherwise we will take a slower path.
if(len<65534){if(buf.subarray&&STR_APPLY_UIA_OK){return String.fromCharCode.apply(null,buf.length===len?buf:buf.subarray(0,len));}}let result='';for(let i=0;i<len;i++){result+=String.fromCharCode(buf[i]);}return result;};// convert array to string
module.exports.buf2string=(buf,max)=>{let i,out;const len=max||buf.length;// Reserve max possible length (2 words per char)
// NB: by unknown reasons, Array is significantly faster for
//     String.fromCharCode.apply than Uint16Array.
const utf16buf=new Array(len*2);for(out=0,i=0;i<len;){let c=buf[i++];// quick process ascii
if(c<0x80){utf16buf[out++]=c;continue;}let c_len=_utf8len[c];// skip 5 & 6 byte codes
if(c_len>4){utf16buf[out++]=0xfffd;i+=c_len-1;continue;}// apply mask on first byte
c&=c_len===2?0x1f:c_len===3?0x0f:0x07;// join the rest
while(c_len>1&&i<len){c=c<<6|buf[i++]&0x3f;c_len--;}// terminated by end of string?
if(c_len>1){utf16buf[out++]=0xfffd;continue;}if(c<0x10000){utf16buf[out++]=c;}else{c-=0x10000;utf16buf[out++]=0xd800|c>>10&0x3ff;utf16buf[out++]=0xdc00|c&0x3ff;}}return buf2binstring(utf16buf,out);};// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
module.exports.utf8border=(buf,max)=>{max=max||buf.length;if(max>buf.length){max=buf.length;}// go back from last position, until start of sequence found
let pos=max-1;while(pos>=0&&(buf[pos]&0xC0)===0x80){pos--;}// Very small and broken sequence,
// return max, because we should return something anyway.
if(pos<0){return max;}// If we came to start of buffer - that means buffer is too small,
// return max too.
if(pos===0){return max;}return pos+_utf8len[buf[pos]]>max?pos:max;};},{}],13:[function(require,module,exports){'use strict';// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.
// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
const adler32=(adler,buf,len,pos)=>{let s1=adler&0xffff|0,s2=adler>>>16&0xffff|0,n=0;while(len!==0){// Set limit ~ twice less than 5552, to keep
// s2 in 31-bits, because we force signed ints.
// in other case %= will fail.
n=len>2000?2000:len;len-=n;do{s1=s1+buf[pos++]|0;s2=s2+s1|0;}while(--n);s1%=65521;s2%=65521;}return s1|s2<<16|0;};module.exports=adler32;},{}],14:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
module.exports={/* Allowed flush values; see deflate() and inflate() below for details */Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,/* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,//Z_VERSION_ERROR: -6,
/* compression levels */Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,/* Possible values of the data_type field (though see inflate()) */Z_BINARY:0,Z_TEXT:1,//Z_ASCII:                1, // = Z_TEXT (deprecated)
Z_UNKNOWN:2,/* The deflate compression method */Z_DEFLATED:8//Z_NULL:                 null // Use -1 or null inline, depending on var type
};},{}],15:[function(require,module,exports){'use strict';// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.
// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// Use ordinary array, since untyped makes no boost here
const makeTable=()=>{let c,table=[];for(var n=0;n<256;n++){c=n;for(var k=0;k<8;k++){c=c&1?0xEDB88320^c>>>1:c>>>1;}table[n]=c;}return table;};// Create table on load. Just 255 signed longs. Not a problem.
const crcTable=new Uint32Array(makeTable());const crc32=(crc,buf,len,pos)=>{const t=crcTable;const end=pos+len;crc^=-1;for(let i=pos;i<end;i++){crc=crc>>>8^t[(crc^buf[i])&0xFF];}return crc^-1;// >>> 0;
};module.exports=crc32;},{}],16:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
const{_tr_init,_tr_stored_block,_tr_flush_block,_tr_tally,_tr_align}=require('./trees');const adler32=require('./adler32');const crc32=require('./crc32');const msg=require('./messages');/* Public constants ==========================================================*//* ===========================================================================*/const{Z_NO_FLUSH,Z_PARTIAL_FLUSH,Z_FULL_FLUSH,Z_FINISH,Z_BLOCK,Z_OK,Z_STREAM_END,Z_STREAM_ERROR,Z_DATA_ERROR,Z_BUF_ERROR,Z_DEFAULT_COMPRESSION,Z_FILTERED,Z_HUFFMAN_ONLY,Z_RLE,Z_FIXED,Z_DEFAULT_STRATEGY,Z_UNKNOWN,Z_DEFLATED}=require('./constants');/*============================================================================*/const MAX_MEM_LEVEL=9;/* Maximum value for memLevel in deflateInit2 */const MAX_WBITS=15;/* 32K LZ77 window */const DEF_MEM_LEVEL=8;const LENGTH_CODES=29;/* number of length codes, not counting the special END_BLOCK code */const LITERALS=256;/* number of literal bytes 0..255 */const L_CODES=LITERALS+1+LENGTH_CODES;/* number of Literal or Length codes, including the END_BLOCK code */const D_CODES=30;/* number of distance codes */const BL_CODES=19;/* number of codes used to transfer the bit lengths */const HEAP_SIZE=2*L_CODES+1;/* maximum heap size */const MAX_BITS=15;/* All codes must not exceed MAX_BITS bits */const MIN_MATCH=3;const MAX_MATCH=258;const MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1;const PRESET_DICT=0x20;const INIT_STATE=42;const EXTRA_STATE=69;const NAME_STATE=73;const COMMENT_STATE=91;const HCRC_STATE=103;const BUSY_STATE=113;const FINISH_STATE=666;const BS_NEED_MORE=1;/* block not completed, need more input or more output */const BS_BLOCK_DONE=2;/* block flush performed */const BS_FINISH_STARTED=3;/* finish started, need only more output at next deflate */const BS_FINISH_DONE=4;/* finish done, accept no more input or output */const OS_CODE=0x03;// Unix :) . Don't detect, use this default.
const err=(strm,errorCode)=>{strm.msg=msg[errorCode];return errorCode;};const rank=f=>{return(f<<1)-(f>4?9:0);};const zero=buf=>{let len=buf.length;while(--len>=0){buf[len]=0;}};/* eslint-disable new-cap */let HASH_ZLIB=(s,prev,data)=>(prev<<s.hash_shift^data)&s.hash_mask;// This hash causes less collisions, https://github.com/nodeca/pako/issues/135
// But breaks binary compatibility
//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;
let HASH=HASH_ZLIB;/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */const flush_pending=strm=>{const s=strm.state;//_tr_flush_bits(s);
let len=s.pending;if(len>strm.avail_out){len=strm.avail_out;}if(len===0){return;}strm.output.set(s.pending_buf.subarray(s.pending_out,s.pending_out+len),strm.next_out);strm.next_out+=len;s.pending_out+=len;strm.total_out+=len;strm.avail_out-=len;s.pending-=len;if(s.pending===0){s.pending_out=0;}};const flush_block_only=(s,last)=>{_tr_flush_block(s,s.block_start>=0?s.block_start:-1,s.strstart-s.block_start,last);s.block_start=s.strstart;flush_pending(s.strm);};const put_byte=(s,b)=>{s.pending_buf[s.pending++]=b;};/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */const putShortMSB=(s,b)=>{//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
s.pending_buf[s.pending++]=b>>>8&0xff;s.pending_buf[s.pending++]=b&0xff;};/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */const read_buf=(strm,buf,start,size)=>{let len=strm.avail_in;if(len>size){len=size;}if(len===0){return 0;}strm.avail_in-=len;// zmemcpy(buf, strm->next_in, len);
buf.set(strm.input.subarray(strm.next_in,strm.next_in+len),start);if(strm.state.wrap===1){strm.adler=adler32(strm.adler,buf,len,start);}else if(strm.state.wrap===2){strm.adler=crc32(strm.adler,buf,len,start);}strm.next_in+=len;strm.total_in+=len;return len;};/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */const longest_match=(s,cur_match)=>{let chain_length=s.max_chain_length;/* max hash chain length */let scan=s.strstart;/* current string */let match;/* matched string */let len;/* length of current match */let best_len=s.prev_length;/* best match length so far */let nice_match=s.nice_match;/* stop if match long enough */const limit=s.strstart>s.w_size-MIN_LOOKAHEAD?s.strstart-(s.w_size-MIN_LOOKAHEAD):0/*NIL*/;const _win=s.window;// shortcut
const wmask=s.w_mask;const prev=s.prev;/* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */const strend=s.strstart+MAX_MATCH;let scan_end1=_win[scan+best_len-1];let scan_end=_win[scan+best_len];/* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */// Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");
/* Do not waste too much time if we already have a good match: */if(s.prev_length>=s.good_match){chain_length>>=2;}/* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */if(nice_match>s.lookahead){nice_match=s.lookahead;}// Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");
do{// Assert(cur_match < s->strstart, "no future");
match=cur_match;/* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */if(_win[match+best_len]!==scan_end||_win[match+best_len-1]!==scan_end1||_win[match]!==_win[scan]||_win[++match]!==_win[scan+1]){continue;}/* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */scan+=2;match++;// Assert(*scan == *match, "match[2]?");
/* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */do{/*jshint noempty:false*/}while(_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&scan<strend);// Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");
len=MAX_MATCH-(strend-scan);scan=strend-MAX_MATCH;if(len>best_len){s.match_start=cur_match;best_len=len;if(len>=nice_match){break;}scan_end1=_win[scan+best_len-1];scan_end=_win[scan+best_len];}}while((cur_match=prev[cur_match&wmask])>limit&&--chain_length!==0);if(best_len<=s.lookahead){return best_len;}return s.lookahead;};/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */const fill_window=s=>{const _w_size=s.w_size;let p,n,m,more,str;//Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");
do{more=s.window_size-s.lookahead-s.strstart;// JS ints have 32 bit, block below not needed
/* Deal with !@#$% 64K limit: *///if (sizeof(int) <= 2) {
//    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
//        more = wsize;
//
//  } else if (more == (unsigned)(-1)) {
//        /* Very unlikely, but possible on 16 bit machine if
//         * strstart == 0 && lookahead == 1 (input done a byte at time)
//         */
//        more--;
//    }
//}
/* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */if(s.strstart>=_w_size+(_w_size-MIN_LOOKAHEAD)){s.window.set(s.window.subarray(_w_size,_w_size+_w_size),0);s.match_start-=_w_size;s.strstart-=_w_size;/* we now have strstart >= MAX_DIST */s.block_start-=_w_size;/* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */n=s.hash_size;p=n;do{m=s.head[--p];s.head[p]=m>=_w_size?m-_w_size:0;}while(--n);n=_w_size;p=n;do{m=s.prev[--p];s.prev[p]=m>=_w_size?m-_w_size:0;/* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */}while(--n);more+=_w_size;}if(s.strm.avail_in===0){break;}/* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     *///Assert(more >= 2, "more < 2");
n=read_buf(s.strm,s.window,s.strstart+s.lookahead,more);s.lookahead+=n;/* Initialize the hash value now that we have some input: */if(s.lookahead+s.insert>=MIN_MATCH){str=s.strstart-s.insert;s.ins_h=s.window[str];/* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */s.ins_h=HASH(s,s.ins_h,s.window[str+1]);//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
while(s.insert){/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */s.ins_h=HASH(s,s.ins_h,s.window[str+MIN_MATCH-1]);s.prev[str&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=str;str++;s.insert--;if(s.lookahead+s.insert<MIN_MATCH){break;}}}/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */}while(s.lookahead<MIN_LOOKAHEAD&&s.strm.avail_in!==0);/* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   *///  if (s.high_water < s.window_size) {
//    const curr = s.strstart + s.lookahead;
//    let init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
};/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */const deflate_stored=(s,flush)=>{/* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */let max_block_size=0xffff;if(max_block_size>s.pending_buf_size-5){max_block_size=s.pending_buf_size-5;}/* Copy as much as possible from input to output: */for(;;){/* Fill the window as much as possible: */if(s.lookahead<=1){//Assert(s->strstart < s->w_size+MAX_DIST(s) ||
//  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }
fill_window(s);if(s.lookahead===0&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;}/* flush the current block */}//Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");
s.strstart+=s.lookahead;s.lookahead=0;/* Emit a stored block if pending_buf will be full: */const max_start=s.block_start+max_block_size;if(s.strstart===0||s.strstart>=max_start){/* strstart == 0 is possible when wraparound on 16-bit machine */s.lookahead=s.strstart-max_start;s.strstart=max_start;/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}/* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */if(s.strstart-s.block_start>=s.w_size-MIN_LOOKAHEAD){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=0;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.strstart>s.block_start){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_NEED_MORE;};/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */const deflate_fast=(s,flush)=>{let hash_head;/* head of the hash chain */let bflush;/* set if current block must be flushed */for(;;){/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */if(s.lookahead<MIN_LOOKAHEAD){fill_window(s);if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;/* flush the current block */}}/* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */hash_head=0/*NIL*/;if(s.lookahead>=MIN_MATCH){/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=HASH(s,s.ins_h,s.window[s.strstart+MIN_MATCH-1]);hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/}/* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */if(hash_head!==0/*NIL*/&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){/* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */s.match_length=longest_match(s,hash_head);/* longest_match() sets match_start */}if(s.match_length>=MIN_MATCH){// check_match(s, s.strstart, s.match_start, s.match_length); // for debug only
/*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/bflush=_tr_tally(s,s.strstart-s.match_start,s.match_length-MIN_MATCH);s.lookahead-=s.match_length;/* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */if(s.match_length<=s.max_lazy_match/*max_insert_length*/&&s.lookahead>=MIN_MATCH){s.match_length--;/* string at strstart already in table */do{s.strstart++;/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=HASH(s,s.ins_h,s.window[s.strstart+MIN_MATCH-1]);hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***//* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */}while(--s.match_length!==0);s.strstart++;}else{s.strstart+=s.match_length;s.match_length=0;s.ins_h=s.window[s.strstart];/* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */s.ins_h=HASH(s,s.ins_h,s.window[s.strstart+1]);//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
/* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */}}else{/* No match, output a literal byte *///Tracevv((stderr,"%c", s.window[s.strstart]));
/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/bflush=_tr_tally(s,0,s.window[s.strstart]);s.lookahead--;s.strstart++;}if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;};/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */const deflate_slow=(s,flush)=>{let hash_head;/* head of hash chain */let bflush;/* set if current block must be flushed */let max_insert;/* Process the input block. */for(;;){/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */if(s.lookahead<MIN_LOOKAHEAD){fill_window(s);if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;}/* flush the current block */}/* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */hash_head=0/*NIL*/;if(s.lookahead>=MIN_MATCH){/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=HASH(s,s.ins_h,s.window[s.strstart+MIN_MATCH-1]);hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/}/* Find the longest match, discarding those <= prev_length.
     */s.prev_length=s.match_length;s.prev_match=s.match_start;s.match_length=MIN_MATCH-1;if(hash_head!==0/*NIL*/&&s.prev_length<s.max_lazy_match&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD/*MAX_DIST(s)*/){/* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */s.match_length=longest_match(s,hash_head);/* longest_match() sets match_start */if(s.match_length<=5&&(s.strategy===Z_FILTERED||s.match_length===MIN_MATCH&&s.strstart-s.match_start>4096/*TOO_FAR*/)){/* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */s.match_length=MIN_MATCH-1;}}/* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */if(s.prev_length>=MIN_MATCH&&s.match_length<=s.prev_length){max_insert=s.strstart+s.lookahead-MIN_MATCH;/* Do not insert strings in hash table beyond this. *///check_match(s, s.strstart-1, s.prev_match, s.prev_length);
/***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/bflush=_tr_tally(s,s.strstart-1-s.prev_match,s.prev_length-MIN_MATCH);/* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */s.lookahead-=s.prev_length-1;s.prev_length-=2;do{if(++s.strstart<=max_insert){/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=HASH(s,s.ins_h,s.window[s.strstart+MIN_MATCH-1]);hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/}}while(--s.prev_length!==0);s.match_available=0;s.match_length=MIN_MATCH-1;s.strstart++;if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}else if(s.match_available){/* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       *///Tracevv((stderr,"%c", s->window[s->strstart-1]));
/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/bflush=_tr_tally(s,0,s.window[s.strstart-1]);if(bflush){/*** FLUSH_BLOCK_ONLY(s, 0) ***/flush_block_only(s,false);/***/}s.strstart++;s.lookahead--;if(s.strm.avail_out===0){return BS_NEED_MORE;}}else{/* There is no previous match to compare with, wait for
       * the next step to decide.
       */s.match_available=1;s.strstart++;s.lookahead--;}}//Assert (flush != Z_NO_FLUSH, "no flush?");
if(s.match_available){//Tracevv((stderr,"%c", s->window[s->strstart-1]));
/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/bflush=_tr_tally(s,0,s.window[s.strstart-1]);s.match_available=0;}s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;};/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */const deflate_rle=(s,flush)=>{let bflush;/* set if current block must be flushed */let prev;/* byte at distance one to match */let scan,strend;/* scan goes up to strend for length of run */const _win=s.window;for(;;){/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */if(s.lookahead<=MAX_MATCH){fill_window(s);if(s.lookahead<=MAX_MATCH&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;}/* flush the current block */}/* See how many times the previous byte repeats */s.match_length=0;if(s.lookahead>=MIN_MATCH&&s.strstart>0){scan=s.strstart-1;prev=_win[scan];if(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]){strend=s.strstart+MAX_MATCH;do{/*jshint noempty:false*/}while(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&scan<strend);s.match_length=MAX_MATCH-(strend-scan);if(s.match_length>s.lookahead){s.match_length=s.lookahead;}}//Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
}/* Emit match if have run of MIN_MATCH or longer, else emit literal */if(s.match_length>=MIN_MATCH){//check_match(s, s.strstart, s.strstart - 1, s.match_length);
/*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/bflush=_tr_tally(s,1,s.match_length-MIN_MATCH);s.lookahead-=s.match_length;s.strstart+=s.match_length;s.match_length=0;}else{/* No match, output a literal byte *///Tracevv((stderr,"%c", s->window[s->strstart]));
/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/bflush=_tr_tally(s,0,s.window[s.strstart]);s.lookahead--;s.strstart++;}if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=0;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;};/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */const deflate_huff=(s,flush)=>{let bflush;/* set if current block must be flushed */for(;;){/* Make sure that we have a literal to write. */if(s.lookahead===0){fill_window(s);if(s.lookahead===0){if(flush===Z_NO_FLUSH){return BS_NEED_MORE;}break;/* flush the current block */}}/* Output a literal byte */s.match_length=0;//Tracevv((stderr,"%c", s->window[s->strstart]));
/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/bflush=_tr_tally(s,0,s.window[s.strstart]);s.lookahead--;s.strstart++;if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=0;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;};/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */function Config(good_length,max_lazy,nice_length,max_chain,func){this.good_length=good_length;this.max_lazy=max_lazy;this.nice_length=nice_length;this.max_chain=max_chain;this.func=func;}const configuration_table=[/*      good lazy nice chain */new Config(0,0,0,0,deflate_stored),/* 0 store only */new Config(4,4,8,4,deflate_fast),/* 1 max speed, no lazy matches */new Config(4,5,16,8,deflate_fast),/* 2 */new Config(4,6,32,32,deflate_fast),/* 3 */new Config(4,4,16,16,deflate_slow),/* 4 lazy matches */new Config(8,16,32,32,deflate_slow),/* 5 */new Config(8,16,128,128,deflate_slow),/* 6 */new Config(8,32,128,256,deflate_slow),/* 7 */new Config(32,128,258,1024,deflate_slow),/* 8 */new Config(32,258,258,4096,deflate_slow)/* 9 max compression */];/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */const lm_init=s=>{s.window_size=2*s.w_size;/*** CLEAR_HASH(s); ***/zero(s.head);// Fill with NIL (= 0);
/* Set the default configuration parameters:
   */s.max_lazy_match=configuration_table[s.level].max_lazy;s.good_match=configuration_table[s.level].good_length;s.nice_match=configuration_table[s.level].nice_length;s.max_chain_length=configuration_table[s.level].max_chain;s.strstart=0;s.block_start=0;s.lookahead=0;s.insert=0;s.match_length=s.prev_length=MIN_MATCH-1;s.match_available=0;s.ins_h=0;};function DeflateState(){this.strm=null;/* pointer back to this zlib stream */this.status=0;/* as the name implies */this.pending_buf=null;/* output still pending */this.pending_buf_size=0;/* size of pending_buf */this.pending_out=0;/* next pending byte to output to the stream */this.pending=0;/* nb of bytes in the pending buffer */this.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */this.gzhead=null;/* gzip header information to write */this.gzindex=0;/* where in extra, name, or comment */this.method=Z_DEFLATED;/* can only be DEFLATED */this.last_flush=-1;/* value of flush param for previous deflate call */this.w_size=0;/* LZ77 window size (32K by default) */this.w_bits=0;/* log2(w_size)  (8..16) */this.w_mask=0;/* w_size - 1 */this.window=null;/* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */this.window_size=0;/* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */this.prev=null;/* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */this.head=null;/* Heads of the hash chains or NIL. */this.ins_h=0;/* hash index of string to be inserted */this.hash_size=0;/* number of elements in hash table */this.hash_bits=0;/* log2(hash_size) */this.hash_mask=0;/* hash_size-1 */this.hash_shift=0;/* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */this.block_start=0;/* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */this.match_length=0;/* length of best match */this.prev_match=0;/* previous match */this.match_available=0;/* set if previous match exists */this.strstart=0;/* start of string to insert */this.match_start=0;/* start of matching string */this.lookahead=0;/* number of valid bytes ahead in window */this.prev_length=0;/* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */this.max_chain_length=0;/* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */this.max_lazy_match=0;/* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */// That's alias to max_lazy_match, don't use directly
//this.max_insert_length = 0;
/* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */this.level=0;/* compression level (1..9) */this.strategy=0;/* favor or force Huffman coding*/this.good_match=0;/* Use a faster search when the previous match is longer than this */this.nice_match=0;/* Stop searching when current match exceeds this *//* used by trees.c: *//* Didn't use ct_data typedef below to suppress compiler warning */// struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
// struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
// struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */
// Use flat array of DOUBLE size, with interleaved fata,
// because JS does not support effective
this.dyn_ltree=new Uint16Array(HEAP_SIZE*2);this.dyn_dtree=new Uint16Array((2*D_CODES+1)*2);this.bl_tree=new Uint16Array((2*BL_CODES+1)*2);zero(this.dyn_ltree);zero(this.dyn_dtree);zero(this.bl_tree);this.l_desc=null;/* desc. for literal tree */this.d_desc=null;/* desc. for distance tree */this.bl_desc=null;/* desc. for bit length tree *///ush bl_count[MAX_BITS+1];
this.bl_count=new Uint16Array(MAX_BITS+1);/* number of codes at each bit length for an optimal tree *///int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
this.heap=new Uint16Array(2*L_CODES+1);/* heap used to build the Huffman trees */zero(this.heap);this.heap_len=0;/* number of elements in the heap */this.heap_max=0;/* element of largest frequency *//* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */this.depth=new Uint16Array(2*L_CODES+1);//uch depth[2*L_CODES+1];
zero(this.depth);/* Depth of each subtree used as tie breaker for trees of equal frequency
   */this.l_buf=0;/* buffer index for literals or lengths */this.lit_bufsize=0;/* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */this.last_lit=0;/* running index in l_buf */this.d_buf=0;/* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */this.opt_len=0;/* bit length of current block with optimal trees */this.static_len=0;/* bit length of current block with static trees */this.matches=0;/* number of string matches in current block */this.insert=0;/* bytes at end of window left to insert */this.bi_buf=0;/* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */this.bi_valid=0;/* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */// Used for window memory init. We safely ignore it for JS. That makes
// sense only for pointers and memory check tools.
//this.high_water = 0;
/* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */}const deflateResetKeep=strm=>{if(!strm||!strm.state){return err(strm,Z_STREAM_ERROR);}strm.total_in=strm.total_out=0;strm.data_type=Z_UNKNOWN;const s=strm.state;s.pending=0;s.pending_out=0;if(s.wrap<0){s.wrap=-s.wrap;/* was made negative by deflate(..., Z_FINISH); */}s.status=s.wrap?INIT_STATE:BUSY_STATE;strm.adler=s.wrap===2?0// crc32(0, Z_NULL, 0)
:1;// adler32(0, Z_NULL, 0)
s.last_flush=Z_NO_FLUSH;_tr_init(s);return Z_OK;};const deflateReset=strm=>{const ret=deflateResetKeep(strm);if(ret===Z_OK){lm_init(strm.state);}return ret;};const deflateSetHeader=(strm,head)=>{if(!strm||!strm.state){return Z_STREAM_ERROR;}if(strm.state.wrap!==2){return Z_STREAM_ERROR;}strm.state.gzhead=head;return Z_OK;};const deflateInit2=(strm,level,method,windowBits,memLevel,strategy)=>{if(!strm){// === Z_NULL
return Z_STREAM_ERROR;}let wrap=1;if(level===Z_DEFAULT_COMPRESSION){level=6;}if(windowBits<0){/* suppress zlib wrapper */wrap=0;windowBits=-windowBits;}else if(windowBits>15){wrap=2;/* write gzip wrapper instead */windowBits-=16;}if(memLevel<1||memLevel>MAX_MEM_LEVEL||method!==Z_DEFLATED||windowBits<8||windowBits>15||level<0||level>9||strategy<0||strategy>Z_FIXED){return err(strm,Z_STREAM_ERROR);}if(windowBits===8){windowBits=9;}/* until 256-byte window bug fixed */const s=new DeflateState();strm.state=s;s.strm=strm;s.wrap=wrap;s.gzhead=null;s.w_bits=windowBits;s.w_size=1<<s.w_bits;s.w_mask=s.w_size-1;s.hash_bits=memLevel+7;s.hash_size=1<<s.hash_bits;s.hash_mask=s.hash_size-1;s.hash_shift=~~((s.hash_bits+MIN_MATCH-1)/MIN_MATCH);s.window=new Uint8Array(s.w_size*2);s.head=new Uint16Array(s.hash_size);s.prev=new Uint16Array(s.w_size);// Don't need mem init magic for JS.
//s.high_water = 0;  /* nothing written to s->window yet */
s.lit_bufsize=1<<memLevel+6;/* 16K elements by default */s.pending_buf_size=s.lit_bufsize*4;//overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
//s->pending_buf = (uchf *) overlay;
s.pending_buf=new Uint8Array(s.pending_buf_size);// It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
//s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
s.d_buf=1*s.lit_bufsize;//s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
s.l_buf=(1+2)*s.lit_bufsize;s.level=level;s.strategy=strategy;s.method=method;return deflateReset(strm);};const deflateInit=(strm,level)=>{return deflateInit2(strm,level,Z_DEFLATED,MAX_WBITS,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY);};const deflate=(strm,flush)=>{let beg,val;// for gzip header write only
if(!strm||!strm.state||flush>Z_BLOCK||flush<0){return strm?err(strm,Z_STREAM_ERROR):Z_STREAM_ERROR;}const s=strm.state;if(!strm.output||!strm.input&&strm.avail_in!==0||s.status===FINISH_STATE&&flush!==Z_FINISH){return err(strm,strm.avail_out===0?Z_BUF_ERROR:Z_STREAM_ERROR);}s.strm=strm;/* just in case */const old_flush=s.last_flush;s.last_flush=flush;/* Write the header */if(s.status===INIT_STATE){if(s.wrap===2){// GZIP header
strm.adler=0;//crc32(0L, Z_NULL, 0);
put_byte(s,31);put_byte(s,139);put_byte(s,8);if(!s.gzhead){// s->gzhead == Z_NULL
put_byte(s,0);put_byte(s,0);put_byte(s,0);put_byte(s,0);put_byte(s,0);put_byte(s,s.level===9?2:s.strategy>=Z_HUFFMAN_ONLY||s.level<2?4:0);put_byte(s,OS_CODE);s.status=BUSY_STATE;}else{put_byte(s,(s.gzhead.text?1:0)+(s.gzhead.hcrc?2:0)+(!s.gzhead.extra?0:4)+(!s.gzhead.name?0:8)+(!s.gzhead.comment?0:16));put_byte(s,s.gzhead.time&0xff);put_byte(s,s.gzhead.time>>8&0xff);put_byte(s,s.gzhead.time>>16&0xff);put_byte(s,s.gzhead.time>>24&0xff);put_byte(s,s.level===9?2:s.strategy>=Z_HUFFMAN_ONLY||s.level<2?4:0);put_byte(s,s.gzhead.os&0xff);if(s.gzhead.extra&&s.gzhead.extra.length){put_byte(s,s.gzhead.extra.length&0xff);put_byte(s,s.gzhead.extra.length>>8&0xff);}if(s.gzhead.hcrc){strm.adler=crc32(strm.adler,s.pending_buf,s.pending,0);}s.gzindex=0;s.status=EXTRA_STATE;}}else// DEFLATE header
{let header=Z_DEFLATED+(s.w_bits-8<<4)<<8;let level_flags=-1;if(s.strategy>=Z_HUFFMAN_ONLY||s.level<2){level_flags=0;}else if(s.level<6){level_flags=1;}else if(s.level===6){level_flags=2;}else{level_flags=3;}header|=level_flags<<6;if(s.strstart!==0){header|=PRESET_DICT;}header+=31-header%31;s.status=BUSY_STATE;putShortMSB(s,header);/* Save the adler32 of the preset dictionary: */if(s.strstart!==0){putShortMSB(s,strm.adler>>>16);putShortMSB(s,strm.adler&0xffff);}strm.adler=1;// adler32(0L, Z_NULL, 0);
}}//#ifdef GZIP
if(s.status===EXTRA_STATE){if(s.gzhead.extra/* != Z_NULL*/){beg=s.pending;/* start of bytes to update crc */while(s.gzindex<(s.gzhead.extra.length&0xffff)){if(s.pending===s.pending_buf_size){if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}flush_pending(strm);beg=s.pending;if(s.pending===s.pending_buf_size){break;}}put_byte(s,s.gzhead.extra[s.gzindex]&0xff);s.gzindex++;}if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}if(s.gzindex===s.gzhead.extra.length){s.gzindex=0;s.status=NAME_STATE;}}else{s.status=NAME_STATE;}}if(s.status===NAME_STATE){if(s.gzhead.name/* != Z_NULL*/){beg=s.pending;/* start of bytes to update crc *///int val;
do{if(s.pending===s.pending_buf_size){if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}flush_pending(strm);beg=s.pending;if(s.pending===s.pending_buf_size){val=1;break;}}// JS specific: little magic to add zero terminator to end of string
if(s.gzindex<s.gzhead.name.length){val=s.gzhead.name.charCodeAt(s.gzindex++)&0xff;}else{val=0;}put_byte(s,val);}while(val!==0);if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}if(val===0){s.gzindex=0;s.status=COMMENT_STATE;}}else{s.status=COMMENT_STATE;}}if(s.status===COMMENT_STATE){if(s.gzhead.comment/* != Z_NULL*/){beg=s.pending;/* start of bytes to update crc *///int val;
do{if(s.pending===s.pending_buf_size){if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}flush_pending(strm);beg=s.pending;if(s.pending===s.pending_buf_size){val=1;break;}}// JS specific: little magic to add zero terminator to end of string
if(s.gzindex<s.gzhead.comment.length){val=s.gzhead.comment.charCodeAt(s.gzindex++)&0xff;}else{val=0;}put_byte(s,val);}while(val!==0);if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}if(val===0){s.status=HCRC_STATE;}}else{s.status=HCRC_STATE;}}if(s.status===HCRC_STATE){if(s.gzhead.hcrc){if(s.pending+2>s.pending_buf_size){flush_pending(strm);}if(s.pending+2<=s.pending_buf_size){put_byte(s,strm.adler&0xff);put_byte(s,strm.adler>>8&0xff);strm.adler=0;//crc32(0L, Z_NULL, 0);
s.status=BUSY_STATE;}}else{s.status=BUSY_STATE;}}//#endif
/* Flush as much pending output as possible */if(s.pending!==0){flush_pending(strm);if(strm.avail_out===0){/* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */s.last_flush=-1;return Z_OK;}/* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */}else if(strm.avail_in===0&&rank(flush)<=rank(old_flush)&&flush!==Z_FINISH){return err(strm,Z_BUF_ERROR);}/* User must not provide more input after the first FINISH: */if(s.status===FINISH_STATE&&strm.avail_in!==0){return err(strm,Z_BUF_ERROR);}/* Start a new block or continue the current one.
   */if(strm.avail_in!==0||s.lookahead!==0||flush!==Z_NO_FLUSH&&s.status!==FINISH_STATE){let bstate=s.strategy===Z_HUFFMAN_ONLY?deflate_huff(s,flush):s.strategy===Z_RLE?deflate_rle(s,flush):configuration_table[s.level].func(s,flush);if(bstate===BS_FINISH_STARTED||bstate===BS_FINISH_DONE){s.status=FINISH_STATE;}if(bstate===BS_NEED_MORE||bstate===BS_FINISH_STARTED){if(strm.avail_out===0){s.last_flush=-1;/* avoid BUF_ERROR next call, see above */}return Z_OK;/* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */}if(bstate===BS_BLOCK_DONE){if(flush===Z_PARTIAL_FLUSH){_tr_align(s);}else if(flush!==Z_BLOCK){/* FULL_FLUSH or SYNC_FLUSH */_tr_stored_block(s,0,0,false);/* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */if(flush===Z_FULL_FLUSH){/*** CLEAR_HASH(s); ***//* forget history */zero(s.head);// Fill with NIL (= 0);
if(s.lookahead===0){s.strstart=0;s.block_start=0;s.insert=0;}}}flush_pending(strm);if(strm.avail_out===0){s.last_flush=-1;/* avoid BUF_ERROR at next call, see above */return Z_OK;}}}//Assert(strm->avail_out > 0, "bug2");
//if (strm.avail_out <= 0) { throw new Error("bug2");}
if(flush!==Z_FINISH){return Z_OK;}if(s.wrap<=0){return Z_STREAM_END;}/* Write the trailer */if(s.wrap===2){put_byte(s,strm.adler&0xff);put_byte(s,strm.adler>>8&0xff);put_byte(s,strm.adler>>16&0xff);put_byte(s,strm.adler>>24&0xff);put_byte(s,strm.total_in&0xff);put_byte(s,strm.total_in>>8&0xff);put_byte(s,strm.total_in>>16&0xff);put_byte(s,strm.total_in>>24&0xff);}else{putShortMSB(s,strm.adler>>>16);putShortMSB(s,strm.adler&0xffff);}flush_pending(strm);/* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */if(s.wrap>0){s.wrap=-s.wrap;}/* write the trailer only once! */return s.pending!==0?Z_OK:Z_STREAM_END;};const deflateEnd=strm=>{if(!strm/*== Z_NULL*/||!strm.state/*== Z_NULL*/){return Z_STREAM_ERROR;}const status=strm.state.status;if(status!==INIT_STATE&&status!==EXTRA_STATE&&status!==NAME_STATE&&status!==COMMENT_STATE&&status!==HCRC_STATE&&status!==BUSY_STATE&&status!==FINISH_STATE){return err(strm,Z_STREAM_ERROR);}strm.state=null;return status===BUSY_STATE?err(strm,Z_DATA_ERROR):Z_OK;};/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */const deflateSetDictionary=(strm,dictionary)=>{let dictLength=dictionary.length;if(!strm/*== Z_NULL*/||!strm.state/*== Z_NULL*/){return Z_STREAM_ERROR;}const s=strm.state;const wrap=s.wrap;if(wrap===2||wrap===1&&s.status!==INIT_STATE||s.lookahead){return Z_STREAM_ERROR;}/* when using zlib wrappers, compute Adler-32 for provided dictionary */if(wrap===1){/* adler32(strm->adler, dictionary, dictLength); */strm.adler=adler32(strm.adler,dictionary,dictLength,0);}s.wrap=0;/* avoid computing Adler-32 in read_buf *//* if dictionary would fill window, just replace the history */if(dictLength>=s.w_size){if(wrap===0){/* already empty otherwise *//*** CLEAR_HASH(s); ***/zero(s.head);// Fill with NIL (= 0);
s.strstart=0;s.block_start=0;s.insert=0;}/* use the tail */// dictionary = dictionary.slice(dictLength - s.w_size);
let tmpDict=new Uint8Array(s.w_size);tmpDict.set(dictionary.subarray(dictLength-s.w_size,dictLength),0);dictionary=tmpDict;dictLength=s.w_size;}/* insert dictionary into window and hash */const avail=strm.avail_in;const next=strm.next_in;const input=strm.input;strm.avail_in=dictLength;strm.next_in=0;strm.input=dictionary;fill_window(s);while(s.lookahead>=MIN_MATCH){let str=s.strstart;let n=s.lookahead-(MIN_MATCH-1);do{/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */s.ins_h=HASH(s,s.ins_h,s.window[str+MIN_MATCH-1]);s.prev[str&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=str;str++;}while(--n);s.strstart=str;s.lookahead=MIN_MATCH-1;fill_window(s);}s.strstart+=s.lookahead;s.block_start=s.strstart;s.insert=s.lookahead;s.lookahead=0;s.match_length=s.prev_length=MIN_MATCH-1;s.match_available=0;strm.next_in=next;strm.input=input;strm.avail_in=avail;s.wrap=wrap;return Z_OK;};module.exports.deflateInit=deflateInit;module.exports.deflateInit2=deflateInit2;module.exports.deflateReset=deflateReset;module.exports.deflateResetKeep=deflateResetKeep;module.exports.deflateSetHeader=deflateSetHeader;module.exports.deflate=deflate;module.exports.deflateEnd=deflateEnd;module.exports.deflateSetDictionary=deflateSetDictionary;module.exports.deflateInfo='pako deflate (from Nodeca project)';/* Not implemented
module.exports.deflateBound = deflateBound;
module.exports.deflateCopy = deflateCopy;
module.exports.deflateParams = deflateParams;
module.exports.deflatePending = deflatePending;
module.exports.deflatePrime = deflatePrime;
module.exports.deflateTune = deflateTune;
*/},{"./adler32":13,"./constants":14,"./crc32":15,"./messages":21,"./trees":22}],17:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
function GZheader(){/* true if compressed data believed to be text */this.text=0;/* modification time */this.time=0;/* extra flags (not used when writing a gzip file) */this.xflags=0;/* operating system */this.os=0;/* pointer to extra field or Z_NULL if none */this.extra=null;/* extra field length (valid if extra != Z_NULL) */this.extra_len=0;// Actually, we don't need it in JS,
// but leave for few code modifications
//
// Setup limits is not necessary because in js we should not preallocate memory
// for inflate use constant limit in 65536 bytes
//
/* space at extra (only when reading header) */// this.extra_max  = 0;
/* pointer to zero-terminated file name or Z_NULL */this.name='';/* space at name (only when reading header) */// this.name_max   = 0;
/* pointer to zero-terminated comment or Z_NULL */this.comment='';/* space at comment (only when reading header) */// this.comm_max   = 0;
/* true if there was or will be a header crc */this.hcrc=0;/* true when done reading gzip header (not used when writing a gzip file) */this.done=false;}module.exports=GZheader;},{}],18:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// See state defs from inflate.js
const BAD=30;/* got a data error -- remain here until reset */const TYPE=12;/* i: waiting for type bits, including last-flag bit *//*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */module.exports=function inflate_fast(strm,start){let _in;/* local strm.input */let last;/* have enough input while in < last */let _out;/* local strm.output */let beg;/* inflate()'s initial strm.output */let end;/* while out < end, enough space available *///#ifdef INFLATE_STRICT
let dmax;/* maximum distance from zlib header *///#endif
let wsize;/* window size or zero if not using window */let whave;/* valid bytes in the window */let wnext;/* window write index */// Use `s_window` instead `window`, avoid conflict with instrumentation tools
let s_window;/* allocated sliding window, if wsize != 0 */let hold;/* local strm.hold */let bits;/* local strm.bits */let lcode;/* local strm.lencode */let dcode;/* local strm.distcode */let lmask;/* mask for first level of length codes */let dmask;/* mask for first level of distance codes */let here;/* retrieved table entry */let op;/* code bits, operation, extra bits, or *//*  window position, window bytes to copy */let len;/* match length, unused bytes */let dist;/* match distance */let from;/* where to copy match from */let from_source;let input,output;// JS specific, because we have no pointers
/* copy state to local variables */const state=strm.state;//here = state.here;
_in=strm.next_in;input=strm.input;last=_in+(strm.avail_in-5);_out=strm.next_out;output=strm.output;beg=_out-(start-strm.avail_out);end=_out+(strm.avail_out-257);//#ifdef INFLATE_STRICT
dmax=state.dmax;//#endif
wsize=state.wsize;whave=state.whave;wnext=state.wnext;s_window=state.window;hold=state.hold;bits=state.bits;lcode=state.lencode;dcode=state.distcode;lmask=(1<<state.lenbits)-1;dmask=(1<<state.distbits)-1;/* decode literals and length/distances until end-of-block or not enough
     input data or output space */top:do{if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=lcode[hold&lmask];dolen:for(;;){// Goto emulation
op=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op===0){/* literal *///Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
//        "inflate:         literal '%c'\n" :
//        "inflate:         literal 0x%02x\n", here.val));
output[_out++]=here&0xffff/*here.val*/;}else if(op&16){/* length base */len=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(op){if(bits<op){hold+=input[_in++]<<bits;bits+=8;}len+=hold&(1<<op)-1;hold>>>=op;bits-=op;}//Tracevv((stderr, "inflate:         length %u\n", len));
if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=dcode[hold&dmask];dodist:for(;;){// goto emulation
op=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op&16){/* distance base */dist=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(bits<op){hold+=input[_in++]<<bits;bits+=8;if(bits<op){hold+=input[_in++]<<bits;bits+=8;}}dist+=hold&(1<<op)-1;//#ifdef INFLATE_STRICT
if(dist>dmax){strm.msg='invalid distance too far back';state.mode=BAD;break top;}//#endif
hold>>>=op;bits-=op;//Tracevv((stderr, "inflate:         distance %u\n", dist));
op=_out-beg;/* max distance in output */if(dist>op){/* see if copy from window */op=dist-op;/* distance back in window */if(op>whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break top;}// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
}from=0;// window index
from_source=s_window;if(wnext===0){/* very common case */from+=wsize-op;if(op<len){/* some from window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}else if(wnext<op){/* wrap around window */from+=wsize+wnext-op;op-=wnext;if(op<len){/* some from end of window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=0;if(wnext<len){/* some from start of window */op=wnext;len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}}else{/* contiguous in window */from+=wnext-op;if(op<len){/* some from window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}while(len>2){output[_out++]=from_source[from++];output[_out++]=from_source[from++];output[_out++]=from_source[from++];len-=3;}if(len){output[_out++]=from_source[from++];if(len>1){output[_out++]=from_source[from++];}}}else{from=_out-dist;/* copy direct from output */do{/* minimum length is three */output[_out++]=output[from++];output[_out++]=output[from++];output[_out++]=output[from++];len-=3;}while(len>2);if(len){output[_out++]=output[from++];if(len>1){output[_out++]=output[from++];}}}}else if((op&64)===0){/* 2nd level distance code */here=dcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dodist;}else{strm.msg='invalid distance code';state.mode=BAD;break top;}break;// need to emulate goto via "continue"
}}else if((op&64)===0){/* 2nd level length code */here=lcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dolen;}else if(op&32){/* end-of-block *///Tracevv((stderr, "inflate:         end of block\n"));
state.mode=TYPE;break top;}else{strm.msg='invalid literal/length code';state.mode=BAD;break top;}break;// need to emulate goto via "continue"
}}while(_in<last&&_out<end);/* return unused bytes (on entry, bits < 8, so in won't go too far back) */len=bits>>3;_in-=len;bits-=len<<3;hold&=(1<<bits)-1;/* update state and return */strm.next_in=_in;strm.next_out=_out;strm.avail_in=_in<last?5+(last-_in):5-(_in-last);strm.avail_out=_out<end?257+(end-_out):257-(_out-end);state.hold=hold;state.bits=bits;return;};},{}],19:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
const adler32=require('./adler32');const crc32=require('./crc32');const inflate_fast=require('./inffast');const inflate_table=require('./inftrees');const CODES=0;const LENS=1;const DISTS=2;/* Public constants ==========================================================*//* ===========================================================================*/const{Z_FINISH,Z_BLOCK,Z_TREES,Z_OK,Z_STREAM_END,Z_NEED_DICT,Z_STREAM_ERROR,Z_DATA_ERROR,Z_MEM_ERROR,Z_BUF_ERROR,Z_DEFLATED}=require('./constants');/* STATES ====================================================================*//* ===========================================================================*/const HEAD=1;/* i: waiting for magic header */const FLAGS=2;/* i: waiting for method and flags (gzip) */const TIME=3;/* i: waiting for modification time (gzip) */const OS=4;/* i: waiting for extra flags and operating system (gzip) */const EXLEN=5;/* i: waiting for extra length (gzip) */const EXTRA=6;/* i: waiting for extra bytes (gzip) */const NAME=7;/* i: waiting for end of file name (gzip) */const COMMENT=8;/* i: waiting for end of comment (gzip) */const HCRC=9;/* i: waiting for header crc (gzip) */const DICTID=10;/* i: waiting for dictionary check value */const DICT=11;/* waiting for inflateSetDictionary() call */const TYPE=12;/* i: waiting for type bits, including last-flag bit */const TYPEDO=13;/* i: same, but skip check to exit inflate on new block */const STORED=14;/* i: waiting for stored size (length and complement) */const COPY_=15;/* i/o: same as COPY below, but only first time in */const COPY=16;/* i/o: waiting for input or output to copy stored block */const TABLE=17;/* i: waiting for dynamic block table lengths */const LENLENS=18;/* i: waiting for code length code lengths */const CODELENS=19;/* i: waiting for length/lit and distance code lengths */const LEN_=20;/* i: same as LEN below, but only first time in */const LEN=21;/* i: waiting for length/lit/eob code */const LENEXT=22;/* i: waiting for length extra bits */const DIST=23;/* i: waiting for distance code */const DISTEXT=24;/* i: waiting for distance extra bits */const MATCH=25;/* o: waiting for output space to copy string */const LIT=26;/* o: waiting for output space to write literal */const CHECK=27;/* i: waiting for 32-bit check value */const LENGTH=28;/* i: waiting for 32-bit length (gzip) */const DONE=29;/* finished check, done -- remain here until reset */const BAD=30;/* got a data error -- remain here until reset */const MEM=31;/* got an inflate() memory error -- remain here until reset */const SYNC=32;/* looking for synchronization bytes to restart inflate() *//* ===========================================================================*/const ENOUGH_LENS=852;const ENOUGH_DISTS=592;//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);
const MAX_WBITS=15;/* 32K LZ77 window */const DEF_WBITS=MAX_WBITS;const zswap32=q=>{return(q>>>24&0xff)+(q>>>8&0xff00)+((q&0xff00)<<8)+((q&0xff)<<24);};function InflateState(){this.mode=0;/* current inflate mode */this.last=false;/* true if processing last block */this.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */this.havedict=false;/* true if dictionary provided */this.flags=0;/* gzip header method and flags (0 if zlib) */this.dmax=0;/* zlib header max distance (INFLATE_STRICT) */this.check=0;/* protected copy of check value */this.total=0;/* protected copy of output count */// TODO: may be {}
this.head=null;/* where to save gzip header information *//* sliding window */this.wbits=0;/* log base 2 of requested window size */this.wsize=0;/* window size or zero if not using window */this.whave=0;/* valid bytes in the window */this.wnext=0;/* window write index */this.window=null;/* allocated sliding window, if needed *//* bit accumulator */this.hold=0;/* input bit accumulator */this.bits=0;/* number of bits in "in" *//* for string and stored block copying */this.length=0;/* literal or length of data to copy */this.offset=0;/* distance back to copy string from *//* for table and code decoding */this.extra=0;/* extra bits needed *//* fixed and dynamic code tables */this.lencode=null;/* starting table for length/literal codes */this.distcode=null;/* starting table for distance codes */this.lenbits=0;/* index bits for lencode */this.distbits=0;/* index bits for distcode *//* dynamic table building */this.ncode=0;/* number of code length code lengths */this.nlen=0;/* number of length code lengths */this.ndist=0;/* number of distance code lengths */this.have=0;/* number of code lengths in lens[] */this.next=null;/* next available space in codes[] */this.lens=new Uint16Array(320);/* temporary storage for code lengths */this.work=new Uint16Array(288);/* work area for code table building *//*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  *///this.codes = new Int32Array(ENOUGH);       /* space for code tables */
this.lendyn=null;/* dynamic table for length/literal codes (JS specific) */this.distdyn=null;/* dynamic table for distance codes (JS specific) */this.sane=0;/* if false, allow invalid distance too far */this.back=0;/* bits back of last unprocessed length/lit */this.was=0;/* initial length of match */}const inflateResetKeep=strm=>{if(!strm||!strm.state){return Z_STREAM_ERROR;}const state=strm.state;strm.total_in=strm.total_out=state.total=0;strm.msg='';/*Z_NULL*/if(state.wrap){/* to support ill-conceived Java test suite */strm.adler=state.wrap&1;}state.mode=HEAD;state.last=0;state.havedict=0;state.dmax=32768;state.head=null/*Z_NULL*/;state.hold=0;state.bits=0;//state.lencode = state.distcode = state.next = state.codes;
state.lencode=state.lendyn=new Int32Array(ENOUGH_LENS);state.distcode=state.distdyn=new Int32Array(ENOUGH_DISTS);state.sane=1;state.back=-1;//Tracev((stderr, "inflate: reset\n"));
return Z_OK;};const inflateReset=strm=>{if(!strm||!strm.state){return Z_STREAM_ERROR;}const state=strm.state;state.wsize=0;state.whave=0;state.wnext=0;return inflateResetKeep(strm);};const inflateReset2=(strm,windowBits)=>{let wrap;/* get the state */if(!strm||!strm.state){return Z_STREAM_ERROR;}const state=strm.state;/* extract wrap request from windowBits parameter */if(windowBits<0){wrap=0;windowBits=-windowBits;}else{wrap=(windowBits>>4)+1;if(windowBits<48){windowBits&=15;}}/* set number of window bits, free window if different */if(windowBits&&(windowBits<8||windowBits>15)){return Z_STREAM_ERROR;}if(state.window!==null&&state.wbits!==windowBits){state.window=null;}/* update state and reset the rest of it */state.wrap=wrap;state.wbits=windowBits;return inflateReset(strm);};const inflateInit2=(strm,windowBits)=>{if(!strm){return Z_STREAM_ERROR;}//strm.msg = Z_NULL;                 /* in case we return an error */
const state=new InflateState();//if (state === Z_NULL) return Z_MEM_ERROR;
//Tracev((stderr, "inflate: allocated\n"));
strm.state=state;state.window=null/*Z_NULL*/;const ret=inflateReset2(strm,windowBits);if(ret!==Z_OK){strm.state=null/*Z_NULL*/;}return ret;};const inflateInit=strm=>{return inflateInit2(strm,DEF_WBITS);};/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */let virgin=true;let lenfix,distfix;// We have no pointers in JS, so keep tables separate
const fixedtables=state=>{/* build fixed huffman tables if first call (may not be thread safe) */if(virgin){lenfix=new Int32Array(512);distfix=new Int32Array(32);/* literal/length table */let sym=0;while(sym<144){state.lens[sym++]=8;}while(sym<256){state.lens[sym++]=9;}while(sym<280){state.lens[sym++]=7;}while(sym<288){state.lens[sym++]=8;}inflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});/* distance table */sym=0;while(sym<32){state.lens[sym++]=5;}inflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});/* do this just once */virgin=false;}state.lencode=lenfix;state.lenbits=9;state.distcode=distfix;state.distbits=5;};/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */const updatewindow=(strm,src,end,copy)=>{let dist;const state=strm.state;/* if it hasn't been done already, allocate space for the window */if(state.window===null){state.wsize=1<<state.wbits;state.wnext=0;state.whave=0;state.window=new Uint8Array(state.wsize);}/* copy state->wsize or less output bytes into the circular window */if(copy>=state.wsize){state.window.set(src.subarray(end-state.wsize,end),0);state.wnext=0;state.whave=state.wsize;}else{dist=state.wsize-state.wnext;if(dist>copy){dist=copy;}//zmemcpy(state->window + state->wnext, end - copy, dist);
state.window.set(src.subarray(end-copy,end-copy+dist),state.wnext);copy-=dist;if(copy){//zmemcpy(state->window, end - copy, copy);
state.window.set(src.subarray(end-copy,end),0);state.wnext=copy;state.whave=state.wsize;}else{state.wnext+=dist;if(state.wnext===state.wsize){state.wnext=0;}if(state.whave<state.wsize){state.whave+=dist;}}}return 0;};const inflate=(strm,flush)=>{let state;let input,output;// input/output buffers
let next;/* next input INDEX */let put;/* next output INDEX */let have,left;/* available input and output */let hold;/* bit buffer */let bits;/* bits in bit buffer */let _in,_out;/* save starting available input and output */let copy;/* number of stored or match bytes to copy */let from;/* where to copy match bytes from */let from_source;let here=0;/* current decoding table entry */let here_bits,here_op,here_val;// paked "here" denormalized (JS specific)
//let last;                   /* parent table entry */
let last_bits,last_op,last_val;// paked "last" denormalized (JS specific)
let len;/* length to copy for repeats, bits to drop */let ret;/* return code */const hbuf=new Uint8Array(4);/* buffer for gzip header crc calculation */let opts;let n;// temporary variable for NEED_BITS
const order=/* permutation of code lengths */new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!strm||!strm.state||!strm.output||!strm.input&&strm.avail_in!==0){return Z_STREAM_ERROR;}state=strm.state;if(state.mode===TYPE){state.mode=TYPEDO;}/* skip check *///--- LOAD() ---
put=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---
_in=have;_out=left;ret=Z_OK;inf_leave:// goto emulation
for(;;){switch(state.mode){case HEAD:if(state.wrap===0){state.mode=TYPEDO;break;}//=== NEEDBITS(16);
while(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
if(state.wrap&2&&hold===0x8b1f){/* gzip header */state.check=0/*crc32(0L, Z_NULL, 0)*/;//=== CRC2(state.check, hold);
hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//
//=== INITBITS();
hold=0;bits=0;//===//
state.mode=FLAGS;break;}state.flags=0;/* expect zlib header */if(state.head){state.head.done=false;}if(!(state.wrap&1)||/* check if zlib header allowed */(((hold&0xff)<</*BITS(8)*/8)+(hold>>8))%31){strm.msg='incorrect header check';state.mode=BAD;break;}if((hold&0x0f)!==/*BITS(4)*/Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}//--- DROPBITS(4) ---//
hold>>>=4;bits-=4;//---//
len=(hold&0x0f)+/*BITS(4)*/8;if(state.wbits===0){state.wbits=len;}else if(len>state.wbits){strm.msg='invalid window size';state.mode=BAD;break;}// !!! pako patch. Force use `options.windowBits` if passed.
// Required to always use max window size by default.
state.dmax=1<<state.wbits;//state.dmax = 1 << len;
//Tracev((stderr, "inflate:   zlib header ok\n"));
strm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=hold&0x200?DICTID:TYPE;//=== INITBITS();
hold=0;bits=0;//===//
break;case FLAGS://=== NEEDBITS(16); */
while(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.flags=hold;if((state.flags&0xff)!==Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}if(state.flags&0xe000){strm.msg='unknown header flags set';state.mode=BAD;break;}if(state.head){state.head.text=hold>>8&1;}if(state.flags&0x0200){//=== CRC2(state.check, hold);
hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//
}//=== INITBITS();
hold=0;bits=0;//===//
state.mode=TIME;/* falls through */case TIME://=== NEEDBITS(32); */
while(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
if(state.head){state.head.time=hold;}if(state.flags&0x0200){//=== CRC4(state.check, hold)
hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;hbuf[2]=hold>>>16&0xff;hbuf[3]=hold>>>24&0xff;state.check=crc32(state.check,hbuf,4,0);//===
}//=== INITBITS();
hold=0;bits=0;//===//
state.mode=OS;/* falls through */case OS://=== NEEDBITS(16); */
while(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
if(state.head){state.head.xflags=hold&0xff;state.head.os=hold>>8;}if(state.flags&0x0200){//=== CRC2(state.check, hold);
hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//
}//=== INITBITS();
hold=0;bits=0;//===//
state.mode=EXLEN;/* falls through */case EXLEN:if(state.flags&0x0400){//=== NEEDBITS(16); */
while(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.length=hold;if(state.head){state.head.extra_len=hold;}if(state.flags&0x0200){//=== CRC2(state.check, hold);
hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//
}//=== INITBITS();
hold=0;bits=0;//===//
}else if(state.head){state.head.extra=null/*Z_NULL*/;}state.mode=EXTRA;/* falls through */case EXTRA:if(state.flags&0x0400){copy=state.length;if(copy>have){copy=have;}if(copy){if(state.head){len=state.head.extra_len-state.length;if(!state.head.extra){// Use untyped array for more convenient processing later
state.head.extra=new Uint8Array(state.head.extra_len);}state.head.extra.set(input.subarray(next,// extra field is limited to 65536 bytes
// - no need for additional size check
next+copy),/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/len);//zmemcpy(state.head.extra + len, next,
//        len + copy > state.head.extra_max ?
//        state.head.extra_max - len : copy);
}if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;state.length-=copy;}if(state.length){break inf_leave;}}state.length=0;state.mode=NAME;/* falls through */case NAME:if(state.flags&0x0800){if(have===0){break inf_leave;}copy=0;do{// TODO: 2 or 1 bytes?
len=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.name_max*/){state.head.name+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.name=null;}state.length=0;state.mode=COMMENT;/* falls through */case COMMENT:if(state.flags&0x1000){if(have===0){break inf_leave;}copy=0;do{len=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.comm_max*/){state.head.comment+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.comment=null;}state.mode=HCRC;/* falls through */case HCRC:if(state.flags&0x0200){//=== NEEDBITS(16); */
while(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
if(hold!==(state.check&0xffff)){strm.msg='header crc mismatch';state.mode=BAD;break;}//=== INITBITS();
hold=0;bits=0;//===//
}if(state.head){state.head.hcrc=state.flags>>9&1;state.head.done=true;}strm.adler=state.check=0;state.mode=TYPE;break;case DICTID://=== NEEDBITS(32); */
while(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
strm.adler=state.check=zswap32(hold);//=== INITBITS();
hold=0;bits=0;//===//
state.mode=DICT;/* falls through */case DICT:if(state.havedict===0){//--- RESTORE() ---
strm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---
return Z_NEED_DICT;}strm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=TYPE;/* falls through */case TYPE:if(flush===Z_BLOCK||flush===Z_TREES){break inf_leave;}/* falls through */case TYPEDO:if(state.last){//--- BYTEBITS() ---//
hold>>>=bits&7;bits-=bits&7;//---//
state.mode=CHECK;break;}//=== NEEDBITS(3); */
while(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.last=hold&0x01/*BITS(1)*/;//--- DROPBITS(1) ---//
hold>>>=1;bits-=1;//---//
switch(hold&0x03){/*BITS(2)*/case 0:/* stored block *///Tracev((stderr, "inflate:     stored block%s\n",
//        state.last ? " (last)" : ""));
state.mode=STORED;break;case 1:/* fixed block */fixedtables(state);//Tracev((stderr, "inflate:     fixed codes block%s\n",
//        state.last ? " (last)" : ""));
state.mode=LEN_;/* decode codes */if(flush===Z_TREES){//--- DROPBITS(2) ---//
hold>>>=2;bits-=2;//---//
break inf_leave;}break;case 2:/* dynamic block *///Tracev((stderr, "inflate:     dynamic codes block%s\n",
//        state.last ? " (last)" : ""));
state.mode=TABLE;break;case 3:strm.msg='invalid block type';state.mode=BAD;}//--- DROPBITS(2) ---//
hold>>>=2;bits-=2;//---//
break;case STORED://--- BYTEBITS() ---// /* go to byte boundary */
hold>>>=bits&7;bits-=bits&7;//---//
//=== NEEDBITS(32); */
while(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
if((hold&0xffff)!==(hold>>>16^0xffff)){strm.msg='invalid stored block lengths';state.mode=BAD;break;}state.length=hold&0xffff;//Tracev((stderr, "inflate:       stored length %u\n",
//        state.length));
//=== INITBITS();
hold=0;bits=0;//===//
state.mode=COPY_;if(flush===Z_TREES){break inf_leave;}/* falls through */case COPY_:state.mode=COPY;/* falls through */case COPY:copy=state.length;if(copy){if(copy>have){copy=have;}if(copy>left){copy=left;}if(copy===0){break inf_leave;}//--- zmemcpy(put, next, copy); ---
output.set(input.subarray(next,next+copy),put);//---//
have-=copy;next+=copy;left-=copy;put+=copy;state.length-=copy;break;}//Tracev((stderr, "inflate:       stored end\n"));
state.mode=TYPE;break;case TABLE://=== NEEDBITS(14); */
while(bits<14){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.nlen=(hold&0x1f)+/*BITS(5)*/257;//--- DROPBITS(5) ---//
hold>>>=5;bits-=5;//---//
state.ndist=(hold&0x1f)+/*BITS(5)*/1;//--- DROPBITS(5) ---//
hold>>>=5;bits-=5;//---//
state.ncode=(hold&0x0f)+/*BITS(4)*/4;//--- DROPBITS(4) ---//
hold>>>=4;bits-=4;//---//
//#ifndef PKZIP_BUG_WORKAROUND
if(state.nlen>286||state.ndist>30){strm.msg='too many length or distance symbols';state.mode=BAD;break;}//#endif
//Tracev((stderr, "inflate:       table sizes ok\n"));
state.have=0;state.mode=LENLENS;/* falls through */case LENLENS:while(state.have<state.ncode){//=== NEEDBITS(3);
while(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.lens[order[state.have++]]=hold&0x07;//BITS(3);
//--- DROPBITS(3) ---//
hold>>>=3;bits-=3;//---//
}while(state.have<19){state.lens[order[state.have++]]=0;}// We have separate tables & no pointers. 2 commented lines below not needed.
//state.next = state.codes;
//state.lencode = state.next;
// Switch to use dynamic table
state.lencode=state.lendyn;state.lenbits=7;opts={bits:state.lenbits};ret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);state.lenbits=opts.bits;if(ret){strm.msg='invalid code lengths set';state.mode=BAD;break;}//Tracev((stderr, "inflate:       code lengths ok\n"));
state.have=0;state.mode=CODELENS;/* falls through */case CODELENS:while(state.have<state.nlen+state.ndist){for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//
if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//
}if(here_val<16){//--- DROPBITS(here.bits) ---//
hold>>>=here_bits;bits-=here_bits;//---//
state.lens[state.have++]=here_val;}else{if(here_val===16){//=== NEEDBITS(here.bits + 2);
n=here_bits+2;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
//--- DROPBITS(here.bits) ---//
hold>>>=here_bits;bits-=here_bits;//---//
if(state.have===0){strm.msg='invalid bit length repeat';state.mode=BAD;break;}len=state.lens[state.have-1];copy=3+(hold&0x03);//BITS(2);
//--- DROPBITS(2) ---//
hold>>>=2;bits-=2;//---//
}else if(here_val===17){//=== NEEDBITS(here.bits + 3);
n=here_bits+3;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
//--- DROPBITS(here.bits) ---//
hold>>>=here_bits;bits-=here_bits;//---//
len=0;copy=3+(hold&0x07);//BITS(3);
//--- DROPBITS(3) ---//
hold>>>=3;bits-=3;//---//
}else{//=== NEEDBITS(here.bits + 7);
n=here_bits+7;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
//--- DROPBITS(here.bits) ---//
hold>>>=here_bits;bits-=here_bits;//---//
len=0;copy=11+(hold&0x7f);//BITS(7);
//--- DROPBITS(7) ---//
hold>>>=7;bits-=7;//---//
}if(state.have+copy>state.nlen+state.ndist){strm.msg='invalid bit length repeat';state.mode=BAD;break;}while(copy--){state.lens[state.have++]=len;}}}/* handle error breaks in while */if(state.mode===BAD){break;}/* check for end-of-block code (better have one) */if(state.lens[256]===0){strm.msg='invalid code -- missing end-of-block';state.mode=BAD;break;}/* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */state.lenbits=9;opts={bits:state.lenbits};ret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.
// state.next_index = opts.table_index;
state.lenbits=opts.bits;// state.lencode = state.next;
if(ret){strm.msg='invalid literal/lengths set';state.mode=BAD;break;}state.distbits=6;//state.distcode.copy(state.codes);
// Switch to use dynamic table
state.distcode=state.distdyn;opts={bits:state.distbits};ret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.
// state.next_index = opts.table_index;
state.distbits=opts.bits;// state.distcode = state.next;
if(ret){strm.msg='invalid distances set';state.mode=BAD;break;}//Tracev((stderr, 'inflate:       codes ok\n'));
state.mode=LEN_;if(flush===Z_TREES){break inf_leave;}/* falls through */case LEN_:state.mode=LEN;/* falls through */case LEN:if(have>=6&&left>=258){//--- RESTORE() ---
strm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---
inflate_fast(strm,_out);//--- LOAD() ---
put=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---
if(state.mode===TYPE){state.back=-1;}break;}state.back=0;for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//
if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//
}if(here_op&&(here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//
if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//
}//--- DROPBITS(last.bits) ---//
hold>>>=last_bits;bits-=last_bits;//---//
state.back+=last_bits;}//--- DROPBITS(here.bits) ---//
hold>>>=here_bits;bits-=here_bits;//---//
state.back+=here_bits;state.length=here_val;if(here_op===0){//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
//        "inflate:         literal '%c'\n" :
//        "inflate:         literal 0x%02x\n", here.val));
state.mode=LIT;break;}if(here_op&32){//Tracevv((stderr, "inflate:         end of block\n"));
state.back=-1;state.mode=TYPE;break;}if(here_op&64){strm.msg='invalid literal/length code';state.mode=BAD;break;}state.extra=here_op&15;state.mode=LENEXT;/* falls through */case LENEXT:if(state.extra){//=== NEEDBITS(state.extra);
n=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.length+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//
hold>>>=state.extra;bits-=state.extra;//---//
state.back+=state.extra;}//Tracevv((stderr, "inflate:         length %u\n", state.length));
state.was=state.length;state.mode=DIST;/* falls through */case DIST:for(;;){here=state.distcode[hold&(1<<state.distbits)-1];/*BITS(state.distbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//
if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//
}if((here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//
if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//
}//--- DROPBITS(last.bits) ---//
hold>>>=last_bits;bits-=last_bits;//---//
state.back+=last_bits;}//--- DROPBITS(here.bits) ---//
hold>>>=here_bits;bits-=here_bits;//---//
state.back+=here_bits;if(here_op&64){strm.msg='invalid distance code';state.mode=BAD;break;}state.offset=here_val;state.extra=here_op&15;state.mode=DISTEXT;/* falls through */case DISTEXT:if(state.extra){//=== NEEDBITS(state.extra);
n=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
state.offset+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//
hold>>>=state.extra;bits-=state.extra;//---//
state.back+=state.extra;}//#ifdef INFLATE_STRICT
if(state.offset>state.dmax){strm.msg='invalid distance too far back';state.mode=BAD;break;}//#endif
//Tracevv((stderr, "inflate:         distance %u\n", state.offset));
state.mode=MATCH;/* falls through */case MATCH:if(left===0){break inf_leave;}copy=_out-left;if(state.offset>copy){/* copy from window */copy=state.offset-copy;if(copy>state.whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break;}// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
}if(copy>state.wnext){copy-=state.wnext;from=state.wsize-copy;}else{from=state.wnext-copy;}if(copy>state.length){copy=state.length;}from_source=state.window;}else{/* copy from output */from_source=output;from=put-state.offset;copy=state.length;}if(copy>left){copy=left;}left-=copy;state.length-=copy;do{output[put++]=from_source[from++];}while(--copy);if(state.length===0){state.mode=LEN;}break;case LIT:if(left===0){break inf_leave;}output[put++]=state.length;left--;state.mode=LEN;break;case CHECK:if(state.wrap){//=== NEEDBITS(32);
while(bits<32){if(have===0){break inf_leave;}have--;// Use '|' instead of '+' to make sure that result is signed
hold|=input[next++]<<bits;bits+=8;}//===//
_out-=left;strm.total_out+=_out;state.total+=_out;if(_out){strm.adler=state.check=/*UPDATE(state.check, put - _out, _out);*/state.flags?crc32(state.check,output,_out,put-_out):adler32(state.check,output,_out,put-_out);}_out=left;// NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
if((state.flags?hold:zswap32(hold))!==state.check){strm.msg='incorrect data check';state.mode=BAD;break;}//=== INITBITS();
hold=0;bits=0;//===//
//Tracev((stderr, "inflate:   check matches trailer\n"));
}state.mode=LENGTH;/* falls through */case LENGTH:if(state.wrap&&state.flags){//=== NEEDBITS(32);
while(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//
if(hold!==(state.total&0xffffffff)){strm.msg='incorrect length check';state.mode=BAD;break;}//=== INITBITS();
hold=0;bits=0;//===//
//Tracev((stderr, "inflate:   length matches trailer\n"));
}state.mode=DONE;/* falls through */case DONE:ret=Z_STREAM_END;break inf_leave;case BAD:ret=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:/* falls through */default:return Z_STREAM_ERROR;}}// inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"
/*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   *///--- RESTORE() ---
strm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---
if(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<CHECK||flush!==Z_FINISH)){if(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){state.mode=MEM;return Z_MEM_ERROR;}}_in-=strm.avail_in;_out-=strm.avail_out;strm.total_in+=_in;strm.total_out+=_out;state.total+=_out;if(state.wrap&&_out){strm.adler=state.check=/*UPDATE(state.check, strm.next_out - _out, _out);*/state.flags?crc32(state.check,output,_out,strm.next_out-_out):adler32(state.check,output,_out,strm.next_out-_out);}strm.data_type=state.bits+(state.last?64:0)+(state.mode===TYPE?128:0)+(state.mode===LEN_||state.mode===COPY_?256:0);if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){ret=Z_BUF_ERROR;}return ret;};const inflateEnd=strm=>{if(!strm||!strm.state/*|| strm->zfree == (free_func)0*/){return Z_STREAM_ERROR;}let state=strm.state;if(state.window){state.window=null;}strm.state=null;return Z_OK;};const inflateGetHeader=(strm,head)=>{/* check state */if(!strm||!strm.state){return Z_STREAM_ERROR;}const state=strm.state;if((state.wrap&2)===0){return Z_STREAM_ERROR;}/* save header structure */state.head=head;head.done=false;return Z_OK;};const inflateSetDictionary=(strm,dictionary)=>{const dictLength=dictionary.length;let state;let dictid;let ret;/* check state */if(!strm/* == Z_NULL */||!strm.state/* == Z_NULL */){return Z_STREAM_ERROR;}state=strm.state;if(state.wrap!==0&&state.mode!==DICT){return Z_STREAM_ERROR;}/* check for correct dictionary identifier */if(state.mode===DICT){dictid=1;/* adler32(0, null, 0)*//* dictid = adler32(dictid, dictionary, dictLength); */dictid=adler32(dictid,dictionary,dictLength,0);if(dictid!==state.check){return Z_DATA_ERROR;}}/* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */ret=updatewindow(strm,dictionary,dictLength,dictLength);if(ret){state.mode=MEM;return Z_MEM_ERROR;}state.havedict=1;// Tracev((stderr, "inflate:   dictionary set\n"));
return Z_OK;};module.exports.inflateReset=inflateReset;module.exports.inflateReset2=inflateReset2;module.exports.inflateResetKeep=inflateResetKeep;module.exports.inflateInit=inflateInit;module.exports.inflateInit2=inflateInit2;module.exports.inflate=inflate;module.exports.inflateEnd=inflateEnd;module.exports.inflateGetHeader=inflateGetHeader;module.exports.inflateSetDictionary=inflateSetDictionary;module.exports.inflateInfo='pako inflate (from Nodeca project)';/* Not implemented
module.exports.inflateCopy = inflateCopy;
module.exports.inflateGetDictionary = inflateGetDictionary;
module.exports.inflateMark = inflateMark;
module.exports.inflatePrime = inflatePrime;
module.exports.inflateSync = inflateSync;
module.exports.inflateSyncPoint = inflateSyncPoint;
module.exports.inflateUndermine = inflateUndermine;
*/},{"./adler32":13,"./constants":14,"./crc32":15,"./inffast":18,"./inftrees":20}],20:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
const MAXBITS=15;const ENOUGH_LENS=852;const ENOUGH_DISTS=592;//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);
const CODES=0;const LENS=1;const DISTS=2;const lbase=new Uint16Array([/* Length codes 257..285 base */3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]);const lext=new Uint8Array([/* Length codes 257..285 extra */16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]);const dbase=new Uint16Array([/* Distance codes 0..29 base */1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]);const dext=new Uint8Array([/* Distance codes 0..29 extra */16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);const inflate_table=(type,lens,lens_index,codes,table,table_index,work,opts)=>{const bits=opts.bits;//here = opts.here; /* table entry for duplication */
let len=0;/* a code's length in bits */let sym=0;/* index of code symbols */let min=0,max=0;/* minimum and maximum code lengths */let root=0;/* number of index bits for root table */let curr=0;/* number of index bits for current table */let drop=0;/* code bits to drop for sub-table */let left=0;/* number of prefix codes available */let used=0;/* code entries in table used */let huff=0;/* Huffman code */let incr;/* for incrementing code, index */let fill;/* index for replicating entries */let low;/* low bits for current root entry */let mask;/* mask for low root bits */let next;/* next available space in table */let base=null;/* base value table to use */let base_index=0;//  let shoextra;    /* extra bits table to use */
let end;/* use base and extra for symbol > end */const count=new Uint16Array(MAXBITS+1);//[MAXBITS+1];    /* number of codes of each length */
const offs=new Uint16Array(MAXBITS+1);//[MAXBITS+1];     /* offsets in table for each length */
let extra=null;let extra_index=0;let here_bits,here_op,here_val;/*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   *//* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */for(len=0;len<=MAXBITS;len++){count[len]=0;}for(sym=0;sym<codes;sym++){count[lens[lens_index+sym]]++;}/* bound code lengths, force root to be within code lengths */root=bits;for(max=MAXBITS;max>=1;max--){if(count[max]!==0){break;}}if(root>max){root=max;}if(max===0){/* no symbols to code at all *///table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
//table.val[opts.table_index++] = 0;   //here.val = (var short)0;
table[table_index++]=1<<24|64<<16|0;//table.op[opts.table_index] = 64;
//table.bits[opts.table_index] = 1;
//table.val[opts.table_index++] = 0;
table[table_index++]=1<<24|64<<16|0;opts.bits=1;return 0;/* no symbols, but wait for decoding to report error */}for(min=1;min<max;min++){if(count[min]!==0){break;}}if(root<min){root=min;}/* check for an over-subscribed or incomplete set of lengths */left=1;for(len=1;len<=MAXBITS;len++){left<<=1;left-=count[len];if(left<0){return-1;}/* over-subscribed */}if(left>0&&(type===CODES||max!==1)){return-1;/* incomplete set */}/* generate offsets into symbol table for each length for sorting */offs[1]=0;for(len=1;len<MAXBITS;len++){offs[len+1]=offs[len]+count[len];}/* sort symbols by length, by symbol order within each length */for(sym=0;sym<codes;sym++){if(lens[lens_index+sym]!==0){work[offs[lens[lens_index+sym]]++]=sym;}}/*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   *//* set up for code type */// poor man optimization - use if-else instead of switch,
// to avoid deopts in old v8
if(type===CODES){base=extra=work;/* dummy value--not used */end=19;}else if(type===LENS){base=lbase;base_index-=257;extra=lext;extra_index-=257;end=256;}else{/* DISTS */base=dbase;extra=dext;end=-1;}/* initialize opts for loop */huff=0;/* starting code */sym=0;/* starting code symbol */len=min;/* starting code length */next=table_index;/* current table to fill in */curr=root;/* current table index bits */drop=0;/* current bits to drop from code for index */low=-1;/* trigger new sub-table when len > root */used=1<<root;/* use root table entries */mask=used-1;/* mask for comparing low *//* check available table space */if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}/* process all codes and make table entries */for(;;){/* create table entry */here_bits=len-drop;if(work[sym]<end){here_op=0;here_val=work[sym];}else if(work[sym]>end){here_op=extra[extra_index+work[sym]];here_val=base[base_index+work[sym]];}else{here_op=32+64;/* end of block */here_val=0;}/* replicate for those indices with low len bits equal to huff */incr=1<<len-drop;fill=1<<curr;min=fill;/* save offset to next table */do{fill-=incr;table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;}while(fill!==0);/* backwards increment the len-bit code huff */incr=1<<len-1;while(huff&incr){incr>>=1;}if(incr!==0){huff&=incr-1;huff+=incr;}else{huff=0;}/* go to next symbol, update count, len */sym++;if(--count[len]===0){if(len===max){break;}len=lens[lens_index+work[sym]];}/* create new sub-table if needed */if(len>root&&(huff&mask)!==low){/* if first time, transition to sub-tables */if(drop===0){drop=root;}/* increment past last table */next+=min;/* here min is 1 << curr *//* determine length of next table */curr=len-drop;left=1<<curr;while(curr+drop<max){left-=count[curr+drop];if(left<=0){break;}curr++;left<<=1;}/* check for enough space */used+=1<<curr;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}/* point entry in root table to sub-table */low=huff&mask;/*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/table[low]=root<<24|curr<<16|next-table_index|0;}}/* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */if(huff!==0){//table.op[next + huff] = 64;            /* invalid code marker */
//table.bits[next + huff] = len - drop;
//table.val[next + huff] = 0;
table[next+huff]=len-drop<<24|64<<16|0;}/* set return parameters *///opts.table_index += used;
opts.bits=root;return 0;};module.exports=inflate_table;},{}],21:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
module.exports={2:'need dictionary',/* Z_NEED_DICT       2  */1:'stream end',/* Z_STREAM_END      1  */0:'',/* Z_OK              0  */'-1':'file error',/* Z_ERRNO         (-1) */'-2':'stream error',/* Z_STREAM_ERROR  (-2) */'-3':'data error',/* Z_DATA_ERROR    (-3) */'-4':'insufficient memory',/* Z_MEM_ERROR     (-4) */'-5':'buffer error',/* Z_BUF_ERROR     (-5) */'-6':'incompatible version'/* Z_VERSION_ERROR (-6) */};},{}],22:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
/* eslint-disable space-unary-ops *//* Public constants ==========================================================*//* ===========================================================================*///const Z_FILTERED          = 1;
//const Z_HUFFMAN_ONLY      = 2;
//const Z_RLE               = 3;
const Z_FIXED=4;//const Z_DEFAULT_STRATEGY  = 0;
/* Possible values of the data_type field (though see inflate()) */const Z_BINARY=0;const Z_TEXT=1;//const Z_ASCII             = 1; // = Z_TEXT
const Z_UNKNOWN=2;/*============================================================================*/function zero(buf){let len=buf.length;while(--len>=0){buf[len]=0;}}// From zutil.h
const STORED_BLOCK=0;const STATIC_TREES=1;const DYN_TREES=2;/* The three kinds of block type */const MIN_MATCH=3;const MAX_MATCH=258;/* The minimum and maximum match lengths */// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */const LENGTH_CODES=29;/* number of length codes, not counting the special END_BLOCK code */const LITERALS=256;/* number of literal bytes 0..255 */const L_CODES=LITERALS+1+LENGTH_CODES;/* number of Literal or Length codes, including the END_BLOCK code */const D_CODES=30;/* number of distance codes */const BL_CODES=19;/* number of codes used to transfer the bit lengths */const HEAP_SIZE=2*L_CODES+1;/* maximum heap size */const MAX_BITS=15;/* All codes must not exceed MAX_BITS bits */const Buf_size=16;/* size of bit buffer in bi_buf *//* ===========================================================================
 * Constants
 */const MAX_BL_BITS=7;/* Bit length codes must not exceed MAX_BL_BITS bits */const END_BLOCK=256;/* end of block literal code */const REP_3_6=16;/* repeat previous bit length 3-6 times (2 bits of repeat count) */const REPZ_3_10=17;/* repeat a zero length 3-10 times  (3 bits of repeat count) */const REPZ_11_138=18;/* repeat a zero length 11-138 times  (7 bits of repeat count) *//* eslint-disable comma-spacing,array-bracket-spacing */const extra_lbits=/* extra bits for each length code */new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);const extra_dbits=/* extra bits for each distance code */new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);const extra_blbits=/* extra bits for each bit length code */new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);const bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);/* eslint-enable comma-spacing,array-bracket-spacing *//* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 *//* ===========================================================================
 * Local data. These are initialized only once.
 */// We pre-fill arrays with 0 to avoid uninitialized gaps
const DIST_CODE_LEN=512;/* see definition of array dist_code below */// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
const static_ltree=new Array((L_CODES+2)*2);zero(static_ltree);/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */const static_dtree=new Array(D_CODES*2);zero(static_dtree);/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */const _dist_code=new Array(DIST_CODE_LEN);zero(_dist_code);/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */const _length_code=new Array(MAX_MATCH-MIN_MATCH+1);zero(_length_code);/* length code for each normalized match length (0 == MIN_MATCH) */const base_length=new Array(LENGTH_CODES);zero(base_length);/* First normalized length for each code (0 = MIN_MATCH) */const base_dist=new Array(D_CODES);zero(base_dist);/* First normalized distance for each code (0 = distance of 1) */function StaticTreeDesc(static_tree,extra_bits,extra_base,elems,max_length){this.static_tree=static_tree;/* static tree or NULL */this.extra_bits=extra_bits;/* extra bits for each code or NULL */this.extra_base=extra_base;/* base index for extra_bits */this.elems=elems;/* max number of elements in the tree */this.max_length=max_length;/* max bit length for the codes */// show if `static_tree` has data or dummy - needed for monomorphic objects
this.has_stree=static_tree&&static_tree.length;}let static_l_desc;let static_d_desc;let static_bl_desc;function TreeDesc(dyn_tree,stat_desc){this.dyn_tree=dyn_tree;/* the dynamic tree */this.max_code=0;/* largest code with non zero frequency */this.stat_desc=stat_desc;/* the corresponding static tree */}const d_code=dist=>{return dist<256?_dist_code[dist]:_dist_code[256+(dist>>>7)];};/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */const put_short=(s,w)=>{//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
s.pending_buf[s.pending++]=w&0xff;s.pending_buf[s.pending++]=w>>>8&0xff;};/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */const send_bits=(s,value,length)=>{if(s.bi_valid>Buf_size-length){s.bi_buf|=value<<s.bi_valid&0xffff;put_short(s,s.bi_buf);s.bi_buf=value>>Buf_size-s.bi_valid;s.bi_valid+=length-Buf_size;}else{s.bi_buf|=value<<s.bi_valid&0xffff;s.bi_valid+=length;}};const send_code=(s,c,tree)=>{send_bits(s,tree[c*2]/*.Code*/,tree[c*2+1]/*.Len*/);};/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */const bi_reverse=(code,len)=>{let res=0;do{res|=code&1;code>>>=1;res<<=1;}while(--len>0);return res>>>1;};/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */const bi_flush=s=>{if(s.bi_valid===16){put_short(s,s.bi_buf);s.bi_buf=0;s.bi_valid=0;}else if(s.bi_valid>=8){s.pending_buf[s.pending++]=s.bi_buf&0xff;s.bi_buf>>=8;s.bi_valid-=8;}};/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */const gen_bitlen=(s,desc)=>//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{const tree=desc.dyn_tree;const max_code=desc.max_code;const stree=desc.stat_desc.static_tree;const has_stree=desc.stat_desc.has_stree;const extra=desc.stat_desc.extra_bits;const base=desc.stat_desc.extra_base;const max_length=desc.stat_desc.max_length;let h;/* heap index */let n,m;/* iterate over the tree elements */let bits;/* bit length */let xbits;/* extra bits */let f;/* frequency */let overflow=0;/* number of elements with bit length too large */for(bits=0;bits<=MAX_BITS;bits++){s.bl_count[bits]=0;}/* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */tree[s.heap[s.heap_max]*2+1]/*.Len*/=0;/* root of the heap */for(h=s.heap_max+1;h<HEAP_SIZE;h++){n=s.heap[h];bits=tree[tree[n*2+1]/*.Dad*/*2+1]/*.Len*/+1;if(bits>max_length){bits=max_length;overflow++;}tree[n*2+1]/*.Len*/=bits;/* We overwrite tree[n].Dad which is no longer needed */if(n>max_code){continue;}/* not a leaf node */s.bl_count[bits]++;xbits=0;if(n>=base){xbits=extra[n-base];}f=tree[n*2]/*.Freq*/;s.opt_len+=f*(bits+xbits);if(has_stree){s.static_len+=f*(stree[n*2+1]/*.Len*/+xbits);}}if(overflow===0){return;}// Trace((stderr,"\nbit length overflow\n"));
/* This happens for example on obj2 and pic of the Calgary corpus *//* Find the first bit length which could increase: */do{bits=max_length-1;while(s.bl_count[bits]===0){bits--;}s.bl_count[bits]--;/* move one leaf down the tree */s.bl_count[bits+1]+=2;/* move one overflow item as its brother */s.bl_count[max_length]--;/* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */overflow-=2;}while(overflow>0);/* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */for(bits=max_length;bits!==0;bits--){n=s.bl_count[bits];while(n!==0){m=s.heap[--h];if(m>max_code){continue;}if(tree[m*2+1]/*.Len*/!==bits){// Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
s.opt_len+=(bits-tree[m*2+1]/*.Len*/)*tree[m*2]/*.Freq*/;tree[m*2+1]/*.Len*/=bits;}n--;}}};/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */const gen_codes=(tree,max_code,bl_count)=>//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{const next_code=new Array(MAX_BITS+1);/* next code value for each bit length */let code=0;/* running code value */let bits;/* bit index */let n;/* code index *//* The distribution counts are first used to generate the code values
   * without bit reversal.
   */for(bits=1;bits<=MAX_BITS;bits++){next_code[bits]=code=code+bl_count[bits-1]<<1;}/* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   *///Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
//        "inconsistent bit counts");
//Tracev((stderr,"\ngen_codes: max_code %d ", max_code));
for(n=0;n<=max_code;n++){let len=tree[n*2+1]/*.Len*/;if(len===0){continue;}/* Now reverse the bits */tree[n*2]/*.Code*/=bi_reverse(next_code[len]++,len);//Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
//     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
}};/* ===========================================================================
 * Initialize the various 'constant' tables.
 */const tr_static_init=()=>{let n;/* iterates over tree elements */let bits;/* bit counter */let length;/* length value */let code;/* code value */let dist;/* distance index */const bl_count=new Array(MAX_BITS+1);/* number of codes at each bit length for an optimal tree */// do check in _tr_init()
//if (static_init_done) return;
/* For some embedded targets, global variables are not initialized: *//*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*//* Initialize the mapping length (0..255) -> length code (0..28) */length=0;for(code=0;code<LENGTH_CODES-1;code++){base_length[code]=length;for(n=0;n<1<<extra_lbits[code];n++){_length_code[length++]=code;}}//Assert (length == 256, "tr_static_init: length != 256");
/* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */_length_code[length-1]=code;/* Initialize the mapping dist (0..32K) -> dist code (0..29) */dist=0;for(code=0;code<16;code++){base_dist[code]=dist;for(n=0;n<1<<extra_dbits[code];n++){_dist_code[dist++]=code;}}//Assert (dist == 256, "tr_static_init: dist != 256");
dist>>=7;/* from now on, all distances are divided by 128 */for(;code<D_CODES;code++){base_dist[code]=dist<<7;for(n=0;n<1<<extra_dbits[code]-7;n++){_dist_code[256+dist++]=code;}}//Assert (dist == 256, "tr_static_init: 256+dist != 512");
/* Construct the codes of the static literal tree */for(bits=0;bits<=MAX_BITS;bits++){bl_count[bits]=0;}n=0;while(n<=143){static_ltree[n*2+1]/*.Len*/=8;n++;bl_count[8]++;}while(n<=255){static_ltree[n*2+1]/*.Len*/=9;n++;bl_count[9]++;}while(n<=279){static_ltree[n*2+1]/*.Len*/=7;n++;bl_count[7]++;}while(n<=287){static_ltree[n*2+1]/*.Len*/=8;n++;bl_count[8]++;}/* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */gen_codes(static_ltree,L_CODES+1,bl_count);/* The static distance tree is trivial: */for(n=0;n<D_CODES;n++){static_dtree[n*2+1]/*.Len*/=5;static_dtree[n*2]/*.Code*/=bi_reverse(n,5);}// Now data ready and we can init static trees
static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS);static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS);static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS);//static_init_done = true;
};/* ===========================================================================
 * Initialize a new block.
 */const init_block=s=>{let n;/* iterates over tree elements *//* Initialize the trees. */for(n=0;n<L_CODES;n++){s.dyn_ltree[n*2]/*.Freq*/=0;}for(n=0;n<D_CODES;n++){s.dyn_dtree[n*2]/*.Freq*/=0;}for(n=0;n<BL_CODES;n++){s.bl_tree[n*2]/*.Freq*/=0;}s.dyn_ltree[END_BLOCK*2]/*.Freq*/=1;s.opt_len=s.static_len=0;s.last_lit=s.matches=0;};/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */const bi_windup=s=>{if(s.bi_valid>8){put_short(s,s.bi_buf);}else if(s.bi_valid>0){//put_byte(s, (Byte)s->bi_buf);
s.pending_buf[s.pending++]=s.bi_buf;}s.bi_buf=0;s.bi_valid=0;};/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */const copy_block=(s,buf,len,header)=>//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{bi_windup(s);/* align on byte boundary */if(header){put_short(s,len);put_short(s,~len);}//  while (len--) {
//    put_byte(s, *buf++);
//  }
s.pending_buf.set(s.window.subarray(buf,buf+len),s.pending);s.pending+=len;};/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */const smaller=(tree,n,m,depth)=>{const _n2=n*2;const _m2=m*2;return tree[_n2]/*.Freq*/<tree[_m2]/*.Freq*/||tree[_n2]/*.Freq*/===tree[_m2]/*.Freq*/&&depth[n]<=depth[m];};/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */const pqdownheap=(s,tree,k)=>//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{const v=s.heap[k];let j=k<<1;/* left son of k */while(j<=s.heap_len){/* Set j to the smallest of the two sons: */if(j<s.heap_len&&smaller(tree,s.heap[j+1],s.heap[j],s.depth)){j++;}/* Exit if v is smaller than both sons */if(smaller(tree,v,s.heap[j],s.depth)){break;}/* Exchange v with the smallest son */s.heap[k]=s.heap[j];k=j;/* And continue down the tree, setting j to the left son of k */j<<=1;}s.heap[k]=v;};// inlined manually
// const SMALLEST = 1;
/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */const compress_block=(s,ltree,dtree)=>//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{let dist;/* distance of matched string */let lc;/* match length or unmatched char (if dist == 0) */let lx=0;/* running index in l_buf */let code;/* the code to send */let extra;/* number of extra bits to send */if(s.last_lit!==0){do{dist=s.pending_buf[s.d_buf+lx*2]<<8|s.pending_buf[s.d_buf+lx*2+1];lc=s.pending_buf[s.l_buf+lx];lx++;if(dist===0){send_code(s,lc,ltree);/* send a literal byte *///Tracecv(isgraph(lc), (stderr," '%c' ", lc));
}else{/* Here, lc is the match length - MIN_MATCH */code=_length_code[lc];send_code(s,code+LITERALS+1,ltree);/* send the length code */extra=extra_lbits[code];if(extra!==0){lc-=base_length[code];send_bits(s,lc,extra);/* send the extra length bits */}dist--;/* dist is now the match distance - 1 */code=d_code(dist);//Assert (code < D_CODES, "bad d_code");
send_code(s,code,dtree);/* send the distance code */extra=extra_dbits[code];if(extra!==0){dist-=base_dist[code];send_bits(s,dist,extra);/* send the extra distance bits */}}/* literal or match pair ? *//* Check that the overlay between pending_buf and d_buf+l_buf is ok: *///Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
//       "pendingBuf overflow");
}while(lx<s.last_lit);}send_code(s,END_BLOCK,ltree);};/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */const build_tree=(s,desc)=>//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{const tree=desc.dyn_tree;const stree=desc.stat_desc.static_tree;const has_stree=desc.stat_desc.has_stree;const elems=desc.stat_desc.elems;let n,m;/* iterate over heap elements */let max_code=-1;/* largest code with non zero frequency */let node;/* new node being created *//* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */s.heap_len=0;s.heap_max=HEAP_SIZE;for(n=0;n<elems;n++){if(tree[n*2]/*.Freq*/!==0){s.heap[++s.heap_len]=max_code=n;s.depth[n]=0;}else{tree[n*2+1]/*.Len*/=0;}}/* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */while(s.heap_len<2){node=s.heap[++s.heap_len]=max_code<2?++max_code:0;tree[node*2]/*.Freq*/=1;s.depth[node]=0;s.opt_len--;if(has_stree){s.static_len-=stree[node*2+1]/*.Len*/;}/* node is 0 or 1 so it does not have extra bits */}desc.max_code=max_code;/* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */for(n=s.heap_len>>1/*int /2*/;n>=1;n--){pqdownheap(s,tree,n);}/* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */node=elems;/* next internal node of the tree */do{//pqremove(s, tree, n);  /* n = node of least frequency */
/*** pqremove ***/n=s.heap[1/*SMALLEST*/];s.heap[1/*SMALLEST*/]=s.heap[s.heap_len--];pqdownheap(s,tree,1/*SMALLEST*/);/***/m=s.heap[1/*SMALLEST*/];/* m = node of next least frequency */s.heap[--s.heap_max]=n;/* keep the nodes sorted by frequency */s.heap[--s.heap_max]=m;/* Create a new node father of n and m */tree[node*2]/*.Freq*/=tree[n*2]/*.Freq*/+tree[m*2]/*.Freq*/;s.depth[node]=(s.depth[n]>=s.depth[m]?s.depth[n]:s.depth[m])+1;tree[n*2+1]/*.Dad*/=tree[m*2+1]/*.Dad*/=node;/* and insert the new node in the heap */s.heap[1/*SMALLEST*/]=node++;pqdownheap(s,tree,1/*SMALLEST*/);}while(s.heap_len>=2);s.heap[--s.heap_max]=s.heap[1/*SMALLEST*/];/* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */gen_bitlen(s,desc);/* The field len is now set, we can generate the bit codes */gen_codes(tree,max_code,s.bl_count);};/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */const scan_tree=(s,tree,max_code)=>//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{let n;/* iterates over all tree elements */let prevlen=-1;/* last emitted length */let curlen;/* length of current code */let nextlen=tree[0*2+1]/*.Len*/;/* length of next code */let count=0;/* repeat count of the current code */let max_count=7;/* max repeat count */let min_count=4;/* min repeat count */if(nextlen===0){max_count=138;min_count=3;}tree[(max_code+1)*2+1]/*.Len*/=0xffff;/* guard */for(n=0;n<=max_code;n++){curlen=nextlen;nextlen=tree[(n+1)*2+1]/*.Len*/;if(++count<max_count&&curlen===nextlen){continue;}else if(count<min_count){s.bl_tree[curlen*2]/*.Freq*/+=count;}else if(curlen!==0){if(curlen!==prevlen){s.bl_tree[curlen*2]/*.Freq*/++;}s.bl_tree[REP_3_6*2]/*.Freq*/++;}else if(count<=10){s.bl_tree[REPZ_3_10*2]/*.Freq*/++;}else{s.bl_tree[REPZ_11_138*2]/*.Freq*/++;}count=0;prevlen=curlen;if(nextlen===0){max_count=138;min_count=3;}else if(curlen===nextlen){max_count=6;min_count=3;}else{max_count=7;min_count=4;}}};/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */const send_tree=(s,tree,max_code)=>//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{let n;/* iterates over all tree elements */let prevlen=-1;/* last emitted length */let curlen;/* length of current code */let nextlen=tree[0*2+1]/*.Len*/;/* length of next code */let count=0;/* repeat count of the current code */let max_count=7;/* max repeat count */let min_count=4;/* min repeat count *//* tree[max_code+1].Len = -1; *//* guard already set */if(nextlen===0){max_count=138;min_count=3;}for(n=0;n<=max_code;n++){curlen=nextlen;nextlen=tree[(n+1)*2+1]/*.Len*/;if(++count<max_count&&curlen===nextlen){continue;}else if(count<min_count){do{send_code(s,curlen,s.bl_tree);}while(--count!==0);}else if(curlen!==0){if(curlen!==prevlen){send_code(s,curlen,s.bl_tree);count--;}//Assert(count >= 3 && count <= 6, " 3_6?");
send_code(s,REP_3_6,s.bl_tree);send_bits(s,count-3,2);}else if(count<=10){send_code(s,REPZ_3_10,s.bl_tree);send_bits(s,count-3,3);}else{send_code(s,REPZ_11_138,s.bl_tree);send_bits(s,count-11,7);}count=0;prevlen=curlen;if(nextlen===0){max_count=138;min_count=3;}else if(curlen===nextlen){max_count=6;min_count=3;}else{max_count=7;min_count=4;}}};/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */const build_bl_tree=s=>{let max_blindex;/* index of last bit length code of non zero freq *//* Determine the bit length frequencies for literal and distance trees */scan_tree(s,s.dyn_ltree,s.l_desc.max_code);scan_tree(s,s.dyn_dtree,s.d_desc.max_code);/* Build the bit length tree: */build_tree(s,s.bl_desc);/* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   *//* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */for(max_blindex=BL_CODES-1;max_blindex>=3;max_blindex--){if(s.bl_tree[bl_order[max_blindex]*2+1]/*.Len*/!==0){break;}}/* Update opt_len to include the bit length tree and counts */s.opt_len+=3*(max_blindex+1)+5+5+4;//Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
//        s->opt_len, s->static_len));
return max_blindex;};/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */const send_all_trees=(s,lcodes,dcodes,blcodes)=>//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{let rank;/* index in bl_order *///Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
//Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
//        "too many codes");
//Tracev((stderr, "\nbl counts: "));
send_bits(s,lcodes-257,5);/* not +255 as stated in appnote.txt */send_bits(s,dcodes-1,5);send_bits(s,blcodes-4,4);/* not -3 as stated in appnote.txt */for(rank=0;rank<blcodes;rank++){//Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
send_bits(s,s.bl_tree[bl_order[rank]*2+1]/*.Len*/,3);}//Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));
send_tree(s,s.dyn_ltree,lcodes-1);/* literal tree *///Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));
send_tree(s,s.dyn_dtree,dcodes-1);/* distance tree *///Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
};/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */const detect_data_type=s=>{/* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */let black_mask=0xf3ffc07f;let n;/* Check for non-textual ("black-listed") bytes. */for(n=0;n<=31;n++,black_mask>>>=1){if(black_mask&1&&s.dyn_ltree[n*2]/*.Freq*/!==0){return Z_BINARY;}}/* Check for textual ("white-listed") bytes. */if(s.dyn_ltree[9*2]/*.Freq*/!==0||s.dyn_ltree[10*2]/*.Freq*/!==0||s.dyn_ltree[13*2]/*.Freq*/!==0){return Z_TEXT;}for(n=32;n<LITERALS;n++){if(s.dyn_ltree[n*2]/*.Freq*/!==0){return Z_TEXT;}}/* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */return Z_BINARY;};let static_init_done=false;/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */const _tr_init=s=>{if(!static_init_done){tr_static_init();static_init_done=true;}s.l_desc=new TreeDesc(s.dyn_ltree,static_l_desc);s.d_desc=new TreeDesc(s.dyn_dtree,static_d_desc);s.bl_desc=new TreeDesc(s.bl_tree,static_bl_desc);s.bi_buf=0;s.bi_valid=0;/* Initialize the first block of the first file: */init_block(s);};/* ===========================================================================
 * Send a stored block
 */const _tr_stored_block=(s,buf,stored_len,last)=>//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{send_bits(s,(STORED_BLOCK<<1)+(last?1:0),3);/* send block type */copy_block(s,buf,stored_len,true);/* with header */};/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */const _tr_align=s=>{send_bits(s,STATIC_TREES<<1,3);send_code(s,END_BLOCK,static_ltree);bi_flush(s);};/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */const _tr_flush_block=(s,buf,stored_len,last)=>//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{let opt_lenb,static_lenb;/* opt_len and static_len in bytes */let max_blindex=0;/* index of last bit length code of non zero freq *//* Build the Huffman trees unless a stored block is forced */if(s.level>0){/* Check if the file is binary or text */if(s.strm.data_type===Z_UNKNOWN){s.strm.data_type=detect_data_type(s);}/* Construct the literal and distance trees */build_tree(s,s.l_desc);// Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
//        s->static_len));
build_tree(s,s.d_desc);// Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
//        s->static_len));
/* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     *//* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */max_blindex=build_bl_tree(s);/* Determine the best encoding. Compute the block lengths in bytes. */opt_lenb=s.opt_len+3+7>>>3;static_lenb=s.static_len+3+7>>>3;// Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
//        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
//        s->last_lit));
if(static_lenb<=opt_lenb){opt_lenb=static_lenb;}}else{// Assert(buf != (char*)0, "lost buf");
opt_lenb=static_lenb=stored_len+5;/* force a stored block */}if(stored_len+4<=opt_lenb&&buf!==-1){/* 4: two words for the lengths *//* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */_tr_stored_block(s,buf,stored_len,last);}else if(s.strategy===Z_FIXED||static_lenb===opt_lenb){send_bits(s,(STATIC_TREES<<1)+(last?1:0),3);compress_block(s,static_ltree,static_dtree);}else{send_bits(s,(DYN_TREES<<1)+(last?1:0),3);send_all_trees(s,s.l_desc.max_code+1,s.d_desc.max_code+1,max_blindex+1);compress_block(s,s.dyn_ltree,s.dyn_dtree);}// Assert (s->compressed_len == s->bits_sent, "bad compressed size");
/* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */init_block(s);if(last){bi_windup(s);}// Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
//       s->compressed_len-7*last));
};/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */const _tr_tally=(s,dist,lc)=>//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{//let out_length, in_length, dcode;
s.pending_buf[s.d_buf+s.last_lit*2]=dist>>>8&0xff;s.pending_buf[s.d_buf+s.last_lit*2+1]=dist&0xff;s.pending_buf[s.l_buf+s.last_lit]=lc&0xff;s.last_lit++;if(dist===0){/* lc is the unmatched char */s.dyn_ltree[lc*2]/*.Freq*/++;}else{s.matches++;/* Here, lc is the match length - MIN_MATCH */dist--;/* dist = match distance - 1 *///Assert((ush)dist < (ush)MAX_DIST(s) &&
//       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
//       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");
s.dyn_ltree[(_length_code[lc]+LITERALS+1)*2]/*.Freq*/++;s.dyn_dtree[d_code(dist)*2]/*.Freq*/++;}// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif
return s.last_lit===s.lit_bufsize-1;/* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */};module.exports._tr_init=_tr_init;module.exports._tr_stored_block=_tr_stored_block;module.exports._tr_flush_block=_tr_flush_block;module.exports._tr_tally=_tr_tally;module.exports._tr_align=_tr_align;},{}],23:[function(require,module,exports){'use strict';// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
function ZStream(){/* next input byte */this.input=null;// JS specific, because we have no pointers
this.next_in=0;/* number of bytes available at input */this.avail_in=0;/* total number of input bytes read so far */this.total_in=0;/* next output byte should be put there */this.output=null;// JS specific, because we have no pointers
this.next_out=0;/* remaining free space at output */this.avail_out=0;/* total number of bytes output so far */this.total_out=0;/* last error message, NULL if no error */this.msg=''/*Z_NULL*/;/* not visible by applications */this.state=null;/* best guess about the data type: binary or text */this.data_type=2/*Z_UNKNOWN*/;/* adler32 value of the uncompressed data */this.adler=0;}module.exports=ZStream;},{}],24:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"v1",{enumerable:true,get:function(){return _v.default;}});Object.defineProperty(exports,"v3",{enumerable:true,get:function(){return _v2.default;}});Object.defineProperty(exports,"v4",{enumerable:true,get:function(){return _v3.default;}});Object.defineProperty(exports,"v5",{enumerable:true,get:function(){return _v4.default;}});Object.defineProperty(exports,"NIL",{enumerable:true,get:function(){return _nil.default;}});Object.defineProperty(exports,"version",{enumerable:true,get:function(){return _version.default;}});Object.defineProperty(exports,"validate",{enumerable:true,get:function(){return _validate.default;}});Object.defineProperty(exports,"stringify",{enumerable:true,get:function(){return _stringify.default;}});Object.defineProperty(exports,"parse",{enumerable:true,get:function(){return _parse.default;}});var _v=_interopRequireDefault(require("./v1.js"));var _v2=_interopRequireDefault(require("./v3.js"));var _v3=_interopRequireDefault(require("./v4.js"));var _v4=_interopRequireDefault(require("./v5.js"));var _nil=_interopRequireDefault(require("./nil.js"));var _version=_interopRequireDefault(require("./version.js"));var _validate=_interopRequireDefault(require("./validate.js"));var _stringify=_interopRequireDefault(require("./stringify.js"));var _parse=_interopRequireDefault(require("./parse.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}},{"./nil.js":26,"./parse.js":27,"./stringify.js":31,"./v1.js":32,"./v3.js":33,"./v4.js":35,"./v5.js":36,"./validate.js":37,"./version.js":38}],25:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */function md5(bytes){if(typeof bytes==='string'){const msg=unescape(encodeURIComponent(bytes));// UTF8 escape
bytes=new Uint8Array(msg.length);for(let i=0;i<msg.length;++i){bytes[i]=msg.charCodeAt(i);}}return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes),bytes.length*8));}/*
 * Convert an array of little-endian words to an array of bytes
 */function md5ToHexEncodedArray(input){const output=[];const length32=input.length*32;const hexTab='0123456789abcdef';for(let i=0;i<length32;i+=8){const x=input[i>>5]>>>i%32&0xff;const hex=parseInt(hexTab.charAt(x>>>4&0x0f)+hexTab.charAt(x&0x0f),16);output.push(hex);}return output;}/**
 * Calculate output length with padding and bit length
 */function getOutputLength(inputLength8){return(inputLength8+64>>>9<<4)+14+1;}/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */function wordsToMd5(x,len){/* append padding */x[len>>5]|=0x80<<len%32;x[getOutputLength(len)-1]=len;let a=1732584193;let b=-271733879;let c=-1732584194;let d=271733878;for(let i=0;i<x.length;i+=16){const olda=a;const oldb=b;const oldc=c;const oldd=d;a=md5ff(a,b,c,d,x[i],7,-680876936);d=md5ff(d,a,b,c,x[i+1],12,-389564586);c=md5ff(c,d,a,b,x[i+2],17,606105819);b=md5ff(b,c,d,a,x[i+3],22,-1044525330);a=md5ff(a,b,c,d,x[i+4],7,-176418897);d=md5ff(d,a,b,c,x[i+5],12,1200080426);c=md5ff(c,d,a,b,x[i+6],17,-1473231341);b=md5ff(b,c,d,a,x[i+7],22,-45705983);a=md5ff(a,b,c,d,x[i+8],7,1770035416);d=md5ff(d,a,b,c,x[i+9],12,-1958414417);c=md5ff(c,d,a,b,x[i+10],17,-42063);b=md5ff(b,c,d,a,x[i+11],22,-1990404162);a=md5ff(a,b,c,d,x[i+12],7,1804603682);d=md5ff(d,a,b,c,x[i+13],12,-40341101);c=md5ff(c,d,a,b,x[i+14],17,-1502002290);b=md5ff(b,c,d,a,x[i+15],22,1236535329);a=md5gg(a,b,c,d,x[i+1],5,-165796510);d=md5gg(d,a,b,c,x[i+6],9,-1069501632);c=md5gg(c,d,a,b,x[i+11],14,643717713);b=md5gg(b,c,d,a,x[i],20,-373897302);a=md5gg(a,b,c,d,x[i+5],5,-701558691);d=md5gg(d,a,b,c,x[i+10],9,38016083);c=md5gg(c,d,a,b,x[i+15],14,-660478335);b=md5gg(b,c,d,a,x[i+4],20,-405537848);a=md5gg(a,b,c,d,x[i+9],5,568446438);d=md5gg(d,a,b,c,x[i+14],9,-1019803690);c=md5gg(c,d,a,b,x[i+3],14,-187363961);b=md5gg(b,c,d,a,x[i+8],20,1163531501);a=md5gg(a,b,c,d,x[i+13],5,-1444681467);d=md5gg(d,a,b,c,x[i+2],9,-51403784);c=md5gg(c,d,a,b,x[i+7],14,1735328473);b=md5gg(b,c,d,a,x[i+12],20,-1926607734);a=md5hh(a,b,c,d,x[i+5],4,-378558);d=md5hh(d,a,b,c,x[i+8],11,-2022574463);c=md5hh(c,d,a,b,x[i+11],16,1839030562);b=md5hh(b,c,d,a,x[i+14],23,-35309556);a=md5hh(a,b,c,d,x[i+1],4,-1530992060);d=md5hh(d,a,b,c,x[i+4],11,1272893353);c=md5hh(c,d,a,b,x[i+7],16,-155497632);b=md5hh(b,c,d,a,x[i+10],23,-1094730640);a=md5hh(a,b,c,d,x[i+13],4,681279174);d=md5hh(d,a,b,c,x[i],11,-358537222);c=md5hh(c,d,a,b,x[i+3],16,-722521979);b=md5hh(b,c,d,a,x[i+6],23,76029189);a=md5hh(a,b,c,d,x[i+9],4,-640364487);d=md5hh(d,a,b,c,x[i+12],11,-421815835);c=md5hh(c,d,a,b,x[i+15],16,530742520);b=md5hh(b,c,d,a,x[i+2],23,-995338651);a=md5ii(a,b,c,d,x[i],6,-198630844);d=md5ii(d,a,b,c,x[i+7],10,1126891415);c=md5ii(c,d,a,b,x[i+14],15,-1416354905);b=md5ii(b,c,d,a,x[i+5],21,-57434055);a=md5ii(a,b,c,d,x[i+12],6,1700485571);d=md5ii(d,a,b,c,x[i+3],10,-1894986606);c=md5ii(c,d,a,b,x[i+10],15,-1051523);b=md5ii(b,c,d,a,x[i+1],21,-2054922799);a=md5ii(a,b,c,d,x[i+8],6,1873313359);d=md5ii(d,a,b,c,x[i+15],10,-30611744);c=md5ii(c,d,a,b,x[i+6],15,-1560198380);b=md5ii(b,c,d,a,x[i+13],21,1309151649);a=md5ii(a,b,c,d,x[i+4],6,-145523070);d=md5ii(d,a,b,c,x[i+11],10,-1120210379);c=md5ii(c,d,a,b,x[i+2],15,718787259);b=md5ii(b,c,d,a,x[i+9],21,-343485551);a=safeAdd(a,olda);b=safeAdd(b,oldb);c=safeAdd(c,oldc);d=safeAdd(d,oldd);}return[a,b,c,d];}/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */function bytesToWords(input){if(input.length===0){return[];}const length8=input.length*8;const output=new Uint32Array(getOutputLength(length8));for(let i=0;i<length8;i+=8){output[i>>5]|=(input[i/8]&0xff)<<i%32;}return output;}/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */function safeAdd(x,y){const lsw=(x&0xffff)+(y&0xffff);const msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&0xffff;}/*
 * Bitwise rotate a 32-bit number to the left.
 */function bitRotateLeft(num,cnt){return num<<cnt|num>>>32-cnt;}/*
 * These functions implement the four basic operations the algorithm uses.
 */function md5cmn(q,a,b,x,s,t){return safeAdd(bitRotateLeft(safeAdd(safeAdd(a,q),safeAdd(x,t)),s),b);}function md5ff(a,b,c,d,x,s,t){return md5cmn(b&c|~b&d,a,b,x,s,t);}function md5gg(a,b,c,d,x,s,t){return md5cmn(b&d|c&~d,a,b,x,s,t);}function md5hh(a,b,c,d,x,s,t){return md5cmn(b^c^d,a,b,x,s,t);}function md5ii(a,b,c,d,x,s,t){return md5cmn(c^(b|~d),a,b,x,s,t);}var _default=md5;exports.default=_default;},{}],26:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _default='00000000-0000-0000-0000-000000000000';exports.default=_default;},{}],27:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _validate=_interopRequireDefault(require("./validate.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function parse(uuid){if(!(0,_validate.default)(uuid)){throw TypeError('Invalid UUID');}let v;const arr=new Uint8Array(16);// Parse ########-....-....-....-............
arr[0]=(v=parseInt(uuid.slice(0,8),16))>>>24;arr[1]=v>>>16&0xff;arr[2]=v>>>8&0xff;arr[3]=v&0xff;// Parse ........-####-....-....-............
arr[4]=(v=parseInt(uuid.slice(9,13),16))>>>8;arr[5]=v&0xff;// Parse ........-....-####-....-............
arr[6]=(v=parseInt(uuid.slice(14,18),16))>>>8;arr[7]=v&0xff;// Parse ........-....-....-####-............
arr[8]=(v=parseInt(uuid.slice(19,23),16))>>>8;arr[9]=v&0xff;// Parse ........-....-....-....-############
// (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)
arr[10]=(v=parseInt(uuid.slice(24,36),16))/0x10000000000&0xff;arr[11]=v/0x100000000&0xff;arr[12]=v>>>24&0xff;arr[13]=v>>>16&0xff;arr[14]=v>>>8&0xff;arr[15]=v&0xff;return arr;}var _default=parse;exports.default=_default;},{"./validate.js":37}],28:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;exports.default=_default;},{}],29:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=rng;// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
let getRandomValues;const rnds8=new Uint8Array(16);function rng(){// lazy load so that environments that need to polyfill have a chance to do so
if(!getRandomValues){// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
// find the complete implementation of crypto (msCrypto) on IE11.
getRandomValues=typeof crypto!=='undefined'&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!=='undefined'&&typeof msCrypto.getRandomValues==='function'&&msCrypto.getRandomValues.bind(msCrypto);if(!getRandomValues){throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');}}return getRandomValues(rnds8);}},{}],30:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s,x,y,z){switch(s){case 0:return x&y^~x&z;case 1:return x^y^z;case 2:return x&y^x&z^y&z;case 3:return x^y^z;}}function ROTL(x,n){return x<<n|x>>>32-n;}function sha1(bytes){const K=[0x5a827999,0x6ed9eba1,0x8f1bbcdc,0xca62c1d6];const H=[0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0];if(typeof bytes==='string'){const msg=unescape(encodeURIComponent(bytes));// UTF8 escape
bytes=[];for(let i=0;i<msg.length;++i){bytes.push(msg.charCodeAt(i));}}else if(!Array.isArray(bytes)){// Convert Array-like to Array
bytes=Array.prototype.slice.call(bytes);}bytes.push(0x80);const l=bytes.length/4+2;const N=Math.ceil(l/16);const M=new Array(N);for(let i=0;i<N;++i){const arr=new Uint32Array(16);for(let j=0;j<16;++j){arr[j]=bytes[i*64+j*4]<<24|bytes[i*64+j*4+1]<<16|bytes[i*64+j*4+2]<<8|bytes[i*64+j*4+3];}M[i]=arr;}M[N-1][14]=(bytes.length-1)*8/Math.pow(2,32);M[N-1][14]=Math.floor(M[N-1][14]);M[N-1][15]=(bytes.length-1)*8&0xffffffff;for(let i=0;i<N;++i){const W=new Uint32Array(80);for(let t=0;t<16;++t){W[t]=M[i][t];}for(let t=16;t<80;++t){W[t]=ROTL(W[t-3]^W[t-8]^W[t-14]^W[t-16],1);}let a=H[0];let b=H[1];let c=H[2];let d=H[3];let e=H[4];for(let t=0;t<80;++t){const s=Math.floor(t/20);const T=ROTL(a,5)+f(s,b,c,d)+e+K[s]+W[t]>>>0;e=d;d=c;c=ROTL(b,30)>>>0;b=a;a=T;}H[0]=H[0]+a>>>0;H[1]=H[1]+b>>>0;H[2]=H[2]+c>>>0;H[3]=H[3]+d>>>0;H[4]=H[4]+e>>>0;}return[H[0]>>24&0xff,H[0]>>16&0xff,H[0]>>8&0xff,H[0]&0xff,H[1]>>24&0xff,H[1]>>16&0xff,H[1]>>8&0xff,H[1]&0xff,H[2]>>24&0xff,H[2]>>16&0xff,H[2]>>8&0xff,H[2]&0xff,H[3]>>24&0xff,H[3]>>16&0xff,H[3]>>8&0xff,H[3]&0xff,H[4]>>24&0xff,H[4]>>16&0xff,H[4]>>8&0xff,H[4]&0xff];}var _default=sha1;exports.default=_default;},{}],31:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _validate=_interopRequireDefault(require("./validate.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */const byteToHex=[];for(let i=0;i<256;++i){byteToHex.push((i+0x100).toString(16).substr(1));}function stringify(arr,offset=0){// Note: Be careful editing this code!  It's been tuned for performance
// and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
const uuid=(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+'-'+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+'-'+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+'-'+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+'-'+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase();// Consistency check for valid UUID.  If this throws, it's likely due to one
// of the following:
// - One or more input array values don't map to a hex octet (leading to
// "undefined" in the uuid)
// - Invalid input values for the RFC `version` or `variant` fields
if(!(0,_validate.default)(uuid)){throw TypeError('Stringified UUID is invalid');}return uuid;}var _default=stringify;exports.default=_default;},{"./validate.js":37}],32:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _rng=_interopRequireDefault(require("./rng.js"));var _stringify=_interopRequireDefault(require("./stringify.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;let _clockseq;// Previous uuid creation time
let _lastMSecs=0;let _lastNSecs=0;// See https://github.com/uuidjs/uuid for API details
function v1(options,buf,offset){let i=buf&&offset||0;const b=buf||new Array(16);options=options||{};let node=options.node||_nodeId;let clockseq=options.clockseq!==undefined?options.clockseq:_clockseq;// node and clockseq need to be initialized to random values if they're not
// specified.  We do this lazily to minimize issues related to insufficient
// system entropy.  See #189
if(node==null||clockseq==null){const seedBytes=options.random||(options.rng||_rng.default)();if(node==null){// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
node=_nodeId=[seedBytes[0]|0x01,seedBytes[1],seedBytes[2],seedBytes[3],seedBytes[4],seedBytes[5]];}if(clockseq==null){// Per 4.2.2, randomize (14 bit) clockseq
clockseq=_clockseq=(seedBytes[6]<<8|seedBytes[7])&0x3fff;}}// UUID timestamps are 100 nano-second units since the Gregorian epoch,
// (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
// time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
// (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
let msecs=options.msecs!==undefined?options.msecs:Date.now();// Per 4.2.1.2, use count of uuid's generated during the current clock
// cycle to simulate higher resolution clock
let nsecs=options.nsecs!==undefined?options.nsecs:_lastNSecs+1;// Time since last uuid creation (in msecs)
const dt=msecs-_lastMSecs+(nsecs-_lastNSecs)/10000;// Per 4.2.1.2, Bump clockseq on clock regression
if(dt<0&&options.clockseq===undefined){clockseq=clockseq+1&0x3fff;}// Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
// time interval
if((dt<0||msecs>_lastMSecs)&&options.nsecs===undefined){nsecs=0;}// Per 4.2.1.2 Throw error if too many uuids are requested
if(nsecs>=10000){throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");}_lastMSecs=msecs;_lastNSecs=nsecs;_clockseq=clockseq;// Per 4.1.4 - Convert from unix epoch to Gregorian epoch
msecs+=12219292800000;// `time_low`
const tl=((msecs&0xfffffff)*10000+nsecs)%0x100000000;b[i++]=tl>>>24&0xff;b[i++]=tl>>>16&0xff;b[i++]=tl>>>8&0xff;b[i++]=tl&0xff;// `time_mid`
const tmh=msecs/0x100000000*10000&0xfffffff;b[i++]=tmh>>>8&0xff;b[i++]=tmh&0xff;// `time_high_and_version`
b[i++]=tmh>>>24&0xf|0x10;// include version
b[i++]=tmh>>>16&0xff;// `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
b[i++]=clockseq>>>8|0x80;// `clock_seq_low`
b[i++]=clockseq&0xff;// `node`
for(let n=0;n<6;++n){b[i+n]=node[n];}return buf||(0,_stringify.default)(b);}var _default=v1;exports.default=_default;},{"./rng.js":29,"./stringify.js":31}],33:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _v=_interopRequireDefault(require("./v35.js"));var _md=_interopRequireDefault(require("./md5.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const v3=(0,_v.default)('v3',0x30,_md.default);var _default=v3;exports.default=_default;},{"./md5.js":25,"./v35.js":34}],34:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.URL=exports.DNS=void 0;var _stringify=_interopRequireDefault(require("./stringify.js"));var _parse=_interopRequireDefault(require("./parse.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function stringToBytes(str){str=unescape(encodeURIComponent(str));// UTF8 escape
const bytes=[];for(let i=0;i<str.length;++i){bytes.push(str.charCodeAt(i));}return bytes;}const DNS='6ba7b810-9dad-11d1-80b4-00c04fd430c8';exports.DNS=DNS;const URL='6ba7b811-9dad-11d1-80b4-00c04fd430c8';exports.URL=URL;function _default(name,version,hashfunc){function generateUUID(value,namespace,buf,offset){if(typeof value==='string'){value=stringToBytes(value);}if(typeof namespace==='string'){namespace=(0,_parse.default)(namespace);}if(namespace.length!==16){throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');}// Compute hash of namespace and value, Per 4.3
// Future: Use spread syntax when supported on all platforms, e.g. `bytes =
// hashfunc([...namespace, ... value])`
let bytes=new Uint8Array(16+value.length);bytes.set(namespace);bytes.set(value,namespace.length);bytes=hashfunc(bytes);bytes[6]=bytes[6]&0x0f|version;bytes[8]=bytes[8]&0x3f|0x80;if(buf){offset=offset||0;for(let i=0;i<16;++i){buf[offset+i]=bytes[i];}return buf;}return(0,_stringify.default)(bytes);}// Function#name is not settable on some platforms (#270)
try{generateUUID.name=name;// eslint-disable-next-line no-empty
}catch(err){}// For CommonJS default export support
generateUUID.DNS=DNS;generateUUID.URL=URL;return generateUUID;}},{"./parse.js":27,"./stringify.js":31}],35:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _rng=_interopRequireDefault(require("./rng.js"));var _stringify=_interopRequireDefault(require("./stringify.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function v4(options,buf,offset){options=options||{};const rnds=options.random||(options.rng||_rng.default)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;// Copy bytes to buffer, if provided
if(buf){offset=offset||0;for(let i=0;i<16;++i){buf[offset+i]=rnds[i];}return buf;}return(0,_stringify.default)(rnds);}var _default=v4;exports.default=_default;},{"./rng.js":29,"./stringify.js":31}],36:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _v=_interopRequireDefault(require("./v35.js"));var _sha=_interopRequireDefault(require("./sha1.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const v5=(0,_v.default)('v5',0x50,_sha.default);var _default=v5;exports.default=_default;},{"./sha1.js":30,"./v35.js":34}],37:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _regex=_interopRequireDefault(require("./regex.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function validate(uuid){return typeof uuid==='string'&&_regex.default.test(uuid);}var _default=validate;exports.default=_default;},{"./regex.js":28}],38:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _validate=_interopRequireDefault(require("./validate.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function version(uuid){if(!(0,_validate.default)(uuid)){throw TypeError('Invalid UUID');}return parseInt(uuid.substr(14,1),16);}var _default=version;exports.default=_default;},{"./validate.js":37}],39:[function(require,module,exports){(function(process,Buffer){(function(){'use strict';Object.defineProperty(exports,'__esModule',{value:true});var local_atob=typeof atob==='undefined'?function(str){return Buffer.from(str,'base64').toString('binary');}:atob;var local_btoa=typeof btoa==='undefined'?function(str){return Buffer.from(str,'binary').toString('base64');}:btoa;function string_to_bytes(str,utf8){if(utf8===void 0){utf8=false;}var len=str.length,bytes=new Uint8Array(utf8?4*len:len);for(var i=0,j=0;i<len;i++){var c=str.charCodeAt(i);if(utf8&&0xd800<=c&&c<=0xdbff){if(++i>=len)throw new Error('Malformed string, low surrogate expected at position '+i);c=(c^0xd800)<<10|0x10000|str.charCodeAt(i)^0xdc00;}else if(!utf8&&c>>>8){throw new Error('Wide characters are not allowed.');}if(!utf8||c<=0x7f){bytes[j++]=c;}else if(c<=0x7ff){bytes[j++]=0xc0|c>>6;bytes[j++]=0x80|c&0x3f;}else if(c<=0xffff){bytes[j++]=0xe0|c>>12;bytes[j++]=0x80|c>>6&0x3f;bytes[j++]=0x80|c&0x3f;}else{bytes[j++]=0xf0|c>>18;bytes[j++]=0x80|c>>12&0x3f;bytes[j++]=0x80|c>>6&0x3f;bytes[j++]=0x80|c&0x3f;}}return bytes.subarray(0,j);}function hex_to_bytes(str){var len=str.length;if(len&1){str='0'+str;len++;}var bytes=new Uint8Array(len>>1);for(var i=0;i<len;i+=2){bytes[i>>1]=parseInt(str.substr(i,2),16);}return bytes;}function base64_to_bytes(str){return string_to_bytes(local_atob(str));}function bytes_to_string(bytes,utf8){if(utf8===void 0){utf8=false;}var len=bytes.length,chars=new Array(len);for(var i=0,j=0;i<len;i++){var b=bytes[i];if(!utf8||b<128){chars[j++]=b;}else if(b>=192&&b<224&&i+1<len){chars[j++]=(b&0x1f)<<6|bytes[++i]&0x3f;}else if(b>=224&&b<240&&i+2<len){chars[j++]=(b&0xf)<<12|(bytes[++i]&0x3f)<<6|bytes[++i]&0x3f;}else if(b>=240&&b<248&&i+3<len){var c=(b&7)<<18|(bytes[++i]&0x3f)<<12|(bytes[++i]&0x3f)<<6|bytes[++i]&0x3f;if(c<=0xffff){chars[j++]=c;}else{c^=0x10000;chars[j++]=0xd800|c>>10;chars[j++]=0xdc00|c&0x3ff;}}else{throw new Error('Malformed UTF8 character at byte offset '+i);}}var str='',bs=16384;for(var i=0;i<j;i+=bs){str+=String.fromCharCode.apply(String,chars.slice(i,i+bs<=j?i+bs:j));}return str;}function bytes_to_hex(arr){var str='';for(var i=0;i<arr.length;i++){var h=(arr[i]&0xff).toString(16);if(h.length<2)str+='0';str+=h;}return str;}function bytes_to_base64(arr){return local_btoa(bytes_to_string(arr));}function is_bytes(a){return a instanceof Uint8Array;}function _heap_init(heap,heapSize){var size=heap?heap.byteLength:heapSize||65536;if(size&0xfff||size<=0)throw new Error('heap size must be a positive integer and a multiple of 4096');heap=heap||new Uint8Array(new ArrayBuffer(size));return heap;}function _heap_write(heap,hpos,data,dpos,dlen){var hlen=heap.length-hpos;var wlen=hlen<dlen?hlen:dlen;heap.set(data.subarray(dpos,dpos+wlen),hpos);return wlen;}function joinBytes(){var arg=[];for(var _i=0;_i<arguments.length;_i++){arg[_i]=arguments[_i];}var totalLenght=arg.reduce(function(sum,curr){return sum+curr.length;},0);var ret=new Uint8Array(totalLenght);var cursor=0;for(var i=0;i<arg.length;i++){ret.set(arg[i],cursor);cursor+=arg[i].length;}return ret;}/**
 * Util exports
 */var __extends=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var IllegalStateError=/** @class */function(_super){__extends(IllegalStateError,_super);function IllegalStateError(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _this=_super.apply(this,args)||this;return _this;}return IllegalStateError;}(Error);var IllegalArgumentError=/** @class */function(_super){__extends(IllegalArgumentError,_super);function IllegalArgumentError(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _this=_super.apply(this,args)||this;return _this;}return IllegalArgumentError;}(Error);var SecurityError=/** @class */function(_super){__extends(SecurityError,_super);function SecurityError(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _this=_super.apply(this,args)||this;return _this;}return SecurityError;}(Error);/**
 * @file {@link http://asmjs.org Asm.js} implementation of the {@link https://en.wikipedia.org/wiki/Advanced_Encryption_Standard Advanced Encryption Standard}.
 * @author Artem S Vybornov <vybornov@gmail.com>
 * @license MIT
 */var AES_asm=function(){/**
   * Galois Field stuff init flag
   */var ginit_done=false;/**
   * Galois Field exponentiation and logarithm tables for 3 (the generator)
   */var gexp3,glog3;/**
   * Init Galois Field tables
   */function ginit(){gexp3=[],glog3=[];var a=1,c,d;for(c=0;c<255;c++){gexp3[c]=a;// Multiply by three
d=a&0x80,a<<=1,a&=255;if(d===0x80)a^=0x1b;a^=gexp3[c];// Set the log table value
glog3[gexp3[c]]=c;}gexp3[255]=gexp3[0];glog3[0]=0;ginit_done=true;}/**
   * Galois Field multiplication
   * @param {number} a
   * @param {number} b
   * @return {number}
   */function gmul(a,b){var c=gexp3[(glog3[a]+glog3[b])%255];if(a===0||b===0)c=0;return c;}/**
   * Galois Field reciprocal
   * @param {number} a
   * @return {number}
   */function ginv(a){var i=gexp3[255-glog3[a]];if(a===0)i=0;return i;}/**
   * AES stuff init flag
   */var aes_init_done=false;/**
   * Encryption, Decryption, S-Box and KeyTransform tables
   *
   * @type {number[]}
   */var aes_sbox;/**
   * @type {number[]}
   */var aes_sinv;/**
   * @type {number[][]}
   */var aes_enc;/**
   * @type {number[][]}
   */var aes_dec;/**
   * Init AES tables
   */function aes_init(){if(!ginit_done)ginit();// Calculates AES S-Box value
function _s(a){var c,s,x;s=x=ginv(a);for(c=0;c<4;c++){s=(s<<1|s>>>7)&255;x^=s;}x^=99;return x;}// Tables
aes_sbox=[],aes_sinv=[],aes_enc=[[],[],[],[]],aes_dec=[[],[],[],[]];for(var i=0;i<256;i++){var s=_s(i);// S-Box and its inverse
aes_sbox[i]=s;aes_sinv[s]=i;// Ecryption and Decryption tables
aes_enc[0][i]=gmul(2,s)<<24|s<<16|s<<8|gmul(3,s);aes_dec[0][s]=gmul(14,i)<<24|gmul(9,i)<<16|gmul(13,i)<<8|gmul(11,i);// Rotate tables
for(var t=1;t<4;t++){aes_enc[t][i]=aes_enc[t-1][i]>>>8|aes_enc[t-1][i]<<24;aes_dec[t][s]=aes_dec[t-1][s]>>>8|aes_dec[t-1][s]<<24;}}aes_init_done=true;}/**
   * Asm.js module constructor.
   *
   * <p>
   * Heap buffer layout by offset:
   * <pre>
   * 0x0000   encryption key schedule
   * 0x0400   decryption key schedule
   * 0x0800   sbox
   * 0x0c00   inv sbox
   * 0x1000   encryption tables
   * 0x2000   decryption tables
   * 0x3000   reserved (future GCM multiplication lookup table)
   * 0x4000   data
   * </pre>
   * Don't touch anything before <code>0x400</code>.
   * </p>
   *
   * @alias AES_asm
   * @class
   * @param foreign - <i>ignored</i>
   * @param buffer - heap buffer to link with
   */var wrapper=function(foreign,buffer){// Init AES stuff for the first time
if(!aes_init_done)aes_init();// Fill up AES tables
var heap=new Uint32Array(buffer);heap.set(aes_sbox,0x0800>>2);heap.set(aes_sinv,0x0c00>>2);for(var i=0;i<4;i++){heap.set(aes_enc[i],0x1000+0x400*i>>2);heap.set(aes_dec[i],0x2000+0x400*i>>2);}/**
     * Calculate AES key schedules.
     * @instance
     * @memberof AES_asm
     * @param {number} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)
     * @param {number} k0 - key vector components
     * @param {number} k1 - key vector components
     * @param {number} k2 - key vector components
     * @param {number} k3 - key vector components
     * @param {number} k4 - key vector components
     * @param {number} k5 - key vector components
     * @param {number} k6 - key vector components
     * @param {number} k7 - key vector components
     */function set_key(ks,k0,k1,k2,k3,k4,k5,k6,k7){var ekeys=heap.subarray(0x000,60),dkeys=heap.subarray(0x100,0x100+60);// Encryption key schedule
ekeys.set([k0,k1,k2,k3,k4,k5,k6,k7]);for(var i=ks,rcon=1;i<4*ks+28;i++){var k=ekeys[i-1];if(i%ks===0||ks===8&&i%ks===4){k=aes_sbox[k>>>24]<<24^aes_sbox[k>>>16&255]<<16^aes_sbox[k>>>8&255]<<8^aes_sbox[k&255];}if(i%ks===0){k=k<<8^k>>>24^rcon<<24;rcon=rcon<<1^(rcon&0x80?0x1b:0);}ekeys[i]=ekeys[i-ks]^k;}// Decryption key schedule
for(var j=0;j<i;j+=4){for(var jj=0;jj<4;jj++){var k=ekeys[i-(4+j)+(4-jj)%4];if(j<4||j>=i-4){dkeys[j+jj]=k;}else{dkeys[j+jj]=aes_dec[0][aes_sbox[k>>>24]]^aes_dec[1][aes_sbox[k>>>16&255]]^aes_dec[2][aes_sbox[k>>>8&255]]^aes_dec[3][aes_sbox[k&255]];}}}// Set rounds number
asm.set_rounds(ks+5);}// create library object with necessary properties
var stdlib={Uint8Array:Uint8Array,Uint32Array:Uint32Array};var asm=function(stdlib,foreign,buffer){"use asm";var S0=0,S1=0,S2=0,S3=0,I0=0,I1=0,I2=0,I3=0,N0=0,N1=0,N2=0,N3=0,M0=0,M1=0,M2=0,M3=0,H0=0,H1=0,H2=0,H3=0,R=0;var HEAP=new stdlib.Uint32Array(buffer),DATA=new stdlib.Uint8Array(buffer);/**
       * AES core
       * @param {number} k - precomputed key schedule offset
       * @param {number} s - precomputed sbox table offset
       * @param {number} t - precomputed round table offset
       * @param {number} r - number of inner rounds to perform
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _core(k,s,t,r,x0,x1,x2,x3){k=k|0;s=s|0;t=t|0;r=r|0;x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;var t1=0,t2=0,t3=0,y0=0,y1=0,y2=0,y3=0,i=0;t1=t|0x400,t2=t|0x800,t3=t|0xc00;// round 0
x0=x0^HEAP[(k|0)>>2],x1=x1^HEAP[(k|4)>>2],x2=x2^HEAP[(k|8)>>2],x3=x3^HEAP[(k|12)>>2];// round 1..r
for(i=16;(i|0)<=r<<4;i=i+16|0){y0=HEAP[(t|x0>>22&1020)>>2]^HEAP[(t1|x1>>14&1020)>>2]^HEAP[(t2|x2>>6&1020)>>2]^HEAP[(t3|x3<<2&1020)>>2]^HEAP[(k|i|0)>>2],y1=HEAP[(t|x1>>22&1020)>>2]^HEAP[(t1|x2>>14&1020)>>2]^HEAP[(t2|x3>>6&1020)>>2]^HEAP[(t3|x0<<2&1020)>>2]^HEAP[(k|i|4)>>2],y2=HEAP[(t|x2>>22&1020)>>2]^HEAP[(t1|x3>>14&1020)>>2]^HEAP[(t2|x0>>6&1020)>>2]^HEAP[(t3|x1<<2&1020)>>2]^HEAP[(k|i|8)>>2],y3=HEAP[(t|x3>>22&1020)>>2]^HEAP[(t1|x0>>14&1020)>>2]^HEAP[(t2|x1>>6&1020)>>2]^HEAP[(t3|x2<<2&1020)>>2]^HEAP[(k|i|12)>>2];x0=y0,x1=y1,x2=y2,x3=y3;}// final round
S0=HEAP[(s|x0>>22&1020)>>2]<<24^HEAP[(s|x1>>14&1020)>>2]<<16^HEAP[(s|x2>>6&1020)>>2]<<8^HEAP[(s|x3<<2&1020)>>2]^HEAP[(k|i|0)>>2],S1=HEAP[(s|x1>>22&1020)>>2]<<24^HEAP[(s|x2>>14&1020)>>2]<<16^HEAP[(s|x3>>6&1020)>>2]<<8^HEAP[(s|x0<<2&1020)>>2]^HEAP[(k|i|4)>>2],S2=HEAP[(s|x2>>22&1020)>>2]<<24^HEAP[(s|x3>>14&1020)>>2]<<16^HEAP[(s|x0>>6&1020)>>2]<<8^HEAP[(s|x1<<2&1020)>>2]^HEAP[(k|i|8)>>2],S3=HEAP[(s|x3>>22&1020)>>2]<<24^HEAP[(s|x0>>14&1020)>>2]<<16^HEAP[(s|x1>>6&1020)>>2]<<8^HEAP[(s|x2<<2&1020)>>2]^HEAP[(k|i|12)>>2];}/**
       * ECB mode encryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _ecb_enc(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;_core(0x0000,0x0800,0x1000,R,x0,x1,x2,x3);}/**
       * ECB mode decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _ecb_dec(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;var t=0;_core(0x0400,0x0c00,0x2000,R,x0,x3,x2,x1);t=S1,S1=S3,S3=t;}/**
       * CBC mode encryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _cbc_enc(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;_core(0x0000,0x0800,0x1000,R,I0^x0,I1^x1,I2^x2,I3^x3);I0=S0,I1=S1,I2=S2,I3=S3;}/**
       * CBC mode decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _cbc_dec(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;var t=0;_core(0x0400,0x0c00,0x2000,R,x0,x3,x2,x1);t=S1,S1=S3,S3=t;S0=S0^I0,S1=S1^I1,S2=S2^I2,S3=S3^I3;I0=x0,I1=x1,I2=x2,I3=x3;}/**
       * CFB mode encryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _cfb_enc(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;_core(0x0000,0x0800,0x1000,R,I0,I1,I2,I3);I0=S0=S0^x0,I1=S1=S1^x1,I2=S2=S2^x2,I3=S3=S3^x3;}/**
       * CFB mode decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _cfb_dec(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;_core(0x0000,0x0800,0x1000,R,I0,I1,I2,I3);S0=S0^x0,S1=S1^x1,S2=S2^x2,S3=S3^x3;I0=x0,I1=x1,I2=x2,I3=x3;}/**
       * OFB mode encryption / decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _ofb(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;_core(0x0000,0x0800,0x1000,R,I0,I1,I2,I3);I0=S0,I1=S1,I2=S2,I3=S3;S0=S0^x0,S1=S1^x1,S2=S2^x2,S3=S3^x3;}/**
       * CTR mode encryption / decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _ctr(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;_core(0x0000,0x0800,0x1000,R,N0,N1,N2,N3);N3=~M3&N3|M3&N3+1;N2=~M2&N2|M2&N2+((N3|0)==0);N1=~M1&N1|M1&N1+((N2|0)==0);N0=~M0&N0|M0&N0+((N1|0)==0);S0=S0^x0;S1=S1^x1;S2=S2^x2;S3=S3^x3;}/**
       * GCM mode MAC calculation
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */function _gcm_mac(x0,x1,x2,x3){x0=x0|0;x1=x1|0;x2=x2|0;x3=x3|0;var y0=0,y1=0,y2=0,y3=0,z0=0,z1=0,z2=0,z3=0,i=0,c=0;x0=x0^I0,x1=x1^I1,x2=x2^I2,x3=x3^I3;y0=H0|0,y1=H1|0,y2=H2|0,y3=H3|0;for(;(i|0)<128;i=i+1|0){if(y0>>>31){z0=z0^x0,z1=z1^x1,z2=z2^x2,z3=z3^x3;}y0=y0<<1|y1>>>31,y1=y1<<1|y2>>>31,y2=y2<<1|y3>>>31,y3=y3<<1;c=x3&1;x3=x3>>>1|x2<<31,x2=x2>>>1|x1<<31,x1=x1>>>1|x0<<31,x0=x0>>>1;if(c)x0=x0^0xe1000000;}I0=z0,I1=z1,I2=z2,I3=z3;}/**
       * Set the internal rounds number.
       * @instance
       * @memberof AES_asm
       * @param {number} r - number if inner AES rounds
       */function set_rounds(r){r=r|0;R=r;}/**
       * Populate the internal state of the module.
       * @instance
       * @memberof AES_asm
       * @param {number} s0 - state vector
       * @param {number} s1 - state vector
       * @param {number} s2 - state vector
       * @param {number} s3 - state vector
       */function set_state(s0,s1,s2,s3){s0=s0|0;s1=s1|0;s2=s2|0;s3=s3|0;S0=s0,S1=s1,S2=s2,S3=s3;}/**
       * Populate the internal iv of the module.
       * @instance
       * @memberof AES_asm
       * @param {number} i0 - iv vector
       * @param {number} i1 - iv vector
       * @param {number} i2 - iv vector
       * @param {number} i3 - iv vector
       */function set_iv(i0,i1,i2,i3){i0=i0|0;i1=i1|0;i2=i2|0;i3=i3|0;I0=i0,I1=i1,I2=i2,I3=i3;}/**
       * Set nonce for CTR-family modes.
       * @instance
       * @memberof AES_asm
       * @param {number} n0 - nonce vector
       * @param {number} n1 - nonce vector
       * @param {number} n2 - nonce vector
       * @param {number} n3 - nonce vector
       */function set_nonce(n0,n1,n2,n3){n0=n0|0;n1=n1|0;n2=n2|0;n3=n3|0;N0=n0,N1=n1,N2=n2,N3=n3;}/**
       * Set counter mask for CTR-family modes.
       * @instance
       * @memberof AES_asm
       * @param {number} m0 - counter mask vector
       * @param {number} m1 - counter mask vector
       * @param {number} m2 - counter mask vector
       * @param {number} m3 - counter mask vector
       */function set_mask(m0,m1,m2,m3){m0=m0|0;m1=m1|0;m2=m2|0;m3=m3|0;M0=m0,M1=m1,M2=m2,M3=m3;}/**
       * Set counter for CTR-family modes.
       * @instance
       * @memberof AES_asm
       * @param {number} c0 - counter vector
       * @param {number} c1 - counter vector
       * @param {number} c2 - counter vector
       * @param {number} c3 - counter vector
       */function set_counter(c0,c1,c2,c3){c0=c0|0;c1=c1|0;c2=c2|0;c3=c3|0;N3=~M3&N3|M3&c3,N2=~M2&N2|M2&c2,N1=~M1&N1|M1&c1,N0=~M0&N0|M0&c0;}/**
       * Store the internal state vector into the heap.
       * @instance
       * @memberof AES_asm
       * @param {number} pos - offset where to put the data
       * @return {number} The number of bytes have been written into the heap, always 16.
       */function get_state(pos){pos=pos|0;if(pos&15)return-1;DATA[pos|0]=S0>>>24,DATA[pos|1]=S0>>>16&255,DATA[pos|2]=S0>>>8&255,DATA[pos|3]=S0&255,DATA[pos|4]=S1>>>24,DATA[pos|5]=S1>>>16&255,DATA[pos|6]=S1>>>8&255,DATA[pos|7]=S1&255,DATA[pos|8]=S2>>>24,DATA[pos|9]=S2>>>16&255,DATA[pos|10]=S2>>>8&255,DATA[pos|11]=S2&255,DATA[pos|12]=S3>>>24,DATA[pos|13]=S3>>>16&255,DATA[pos|14]=S3>>>8&255,DATA[pos|15]=S3&255;return 16;}/**
       * Store the internal iv vector into the heap.
       * @instance
       * @memberof AES_asm
       * @param {number} pos - offset where to put the data
       * @return {number} The number of bytes have been written into the heap, always 16.
       */function get_iv(pos){pos=pos|0;if(pos&15)return-1;DATA[pos|0]=I0>>>24,DATA[pos|1]=I0>>>16&255,DATA[pos|2]=I0>>>8&255,DATA[pos|3]=I0&255,DATA[pos|4]=I1>>>24,DATA[pos|5]=I1>>>16&255,DATA[pos|6]=I1>>>8&255,DATA[pos|7]=I1&255,DATA[pos|8]=I2>>>24,DATA[pos|9]=I2>>>16&255,DATA[pos|10]=I2>>>8&255,DATA[pos|11]=I2&255,DATA[pos|12]=I3>>>24,DATA[pos|13]=I3>>>16&255,DATA[pos|14]=I3>>>8&255,DATA[pos|15]=I3&255;return 16;}/**
       * GCM initialization.
       * @instance
       * @memberof AES_asm
       */function gcm_init(){_ecb_enc(0,0,0,0);H0=S0,H1=S1,H2=S2,H3=S3;}/**
       * Perform ciphering operation on the supplied data.
       * @instance
       * @memberof AES_asm
       * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)
       * @param {number} pos - offset of the data being processed
       * @param {number} len - length of the data being processed
       * @return {number} Actual amount of data have been processed.
       */function cipher(mode,pos,len){mode=mode|0;pos=pos|0;len=len|0;var ret=0;if(pos&15)return-1;while((len|0)>=16){_cipher_modes[mode&7](DATA[pos|0]<<24|DATA[pos|1]<<16|DATA[pos|2]<<8|DATA[pos|3],DATA[pos|4]<<24|DATA[pos|5]<<16|DATA[pos|6]<<8|DATA[pos|7],DATA[pos|8]<<24|DATA[pos|9]<<16|DATA[pos|10]<<8|DATA[pos|11],DATA[pos|12]<<24|DATA[pos|13]<<16|DATA[pos|14]<<8|DATA[pos|15]);DATA[pos|0]=S0>>>24,DATA[pos|1]=S0>>>16&255,DATA[pos|2]=S0>>>8&255,DATA[pos|3]=S0&255,DATA[pos|4]=S1>>>24,DATA[pos|5]=S1>>>16&255,DATA[pos|6]=S1>>>8&255,DATA[pos|7]=S1&255,DATA[pos|8]=S2>>>24,DATA[pos|9]=S2>>>16&255,DATA[pos|10]=S2>>>8&255,DATA[pos|11]=S2&255,DATA[pos|12]=S3>>>24,DATA[pos|13]=S3>>>16&255,DATA[pos|14]=S3>>>8&255,DATA[pos|15]=S3&255;ret=ret+16|0,pos=pos+16|0,len=len-16|0;}return ret|0;}/**
       * Calculates MAC of the supplied data.
       * @instance
       * @memberof AES_asm
       * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)
       * @param {number} pos - offset of the data being processed
       * @param {number} len - length of the data being processed
       * @return {number} Actual amount of data have been processed.
       */function mac(mode,pos,len){mode=mode|0;pos=pos|0;len=len|0;var ret=0;if(pos&15)return-1;while((len|0)>=16){_mac_modes[mode&1](DATA[pos|0]<<24|DATA[pos|1]<<16|DATA[pos|2]<<8|DATA[pos|3],DATA[pos|4]<<24|DATA[pos|5]<<16|DATA[pos|6]<<8|DATA[pos|7],DATA[pos|8]<<24|DATA[pos|9]<<16|DATA[pos|10]<<8|DATA[pos|11],DATA[pos|12]<<24|DATA[pos|13]<<16|DATA[pos|14]<<8|DATA[pos|15]);ret=ret+16|0,pos=pos+16|0,len=len-16|0;}return ret|0;}/**
       * AES cipher modes table (virual methods)
       */var _cipher_modes=[_ecb_enc,_ecb_dec,_cbc_enc,_cbc_dec,_cfb_enc,_cfb_dec,_ofb,_ctr];/**
       * AES MAC modes table (virual methods)
       */var _mac_modes=[_cbc_enc,_gcm_mac];/**
       * Asm.js module exports
       */return{set_rounds:set_rounds,set_state:set_state,set_iv:set_iv,set_nonce:set_nonce,set_mask:set_mask,set_counter:set_counter,get_state:get_state,get_iv:get_iv,gcm_init:gcm_init,cipher:cipher,mac:mac};}(stdlib,foreign,buffer);asm.set_key=set_key;return asm;};/**
   * AES enciphering mode constants
   * @enum {number}
   * @const
   */wrapper.ENC={ECB:0,CBC:2,CFB:4,OFB:6,CTR:7},/**
     * AES deciphering mode constants
     * @enum {number}
     * @const
     */wrapper.DEC={ECB:1,CBC:3,CFB:5,OFB:6,CTR:7},/**
     * AES MAC mode constants
     * @enum {number}
     * @const
     */wrapper.MAC={CBC:0,GCM:1};/**
   * Heap data offset
   * @type {number}
   * @const
   */wrapper.HEAP_DATA=0x4000;return wrapper;}();var AES=/** @class */function(){function AES(key,iv,padding,mode){if(padding===void 0){padding=true;}this.pos=0;this.len=0;this.mode=mode;// The AES "worker"
this.heap=_heap_init().subarray(AES_asm.HEAP_DATA);this.asm=new AES_asm(null,this.heap.buffer);// The AES object state
this.pos=0;this.len=0;// Key
var keylen=key.length;if(keylen!==16&&keylen!==24&&keylen!==32)throw new IllegalArgumentError('illegal key size');var keyview=new DataView(key.buffer,key.byteOffset,key.byteLength);this.asm.set_key(keylen>>2,keyview.getUint32(0),keyview.getUint32(4),keyview.getUint32(8),keyview.getUint32(12),keylen>16?keyview.getUint32(16):0,keylen>16?keyview.getUint32(20):0,keylen>24?keyview.getUint32(24):0,keylen>24?keyview.getUint32(28):0);// IV
if(iv!==undefined){if(iv.length!==16)throw new IllegalArgumentError('illegal iv size');var ivview=new DataView(iv.buffer,iv.byteOffset,iv.byteLength);this.asm.set_iv(ivview.getUint32(0),ivview.getUint32(4),ivview.getUint32(8),ivview.getUint32(12));}else{this.asm.set_iv(0,0,0,0);}this.padding=padding;}AES.prototype.AES_Encrypt_process=function(data){if(!is_bytes(data))throw new TypeError("data isn't of expected type");var asm=this.asm;var heap=this.heap;var amode=AES_asm.ENC[this.mode];var hpos=AES_asm.HEAP_DATA;var pos=this.pos;var len=this.len;var dpos=0;var dlen=data.length||0;var rpos=0;var rlen=len+dlen&-16;var wlen=0;var result=new Uint8Array(rlen);while(dlen>0){wlen=_heap_write(heap,pos+len,data,dpos,dlen);len+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.cipher(amode,hpos+pos,len);if(wlen)result.set(heap.subarray(pos,pos+wlen),rpos);rpos+=wlen;if(wlen<len){pos+=wlen;len-=wlen;}else{pos=0;len=0;}}this.pos=pos;this.len=len;return result;};AES.prototype.AES_Encrypt_finish=function(){var asm=this.asm;var heap=this.heap;var amode=AES_asm.ENC[this.mode];var hpos=AES_asm.HEAP_DATA;var pos=this.pos;var len=this.len;var plen=16-len%16;var rlen=len;if(this.hasOwnProperty('padding')){if(this.padding){for(var p=0;p<plen;++p){heap[pos+len+p]=plen;}len+=plen;rlen=len;}else if(len%16){throw new IllegalArgumentError('data length must be a multiple of the block size');}}else{len+=plen;}var result=new Uint8Array(rlen);if(len)asm.cipher(amode,hpos+pos,len);if(rlen)result.set(heap.subarray(pos,pos+rlen));this.pos=0;this.len=0;return result;};AES.prototype.AES_Decrypt_process=function(data){if(!is_bytes(data))throw new TypeError("data isn't of expected type");var asm=this.asm;var heap=this.heap;var amode=AES_asm.DEC[this.mode];var hpos=AES_asm.HEAP_DATA;var pos=this.pos;var len=this.len;var dpos=0;var dlen=data.length||0;var rpos=0;var rlen=len+dlen&-16;var plen=0;var wlen=0;if(this.padding){plen=len+dlen-rlen||16;rlen-=plen;}var result=new Uint8Array(rlen);while(dlen>0){wlen=_heap_write(heap,pos+len,data,dpos,dlen);len+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.cipher(amode,hpos+pos,len-(!dlen?plen:0));if(wlen)result.set(heap.subarray(pos,pos+wlen),rpos);rpos+=wlen;if(wlen<len){pos+=wlen;len-=wlen;}else{pos=0;len=0;}}this.pos=pos;this.len=len;return result;};AES.prototype.AES_Decrypt_finish=function(){var asm=this.asm;var heap=this.heap;var amode=AES_asm.DEC[this.mode];var hpos=AES_asm.HEAP_DATA;var pos=this.pos;var len=this.len;var rlen=len;if(len>0){if(len%16){if(this.hasOwnProperty('padding')){throw new IllegalArgumentError('data length must be a multiple of the block size');}else{len+=16-len%16;}}asm.cipher(amode,hpos+pos,len);if(this.hasOwnProperty('padding')&&this.padding){var pad=heap[pos+rlen-1];if(pad<1||pad>16||pad>rlen)throw new SecurityError('bad padding');var pcheck=0;for(var i=pad;i>1;i--)pcheck|=pad^heap[pos+rlen-i];if(pcheck)throw new SecurityError('bad padding');rlen-=pad;}}var result=new Uint8Array(rlen);if(rlen>0){result.set(heap.subarray(pos,pos+rlen));}this.pos=0;this.len=0;return result;};return AES;}();var __extends$1=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var AES_CBC=/** @class */function(_super){__extends$1(AES_CBC,_super);function AES_CBC(key,iv,padding){if(padding===void 0){padding=true;}return _super.call(this,key,iv,padding,'CBC')||this;}AES_CBC.encrypt=function(data,key,padding,iv){if(padding===void 0){padding=true;}return new AES_CBC(key,iv,padding).encrypt(data);};AES_CBC.decrypt=function(data,key,padding,iv){if(padding===void 0){padding=true;}return new AES_CBC(key,iv,padding).decrypt(data);};AES_CBC.prototype.encrypt=function(data){var r1=this.AES_Encrypt_process(data);var r2=this.AES_Encrypt_finish();return joinBytes(r1,r2);};AES_CBC.prototype.decrypt=function(data){var r1=this.AES_Decrypt_process(data);var r2=this.AES_Decrypt_finish();return joinBytes(r1,r2);};return AES_CBC;}(AES);/**
 * Counter with CBC-MAC (CCM)
 *
 * Due to JS limitations (52 bits of Number precision) maximum encrypted message length
 * is limited to ~4 PiB ( 2^52 - 16 ) per `nonce`-`key` pair.
 * That also limits `lengthSize` parameter maximum value to 7 (not 8 as described in RFC3610).
 *
 * Additional authenticated data `adata` maximum length is chosen to be no more than 65279 bytes ( 2^16 - 2^8 ),
 * which is considered enough for the most of use-cases.
 *
 * And one more important thing: in case of progressive ciphering of a data stream (in other
 * words when data can't be held in-memory at a whole and are ciphered chunk-by-chunk)
 * you have to know the `dataLength` in advance and pass that value to the cipher options.
 */var __extends$2=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var _AES_CCM_adata_maxLength=65279;// 2^16 - 2^8
var _AES_CCM_data_maxLength=4503599627370480;// 2^52 - 2^4
var AES_CCM=/** @class */function(_super){__extends$2(AES_CCM,_super);function AES_CCM(key,nonce,adata,tagSize,dataLength){if(tagSize===void 0){tagSize=16;}var _this=_super.call(this,key,undefined,undefined,'CCM')||this;_this.counter=1;_this.dataLength=-1;// Tag size
if(tagSize<4||tagSize>16||tagSize&1)throw new IllegalArgumentError('illegal tagSize value');_this.tagSize=tagSize;// Nonce
_this.nonce=nonce;if(nonce.length<8||nonce.length>13)throw new IllegalArgumentError('illegal nonce length');_this.lengthSize=15-nonce.length;nonce=new Uint8Array(nonce.length+1);nonce[0]=_this.lengthSize-1;nonce.set(_this.nonce,1);if(dataLength<0||dataLength>_AES_CCM_data_maxLength||dataLength>Math.pow(2,8*_this.lengthSize)-16)throw new IllegalArgumentError('illegal dataLength value');if(adata!==undefined){if(adata.length>_AES_CCM_adata_maxLength)throw new IllegalArgumentError('illegal adata length');_this.adata=adata.length?adata:undefined;}_this.dataLength=dataLength;_this.counter=1;_this.AES_CCM_calculate_iv();_this.AES_CTR_set_options(nonce,_this.counter,8*_this.lengthSize);return _this;}AES_CCM.encrypt=function(clear,key,nonce,adata,tagsize){if(tagsize===void 0){tagsize=16;}return new AES_CCM(key,nonce,adata,tagsize,clear.length).encrypt(clear);};AES_CCM.decrypt=function(cipher,key,nonce,adata,tagsize){if(tagsize===void 0){tagsize=16;}return new AES_CCM(key,nonce,adata,tagsize,cipher.length-tagsize).decrypt(cipher);};AES_CCM.prototype.encrypt=function(data){this.dataLength=data.length||0;var result1=this.AES_CCM_Encrypt_process(data);var result2=this.AES_CCM_Encrypt_finish();var result=new Uint8Array(result1.length+result2.length);if(result1.length)result.set(result1);if(result2.length)result.set(result2,result1.length);return result;};AES_CCM.prototype.decrypt=function(data){this.dataLength=data.length||0;var result1=this.AES_CCM_Decrypt_process(data);var result2=this.AES_CCM_Decrypt_finish();var result=new Uint8Array(result1.length+result2.length);if(result1.length)result.set(result1);if(result2.length)result.set(result2,result1.length);return result;};AES_CCM.prototype.AES_CCM_calculate_iv=function(){var nonce=this.nonce;var adata=this.adata;var tagSize=this.tagSize;var lengthSize=this.lengthSize;var dataLength=this.dataLength;var data=new Uint8Array(16+(adata?2+adata.length:0));// B0: flags(adata?, M', L'), nonce, len(data)
data[0]=(adata?64:0)|tagSize-2<<2|lengthSize-1;data.set(nonce,1);if(lengthSize>6)data[9]=dataLength/0x100000000>>>16&15;if(lengthSize>5)data[10]=dataLength/0x100000000>>>8&255;if(lengthSize>4)data[11]=dataLength/0x100000000&255;if(lengthSize>3)data[12]=dataLength>>>24;if(lengthSize>2)data[13]=dataLength>>>16&255;data[14]=dataLength>>>8&255;data[15]=dataLength&255;// B*: len(adata), adata
if(adata){data[16]=adata.length>>>8&255;data[17]=adata.length&255;data.set(adata,18);}this._cbc_mac_process(data);this.asm.get_state(AES_asm.HEAP_DATA);var iv=new Uint8Array(this.heap.subarray(0,16));var ivview=new DataView(iv.buffer,iv.byteOffset,iv.byteLength);this.asm.set_iv(ivview.getUint32(0),ivview.getUint32(4),ivview.getUint32(8),ivview.getUint32(12));};AES_CCM.prototype._cbc_mac_process=function(data){var heap=this.heap;var asm=this.asm;var dpos=0;var dlen=data.length||0;var wlen=0;while(dlen>0){wlen=_heap_write(heap,0,data,dpos,dlen);while(wlen&15)heap[wlen++]=0;dpos+=wlen;dlen-=wlen;asm.mac(AES_asm.MAC.CBC,AES_asm.HEAP_DATA,wlen);}};AES_CCM.prototype.AES_CCM_Encrypt_process=function(data){var asm=this.asm;var heap=this.heap;var dpos=0;var dlen=data.length||0;var counter=this.counter;var pos=this.pos;var len=this.len;var rlen=len+dlen&-16;var rpos=0;var wlen=0;if((counter-1<<4)+len+dlen>_AES_CCM_data_maxLength)// ??? should check against lengthSize
throw new RangeError('counter overflow');var result=new Uint8Array(rlen);while(dlen>0){wlen=_heap_write(heap,pos+len,data,dpos,dlen);len+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.mac(AES_asm.MAC.CBC,AES_asm.HEAP_DATA+pos,len);wlen=asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA+pos,wlen);if(wlen)result.set(heap.subarray(pos,pos+wlen),rpos);counter+=wlen>>>4;rpos+=wlen;if(wlen<len){pos+=wlen;len-=wlen;}else{pos=0;len=0;}}this.counter=counter;this.pos=pos;this.len=len;return result;};AES_CCM.prototype.AES_CCM_Encrypt_finish=function(){var asm=this.asm;var heap=this.heap;var tagSize=this.tagSize;var pos=this.pos;var len=this.len;var result=new Uint8Array(len+tagSize);var i=len;for(;i&15;i++)heap[pos+i]=0;asm.mac(AES_asm.MAC.CBC,AES_asm.HEAP_DATA+pos,i);asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA+pos,i);if(len)result.set(heap.subarray(pos,pos+len));asm.set_counter(0,0,0,0);asm.get_iv(AES_asm.HEAP_DATA);asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA,16);result.set(heap.subarray(0,tagSize),len);this.counter=1;this.pos=0;this.len=0;return result;};AES_CCM.prototype.AES_CCM_Decrypt_process=function(data){var dpos=0;var dlen=data.length||0;var asm=this.asm;var heap=this.heap;var counter=this.counter;var tagSize=this.tagSize;var pos=this.pos;var len=this.len;var rpos=0;var rlen=len+dlen>tagSize?len+dlen-tagSize&-16:0;var tlen=len+dlen-rlen;var wlen=0;if((counter-1<<4)+len+dlen>_AES_CCM_data_maxLength)throw new RangeError('counter overflow');var result=new Uint8Array(rlen);while(dlen>tlen){wlen=_heap_write(heap,pos+len,data,dpos,dlen-tlen);len+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.cipher(AES_asm.DEC.CTR,AES_asm.HEAP_DATA+pos,wlen);wlen=asm.mac(AES_asm.MAC.CBC,AES_asm.HEAP_DATA+pos,wlen);if(wlen)result.set(heap.subarray(pos,pos+wlen),rpos);counter+=wlen>>>4;rpos+=wlen;pos=0;len=0;}if(dlen>0){len+=_heap_write(heap,0,data,dpos,dlen);}this.counter=counter;this.pos=pos;this.len=len;return result;};AES_CCM.prototype.AES_CCM_Decrypt_finish=function(){var asm=this.asm;var heap=this.heap;var tagSize=this.tagSize;var pos=this.pos;var len=this.len;var rlen=len-tagSize;if(len<tagSize)throw new IllegalStateError('authentication tag not found');var result=new Uint8Array(rlen);var atag=new Uint8Array(heap.subarray(pos+rlen,pos+len));asm.cipher(AES_asm.DEC.CTR,AES_asm.HEAP_DATA+pos,rlen+15&-16);result.set(heap.subarray(pos,pos+rlen));var i=rlen;for(;i&15;i++)heap[pos+i]=0;asm.mac(AES_asm.MAC.CBC,AES_asm.HEAP_DATA+pos,i);asm.set_counter(0,0,0,0);asm.get_iv(AES_asm.HEAP_DATA);asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA,16);var acheck=0;for(var j=0;j<tagSize;++j)acheck|=atag[j]^heap[j];if(acheck)throw new SecurityError('data integrity check failed');this.counter=1;this.pos=0;this.len=0;return result;};AES_CCM.prototype.AES_CTR_set_options=function(nonce,counter,size){if(size<8||size>48)throw new IllegalArgumentError('illegal counter size');var mask=Math.pow(2,size)-1;this.asm.set_mask(0,0,mask/0x100000000|0,mask|0);var len=nonce.length;if(!len||len>16)throw new IllegalArgumentError('illegal nonce size');this.nonce=nonce;var view=new DataView(new ArrayBuffer(16));new Uint8Array(view.buffer).set(nonce);this.asm.set_nonce(view.getUint32(0),view.getUint32(4),view.getUint32(8),view.getUint32(12));if(counter<0||counter>=Math.pow(2,size))throw new IllegalArgumentError('illegal counter value');this.counter=counter;this.asm.set_counter(0,0,counter/0x100000000|0,counter|0);};return AES_CCM;}(AES);var __extends$3=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var AES_CFB=/** @class */function(_super){__extends$3(AES_CFB,_super);function AES_CFB(key,iv){var _this=_super.call(this,key,iv,true,'CFB')||this;delete _this.padding;return _this;}AES_CFB.encrypt=function(data,key,iv){return new AES_CFB(key,iv).encrypt(data);};AES_CFB.decrypt=function(data,key,iv){return new AES_CFB(key,iv).decrypt(data);};AES_CFB.prototype.encrypt=function(data){var r1=this.AES_Encrypt_process(data);var r2=this.AES_Encrypt_finish();return joinBytes(r1,r2);};AES_CFB.prototype.decrypt=function(data){var r1=this.AES_Decrypt_process(data);var r2=this.AES_Decrypt_finish();return joinBytes(r1,r2);};return AES_CFB;}(AES);var __extends$4=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var AES_ECB=/** @class */function(_super){__extends$4(AES_ECB,_super);function AES_ECB(key,padding){if(padding===void 0){padding=false;}return _super.call(this,key,undefined,padding,'ECB')||this;}AES_ECB.encrypt=function(data,key,padding){if(padding===void 0){padding=false;}return new AES_ECB(key,padding).encrypt(data);};AES_ECB.decrypt=function(data,key,padding){if(padding===void 0){padding=false;}return new AES_ECB(key,padding).decrypt(data);};AES_ECB.prototype.encrypt=function(data){var r1=this.AES_Encrypt_process(data);var r2=this.AES_Encrypt_finish();return joinBytes(r1,r2);};AES_ECB.prototype.decrypt=function(data){var r1=this.AES_Decrypt_process(data);var r2=this.AES_Decrypt_finish();return joinBytes(r1,r2);};return AES_ECB;}(AES);function mul2(data){var t=data[0]&0x80;for(var i=0;i<15;i++){data[i]=data[i]<<1^(data[i+1]&0x80?1:0);}data[15]=data[15]<<1^(t?0x87:0);}var AES_CMAC=/** @class */function(){function AES_CMAC(key){this.bufferLength=0;this.k=new AES_ECB(key).encrypt(new Uint8Array(16));mul2(this.k);this.cbc=new AES_CBC(key,new Uint8Array(16),false);this.buffer=new Uint8Array(16);this.result=null;}AES_CMAC.bytes=function(data,key){return new AES_CMAC(key).process(data).finish().result;};AES_CMAC.prototype.process=function(data){if(this.bufferLength+data.length>16){this.cbc.encrypt(this.buffer.subarray(0,this.bufferLength));var offset=(this.bufferLength+data.length-1&~15)-this.bufferLength;this.cbc.encrypt(data.subarray(0,offset));this.buffer.set(data.subarray(offset));this.bufferLength=data.length-offset;}else{this.buffer.set(data,this.bufferLength);this.bufferLength+=data.length;}return this;};AES_CMAC.prototype.finish=function(){if(this.bufferLength!==16){this.buffer[this.bufferLength]=0x80;for(var i=this.bufferLength+1;i<16;i++){this.buffer[i]=0;}mul2(this.k);}for(var i=0;i<16;i++){this.buffer[i]^=this.k[i];}this.result=this.cbc.encrypt(this.buffer);return this;};return AES_CMAC;}();var __extends$5=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var AES_CTR=/** @class */function(_super){__extends$5(AES_CTR,_super);function AES_CTR(key,nonce){var _this=_super.call(this,key,undefined,false,'CTR')||this;delete _this.padding;_this.AES_CTR_set_options(nonce);return _this;}AES_CTR.encrypt=function(data,key,nonce){return new AES_CTR(key,nonce).encrypt(data);};AES_CTR.decrypt=function(data,key,nonce){return new AES_CTR(key,nonce).encrypt(data);};AES_CTR.prototype.encrypt=function(data){var r1=this.AES_Encrypt_process(data);var r2=this.AES_Encrypt_finish();return joinBytes(r1,r2);};AES_CTR.prototype.decrypt=function(data){var r1=this.AES_Encrypt_process(data);var r2=this.AES_Encrypt_finish();return joinBytes(r1,r2);};AES_CTR.prototype.AES_CTR_set_options=function(nonce,counter,size){if(size!==undefined){if(size<8||size>48)throw new IllegalArgumentError('illegal counter size');var mask=Math.pow(2,size)-1;this.asm.set_mask(0,0,mask/0x100000000|0,mask|0);}else{size=48;this.asm.set_mask(0,0,0xffff,0xffffffff);}if(nonce!==undefined){var len=nonce.length;if(!len||len>16)throw new IllegalArgumentError('illegal nonce size');var view=new DataView(new ArrayBuffer(16));new Uint8Array(view.buffer).set(nonce);this.asm.set_nonce(view.getUint32(0),view.getUint32(4),view.getUint32(8),view.getUint32(12));}else{throw new Error('nonce is required');}if(counter!==undefined){if(counter<0||counter>=Math.pow(2,size))throw new IllegalArgumentError('illegal counter value');this.asm.set_counter(0,0,counter/0x100000000|0,counter|0);}};return AES_CTR;}(AES);var __extends$6=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var _AES_GCM_data_maxLength=68719476704;// 2^36 - 2^5
var AES_GCM=/** @class */function(_super){__extends$6(AES_GCM,_super);function AES_GCM(key,nonce,adata,tagSize){if(tagSize===void 0){tagSize=16;}var _this=_super.call(this,key,undefined,false,'CTR')||this;_this.tagSize=tagSize;_this.gamma0=0;_this.counter=1;// Init GCM
_this.asm.gcm_init();// Tag size
if(_this.tagSize<4||_this.tagSize>16)throw new IllegalArgumentError('illegal tagSize value');// Nonce
var noncelen=nonce.length||0;var noncebuf=new Uint8Array(16);if(noncelen!==12){_this._gcm_mac_process(nonce);_this.heap[0]=0;_this.heap[1]=0;_this.heap[2]=0;_this.heap[3]=0;_this.heap[4]=0;_this.heap[5]=0;_this.heap[6]=0;_this.heap[7]=0;_this.heap[8]=0;_this.heap[9]=0;_this.heap[10]=0;_this.heap[11]=noncelen>>>29;_this.heap[12]=noncelen>>>21&255;_this.heap[13]=noncelen>>>13&255;_this.heap[14]=noncelen>>>5&255;_this.heap[15]=noncelen<<3&255;_this.asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA,16);_this.asm.get_iv(AES_asm.HEAP_DATA);_this.asm.set_iv(0,0,0,0);noncebuf.set(_this.heap.subarray(0,16));}else{noncebuf.set(nonce);noncebuf[15]=1;}var nonceview=new DataView(noncebuf.buffer);_this.gamma0=nonceview.getUint32(12);_this.asm.set_nonce(nonceview.getUint32(0),nonceview.getUint32(4),nonceview.getUint32(8),0);_this.asm.set_mask(0,0,0,0xffffffff);// Associated data
if(adata!==undefined){if(adata.length>_AES_GCM_data_maxLength)throw new IllegalArgumentError('illegal adata length');if(adata.length){_this.adata=adata;_this._gcm_mac_process(adata);}else{_this.adata=undefined;}}else{_this.adata=undefined;}// Counter
if(_this.counter<1||_this.counter>0xffffffff)throw new RangeError('counter must be a positive 32-bit integer');_this.asm.set_counter(0,0,0,_this.gamma0+_this.counter|0);return _this;}AES_GCM.encrypt=function(cleartext,key,nonce,adata,tagsize){return new AES_GCM(key,nonce,adata,tagsize).encrypt(cleartext);};AES_GCM.decrypt=function(ciphertext,key,nonce,adata,tagsize){return new AES_GCM(key,nonce,adata,tagsize).decrypt(ciphertext);};AES_GCM.prototype.encrypt=function(data){return this.AES_GCM_encrypt(data);};AES_GCM.prototype.decrypt=function(data){return this.AES_GCM_decrypt(data);};AES_GCM.prototype.AES_GCM_Encrypt_process=function(data){var dpos=0;var dlen=data.length||0;var asm=this.asm;var heap=this.heap;var counter=this.counter;var pos=this.pos;var len=this.len;var rpos=0;var rlen=len+dlen&-16;var wlen=0;if((counter-1<<4)+len+dlen>_AES_GCM_data_maxLength)throw new RangeError('counter overflow');var result=new Uint8Array(rlen);while(dlen>0){wlen=_heap_write(heap,pos+len,data,dpos,dlen);len+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA+pos,len);wlen=asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA+pos,wlen);if(wlen)result.set(heap.subarray(pos,pos+wlen),rpos);counter+=wlen>>>4;rpos+=wlen;if(wlen<len){pos+=wlen;len-=wlen;}else{pos=0;len=0;}}this.counter=counter;this.pos=pos;this.len=len;return result;};AES_GCM.prototype.AES_GCM_Encrypt_finish=function(){var asm=this.asm;var heap=this.heap;var counter=this.counter;var tagSize=this.tagSize;var adata=this.adata;var pos=this.pos;var len=this.len;var result=new Uint8Array(len+tagSize);asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA+pos,len+15&-16);if(len)result.set(heap.subarray(pos,pos+len));var i=len;for(;i&15;i++)heap[pos+i]=0;asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA+pos,i);var alen=adata!==undefined?adata.length:0;var clen=(counter-1<<4)+len;heap[0]=0;heap[1]=0;heap[2]=0;heap[3]=alen>>>29;heap[4]=alen>>>21;heap[5]=alen>>>13&255;heap[6]=alen>>>5&255;heap[7]=alen<<3&255;heap[8]=heap[9]=heap[10]=0;heap[11]=clen>>>29;heap[12]=clen>>>21&255;heap[13]=clen>>>13&255;heap[14]=clen>>>5&255;heap[15]=clen<<3&255;asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA,16);asm.get_iv(AES_asm.HEAP_DATA);asm.set_counter(0,0,0,this.gamma0);asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA,16);result.set(heap.subarray(0,tagSize),len);this.counter=1;this.pos=0;this.len=0;return result;};AES_GCM.prototype.AES_GCM_Decrypt_process=function(data){var dpos=0;var dlen=data.length||0;var asm=this.asm;var heap=this.heap;var counter=this.counter;var tagSize=this.tagSize;var pos=this.pos;var len=this.len;var rpos=0;var rlen=len+dlen>tagSize?len+dlen-tagSize&-16:0;var tlen=len+dlen-rlen;var wlen=0;if((counter-1<<4)+len+dlen>_AES_GCM_data_maxLength)throw new RangeError('counter overflow');var result=new Uint8Array(rlen);while(dlen>tlen){wlen=_heap_write(heap,pos+len,data,dpos,dlen-tlen);len+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA+pos,wlen);wlen=asm.cipher(AES_asm.DEC.CTR,AES_asm.HEAP_DATA+pos,wlen);if(wlen)result.set(heap.subarray(pos,pos+wlen),rpos);counter+=wlen>>>4;rpos+=wlen;pos=0;len=0;}if(dlen>0){len+=_heap_write(heap,0,data,dpos,dlen);}this.counter=counter;this.pos=pos;this.len=len;return result;};AES_GCM.prototype.AES_GCM_Decrypt_finish=function(){var asm=this.asm;var heap=this.heap;var tagSize=this.tagSize;var adata=this.adata;var counter=this.counter;var pos=this.pos;var len=this.len;var rlen=len-tagSize;if(len<tagSize)throw new IllegalStateError('authentication tag not found');var result=new Uint8Array(rlen);var atag=new Uint8Array(heap.subarray(pos+rlen,pos+len));var i=rlen;for(;i&15;i++)heap[pos+i]=0;asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA+pos,i);asm.cipher(AES_asm.DEC.CTR,AES_asm.HEAP_DATA+pos,i);if(rlen)result.set(heap.subarray(pos,pos+rlen));var alen=adata!==undefined?adata.length:0;var clen=(counter-1<<4)+len-tagSize;heap[0]=0;heap[1]=0;heap[2]=0;heap[3]=alen>>>29;heap[4]=alen>>>21;heap[5]=alen>>>13&255;heap[6]=alen>>>5&255;heap[7]=alen<<3&255;heap[8]=heap[9]=heap[10]=0;heap[11]=clen>>>29;heap[12]=clen>>>21&255;heap[13]=clen>>>13&255;heap[14]=clen>>>5&255;heap[15]=clen<<3&255;asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA,16);asm.get_iv(AES_asm.HEAP_DATA);asm.set_counter(0,0,0,this.gamma0);asm.cipher(AES_asm.ENC.CTR,AES_asm.HEAP_DATA,16);var acheck=0;for(var i_1=0;i_1<tagSize;++i_1)acheck|=atag[i_1]^heap[i_1];if(acheck)throw new SecurityError('data integrity check failed');this.counter=1;this.pos=0;this.len=0;return result;};AES_GCM.prototype.AES_GCM_decrypt=function(data){var result1=this.AES_GCM_Decrypt_process(data);var result2=this.AES_GCM_Decrypt_finish();var result=new Uint8Array(result1.length+result2.length);if(result1.length)result.set(result1);if(result2.length)result.set(result2,result1.length);return result;};AES_GCM.prototype.AES_GCM_encrypt=function(data){var result1=this.AES_GCM_Encrypt_process(data);var result2=this.AES_GCM_Encrypt_finish();var result=new Uint8Array(result1.length+result2.length);if(result1.length)result.set(result1);if(result2.length)result.set(result2,result1.length);return result;};AES_GCM.prototype._gcm_mac_process=function(data){var heap=this.heap;var asm=this.asm;var dpos=0;var dlen=data.length||0;var wlen=0;while(dlen>0){wlen=_heap_write(heap,0,data,dpos,dlen);dpos+=wlen;dlen-=wlen;while(wlen&15)heap[wlen++]=0;asm.mac(AES_asm.MAC.GCM,AES_asm.HEAP_DATA,wlen);}};return AES_GCM;}(AES);var __extends$7=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var AES_OFB=/** @class */function(_super){__extends$7(AES_OFB,_super);function AES_OFB(key,iv){return _super.call(this,key,iv,false,'OFB')||this;}AES_OFB.encrypt=function(data,key,iv){return new AES_OFB(key,iv).encrypt(data);};AES_OFB.decrypt=function(data,key,iv){return new AES_OFB(key,iv).decrypt(data);};AES_OFB.prototype.encrypt=function(data){var r1=this.AES_Encrypt_process(data);var r2=this.AES_Encrypt_finish();return joinBytes(r1,r2);};AES_OFB.prototype.decrypt=function(data){var r1=this.AES_Decrypt_process(data);var r2=this.AES_Decrypt_finish();return joinBytes(r1,r2);};return AES_OFB;}(AES);/**
 * Integers are represented as little endian array of 32-bit limbs.
 * Limbs number is a power of 2 and a multiple of 8 (256 bits).
 * Negative values use two's complement representation.
 */var bigint_asm=function(stdlib,foreign,buffer){"use asm";var SP=0;var HEAP32=new stdlib.Uint32Array(buffer);var imul=stdlib.Math.imul;/**
     * Simple stack memory allocator
     *
     * Methods:
     *  sreset
     *  salloc
     *  sfree
     */function sreset(p){p=p|0;SP=p=p+31&-32;return p|0;}function salloc(l){l=l|0;var p=0;p=SP;SP=p+(l+31&-32)|0;return p|0;}function sfree(l){l=l|0;SP=SP-(l+31&-32)|0;}/**
     * Utility functions:
     *  cp
     *  z
     */function cp(l,A,B){l=l|0;A=A|0;B=B|0;var i=0;if((A|0)>(B|0)){for(;(i|0)<(l|0);i=i+4|0){HEAP32[B+i>>2]=HEAP32[A+i>>2];}}else{for(i=l-4|0;(i|0)>=0;i=i-4|0){HEAP32[B+i>>2]=HEAP32[A+i>>2];}}}function z(l,z,A){l=l|0;z=z|0;A=A|0;var i=0;for(;(i|0)<(l|0);i=i+4|0){HEAP32[A+i>>2]=z;}}/**
     * Negate the argument
     *
     * Perform two's complement transformation:
     *
     *  -A = ~A + 1
     *
     * @param A offset of the argment being negated, 32-byte aligned
     * @param lA length of the argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */function neg(A,lA,R,lR){A=A|0;lA=lA|0;R=R|0;lR=lR|0;var a=0,c=0,t=0,r=0,i=0;if((lR|0)<=0)lR=lA;if((lR|0)<(lA|0))lA=lR;c=1;for(;(i|0)<(lA|0);i=i+4|0){a=~HEAP32[A+i>>2];t=(a&0xffff)+c|0;r=(a>>>16)+(t>>>16)|0;HEAP32[R+i>>2]=r<<16|t&0xffff;c=r>>>16;}for(;(i|0)<(lR|0);i=i+4|0){HEAP32[R+i>>2]=c-1|0;}return c|0;}function cmp(A,lA,B,lB){A=A|0;lA=lA|0;B=B|0;lB=lB|0;var a=0,b=0,i=0;if((lA|0)>(lB|0)){for(i=lA-4|0;(i|0)>=(lB|0);i=i-4|0){if(HEAP32[A+i>>2]|0)return 1;}}else{for(i=lB-4|0;(i|0)>=(lA|0);i=i-4|0){if(HEAP32[B+i>>2]|0)return-1;}}for(;(i|0)>=0;i=i-4|0){a=HEAP32[A+i>>2]|0,b=HEAP32[B+i>>2]|0;if(a>>>0<b>>>0)return-1;if(a>>>0>b>>>0)return 1;}return 0;}/**
     * Test the argument
     *
     * Same as `cmp` with zero.
     */function tst(A,lA){A=A|0;lA=lA|0;var i=0;for(i=lA-4|0;(i|0)>=0;i=i-4|0){if(HEAP32[A+i>>2]|0)return i+4|0;}return 0;}/**
     * Conventional addition
     *
     * @param A offset of the first argument, 32-byte aligned
     * @param lA length of the first argument, multiple of 32
     *
     * @param B offset of the second argument, 32-bit aligned
     * @param lB length of the second argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */function add(A,lA,B,lB,R,lR){A=A|0;lA=lA|0;B=B|0;lB=lB|0;R=R|0;lR=lR|0;var a=0,b=0,c=0,t=0,r=0,i=0;if((lA|0)<(lB|0)){t=A,A=B,B=t;t=lA,lA=lB,lB=t;}if((lR|0)<=0)lR=lA+4|0;if((lR|0)<(lB|0))lA=lB=lR;for(;(i|0)<(lB|0);i=i+4|0){a=HEAP32[A+i>>2]|0;b=HEAP32[B+i>>2]|0;t=((a&0xffff)+(b&0xffff)|0)+c|0;r=((a>>>16)+(b>>>16)|0)+(t>>>16)|0;HEAP32[R+i>>2]=t&0xffff|r<<16;c=r>>>16;}for(;(i|0)<(lA|0);i=i+4|0){a=HEAP32[A+i>>2]|0;t=(a&0xffff)+c|0;r=(a>>>16)+(t>>>16)|0;HEAP32[R+i>>2]=t&0xffff|r<<16;c=r>>>16;}for(;(i|0)<(lR|0);i=i+4|0){HEAP32[R+i>>2]=c|0;c=0;}return c|0;}/**
     * Conventional subtraction
     *
     * @param A offset of the first argument, 32-byte aligned
     * @param lA length of the first argument, multiple of 32
     *
     * @param B offset of the second argument, 32-bit aligned
     * @param lB length of the second argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */function sub(A,lA,B,lB,R,lR){A=A|0;lA=lA|0;B=B|0;lB=lB|0;R=R|0;lR=lR|0;var a=0,b=0,c=0,t=0,r=0,i=0;if((lR|0)<=0)lR=(lA|0)>(lB|0)?lA+4|0:lB+4|0;if((lR|0)<(lA|0))lA=lR;if((lR|0)<(lB|0))lB=lR;if((lA|0)<(lB|0)){for(;(i|0)<(lA|0);i=i+4|0){a=HEAP32[A+i>>2]|0;b=HEAP32[B+i>>2]|0;t=((a&0xffff)-(b&0xffff)|0)+c|0;r=((a>>>16)-(b>>>16)|0)+(t>>16)|0;HEAP32[R+i>>2]=t&0xffff|r<<16;c=r>>16;}for(;(i|0)<(lB|0);i=i+4|0){b=HEAP32[B+i>>2]|0;t=c-(b&0xffff)|0;r=(t>>16)-(b>>>16)|0;HEAP32[R+i>>2]=t&0xffff|r<<16;c=r>>16;}}else{for(;(i|0)<(lB|0);i=i+4|0){a=HEAP32[A+i>>2]|0;b=HEAP32[B+i>>2]|0;t=((a&0xffff)-(b&0xffff)|0)+c|0;r=((a>>>16)-(b>>>16)|0)+(t>>16)|0;HEAP32[R+i>>2]=t&0xffff|r<<16;c=r>>16;}for(;(i|0)<(lA|0);i=i+4|0){a=HEAP32[A+i>>2]|0;t=(a&0xffff)+c|0;r=(a>>>16)+(t>>16)|0;HEAP32[R+i>>2]=t&0xffff|r<<16;c=r>>16;}}for(;(i|0)<(lR|0);i=i+4|0){HEAP32[R+i>>2]=c|0;}return c|0;}/**
     * Conventional multiplication
     *
     * TODO implement Karatsuba algorithm for large multiplicands
     *
     * @param A offset of the first argument, 32-byte aligned
     * @param lA length of the first argument, multiple of 32
     *
     * @param B offset of the second argument, 32-byte aligned
     * @param lB length of the second argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */function mul(A,lA,B,lB,R,lR){A=A|0;lA=lA|0;B=B|0;lB=lB|0;R=R|0;lR=lR|0;var al0=0,al1=0,al2=0,al3=0,al4=0,al5=0,al6=0,al7=0,ah0=0,ah1=0,ah2=0,ah3=0,ah4=0,ah5=0,ah6=0,ah7=0,bl0=0,bl1=0,bl2=0,bl3=0,bl4=0,bl5=0,bl6=0,bl7=0,bh0=0,bh1=0,bh2=0,bh3=0,bh4=0,bh5=0,bh6=0,bh7=0,r0=0,r1=0,r2=0,r3=0,r4=0,r5=0,r6=0,r7=0,r8=0,r9=0,r10=0,r11=0,r12=0,r13=0,r14=0,r15=0,u=0,v=0,w=0,m=0,i=0,Ai=0,j=0,Bj=0,Rk=0;if((lA|0)>(lB|0)){u=A,v=lA;A=B,lA=lB;B=u,lB=v;}m=lA+lB|0;if((lR|0)>(m|0)|(lR|0)<=0)lR=m;if((lR|0)<(lA|0))lA=lR;if((lR|0)<(lB|0))lB=lR;for(;(i|0)<(lA|0);i=i+32|0){Ai=A+i|0;ah0=HEAP32[(Ai|0)>>2]|0,ah1=HEAP32[(Ai|4)>>2]|0,ah2=HEAP32[(Ai|8)>>2]|0,ah3=HEAP32[(Ai|12)>>2]|0,ah4=HEAP32[(Ai|16)>>2]|0,ah5=HEAP32[(Ai|20)>>2]|0,ah6=HEAP32[(Ai|24)>>2]|0,ah7=HEAP32[(Ai|28)>>2]|0,al0=ah0&0xffff,al1=ah1&0xffff,al2=ah2&0xffff,al3=ah3&0xffff,al4=ah4&0xffff,al5=ah5&0xffff,al6=ah6&0xffff,al7=ah7&0xffff,ah0=ah0>>>16,ah1=ah1>>>16,ah2=ah2>>>16,ah3=ah3>>>16,ah4=ah4>>>16,ah5=ah5>>>16,ah6=ah6>>>16,ah7=ah7>>>16;r8=r9=r10=r11=r12=r13=r14=r15=0;for(j=0;(j|0)<(lB|0);j=j+32|0){Bj=B+j|0;Rk=R+(i+j|0)|0;bh0=HEAP32[(Bj|0)>>2]|0,bh1=HEAP32[(Bj|4)>>2]|0,bh2=HEAP32[(Bj|8)>>2]|0,bh3=HEAP32[(Bj|12)>>2]|0,bh4=HEAP32[(Bj|16)>>2]|0,bh5=HEAP32[(Bj|20)>>2]|0,bh6=HEAP32[(Bj|24)>>2]|0,bh7=HEAP32[(Bj|28)>>2]|0,bl0=bh0&0xffff,bl1=bh1&0xffff,bl2=bh2&0xffff,bl3=bh3&0xffff,bl4=bh4&0xffff,bl5=bh5&0xffff,bl6=bh6&0xffff,bl7=bh7&0xffff,bh0=bh0>>>16,bh1=bh1>>>16,bh2=bh2>>>16,bh3=bh3>>>16,bh4=bh4>>>16,bh5=bh5>>>16,bh6=bh6>>>16,bh7=bh7>>>16;r0=HEAP32[(Rk|0)>>2]|0,r1=HEAP32[(Rk|4)>>2]|0,r2=HEAP32[(Rk|8)>>2]|0,r3=HEAP32[(Rk|12)>>2]|0,r4=HEAP32[(Rk|16)>>2]|0,r5=HEAP32[(Rk|20)>>2]|0,r6=HEAP32[(Rk|24)>>2]|0,r7=HEAP32[(Rk|28)>>2]|0;u=((imul(al0,bl0)|0)+(r8&0xffff)|0)+(r0&0xffff)|0;v=((imul(ah0,bl0)|0)+(r8>>>16)|0)+(r0>>>16)|0;w=((imul(al0,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r0=w<<16|u&0xffff;u=((imul(al0,bl1)|0)+(m&0xffff)|0)+(r1&0xffff)|0;v=((imul(ah0,bl1)|0)+(m>>>16)|0)+(r1>>>16)|0;w=((imul(al0,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=((imul(al0,bl2)|0)+(m&0xffff)|0)+(r2&0xffff)|0;v=((imul(ah0,bl2)|0)+(m>>>16)|0)+(r2>>>16)|0;w=((imul(al0,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al0,bl3)|0)+(m&0xffff)|0)+(r3&0xffff)|0;v=((imul(ah0,bl3)|0)+(m>>>16)|0)+(r3>>>16)|0;w=((imul(al0,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al0,bl4)|0)+(m&0xffff)|0)+(r4&0xffff)|0;v=((imul(ah0,bl4)|0)+(m>>>16)|0)+(r4>>>16)|0;w=((imul(al0,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al0,bl5)|0)+(m&0xffff)|0)+(r5&0xffff)|0;v=((imul(ah0,bl5)|0)+(m>>>16)|0)+(r5>>>16)|0;w=((imul(al0,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al0,bl6)|0)+(m&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah0,bl6)|0)+(m>>>16)|0)+(r6>>>16)|0;w=((imul(al0,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al0,bl7)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah0,bl7)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al0,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;r8=m;u=((imul(al1,bl0)|0)+(r9&0xffff)|0)+(r1&0xffff)|0;v=((imul(ah1,bl0)|0)+(r9>>>16)|0)+(r1>>>16)|0;w=((imul(al1,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=((imul(al1,bl1)|0)+(m&0xffff)|0)+(r2&0xffff)|0;v=((imul(ah1,bl1)|0)+(m>>>16)|0)+(r2>>>16)|0;w=((imul(al1,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al1,bl2)|0)+(m&0xffff)|0)+(r3&0xffff)|0;v=((imul(ah1,bl2)|0)+(m>>>16)|0)+(r3>>>16)|0;w=((imul(al1,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al1,bl3)|0)+(m&0xffff)|0)+(r4&0xffff)|0;v=((imul(ah1,bl3)|0)+(m>>>16)|0)+(r4>>>16)|0;w=((imul(al1,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al1,bl4)|0)+(m&0xffff)|0)+(r5&0xffff)|0;v=((imul(ah1,bl4)|0)+(m>>>16)|0)+(r5>>>16)|0;w=((imul(al1,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al1,bl5)|0)+(m&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah1,bl5)|0)+(m>>>16)|0)+(r6>>>16)|0;w=((imul(al1,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al1,bl6)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah1,bl6)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al1,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al1,bl7)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah1,bl7)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al1,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;r9=m;u=((imul(al2,bl0)|0)+(r10&0xffff)|0)+(r2&0xffff)|0;v=((imul(ah2,bl0)|0)+(r10>>>16)|0)+(r2>>>16)|0;w=((imul(al2,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al2,bl1)|0)+(m&0xffff)|0)+(r3&0xffff)|0;v=((imul(ah2,bl1)|0)+(m>>>16)|0)+(r3>>>16)|0;w=((imul(al2,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al2,bl2)|0)+(m&0xffff)|0)+(r4&0xffff)|0;v=((imul(ah2,bl2)|0)+(m>>>16)|0)+(r4>>>16)|0;w=((imul(al2,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al2,bl3)|0)+(m&0xffff)|0)+(r5&0xffff)|0;v=((imul(ah2,bl3)|0)+(m>>>16)|0)+(r5>>>16)|0;w=((imul(al2,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al2,bl4)|0)+(m&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah2,bl4)|0)+(m>>>16)|0)+(r6>>>16)|0;w=((imul(al2,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al2,bl5)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah2,bl5)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al2,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al2,bl6)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah2,bl6)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al2,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al2,bl7)|0)+(m&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah2,bl7)|0)+(m>>>16)|0)+(r9>>>16)|0;w=((imul(al2,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;r10=m;u=((imul(al3,bl0)|0)+(r11&0xffff)|0)+(r3&0xffff)|0;v=((imul(ah3,bl0)|0)+(r11>>>16)|0)+(r3>>>16)|0;w=((imul(al3,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al3,bl1)|0)+(m&0xffff)|0)+(r4&0xffff)|0;v=((imul(ah3,bl1)|0)+(m>>>16)|0)+(r4>>>16)|0;w=((imul(al3,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al3,bl2)|0)+(m&0xffff)|0)+(r5&0xffff)|0;v=((imul(ah3,bl2)|0)+(m>>>16)|0)+(r5>>>16)|0;w=((imul(al3,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al3,bl3)|0)+(m&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah3,bl3)|0)+(m>>>16)|0)+(r6>>>16)|0;w=((imul(al3,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al3,bl4)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah3,bl4)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al3,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al3,bl5)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah3,bl5)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al3,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al3,bl6)|0)+(m&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah3,bl6)|0)+(m>>>16)|0)+(r9>>>16)|0;w=((imul(al3,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al3,bl7)|0)+(m&0xffff)|0)+(r10&0xffff)|0;v=((imul(ah3,bl7)|0)+(m>>>16)|0)+(r10>>>16)|0;w=((imul(al3,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;r11=m;u=((imul(al4,bl0)|0)+(r12&0xffff)|0)+(r4&0xffff)|0;v=((imul(ah4,bl0)|0)+(r12>>>16)|0)+(r4>>>16)|0;w=((imul(al4,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al4,bl1)|0)+(m&0xffff)|0)+(r5&0xffff)|0;v=((imul(ah4,bl1)|0)+(m>>>16)|0)+(r5>>>16)|0;w=((imul(al4,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al4,bl2)|0)+(m&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah4,bl2)|0)+(m>>>16)|0)+(r6>>>16)|0;w=((imul(al4,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al4,bl3)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah4,bl3)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al4,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al4,bl4)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah4,bl4)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al4,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al4,bl5)|0)+(m&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah4,bl5)|0)+(m>>>16)|0)+(r9>>>16)|0;w=((imul(al4,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al4,bl6)|0)+(m&0xffff)|0)+(r10&0xffff)|0;v=((imul(ah4,bl6)|0)+(m>>>16)|0)+(r10>>>16)|0;w=((imul(al4,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al4,bl7)|0)+(m&0xffff)|0)+(r11&0xffff)|0;v=((imul(ah4,bl7)|0)+(m>>>16)|0)+(r11>>>16)|0;w=((imul(al4,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;r12=m;u=((imul(al5,bl0)|0)+(r13&0xffff)|0)+(r5&0xffff)|0;v=((imul(ah5,bl0)|0)+(r13>>>16)|0)+(r5>>>16)|0;w=((imul(al5,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al5,bl1)|0)+(m&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah5,bl1)|0)+(m>>>16)|0)+(r6>>>16)|0;w=((imul(al5,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al5,bl2)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah5,bl2)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al5,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al5,bl3)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah5,bl3)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al5,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al5,bl4)|0)+(m&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah5,bl4)|0)+(m>>>16)|0)+(r9>>>16)|0;w=((imul(al5,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al5,bl5)|0)+(m&0xffff)|0)+(r10&0xffff)|0;v=((imul(ah5,bl5)|0)+(m>>>16)|0)+(r10>>>16)|0;w=((imul(al5,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al5,bl6)|0)+(m&0xffff)|0)+(r11&0xffff)|0;v=((imul(ah5,bl6)|0)+(m>>>16)|0)+(r11>>>16)|0;w=((imul(al5,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;u=((imul(al5,bl7)|0)+(m&0xffff)|0)+(r12&0xffff)|0;v=((imul(ah5,bl7)|0)+(m>>>16)|0)+(r12>>>16)|0;w=((imul(al5,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r12=w<<16|u&0xffff;r13=m;u=((imul(al6,bl0)|0)+(r14&0xffff)|0)+(r6&0xffff)|0;v=((imul(ah6,bl0)|0)+(r14>>>16)|0)+(r6>>>16)|0;w=((imul(al6,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al6,bl1)|0)+(m&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah6,bl1)|0)+(m>>>16)|0)+(r7>>>16)|0;w=((imul(al6,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al6,bl2)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah6,bl2)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al6,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al6,bl3)|0)+(m&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah6,bl3)|0)+(m>>>16)|0)+(r9>>>16)|0;w=((imul(al6,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al6,bl4)|0)+(m&0xffff)|0)+(r10&0xffff)|0;v=((imul(ah6,bl4)|0)+(m>>>16)|0)+(r10>>>16)|0;w=((imul(al6,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al6,bl5)|0)+(m&0xffff)|0)+(r11&0xffff)|0;v=((imul(ah6,bl5)|0)+(m>>>16)|0)+(r11>>>16)|0;w=((imul(al6,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;u=((imul(al6,bl6)|0)+(m&0xffff)|0)+(r12&0xffff)|0;v=((imul(ah6,bl6)|0)+(m>>>16)|0)+(r12>>>16)|0;w=((imul(al6,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r12=w<<16|u&0xffff;u=((imul(al6,bl7)|0)+(m&0xffff)|0)+(r13&0xffff)|0;v=((imul(ah6,bl7)|0)+(m>>>16)|0)+(r13>>>16)|0;w=((imul(al6,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r13=w<<16|u&0xffff;r14=m;u=((imul(al7,bl0)|0)+(r15&0xffff)|0)+(r7&0xffff)|0;v=((imul(ah7,bl0)|0)+(r15>>>16)|0)+(r7>>>16)|0;w=((imul(al7,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al7,bl1)|0)+(m&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah7,bl1)|0)+(m>>>16)|0)+(r8>>>16)|0;w=((imul(al7,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al7,bl2)|0)+(m&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah7,bl2)|0)+(m>>>16)|0)+(r9>>>16)|0;w=((imul(al7,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al7,bl3)|0)+(m&0xffff)|0)+(r10&0xffff)|0;v=((imul(ah7,bl3)|0)+(m>>>16)|0)+(r10>>>16)|0;w=((imul(al7,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al7,bl4)|0)+(m&0xffff)|0)+(r11&0xffff)|0;v=((imul(ah7,bl4)|0)+(m>>>16)|0)+(r11>>>16)|0;w=((imul(al7,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;u=((imul(al7,bl5)|0)+(m&0xffff)|0)+(r12&0xffff)|0;v=((imul(ah7,bl5)|0)+(m>>>16)|0)+(r12>>>16)|0;w=((imul(al7,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r12=w<<16|u&0xffff;u=((imul(al7,bl6)|0)+(m&0xffff)|0)+(r13&0xffff)|0;v=((imul(ah7,bl6)|0)+(m>>>16)|0)+(r13>>>16)|0;w=((imul(al7,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r13=w<<16|u&0xffff;u=((imul(al7,bl7)|0)+(m&0xffff)|0)+(r14&0xffff)|0;v=((imul(ah7,bl7)|0)+(m>>>16)|0)+(r14>>>16)|0;w=((imul(al7,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r14=w<<16|u&0xffff;r15=m;HEAP32[(Rk|0)>>2]=r0,HEAP32[(Rk|4)>>2]=r1,HEAP32[(Rk|8)>>2]=r2,HEAP32[(Rk|12)>>2]=r3,HEAP32[(Rk|16)>>2]=r4,HEAP32[(Rk|20)>>2]=r5,HEAP32[(Rk|24)>>2]=r6,HEAP32[(Rk|28)>>2]=r7;}Rk=R+(i+j|0)|0;HEAP32[(Rk|0)>>2]=r8,HEAP32[(Rk|4)>>2]=r9,HEAP32[(Rk|8)>>2]=r10,HEAP32[(Rk|12)>>2]=r11,HEAP32[(Rk|16)>>2]=r12,HEAP32[(Rk|20)>>2]=r13,HEAP32[(Rk|24)>>2]=r14,HEAP32[(Rk|28)>>2]=r15;}/*
        for ( i = lA & -32; (i|0) < (lA|0); i = (i+4)|0 ) {
            Ai = (A+i)|0;

            ah0 = HEAP32[Ai>>2]|0,
            al0 = ah0 & 0xffff,
            ah0 = ah0 >>> 16;

            r1 = 0;

            for ( j = 0; (j|0) < (lB|0); j = (j+4)|0 ) {
                Bj = (B+j)|0;
                Rk = (R+(i+j|0))|0;

                bh0 = HEAP32[Bj>>2]|0,
                bl0 = bh0 & 0xffff,
                bh0 = bh0 >>> 16;

                r0 = HEAP32[Rk>>2]|0;

                u = ((imul(al0, bl0)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;
                v = ((imul(ah0, bl0)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;
                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r0 = (w << 16) | (u & 0xffff);

                r1 = m;

                HEAP32[Rk>>2] = r0;
            }

            Rk = (R+(i+j|0))|0;
            HEAP32[Rk>>2] = r1;
        }
*/}/**
     * Fast squaring
     *
     * Exploits the fact:
     *
     *  X² = ( X0 + X1*B )² = X0² + 2*X0*X1*B + X1²*B²,
     *
     * where B is a power of 2, so:
     *
     *  2*X0*X1*B = (X0*X1 << 1)*B
     *
     * @param A offset of the argument being squared, 32-byte aligned
     * @param lA length of the argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     */function sqr(A,lA,R){A=A|0;lA=lA|0;R=R|0;var al0=0,al1=0,al2=0,al3=0,al4=0,al5=0,al6=0,al7=0,ah0=0,ah1=0,ah2=0,ah3=0,ah4=0,ah5=0,ah6=0,ah7=0,bl0=0,bl1=0,bl2=0,bl3=0,bl4=0,bl5=0,bl6=0,bl7=0,bh0=0,bh1=0,bh2=0,bh3=0,bh4=0,bh5=0,bh6=0,bh7=0,r0=0,r1=0,r2=0,r3=0,r4=0,r5=0,r6=0,r7=0,r8=0,r9=0,r10=0,r11=0,r12=0,r13=0,r14=0,r15=0,u=0,v=0,w=0,c=0,h=0,m=0,r=0,d=0,dd=0,p=0,i=0,j=0,k=0,Ai=0,Aj=0,Rk=0;// prepare for iterations
for(;(i|0)<(lA|0);i=i+4|0){Rk=R+(i<<1)|0;ah0=HEAP32[A+i>>2]|0,al0=ah0&0xffff,ah0=ah0>>>16;u=imul(al0,al0)|0;v=(imul(al0,ah0)|0)+(u>>>17)|0;w=(imul(ah0,ah0)|0)+(v>>>15)|0;HEAP32[Rk>>2]=v<<17|u&0x1ffff;HEAP32[(Rk|4)>>2]=w;}// unrolled 1st iteration
for(p=0;(p|0)<(lA|0);p=p+8|0){Ai=A+p|0,Rk=R+(p<<1)|0;ah0=HEAP32[Ai>>2]|0,al0=ah0&0xffff,ah0=ah0>>>16;bh0=HEAP32[(Ai|4)>>2]|0,bl0=bh0&0xffff,bh0=bh0>>>16;u=imul(al0,bl0)|0;v=(imul(al0,bh0)|0)+(u>>>16)|0;w=(imul(ah0,bl0)|0)+(v&0xffff)|0;m=((imul(ah0,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r=HEAP32[(Rk|4)>>2]|0;u=(r&0xffff)+((u&0xffff)<<1)|0;w=((r>>>16)+((w&0xffff)<<1)|0)+(u>>>16)|0;HEAP32[(Rk|4)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|8)>>2]|0;u=((r&0xffff)+((m&0xffff)<<1)|0)+c|0;w=((r>>>16)+(m>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|8)>>2]=w<<16|u&0xffff;c=w>>>16;if(c){r=HEAP32[(Rk|12)>>2]|0;u=(r&0xffff)+c|0;w=(r>>>16)+(u>>>16)|0;HEAP32[(Rk|12)>>2]=w<<16|u&0xffff;}}// unrolled 2nd iteration
for(p=0;(p|0)<(lA|0);p=p+16|0){Ai=A+p|0,Rk=R+(p<<1)|0;ah0=HEAP32[Ai>>2]|0,al0=ah0&0xffff,ah0=ah0>>>16,ah1=HEAP32[(Ai|4)>>2]|0,al1=ah1&0xffff,ah1=ah1>>>16;bh0=HEAP32[(Ai|8)>>2]|0,bl0=bh0&0xffff,bh0=bh0>>>16,bh1=HEAP32[(Ai|12)>>2]|0,bl1=bh1&0xffff,bh1=bh1>>>16;u=imul(al0,bl0)|0;v=imul(ah0,bl0)|0;w=((imul(al0,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r0=w<<16|u&0xffff;u=(imul(al0,bl1)|0)+(m&0xffff)|0;v=(imul(ah0,bl1)|0)+(m>>>16)|0;w=((imul(al0,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;r2=m;u=(imul(al1,bl0)|0)+(r1&0xffff)|0;v=(imul(ah1,bl0)|0)+(r1>>>16)|0;w=((imul(al1,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=((imul(al1,bl1)|0)+(r2&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl1)|0)+(r2>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;r3=m;r=HEAP32[(Rk|8)>>2]|0;u=(r&0xffff)+((r0&0xffff)<<1)|0;w=((r>>>16)+(r0>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|8)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|12)>>2]|0;u=((r&0xffff)+((r1&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r1>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|12)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|16)>>2]|0;u=((r&0xffff)+((r2&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r2>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|16)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|20)>>2]|0;u=((r&0xffff)+((r3&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r3>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|20)>>2]=w<<16|u&0xffff;c=w>>>16;for(k=24;!!c&(k|0)<32;k=k+4|0){r=HEAP32[(Rk|k)>>2]|0;u=(r&0xffff)+c|0;w=(r>>>16)+(u>>>16)|0;HEAP32[(Rk|k)>>2]=w<<16|u&0xffff;c=w>>>16;}}// unrolled 3rd iteration
for(p=0;(p|0)<(lA|0);p=p+32|0){Ai=A+p|0,Rk=R+(p<<1)|0;ah0=HEAP32[Ai>>2]|0,al0=ah0&0xffff,ah0=ah0>>>16,ah1=HEAP32[(Ai|4)>>2]|0,al1=ah1&0xffff,ah1=ah1>>>16,ah2=HEAP32[(Ai|8)>>2]|0,al2=ah2&0xffff,ah2=ah2>>>16,ah3=HEAP32[(Ai|12)>>2]|0,al3=ah3&0xffff,ah3=ah3>>>16;bh0=HEAP32[(Ai|16)>>2]|0,bl0=bh0&0xffff,bh0=bh0>>>16,bh1=HEAP32[(Ai|20)>>2]|0,bl1=bh1&0xffff,bh1=bh1>>>16,bh2=HEAP32[(Ai|24)>>2]|0,bl2=bh2&0xffff,bh2=bh2>>>16,bh3=HEAP32[(Ai|28)>>2]|0,bl3=bh3&0xffff,bh3=bh3>>>16;u=imul(al0,bl0)|0;v=imul(ah0,bl0)|0;w=((imul(al0,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r0=w<<16|u&0xffff;u=(imul(al0,bl1)|0)+(m&0xffff)|0;v=(imul(ah0,bl1)|0)+(m>>>16)|0;w=((imul(al0,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=(imul(al0,bl2)|0)+(m&0xffff)|0;v=(imul(ah0,bl2)|0)+(m>>>16)|0;w=((imul(al0,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=(imul(al0,bl3)|0)+(m&0xffff)|0;v=(imul(ah0,bl3)|0)+(m>>>16)|0;w=((imul(al0,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;r4=m;u=(imul(al1,bl0)|0)+(r1&0xffff)|0;v=(imul(ah1,bl0)|0)+(r1>>>16)|0;w=((imul(al1,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=((imul(al1,bl1)|0)+(r2&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl1)|0)+(r2>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al1,bl2)|0)+(r3&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl2)|0)+(r3>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al1,bl3)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl3)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;r5=m;u=(imul(al2,bl0)|0)+(r2&0xffff)|0;v=(imul(ah2,bl0)|0)+(r2>>>16)|0;w=((imul(al2,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al2,bl1)|0)+(r3&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl1)|0)+(r3>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al2,bl2)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl2)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al2,bl3)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl3)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;r6=m;u=(imul(al3,bl0)|0)+(r3&0xffff)|0;v=(imul(ah3,bl0)|0)+(r3>>>16)|0;w=((imul(al3,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al3,bl1)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl1)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al3,bl2)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl2)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al3,bl3)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl3)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;r7=m;r=HEAP32[(Rk|16)>>2]|0;u=(r&0xffff)+((r0&0xffff)<<1)|0;w=((r>>>16)+(r0>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|16)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|20)>>2]|0;u=((r&0xffff)+((r1&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r1>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|20)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|24)>>2]|0;u=((r&0xffff)+((r2&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r2>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|24)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[(Rk|28)>>2]|0;u=((r&0xffff)+((r3&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r3>>>16<<1)|0)+(u>>>16)|0;HEAP32[(Rk|28)>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[Rk+32>>2]|0;u=((r&0xffff)+((r4&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r4>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+32>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[Rk+36>>2]|0;u=((r&0xffff)+((r5&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r5>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+36>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[Rk+40>>2]|0;u=((r&0xffff)+((r6&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r6>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+40>>2]=w<<16|u&0xffff;c=w>>>16;r=HEAP32[Rk+44>>2]|0;u=((r&0xffff)+((r7&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r7>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+44>>2]=w<<16|u&0xffff;c=w>>>16;for(k=48;!!c&(k|0)<64;k=k+4|0){r=HEAP32[Rk+k>>2]|0;u=(r&0xffff)+c|0;w=(r>>>16)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;}}// perform iterations
for(d=32;(d|0)<(lA|0);d=d<<1){// depth loop
dd=d<<1;for(p=0;(p|0)<(lA|0);p=p+dd|0){// part loop
Rk=R+(p<<1)|0;h=0;for(i=0;(i|0)<(d|0);i=i+32|0){// multiply-and-add loop
Ai=(A+p|0)+i|0;ah0=HEAP32[Ai>>2]|0,al0=ah0&0xffff,ah0=ah0>>>16,ah1=HEAP32[(Ai|4)>>2]|0,al1=ah1&0xffff,ah1=ah1>>>16,ah2=HEAP32[(Ai|8)>>2]|0,al2=ah2&0xffff,ah2=ah2>>>16,ah3=HEAP32[(Ai|12)>>2]|0,al3=ah3&0xffff,ah3=ah3>>>16,ah4=HEAP32[(Ai|16)>>2]|0,al4=ah4&0xffff,ah4=ah4>>>16,ah5=HEAP32[(Ai|20)>>2]|0,al5=ah5&0xffff,ah5=ah5>>>16,ah6=HEAP32[(Ai|24)>>2]|0,al6=ah6&0xffff,ah6=ah6>>>16,ah7=HEAP32[(Ai|28)>>2]|0,al7=ah7&0xffff,ah7=ah7>>>16;r8=r9=r10=r11=r12=r13=r14=r15=c=0;for(j=0;(j|0)<(d|0);j=j+32|0){Aj=((A+p|0)+d|0)+j|0;bh0=HEAP32[Aj>>2]|0,bl0=bh0&0xffff,bh0=bh0>>>16,bh1=HEAP32[(Aj|4)>>2]|0,bl1=bh1&0xffff,bh1=bh1>>>16,bh2=HEAP32[(Aj|8)>>2]|0,bl2=bh2&0xffff,bh2=bh2>>>16,bh3=HEAP32[(Aj|12)>>2]|0,bl3=bh3&0xffff,bh3=bh3>>>16,bh4=HEAP32[(Aj|16)>>2]|0,bl4=bh4&0xffff,bh4=bh4>>>16,bh5=HEAP32[(Aj|20)>>2]|0,bl5=bh5&0xffff,bh5=bh5>>>16,bh6=HEAP32[(Aj|24)>>2]|0,bl6=bh6&0xffff,bh6=bh6>>>16,bh7=HEAP32[(Aj|28)>>2]|0,bl7=bh7&0xffff,bh7=bh7>>>16;r0=r1=r2=r3=r4=r5=r6=r7=0;u=((imul(al0,bl0)|0)+(r0&0xffff)|0)+(r8&0xffff)|0;v=((imul(ah0,bl0)|0)+(r0>>>16)|0)+(r8>>>16)|0;w=((imul(al0,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r0=w<<16|u&0xffff;u=((imul(al0,bl1)|0)+(r1&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl1)|0)+(r1>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=((imul(al0,bl2)|0)+(r2&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl2)|0)+(r2>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al0,bl3)|0)+(r3&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl3)|0)+(r3>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al0,bl4)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl4)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al0,bl5)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl5)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al0,bl6)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl6)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al0,bl7)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah0,bl7)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al0,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah0,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;r8=m;u=((imul(al1,bl0)|0)+(r1&0xffff)|0)+(r9&0xffff)|0;v=((imul(ah1,bl0)|0)+(r1>>>16)|0)+(r9>>>16)|0;w=((imul(al1,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r1=w<<16|u&0xffff;u=((imul(al1,bl1)|0)+(r2&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl1)|0)+(r2>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al1,bl2)|0)+(r3&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl2)|0)+(r3>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al1,bl3)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl3)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al1,bl4)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl4)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al1,bl5)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl5)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al1,bl6)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl6)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al1,bl7)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah1,bl7)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al1,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah1,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;r9=m;u=((imul(al2,bl0)|0)+(r2&0xffff)|0)+(r10&0xffff)|0;v=((imul(ah2,bl0)|0)+(r2>>>16)|0)+(r10>>>16)|0;w=((imul(al2,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r2=w<<16|u&0xffff;u=((imul(al2,bl1)|0)+(r3&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl1)|0)+(r3>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al2,bl2)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl2)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al2,bl3)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl3)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al2,bl4)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl4)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al2,bl5)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl5)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al2,bl6)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl6)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al2,bl7)|0)+(r9&0xffff)|0)+(m&0xffff)|0;v=((imul(ah2,bl7)|0)+(r9>>>16)|0)+(m>>>16)|0;w=((imul(al2,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah2,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;r10=m;u=((imul(al3,bl0)|0)+(r3&0xffff)|0)+(r11&0xffff)|0;v=((imul(ah3,bl0)|0)+(r3>>>16)|0)+(r11>>>16)|0;w=((imul(al3,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r3=w<<16|u&0xffff;u=((imul(al3,bl1)|0)+(r4&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl1)|0)+(r4>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al3,bl2)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl2)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al3,bl3)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl3)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al3,bl4)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl4)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al3,bl5)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl5)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al3,bl6)|0)+(r9&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl6)|0)+(r9>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al3,bl7)|0)+(r10&0xffff)|0)+(m&0xffff)|0;v=((imul(ah3,bl7)|0)+(r10>>>16)|0)+(m>>>16)|0;w=((imul(al3,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah3,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;r11=m;u=((imul(al4,bl0)|0)+(r4&0xffff)|0)+(r12&0xffff)|0;v=((imul(ah4,bl0)|0)+(r4>>>16)|0)+(r12>>>16)|0;w=((imul(al4,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r4=w<<16|u&0xffff;u=((imul(al4,bl1)|0)+(r5&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl1)|0)+(r5>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al4,bl2)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl2)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al4,bl3)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl3)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al4,bl4)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl4)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al4,bl5)|0)+(r9&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl5)|0)+(r9>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al4,bl6)|0)+(r10&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl6)|0)+(r10>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al4,bl7)|0)+(r11&0xffff)|0)+(m&0xffff)|0;v=((imul(ah4,bl7)|0)+(r11>>>16)|0)+(m>>>16)|0;w=((imul(al4,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah4,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;r12=m;u=((imul(al5,bl0)|0)+(r5&0xffff)|0)+(r13&0xffff)|0;v=((imul(ah5,bl0)|0)+(r5>>>16)|0)+(r13>>>16)|0;w=((imul(al5,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r5=w<<16|u&0xffff;u=((imul(al5,bl1)|0)+(r6&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl1)|0)+(r6>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al5,bl2)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl2)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al5,bl3)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl3)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al5,bl4)|0)+(r9&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl4)|0)+(r9>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al5,bl5)|0)+(r10&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl5)|0)+(r10>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al5,bl6)|0)+(r11&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl6)|0)+(r11>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;u=((imul(al5,bl7)|0)+(r12&0xffff)|0)+(m&0xffff)|0;v=((imul(ah5,bl7)|0)+(r12>>>16)|0)+(m>>>16)|0;w=((imul(al5,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah5,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r12=w<<16|u&0xffff;r13=m;u=((imul(al6,bl0)|0)+(r6&0xffff)|0)+(r14&0xffff)|0;v=((imul(ah6,bl0)|0)+(r6>>>16)|0)+(r14>>>16)|0;w=((imul(al6,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r6=w<<16|u&0xffff;u=((imul(al6,bl1)|0)+(r7&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl1)|0)+(r7>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al6,bl2)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl2)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al6,bl3)|0)+(r9&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl3)|0)+(r9>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al6,bl4)|0)+(r10&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl4)|0)+(r10>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al6,bl5)|0)+(r11&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl5)|0)+(r11>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;u=((imul(al6,bl6)|0)+(r12&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl6)|0)+(r12>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r12=w<<16|u&0xffff;u=((imul(al6,bl7)|0)+(r13&0xffff)|0)+(m&0xffff)|0;v=((imul(ah6,bl7)|0)+(r13>>>16)|0)+(m>>>16)|0;w=((imul(al6,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah6,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r13=w<<16|u&0xffff;r14=m;u=((imul(al7,bl0)|0)+(r7&0xffff)|0)+(r15&0xffff)|0;v=((imul(ah7,bl0)|0)+(r7>>>16)|0)+(r15>>>16)|0;w=((imul(al7,bh0)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh0)|0)+(v>>>16)|0)+(w>>>16)|0;r7=w<<16|u&0xffff;u=((imul(al7,bl1)|0)+(r8&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl1)|0)+(r8>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh1)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh1)|0)+(v>>>16)|0)+(w>>>16)|0;r8=w<<16|u&0xffff;u=((imul(al7,bl2)|0)+(r9&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl2)|0)+(r9>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh2)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh2)|0)+(v>>>16)|0)+(w>>>16)|0;r9=w<<16|u&0xffff;u=((imul(al7,bl3)|0)+(r10&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl3)|0)+(r10>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh3)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh3)|0)+(v>>>16)|0)+(w>>>16)|0;r10=w<<16|u&0xffff;u=((imul(al7,bl4)|0)+(r11&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl4)|0)+(r11>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh4)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh4)|0)+(v>>>16)|0)+(w>>>16)|0;r11=w<<16|u&0xffff;u=((imul(al7,bl5)|0)+(r12&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl5)|0)+(r12>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh5)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh5)|0)+(v>>>16)|0)+(w>>>16)|0;r12=w<<16|u&0xffff;u=((imul(al7,bl6)|0)+(r13&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl6)|0)+(r13>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh6)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh6)|0)+(v>>>16)|0)+(w>>>16)|0;r13=w<<16|u&0xffff;u=((imul(al7,bl7)|0)+(r14&0xffff)|0)+(m&0xffff)|0;v=((imul(ah7,bl7)|0)+(r14>>>16)|0)+(m>>>16)|0;w=((imul(al7,bh7)|0)+(v&0xffff)|0)+(u>>>16)|0;m=((imul(ah7,bh7)|0)+(v>>>16)|0)+(w>>>16)|0;r14=w<<16|u&0xffff;r15=m;k=d+(i+j|0)|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r0&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r0>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r1&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r1>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r2&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r2>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r3&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r3>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r4&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r4>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r5&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r5>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r6&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r6>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r7&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r7>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;}k=d+(i+j|0)|0;r=HEAP32[Rk+k>>2]|0;u=(((r&0xffff)+((r8&0xffff)<<1)|0)+c|0)+h|0;w=((r>>>16)+(r8>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r9&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r9>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r10&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r10>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r11&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r11>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r12&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r12>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r13&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r13>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r14&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r14>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;c=w>>>16;k=k+4|0;r=HEAP32[Rk+k>>2]|0;u=((r&0xffff)+((r15&0xffff)<<1)|0)+c|0;w=((r>>>16)+(r15>>>16<<1)|0)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;h=w>>>16;}for(k=k+4|0;!!h&(k|0)<dd<<1;k=k+4|0){// carry propagation loop
r=HEAP32[Rk+k>>2]|0;u=(r&0xffff)+h|0;w=(r>>>16)+(u>>>16)|0;HEAP32[Rk+k>>2]=w<<16|u&0xffff;h=w>>>16;}}}}/**
     * Conventional division
     *
     * @param A offset of the numerator, 32-byte aligned
     * @param lA length of the numerator, multiple of 32
     *
     * @param B offset of the divisor, 32-byte aligned
     * @param lB length of the divisor, multiple of 32
     *
     * @param R offset where to place the remainder to, 32-byte aligned
     *
     * @param Q offser where to place the quotient to, 32-byte aligned
     */function div(N,lN,D,lD,Q){N=N|0;lN=lN|0;D=D|0;lD=lD|0;Q=Q|0;var n=0,d=0,e=0,u1=0,u0=0,v0=0,vh=0,vl=0,qh=0,ql=0,rh=0,rl=0,t1=0,t2=0,m=0,c=0,i=0,j=0,k=0;// number of significant limbs in `N` (multiplied by 4)
for(i=lN-1&-4;(i|0)>=0;i=i-4|0){n=HEAP32[N+i>>2]|0;if(n){lN=i;break;}}// number of significant limbs in `D` (multiplied by 4)
for(i=lD-1&-4;(i|0)>=0;i=i-4|0){d=HEAP32[D+i>>2]|0;if(d){lD=i;break;}}// `D` is zero? WTF?!
// calculate `e` — the power of 2 of the normalization factor
while((d&0x80000000)==0){d=d<<1;e=e+1|0;}// normalize `N` in place
u0=HEAP32[N+lN>>2]|0;if(e){u1=u0>>>(32-e|0);for(i=lN-4|0;(i|0)>=0;i=i-4|0){n=HEAP32[N+i>>2]|0;HEAP32[N+i+4>>2]=u0<<e|(e?n>>>(32-e|0):0);u0=n;}HEAP32[N>>2]=u0<<e;}// normalize `D` in place
if(e){v0=HEAP32[D+lD>>2]|0;for(i=lD-4|0;(i|0)>=0;i=i-4|0){d=HEAP32[D+i>>2]|0;HEAP32[D+i+4>>2]=v0<<e|d>>>(32-e|0);v0=d;}HEAP32[D>>2]=v0<<e;}// divisor parts won't change
v0=HEAP32[D+lD>>2]|0;vh=v0>>>16,vl=v0&0xffff;// perform division
for(i=lN;(i|0)>=(lD|0);i=i-4|0){j=i-lD|0;// estimate high part of the quotient
u0=HEAP32[N+i>>2]|0;qh=(u1>>>0)/(vh>>>0)|0,rh=(u1>>>0)%(vh>>>0)|0,t1=imul(qh,vl)|0;while((qh|0)==0x10000|t1>>>0>(rh<<16|u0>>>16)>>>0){qh=qh-1|0,rh=rh+vh|0,t1=t1-vl|0;if((rh|0)>=0x10000)break;}// bulk multiply-and-subtract
// m - multiplication carry, c - subtraction carry
m=0,c=0;for(k=0;(k|0)<=(lD|0);k=k+4|0){d=HEAP32[D+k>>2]|0;t1=(imul(qh,d&0xffff)|0)+(m>>>16)|0;t2=(imul(qh,d>>>16)|0)+(t1>>>16)|0;d=m&0xffff|t1<<16;m=t2;n=HEAP32[N+j+k>>2]|0;t1=((n&0xffff)-(d&0xffff)|0)+c|0;t2=((n>>>16)-(d>>>16)|0)+(t1>>16)|0;HEAP32[N+j+k>>2]=t2<<16|t1&0xffff;c=t2>>16;}t1=((u1&0xffff)-(m&0xffff)|0)+c|0;t2=((u1>>>16)-(m>>>16)|0)+(t1>>16)|0;u1=t2<<16|t1&0xffff;c=t2>>16;// add `D` back if got carry-out
if(c){qh=qh-1|0;c=0;for(k=0;(k|0)<=(lD|0);k=k+4|0){d=HEAP32[D+k>>2]|0;n=HEAP32[N+j+k>>2]|0;t1=(n&0xffff)+c|0;t2=(n>>>16)+d+(t1>>>16)|0;HEAP32[N+j+k>>2]=t2<<16|t1&0xffff;c=t2>>>16;}u1=u1+c|0;}// estimate low part of the quotient
u0=HEAP32[N+i>>2]|0;n=u1<<16|u0>>>16;ql=(n>>>0)/(vh>>>0)|0,rl=(n>>>0)%(vh>>>0)|0,t1=imul(ql,vl)|0;while((ql|0)==0x10000|t1>>>0>(rl<<16|u0&0xffff)>>>0){ql=ql-1|0,rl=rl+vh|0,t1=t1-vl|0;if((rl|0)>=0x10000)break;}// bulk multiply-and-subtract
// m - multiplication carry, c - subtraction carry
m=0,c=0;for(k=0;(k|0)<=(lD|0);k=k+4|0){d=HEAP32[D+k>>2]|0;t1=(imul(ql,d&0xffff)|0)+(m&0xffff)|0;t2=((imul(ql,d>>>16)|0)+(t1>>>16)|0)+(m>>>16)|0;d=t1&0xffff|t2<<16;m=t2>>>16;n=HEAP32[N+j+k>>2]|0;t1=((n&0xffff)-(d&0xffff)|0)+c|0;t2=((n>>>16)-(d>>>16)|0)+(t1>>16)|0;c=t2>>16;HEAP32[N+j+k>>2]=t2<<16|t1&0xffff;}t1=((u1&0xffff)-(m&0xffff)|0)+c|0;t2=((u1>>>16)-(m>>>16)|0)+(t1>>16)|0;c=t2>>16;// add `D` back if got carry-out
if(c){ql=ql-1|0;c=0;for(k=0;(k|0)<=(lD|0);k=k+4|0){d=HEAP32[D+k>>2]|0;n=HEAP32[N+j+k>>2]|0;t1=((n&0xffff)+(d&0xffff)|0)+c|0;t2=((n>>>16)+(d>>>16)|0)+(t1>>>16)|0;c=t2>>>16;HEAP32[N+j+k>>2]=t1&0xffff|t2<<16;}}// got quotient limb
HEAP32[Q+j>>2]=qh<<16|ql;u1=HEAP32[N+i>>2]|0;}if(e){// TODO denormalize `D` in place
// denormalize `N` in place
u0=HEAP32[N>>2]|0;for(i=4;(i|0)<=(lD|0);i=i+4|0){n=HEAP32[N+i>>2]|0;HEAP32[N+i-4>>2]=n<<(32-e|0)|u0>>>e;u0=n;}HEAP32[N+lD>>2]=u0>>>e;}}/**
     * Montgomery modular reduction
     *
     * Definition:
     *
     *  MREDC(A) = A × X (mod N),
     *  M × X = N × Y + 1,
     *
     * where M = 2^(32*m) such that N < M and A < N×M
     *
     * Numbers `X` and `Y` can be calculated using Extended Euclidean Algorithm.
     */function mredc(A,lA,N,lN,y,R){A=A|0;lA=lA|0;N=N|0;lN=lN|0;y=y|0;R=R|0;var T=0,c=0,uh=0,ul=0,vl=0,vh=0,w0=0,w1=0,w2=0,r0=0,r1=0,i=0,j=0,k=0;T=salloc(lN<<1)|0;z(lN<<1,0,T);cp(lA,A,T);// HAC 14.32
for(i=0;(i|0)<(lN|0);i=i+4|0){uh=HEAP32[T+i>>2]|0,ul=uh&0xffff,uh=uh>>>16;vh=y>>>16,vl=y&0xffff;w0=imul(ul,vl)|0,w1=((imul(ul,vh)|0)+(imul(uh,vl)|0)|0)+(w0>>>16)|0;ul=w0&0xffff,uh=w1&0xffff;r1=0;for(j=0;(j|0)<(lN|0);j=j+4|0){k=i+j|0;vh=HEAP32[N+j>>2]|0,vl=vh&0xffff,vh=vh>>>16;r0=HEAP32[T+k>>2]|0;w0=((imul(ul,vl)|0)+(r1&0xffff)|0)+(r0&0xffff)|0;w1=((imul(ul,vh)|0)+(r1>>>16)|0)+(r0>>>16)|0;w2=((imul(uh,vl)|0)+(w1&0xffff)|0)+(w0>>>16)|0;r1=((imul(uh,vh)|0)+(w2>>>16)|0)+(w1>>>16)|0;r0=w2<<16|w0&0xffff;HEAP32[T+k>>2]=r0;}k=i+j|0;r0=HEAP32[T+k>>2]|0;w0=((r0&0xffff)+(r1&0xffff)|0)+c|0;w1=((r0>>>16)+(r1>>>16)|0)+(w0>>>16)|0;HEAP32[T+k>>2]=w1<<16|w0&0xffff;c=w1>>>16;}cp(lN,T+lN|0,R);sfree(lN<<1);if(c|(cmp(N,lN,R,lN)|0)<=0){sub(R,lN,N,lN,R,lN)|0;}}return{sreset:sreset,salloc:salloc,sfree:sfree,z:z,tst:tst,neg:neg,cmp:cmp,add:add,sub:sub,mul:mul,sqr:sqr,div:div,mredc:mredc};};function Number_extGCD(a,b){var sa=a<0?-1:1,sb=b<0?-1:1,xi=1,xj=0,yi=0,yj=1,r,q,t,a_cmp_b;a*=sa;b*=sb;a_cmp_b=a<b;if(a_cmp_b){t=a;a=b,b=t;t=sa;sa=sb;sb=t;}q=Math.floor(a/b),r=a-q*b;while(r){t=xi-q*xj,xi=xj,xj=t;t=yi-q*yj,yi=yj,yj=t;a=b,b=r;q=Math.floor(a/b),r=a-q*b;}xj*=sa;yj*=sb;if(a_cmp_b){t=xj;xj=yj,yj=t;}return{gcd:b,x:xj,y:yj};}function BigNumber_extGCD(a,b){var sa=a.sign;var sb=b.sign;if(sa<0)a=a.negate();if(sb<0)b=b.negate();var a_cmp_b=a.compare(b);if(a_cmp_b<0){var t=a;a=b,b=t;var t2=sa;sa=sb;sb=t2;}var xi=BigNumber.ONE,xj=BigNumber.ZERO,lx=b.bitLength,yi=BigNumber.ZERO,yj=BigNumber.ONE,ly=a.bitLength,z,r,q;z=a.divide(b);while((r=z.remainder)!==BigNumber.ZERO){q=z.quotient;z=xi.subtract(q.multiply(xj).clamp(lx)).clamp(lx),xi=xj,xj=z;z=yi.subtract(q.multiply(yj).clamp(ly)).clamp(ly),yi=yj,yj=z;a=b,b=r;z=a.divide(b);}if(sa<0)xj=xj.negate();if(sb<0)yj=yj.negate();if(a_cmp_b<0){var t=xj;xj=yj,yj=t;}return{gcd:b,x:xj,y:yj};}function getRandomValues(buf){if(typeof process!=='undefined'){var nodeCrypto=require('crypto');var bytes=nodeCrypto.randomBytes(buf.length);buf.set(bytes);return;}if(window.crypto&&window.crypto.getRandomValues){window.crypto.getRandomValues(buf);return;}if(self.crypto&&self.crypto.getRandomValues){self.crypto.getRandomValues(buf);return;}// @ts-ignore
if(window.msCrypto&&window.msCrypto.getRandomValues){// @ts-ignore
window.msCrypto.getRandomValues(buf);return;}throw new Error('No secure random number generator available.');}var __extends$8=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();///////////////////////////////////////////////////////////////////////////////
var _bigint_stdlib={Uint32Array:Uint32Array,Math:Math};var _bigint_heap=new Uint32Array(0x100000);var _bigint_asm;function _half_imul(a,b){return a*b|0;}if(_bigint_stdlib.Math.imul===undefined){_bigint_stdlib.Math.imul=_half_imul;_bigint_asm=bigint_asm(_bigint_stdlib,null,_bigint_heap.buffer);delete _bigint_stdlib.Math.imul;}else{_bigint_asm=bigint_asm(_bigint_stdlib,null,_bigint_heap.buffer);}///////////////////////////////////////////////////////////////////////////////
var _BigNumber_ZERO_limbs=new Uint32Array(0);var BigNumber=/** @class */function(){function BigNumber(num){var limbs=_BigNumber_ZERO_limbs;var bitlen=0;var sign=0;if(num===undefined);else{for(var i=0;!num[i];i++);bitlen=(num.length-i)*8;if(!bitlen)return BigNumber.ZERO;limbs=new Uint32Array(bitlen+31>>5);for(var j=num.length-4;j>=i;j-=4){limbs[num.length-4-j>>2]=num[j]<<24|num[j+1]<<16|num[j+2]<<8|num[j+3];}if(i-j===3){limbs[limbs.length-1]=num[i];}else if(i-j===2){limbs[limbs.length-1]=num[i]<<8|num[i+1];}else if(i-j===1){limbs[limbs.length-1]=num[i]<<16|num[i+1]<<8|num[i+2];}sign=1;}this.limbs=limbs;this.bitLength=bitlen;this.sign=sign;}BigNumber.fromString=function(str){var bytes=string_to_bytes(str);return new BigNumber(bytes);};BigNumber.fromNumber=function(num){var limbs=_BigNumber_ZERO_limbs;var bitlen=0;var sign=0;var absnum=Math.abs(num);if(absnum>0xffffffff){limbs=new Uint32Array(2);limbs[0]=absnum|0;limbs[1]=absnum/0x100000000|0;bitlen=52;}else if(absnum>0){limbs=new Uint32Array(1);limbs[0]=absnum;bitlen=32;}else{limbs=_BigNumber_ZERO_limbs;bitlen=0;}sign=num<0?-1:1;return BigNumber.fromConfig({limbs:limbs,bitLength:bitlen,sign:sign});};BigNumber.fromArrayBuffer=function(buffer){return new BigNumber(new Uint8Array(buffer));};BigNumber.fromConfig=function(obj){var bn=new BigNumber();bn.limbs=new Uint32Array(obj.limbs);bn.bitLength=obj.bitLength;bn.sign=obj.sign;return bn;};BigNumber.prototype.toString=function(radix){radix=radix||16;var limbs=this.limbs;var bitlen=this.bitLength;var str='';if(radix===16){// FIXME clamp last limb to (bitlen % 32)
for(var i=(bitlen+31>>5)-1;i>=0;i--){var h=limbs[i].toString(16);str+='00000000'.substr(h.length);str+=h;}str=str.replace(/^0+/,'');if(!str.length)str='0';}else{throw new IllegalArgumentError('bad radix');}if(this.sign<0)str='-'+str;return str;};BigNumber.prototype.toBytes=function(){var bitlen=this.bitLength;var limbs=this.limbs;if(bitlen===0)return new Uint8Array(0);var bytelen=bitlen+7>>3;var bytes=new Uint8Array(bytelen);for(var i=0;i<bytelen;i++){var j=bytelen-i-1;bytes[i]=limbs[j>>2]>>((j&3)<<3);}return bytes;};/**
     * Downgrade to Number
     */BigNumber.prototype.valueOf=function(){var limbs=this.limbs;var bits=this.bitLength;var sign=this.sign;if(!sign)return 0;if(bits<=32)return sign*(limbs[0]>>>0);if(bits<=52)return sign*(0x100000000*(limbs[1]>>>0)+(limbs[0]>>>0));// normalization
var i,l,e=0;for(i=limbs.length-1;i>=0;i--){if((l=limbs[i])===0)continue;while((l<<e&0x80000000)===0)e++;break;}if(i===0)return sign*(limbs[0]>>>0);return sign*(0x100000*((limbs[i]<<e|(e?limbs[i-1]>>>32-e:0))>>>0)+((limbs[i-1]<<e|(e&&i>1?limbs[i-2]>>>32-e:0))>>>12))*Math.pow(2,32*i-e-52);};BigNumber.prototype.clamp=function(b){var limbs=this.limbs;var bitlen=this.bitLength;// FIXME check b is number and in a valid range
if(b>=bitlen)return this;var clamped=new BigNumber();var n=b+31>>5;var k=b%32;clamped.limbs=new Uint32Array(limbs.subarray(0,n));clamped.bitLength=b;clamped.sign=this.sign;if(k)clamped.limbs[n-1]&=-1>>>32-k;return clamped;};BigNumber.prototype.slice=function(f,b){var limbs=this.limbs;var bitlen=this.bitLength;if(f<0)throw new RangeError('TODO');if(f>=bitlen)return BigNumber.ZERO;if(b===undefined||b>bitlen-f)b=bitlen-f;var sliced=new BigNumber();var n=f>>5;var m=f+b+31>>5;var l=b+31>>5;var t=f%32;var k=b%32;var slimbs=new Uint32Array(l);if(t){for(var i=0;i<m-n-1;i++){slimbs[i]=limbs[n+i]>>>t|limbs[n+i+1]<<32-t;}slimbs[i]=limbs[n+i]>>>t;}else{slimbs.set(limbs.subarray(n,m));}if(k){slimbs[l-1]&=-1>>>32-k;}sliced.limbs=slimbs;sliced.bitLength=b;sliced.sign=this.sign;return sliced;};BigNumber.prototype.negate=function(){var negative=new BigNumber();negative.limbs=this.limbs;negative.bitLength=this.bitLength;negative.sign=-1*this.sign;return negative;};BigNumber.prototype.compare=function(that){var alimbs=this.limbs,alimbcnt=alimbs.length,blimbs=that.limbs,blimbcnt=blimbs.length,z=0;if(this.sign<that.sign)return-1;if(this.sign>that.sign)return 1;_bigint_heap.set(alimbs,0);_bigint_heap.set(blimbs,alimbcnt);z=_bigint_asm.cmp(0,alimbcnt<<2,alimbcnt<<2,blimbcnt<<2);return z*this.sign;};BigNumber.prototype.add=function(that){if(!this.sign)return that;if(!that.sign)return this;var abitlen=this.bitLength,alimbs=this.limbs,alimbcnt=alimbs.length,asign=this.sign,bbitlen=that.bitLength,blimbs=that.limbs,blimbcnt=blimbs.length,bsign=that.sign,rbitlen,rlimbcnt,rsign,rof,result=new BigNumber();rbitlen=(abitlen>bbitlen?abitlen:bbitlen)+(asign*bsign>0?1:0);rlimbcnt=rbitlen+31>>5;_bigint_asm.sreset();var pA=_bigint_asm.salloc(alimbcnt<<2),pB=_bigint_asm.salloc(blimbcnt<<2),pR=_bigint_asm.salloc(rlimbcnt<<2);_bigint_asm.z(pR-pA+(rlimbcnt<<2),0,pA);_bigint_heap.set(alimbs,pA>>2);_bigint_heap.set(blimbs,pB>>2);if(asign*bsign>0){_bigint_asm.add(pA,alimbcnt<<2,pB,blimbcnt<<2,pR,rlimbcnt<<2);rsign=asign;}else if(asign>bsign){rof=_bigint_asm.sub(pA,alimbcnt<<2,pB,blimbcnt<<2,pR,rlimbcnt<<2);rsign=rof?bsign:asign;}else{rof=_bigint_asm.sub(pB,blimbcnt<<2,pA,alimbcnt<<2,pR,rlimbcnt<<2);rsign=rof?asign:bsign;}if(rof)_bigint_asm.neg(pR,rlimbcnt<<2,pR,rlimbcnt<<2);if(_bigint_asm.tst(pR,rlimbcnt<<2)===0)return BigNumber.ZERO;result.limbs=new Uint32Array(_bigint_heap.subarray(pR>>2,(pR>>2)+rlimbcnt));result.bitLength=rbitlen;result.sign=rsign;return result;};BigNumber.prototype.subtract=function(that){return this.add(that.negate());};BigNumber.prototype.square=function(){if(!this.sign)return BigNumber.ZERO;var abitlen=this.bitLength,alimbs=this.limbs,alimbcnt=alimbs.length,rbitlen,rlimbcnt,result=new BigNumber();rbitlen=abitlen<<1;rlimbcnt=rbitlen+31>>5;_bigint_asm.sreset();var pA=_bigint_asm.salloc(alimbcnt<<2),pR=_bigint_asm.salloc(rlimbcnt<<2);_bigint_asm.z(pR-pA+(rlimbcnt<<2),0,pA);_bigint_heap.set(alimbs,pA>>2);_bigint_asm.sqr(pA,alimbcnt<<2,pR);result.limbs=new Uint32Array(_bigint_heap.subarray(pR>>2,(pR>>2)+rlimbcnt));result.bitLength=rbitlen;result.sign=1;return result;};BigNumber.prototype.divide=function(that){var abitlen=this.bitLength,alimbs=this.limbs,alimbcnt=alimbs.length,bbitlen=that.bitLength,blimbs=that.limbs,blimbcnt=blimbs.length,qlimbcnt,rlimbcnt,quotient=BigNumber.ZERO,remainder=BigNumber.ZERO;_bigint_asm.sreset();var pA=_bigint_asm.salloc(alimbcnt<<2),pB=_bigint_asm.salloc(blimbcnt<<2),pQ=_bigint_asm.salloc(alimbcnt<<2);_bigint_asm.z(pQ-pA+(alimbcnt<<2),0,pA);_bigint_heap.set(alimbs,pA>>2);_bigint_heap.set(blimbs,pB>>2);_bigint_asm.div(pA,alimbcnt<<2,pB,blimbcnt<<2,pQ);qlimbcnt=_bigint_asm.tst(pQ,alimbcnt<<2)>>2;if(qlimbcnt){quotient=new BigNumber();quotient.limbs=new Uint32Array(_bigint_heap.subarray(pQ>>2,(pQ>>2)+qlimbcnt));quotient.bitLength=abitlen<qlimbcnt<<5?abitlen:qlimbcnt<<5;quotient.sign=this.sign*that.sign;}rlimbcnt=_bigint_asm.tst(pA,blimbcnt<<2)>>2;if(rlimbcnt){remainder=new BigNumber();remainder.limbs=new Uint32Array(_bigint_heap.subarray(pA>>2,(pA>>2)+rlimbcnt));remainder.bitLength=bbitlen<rlimbcnt<<5?bbitlen:rlimbcnt<<5;remainder.sign=this.sign;}return{quotient:quotient,remainder:remainder};};BigNumber.prototype.multiply=function(that){if(!this.sign||!that.sign)return BigNumber.ZERO;var abitlen=this.bitLength,alimbs=this.limbs,alimbcnt=alimbs.length,bbitlen=that.bitLength,blimbs=that.limbs,blimbcnt=blimbs.length,rbitlen,rlimbcnt,result=new BigNumber();rbitlen=abitlen+bbitlen;rlimbcnt=rbitlen+31>>5;_bigint_asm.sreset();var pA=_bigint_asm.salloc(alimbcnt<<2),pB=_bigint_asm.salloc(blimbcnt<<2),pR=_bigint_asm.salloc(rlimbcnt<<2);_bigint_asm.z(pR-pA+(rlimbcnt<<2),0,pA);_bigint_heap.set(alimbs,pA>>2);_bigint_heap.set(blimbs,pB>>2);_bigint_asm.mul(pA,alimbcnt<<2,pB,blimbcnt<<2,pR,rlimbcnt<<2);result.limbs=new Uint32Array(_bigint_heap.subarray(pR>>2,(pR>>2)+rlimbcnt));result.sign=this.sign*that.sign;result.bitLength=rbitlen;return result;};BigNumber.prototype.isMillerRabinProbablePrime=function(rounds){var t=BigNumber.fromConfig(this),s=0;t.limbs[0]-=1;while(t.limbs[s>>5]===0)s+=32;while((t.limbs[s>>5]>>(s&31)&1)===0)s++;t=t.slice(s);var m=new Modulus(this),m1=this.subtract(BigNumber.ONE),a=BigNumber.fromConfig(this),l=this.limbs.length-1;while(a.limbs[l]===0)l--;while(--rounds>=0){getRandomValues(a.limbs);if(a.limbs[0]<2)a.limbs[0]+=2;while(a.compare(m1)>=0)a.limbs[l]>>>=1;var x=m.power(a,t);if(x.compare(BigNumber.ONE)===0)continue;if(x.compare(m1)===0)continue;var c=s;while(--c>0){x=x.square().divide(m).remainder;if(x.compare(BigNumber.ONE)===0)return false;if(x.compare(m1)===0)break;}if(c===0)return false;}return true;};BigNumber.prototype.isProbablePrime=function(paranoia){if(paranoia===void 0){paranoia=80;}var limbs=this.limbs;var i=0;// Oddity test
// (50% false positive probability)
if((limbs[0]&1)===0)return false;if(paranoia<=1)return true;// Magic divisors (3, 5, 17) test
// (~25% false positive probability)
var s3=0,s5=0,s17=0;for(i=0;i<limbs.length;i++){var l3=limbs[i];while(l3){s3+=l3&3;l3>>>=2;}var l5=limbs[i];while(l5){s5+=l5&3;l5>>>=2;s5-=l5&3;l5>>>=2;}var l17=limbs[i];while(l17){s17+=l17&15;l17>>>=4;s17-=l17&15;l17>>>=4;}}if(!(s3%3)||!(s5%5)||!(s17%17))return false;if(paranoia<=2)return true;// Miller-Rabin test
// (≤ 4^(-k) false positive probability)
return this.isMillerRabinProbablePrime(paranoia>>>1);};BigNumber.extGCD=BigNumber_extGCD;BigNumber.ZERO=BigNumber.fromNumber(0);BigNumber.ONE=BigNumber.fromNumber(1);return BigNumber;}();var Modulus=/** @class */function(_super){__extends$8(Modulus,_super);function Modulus(number){var _this=_super.call(this)||this;_this.limbs=number.limbs;_this.bitLength=number.bitLength;_this.sign=number.sign;if(_this.valueOf()<1)throw new RangeError();if(_this.bitLength<=32)return _this;var comodulus;if(_this.limbs[0]&1){var bitlen=(_this.bitLength+31&-32)+1;var limbs=new Uint32Array(bitlen+31>>5);limbs[limbs.length-1]=1;comodulus=new BigNumber();comodulus.sign=1;comodulus.bitLength=bitlen;comodulus.limbs=limbs;var k=Number_extGCD(0x100000000,_this.limbs[0]).y;_this.coefficient=k<0?-k:0x100000000-k;}else{return _this;}_this.comodulus=comodulus;_this.comodulusRemainder=comodulus.divide(_this).remainder;_this.comodulusRemainderSquare=comodulus.square().divide(_this).remainder;return _this;}/**
     * Modular reduction
     */Modulus.prototype.reduce=function(a){if(a.bitLength<=32&&this.bitLength<=32)return BigNumber.fromNumber(a.valueOf()%this.valueOf());if(a.compare(this)<0)return a;return a.divide(this).remainder;};/**
     * Modular inverse
     */Modulus.prototype.inverse=function(a){a=this.reduce(a);var r=BigNumber_extGCD(this,a);if(r.gcd.valueOf()!==1)throw new Error('GCD is not 1');if(r.y.sign<0)return r.y.add(this).clamp(this.bitLength);return r.y;};/**
     * Modular exponentiation
     */Modulus.prototype.power=function(g,e){// count exponent set bits
var c=0;for(var i=0;i<e.limbs.length;i++){var t=e.limbs[i];while(t){if(t&1)c++;t>>>=1;}}// window size parameter
var k=8;if(e.bitLength<=4536)k=7;if(e.bitLength<=1736)k=6;if(e.bitLength<=630)k=5;if(e.bitLength<=210)k=4;if(e.bitLength<=60)k=3;if(e.bitLength<=12)k=2;if(c<=1<<k-1)k=1;// montgomerize base
g=Modulus._Montgomery_reduce(this.reduce(g).multiply(this.comodulusRemainderSquare),this);// precompute odd powers
var g2=Modulus._Montgomery_reduce(g.square(),this),gn=new Array(1<<k-1);gn[0]=g;gn[1]=Modulus._Montgomery_reduce(g.multiply(g2),this);for(var i=2;i<1<<k-1;i++){gn[i]=Modulus._Montgomery_reduce(gn[i-1].multiply(g2),this);}// perform exponentiation
var u=this.comodulusRemainder;var r=u;for(var i=e.limbs.length-1;i>=0;i--){var t=e.limbs[i];for(var j=32;j>0;){if(t&0x80000000){var n=t>>>32-k,l=k;while((n&1)===0){n>>>=1;l--;}var m=gn[n>>>1];while(n){n>>>=1;if(r!==u)r=Modulus._Montgomery_reduce(r.square(),this);}r=r!==u?Modulus._Montgomery_reduce(r.multiply(m),this):m;t<<=l,j-=l;}else{if(r!==u)r=Modulus._Montgomery_reduce(r.square(),this);t<<=1,j--;}}}// de-montgomerize result
return Modulus._Montgomery_reduce(r,this);};Modulus._Montgomery_reduce=function(a,n){var alimbs=a.limbs;var alimbcnt=alimbs.length;var nlimbs=n.limbs;var nlimbcnt=nlimbs.length;var y=n.coefficient;_bigint_asm.sreset();var pA=_bigint_asm.salloc(alimbcnt<<2),pN=_bigint_asm.salloc(nlimbcnt<<2),pR=_bigint_asm.salloc(nlimbcnt<<2);_bigint_asm.z(pR-pA+(nlimbcnt<<2),0,pA);_bigint_heap.set(alimbs,pA>>2);_bigint_heap.set(nlimbs,pN>>2);_bigint_asm.mredc(pA,alimbcnt<<2,pN,nlimbcnt<<2,y,pR);var result=new BigNumber();result.limbs=new Uint32Array(_bigint_heap.subarray(pR>>2,(pR>>2)+nlimbcnt));result.bitLength=n.bitLength;result.sign=1;return result;};return Modulus;}(BigNumber);var sha1_asm=function(stdlib,foreign,buffer){"use asm";// SHA256 state
var H0=0,H1=0,H2=0,H3=0,H4=0,TOTAL0=0,TOTAL1=0;// HMAC state
var I0=0,I1=0,I2=0,I3=0,I4=0,O0=0,O1=0,O2=0,O3=0,O4=0;// I/O buffer
var HEAP=new stdlib.Uint8Array(buffer);function _core(w0,w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,w13,w14,w15){w0=w0|0;w1=w1|0;w2=w2|0;w3=w3|0;w4=w4|0;w5=w5|0;w6=w6|0;w7=w7|0;w8=w8|0;w9=w9|0;w10=w10|0;w11=w11|0;w12=w12|0;w13=w13|0;w14=w14|0;w15=w15|0;var a=0,b=0,c=0,d=0,e=0,n=0,t=0,w16=0,w17=0,w18=0,w19=0,w20=0,w21=0,w22=0,w23=0,w24=0,w25=0,w26=0,w27=0,w28=0,w29=0,w30=0,w31=0,w32=0,w33=0,w34=0,w35=0,w36=0,w37=0,w38=0,w39=0,w40=0,w41=0,w42=0,w43=0,w44=0,w45=0,w46=0,w47=0,w48=0,w49=0,w50=0,w51=0,w52=0,w53=0,w54=0,w55=0,w56=0,w57=0,w58=0,w59=0,w60=0,w61=0,w62=0,w63=0,w64=0,w65=0,w66=0,w67=0,w68=0,w69=0,w70=0,w71=0,w72=0,w73=0,w74=0,w75=0,w76=0,w77=0,w78=0,w79=0;a=H0;b=H1;c=H2;d=H3;e=H4;// 0
t=w0+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 1
t=w1+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 2
t=w2+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 3
t=w3+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 4
t=w4+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 5
t=w5+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 6
t=w6+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 7
t=w7+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 8
t=w8+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 9
t=w9+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 10
t=w10+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 11
t=w11+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 12
t=w12+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 13
t=w13+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 14
t=w14+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 15
t=w15+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 16
n=w13^w8^w2^w0;w16=n<<1|n>>>31;t=w16+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 17
n=w14^w9^w3^w1;w17=n<<1|n>>>31;t=w17+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 18
n=w15^w10^w4^w2;w18=n<<1|n>>>31;t=w18+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 19
n=w16^w11^w5^w3;w19=n<<1|n>>>31;t=w19+(a<<5|a>>>27)+e+(b&c|~b&d)+0x5a827999|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 20
n=w17^w12^w6^w4;w20=n<<1|n>>>31;t=w20+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 21
n=w18^w13^w7^w5;w21=n<<1|n>>>31;t=w21+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 22
n=w19^w14^w8^w6;w22=n<<1|n>>>31;t=w22+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 23
n=w20^w15^w9^w7;w23=n<<1|n>>>31;t=w23+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 24
n=w21^w16^w10^w8;w24=n<<1|n>>>31;t=w24+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 25
n=w22^w17^w11^w9;w25=n<<1|n>>>31;t=w25+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 26
n=w23^w18^w12^w10;w26=n<<1|n>>>31;t=w26+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 27
n=w24^w19^w13^w11;w27=n<<1|n>>>31;t=w27+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 28
n=w25^w20^w14^w12;w28=n<<1|n>>>31;t=w28+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 29
n=w26^w21^w15^w13;w29=n<<1|n>>>31;t=w29+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 30
n=w27^w22^w16^w14;w30=n<<1|n>>>31;t=w30+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 31
n=w28^w23^w17^w15;w31=n<<1|n>>>31;t=w31+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 32
n=w29^w24^w18^w16;w32=n<<1|n>>>31;t=w32+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 33
n=w30^w25^w19^w17;w33=n<<1|n>>>31;t=w33+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 34
n=w31^w26^w20^w18;w34=n<<1|n>>>31;t=w34+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 35
n=w32^w27^w21^w19;w35=n<<1|n>>>31;t=w35+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 36
n=w33^w28^w22^w20;w36=n<<1|n>>>31;t=w36+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 37
n=w34^w29^w23^w21;w37=n<<1|n>>>31;t=w37+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 38
n=w35^w30^w24^w22;w38=n<<1|n>>>31;t=w38+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 39
n=w36^w31^w25^w23;w39=n<<1|n>>>31;t=w39+(a<<5|a>>>27)+e+(b^c^d)+0x6ed9eba1|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 40
n=w37^w32^w26^w24;w40=n<<1|n>>>31;t=w40+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 41
n=w38^w33^w27^w25;w41=n<<1|n>>>31;t=w41+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 42
n=w39^w34^w28^w26;w42=n<<1|n>>>31;t=w42+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 43
n=w40^w35^w29^w27;w43=n<<1|n>>>31;t=w43+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 44
n=w41^w36^w30^w28;w44=n<<1|n>>>31;t=w44+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 45
n=w42^w37^w31^w29;w45=n<<1|n>>>31;t=w45+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 46
n=w43^w38^w32^w30;w46=n<<1|n>>>31;t=w46+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 47
n=w44^w39^w33^w31;w47=n<<1|n>>>31;t=w47+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 48
n=w45^w40^w34^w32;w48=n<<1|n>>>31;t=w48+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 49
n=w46^w41^w35^w33;w49=n<<1|n>>>31;t=w49+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 50
n=w47^w42^w36^w34;w50=n<<1|n>>>31;t=w50+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 51
n=w48^w43^w37^w35;w51=n<<1|n>>>31;t=w51+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 52
n=w49^w44^w38^w36;w52=n<<1|n>>>31;t=w52+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 53
n=w50^w45^w39^w37;w53=n<<1|n>>>31;t=w53+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 54
n=w51^w46^w40^w38;w54=n<<1|n>>>31;t=w54+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 55
n=w52^w47^w41^w39;w55=n<<1|n>>>31;t=w55+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 56
n=w53^w48^w42^w40;w56=n<<1|n>>>31;t=w56+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 57
n=w54^w49^w43^w41;w57=n<<1|n>>>31;t=w57+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 58
n=w55^w50^w44^w42;w58=n<<1|n>>>31;t=w58+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 59
n=w56^w51^w45^w43;w59=n<<1|n>>>31;t=w59+(a<<5|a>>>27)+e+(b&c|b&d|c&d)-0x70e44324|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 60
n=w57^w52^w46^w44;w60=n<<1|n>>>31;t=w60+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 61
n=w58^w53^w47^w45;w61=n<<1|n>>>31;t=w61+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 62
n=w59^w54^w48^w46;w62=n<<1|n>>>31;t=w62+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 63
n=w60^w55^w49^w47;w63=n<<1|n>>>31;t=w63+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 64
n=w61^w56^w50^w48;w64=n<<1|n>>>31;t=w64+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 65
n=w62^w57^w51^w49;w65=n<<1|n>>>31;t=w65+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 66
n=w63^w58^w52^w50;w66=n<<1|n>>>31;t=w66+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 67
n=w64^w59^w53^w51;w67=n<<1|n>>>31;t=w67+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 68
n=w65^w60^w54^w52;w68=n<<1|n>>>31;t=w68+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 69
n=w66^w61^w55^w53;w69=n<<1|n>>>31;t=w69+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 70
n=w67^w62^w56^w54;w70=n<<1|n>>>31;t=w70+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 71
n=w68^w63^w57^w55;w71=n<<1|n>>>31;t=w71+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 72
n=w69^w64^w58^w56;w72=n<<1|n>>>31;t=w72+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 73
n=w70^w65^w59^w57;w73=n<<1|n>>>31;t=w73+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 74
n=w71^w66^w60^w58;w74=n<<1|n>>>31;t=w74+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 75
n=w72^w67^w61^w59;w75=n<<1|n>>>31;t=w75+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 76
n=w73^w68^w62^w60;w76=n<<1|n>>>31;t=w76+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 77
n=w74^w69^w63^w61;w77=n<<1|n>>>31;t=w77+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 78
n=w75^w70^w64^w62;w78=n<<1|n>>>31;t=w78+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;// 79
n=w76^w71^w65^w63;w79=n<<1|n>>>31;t=w79+(a<<5|a>>>27)+e+(b^c^d)-0x359d3e2a|0;e=d;d=c;c=b<<30|b>>>2;b=a;a=t;H0=H0+a|0;H1=H1+b|0;H2=H2+c|0;H3=H3+d|0;H4=H4+e|0;}function _core_heap(offset){offset=offset|0;_core(HEAP[offset|0]<<24|HEAP[offset|1]<<16|HEAP[offset|2]<<8|HEAP[offset|3],HEAP[offset|4]<<24|HEAP[offset|5]<<16|HEAP[offset|6]<<8|HEAP[offset|7],HEAP[offset|8]<<24|HEAP[offset|9]<<16|HEAP[offset|10]<<8|HEAP[offset|11],HEAP[offset|12]<<24|HEAP[offset|13]<<16|HEAP[offset|14]<<8|HEAP[offset|15],HEAP[offset|16]<<24|HEAP[offset|17]<<16|HEAP[offset|18]<<8|HEAP[offset|19],HEAP[offset|20]<<24|HEAP[offset|21]<<16|HEAP[offset|22]<<8|HEAP[offset|23],HEAP[offset|24]<<24|HEAP[offset|25]<<16|HEAP[offset|26]<<8|HEAP[offset|27],HEAP[offset|28]<<24|HEAP[offset|29]<<16|HEAP[offset|30]<<8|HEAP[offset|31],HEAP[offset|32]<<24|HEAP[offset|33]<<16|HEAP[offset|34]<<8|HEAP[offset|35],HEAP[offset|36]<<24|HEAP[offset|37]<<16|HEAP[offset|38]<<8|HEAP[offset|39],HEAP[offset|40]<<24|HEAP[offset|41]<<16|HEAP[offset|42]<<8|HEAP[offset|43],HEAP[offset|44]<<24|HEAP[offset|45]<<16|HEAP[offset|46]<<8|HEAP[offset|47],HEAP[offset|48]<<24|HEAP[offset|49]<<16|HEAP[offset|50]<<8|HEAP[offset|51],HEAP[offset|52]<<24|HEAP[offset|53]<<16|HEAP[offset|54]<<8|HEAP[offset|55],HEAP[offset|56]<<24|HEAP[offset|57]<<16|HEAP[offset|58]<<8|HEAP[offset|59],HEAP[offset|60]<<24|HEAP[offset|61]<<16|HEAP[offset|62]<<8|HEAP[offset|63]);}// offset — multiple of 32
function _state_to_heap(output){output=output|0;HEAP[output|0]=H0>>>24;HEAP[output|1]=H0>>>16&255;HEAP[output|2]=H0>>>8&255;HEAP[output|3]=H0&255;HEAP[output|4]=H1>>>24;HEAP[output|5]=H1>>>16&255;HEAP[output|6]=H1>>>8&255;HEAP[output|7]=H1&255;HEAP[output|8]=H2>>>24;HEAP[output|9]=H2>>>16&255;HEAP[output|10]=H2>>>8&255;HEAP[output|11]=H2&255;HEAP[output|12]=H3>>>24;HEAP[output|13]=H3>>>16&255;HEAP[output|14]=H3>>>8&255;HEAP[output|15]=H3&255;HEAP[output|16]=H4>>>24;HEAP[output|17]=H4>>>16&255;HEAP[output|18]=H4>>>8&255;HEAP[output|19]=H4&255;}function reset(){H0=0x67452301;H1=0xefcdab89;H2=0x98badcfe;H3=0x10325476;H4=0xc3d2e1f0;TOTAL0=TOTAL1=0;}function init(h0,h1,h2,h3,h4,total0,total1){h0=h0|0;h1=h1|0;h2=h2|0;h3=h3|0;h4=h4|0;total0=total0|0;total1=total1|0;H0=h0;H1=h1;H2=h2;H3=h3;H4=h4;TOTAL0=total0;TOTAL1=total1;}// offset — multiple of 64
function process(offset,length){offset=offset|0;length=length|0;var hashed=0;if(offset&63)return-1;while((length|0)>=64){_core_heap(offset);offset=offset+64|0;length=length-64|0;hashed=hashed+64|0;}TOTAL0=TOTAL0+hashed|0;if(TOTAL0>>>0<hashed>>>0)TOTAL1=TOTAL1+1|0;return hashed|0;}// offset — multiple of 64
// output — multiple of 32
function finish(offset,length,output){offset=offset|0;length=length|0;output=output|0;var hashed=0,i=0;if(offset&63)return-1;if(~output)if(output&31)return-1;if((length|0)>=64){hashed=process(offset,length)|0;if((hashed|0)==-1)return-1;offset=offset+hashed|0;length=length-hashed|0;}hashed=hashed+length|0;TOTAL0=TOTAL0+length|0;if(TOTAL0>>>0<length>>>0)TOTAL1=TOTAL1+1|0;HEAP[offset|length]=0x80;if((length|0)>=56){for(i=length+1|0;(i|0)<64;i=i+1|0)HEAP[offset|i]=0x00;_core_heap(offset);length=0;HEAP[offset|0]=0;}for(i=length+1|0;(i|0)<59;i=i+1|0)HEAP[offset|i]=0;HEAP[offset|56]=TOTAL1>>>21&255;HEAP[offset|57]=TOTAL1>>>13&255;HEAP[offset|58]=TOTAL1>>>5&255;HEAP[offset|59]=TOTAL1<<3&255|TOTAL0>>>29;HEAP[offset|60]=TOTAL0>>>21&255;HEAP[offset|61]=TOTAL0>>>13&255;HEAP[offset|62]=TOTAL0>>>5&255;HEAP[offset|63]=TOTAL0<<3&255;_core_heap(offset);if(~output)_state_to_heap(output);return hashed|0;}function hmac_reset(){H0=I0;H1=I1;H2=I2;H3=I3;H4=I4;TOTAL0=64;TOTAL1=0;}function _hmac_opad(){H0=O0;H1=O1;H2=O2;H3=O3;H4=O4;TOTAL0=64;TOTAL1=0;}function hmac_init(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;p6=p6|0;p7=p7|0;p8=p8|0;p9=p9|0;p10=p10|0;p11=p11|0;p12=p12|0;p13=p13|0;p14=p14|0;p15=p15|0;// opad
reset();_core(p0^0x5c5c5c5c,p1^0x5c5c5c5c,p2^0x5c5c5c5c,p3^0x5c5c5c5c,p4^0x5c5c5c5c,p5^0x5c5c5c5c,p6^0x5c5c5c5c,p7^0x5c5c5c5c,p8^0x5c5c5c5c,p9^0x5c5c5c5c,p10^0x5c5c5c5c,p11^0x5c5c5c5c,p12^0x5c5c5c5c,p13^0x5c5c5c5c,p14^0x5c5c5c5c,p15^0x5c5c5c5c);O0=H0;O1=H1;O2=H2;O3=H3;O4=H4;// ipad
reset();_core(p0^0x36363636,p1^0x36363636,p2^0x36363636,p3^0x36363636,p4^0x36363636,p5^0x36363636,p6^0x36363636,p7^0x36363636,p8^0x36363636,p9^0x36363636,p10^0x36363636,p11^0x36363636,p12^0x36363636,p13^0x36363636,p14^0x36363636,p15^0x36363636);I0=H0;I1=H1;I2=H2;I3=H3;I4=H4;TOTAL0=64;TOTAL1=0;}// offset — multiple of 64
// output — multiple of 32
function hmac_finish(offset,length,output){offset=offset|0;length=length|0;output=output|0;var t0=0,t1=0,t2=0,t3=0,t4=0,hashed=0;if(offset&63)return-1;if(~output)if(output&31)return-1;hashed=finish(offset,length,-1)|0;t0=H0,t1=H1,t2=H2,t3=H3,t4=H4;_hmac_opad();_core(t0,t1,t2,t3,t4,0x80000000,0,0,0,0,0,0,0,0,0,672);if(~output)_state_to_heap(output);return hashed|0;}// salt is assumed to be already processed
// offset — multiple of 64
// output — multiple of 32
function pbkdf2_generate_block(offset,length,block,count,output){offset=offset|0;length=length|0;block=block|0;count=count|0;output=output|0;var h0=0,h1=0,h2=0,h3=0,h4=0,t0=0,t1=0,t2=0,t3=0,t4=0;if(offset&63)return-1;if(~output)if(output&31)return-1;// pad block number into heap
// FIXME probable OOB write
HEAP[offset+length|0]=block>>>24;HEAP[offset+length+1|0]=block>>>16&255;HEAP[offset+length+2|0]=block>>>8&255;HEAP[offset+length+3|0]=block&255;// finish first iteration
hmac_finish(offset,length+4|0,-1)|0;h0=t0=H0,h1=t1=H1,h2=t2=H2,h3=t3=H3,h4=t4=H4;count=count-1|0;// perform the rest iterations
while((count|0)>0){hmac_reset();_core(t0,t1,t2,t3,t4,0x80000000,0,0,0,0,0,0,0,0,0,672);t0=H0,t1=H1,t2=H2,t3=H3,t4=H4;_hmac_opad();_core(t0,t1,t2,t3,t4,0x80000000,0,0,0,0,0,0,0,0,0,672);t0=H0,t1=H1,t2=H2,t3=H3,t4=H4;h0=h0^H0;h1=h1^H1;h2=h2^H2;h3=h3^H3;h4=h4^H4;count=count-1|0;}H0=h0;H1=h1;H2=h2;H3=h3;H4=h4;if(~output)_state_to_heap(output);return 0;}return{// SHA1
reset:reset,init:init,process:process,finish:finish,// HMAC-SHA1
hmac_reset:hmac_reset,hmac_init:hmac_init,hmac_finish:hmac_finish,// PBKDF2-HMAC-SHA1
pbkdf2_generate_block:pbkdf2_generate_block};};var Hash=/** @class */function(){function Hash(){this.pos=0;this.len=0;}Hash.prototype.reset=function(){this.result=null;this.pos=0;this.len=0;this.asm.reset();return this;};Hash.prototype.process=function(data){if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');var asm=this.asm;var heap=this.heap;var hpos=this.pos;var hlen=this.len;var dpos=0;var dlen=data.length;var wlen=0;while(dlen>0){wlen=_heap_write(heap,hpos+hlen,data,dpos,dlen);hlen+=wlen;dpos+=wlen;dlen-=wlen;wlen=asm.process(hpos,hlen);hpos+=wlen;hlen-=wlen;if(!hlen)hpos=0;}this.pos=hpos;this.len=hlen;return this;};Hash.prototype.finish=function(){if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');this.asm.finish(this.pos,this.len,0);this.result=new Uint8Array(this.HASH_SIZE);this.result.set(this.heap.subarray(0,this.HASH_SIZE));this.pos=0;this.len=0;return this;};return Hash;}();var __extends$9=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var _sha1_block_size=64;var _sha1_hash_size=20;var Sha1=/** @class */function(_super){__extends$9(Sha1,_super);function Sha1(){var _this=_super.call(this)||this;_this.NAME='sha1';_this.BLOCK_SIZE=_sha1_block_size;_this.HASH_SIZE=_sha1_hash_size;_this.heap=_heap_init();_this.asm=sha1_asm({Uint8Array:Uint8Array},null,_this.heap.buffer);_this.reset();return _this;}Sha1.NAME='sha1';return Sha1;}(Hash);var sha256_asm=function(stdlib,foreign,buffer){"use asm";// SHA256 state
var H0=0,H1=0,H2=0,H3=0,H4=0,H5=0,H6=0,H7=0,TOTAL0=0,TOTAL1=0;// HMAC state
var I0=0,I1=0,I2=0,I3=0,I4=0,I5=0,I6=0,I7=0,O0=0,O1=0,O2=0,O3=0,O4=0,O5=0,O6=0,O7=0;// I/O buffer
var HEAP=new stdlib.Uint8Array(buffer);function _core(w0,w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,w13,w14,w15){w0=w0|0;w1=w1|0;w2=w2|0;w3=w3|0;w4=w4|0;w5=w5|0;w6=w6|0;w7=w7|0;w8=w8|0;w9=w9|0;w10=w10|0;w11=w11|0;w12=w12|0;w13=w13|0;w14=w14|0;w15=w15|0;var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0;a=H0;b=H1;c=H2;d=H3;e=H4;f=H5;g=H6;h=H7;// 0
h=w0+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0x428a2f98|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 1
g=w1+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0x71374491|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 2
f=w2+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0xb5c0fbcf|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 3
e=w3+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0xe9b5dba5|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 4
d=w4+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0x3956c25b|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 5
c=w5+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0x59f111f1|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 6
b=w6+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0x923f82a4|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 7
a=w7+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0xab1c5ed5|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 8
h=w8+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0xd807aa98|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 9
g=w9+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0x12835b01|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 10
f=w10+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0x243185be|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 11
e=w11+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0x550c7dc3|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 12
d=w12+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0x72be5d74|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 13
c=w13+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0x80deb1fe|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 14
b=w14+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0x9bdc06a7|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 15
a=w15+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0xc19bf174|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 16
w0=(w1>>>7^w1>>>18^w1>>>3^w1<<25^w1<<14)+(w14>>>17^w14>>>19^w14>>>10^w14<<15^w14<<13)+w0+w9|0;h=w0+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0xe49b69c1|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 17
w1=(w2>>>7^w2>>>18^w2>>>3^w2<<25^w2<<14)+(w15>>>17^w15>>>19^w15>>>10^w15<<15^w15<<13)+w1+w10|0;g=w1+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0xefbe4786|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 18
w2=(w3>>>7^w3>>>18^w3>>>3^w3<<25^w3<<14)+(w0>>>17^w0>>>19^w0>>>10^w0<<15^w0<<13)+w2+w11|0;f=w2+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0x0fc19dc6|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 19
w3=(w4>>>7^w4>>>18^w4>>>3^w4<<25^w4<<14)+(w1>>>17^w1>>>19^w1>>>10^w1<<15^w1<<13)+w3+w12|0;e=w3+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0x240ca1cc|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 20
w4=(w5>>>7^w5>>>18^w5>>>3^w5<<25^w5<<14)+(w2>>>17^w2>>>19^w2>>>10^w2<<15^w2<<13)+w4+w13|0;d=w4+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0x2de92c6f|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 21
w5=(w6>>>7^w6>>>18^w6>>>3^w6<<25^w6<<14)+(w3>>>17^w3>>>19^w3>>>10^w3<<15^w3<<13)+w5+w14|0;c=w5+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0x4a7484aa|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 22
w6=(w7>>>7^w7>>>18^w7>>>3^w7<<25^w7<<14)+(w4>>>17^w4>>>19^w4>>>10^w4<<15^w4<<13)+w6+w15|0;b=w6+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0x5cb0a9dc|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 23
w7=(w8>>>7^w8>>>18^w8>>>3^w8<<25^w8<<14)+(w5>>>17^w5>>>19^w5>>>10^w5<<15^w5<<13)+w7+w0|0;a=w7+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0x76f988da|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 24
w8=(w9>>>7^w9>>>18^w9>>>3^w9<<25^w9<<14)+(w6>>>17^w6>>>19^w6>>>10^w6<<15^w6<<13)+w8+w1|0;h=w8+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0x983e5152|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 25
w9=(w10>>>7^w10>>>18^w10>>>3^w10<<25^w10<<14)+(w7>>>17^w7>>>19^w7>>>10^w7<<15^w7<<13)+w9+w2|0;g=w9+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0xa831c66d|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 26
w10=(w11>>>7^w11>>>18^w11>>>3^w11<<25^w11<<14)+(w8>>>17^w8>>>19^w8>>>10^w8<<15^w8<<13)+w10+w3|0;f=w10+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0xb00327c8|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 27
w11=(w12>>>7^w12>>>18^w12>>>3^w12<<25^w12<<14)+(w9>>>17^w9>>>19^w9>>>10^w9<<15^w9<<13)+w11+w4|0;e=w11+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0xbf597fc7|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 28
w12=(w13>>>7^w13>>>18^w13>>>3^w13<<25^w13<<14)+(w10>>>17^w10>>>19^w10>>>10^w10<<15^w10<<13)+w12+w5|0;d=w12+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0xc6e00bf3|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 29
w13=(w14>>>7^w14>>>18^w14>>>3^w14<<25^w14<<14)+(w11>>>17^w11>>>19^w11>>>10^w11<<15^w11<<13)+w13+w6|0;c=w13+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0xd5a79147|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 30
w14=(w15>>>7^w15>>>18^w15>>>3^w15<<25^w15<<14)+(w12>>>17^w12>>>19^w12>>>10^w12<<15^w12<<13)+w14+w7|0;b=w14+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0x06ca6351|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 31
w15=(w0>>>7^w0>>>18^w0>>>3^w0<<25^w0<<14)+(w13>>>17^w13>>>19^w13>>>10^w13<<15^w13<<13)+w15+w8|0;a=w15+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0x14292967|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 32
w0=(w1>>>7^w1>>>18^w1>>>3^w1<<25^w1<<14)+(w14>>>17^w14>>>19^w14>>>10^w14<<15^w14<<13)+w0+w9|0;h=w0+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0x27b70a85|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 33
w1=(w2>>>7^w2>>>18^w2>>>3^w2<<25^w2<<14)+(w15>>>17^w15>>>19^w15>>>10^w15<<15^w15<<13)+w1+w10|0;g=w1+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0x2e1b2138|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 34
w2=(w3>>>7^w3>>>18^w3>>>3^w3<<25^w3<<14)+(w0>>>17^w0>>>19^w0>>>10^w0<<15^w0<<13)+w2+w11|0;f=w2+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0x4d2c6dfc|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 35
w3=(w4>>>7^w4>>>18^w4>>>3^w4<<25^w4<<14)+(w1>>>17^w1>>>19^w1>>>10^w1<<15^w1<<13)+w3+w12|0;e=w3+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0x53380d13|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 36
w4=(w5>>>7^w5>>>18^w5>>>3^w5<<25^w5<<14)+(w2>>>17^w2>>>19^w2>>>10^w2<<15^w2<<13)+w4+w13|0;d=w4+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0x650a7354|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 37
w5=(w6>>>7^w6>>>18^w6>>>3^w6<<25^w6<<14)+(w3>>>17^w3>>>19^w3>>>10^w3<<15^w3<<13)+w5+w14|0;c=w5+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0x766a0abb|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 38
w6=(w7>>>7^w7>>>18^w7>>>3^w7<<25^w7<<14)+(w4>>>17^w4>>>19^w4>>>10^w4<<15^w4<<13)+w6+w15|0;b=w6+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0x81c2c92e|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 39
w7=(w8>>>7^w8>>>18^w8>>>3^w8<<25^w8<<14)+(w5>>>17^w5>>>19^w5>>>10^w5<<15^w5<<13)+w7+w0|0;a=w7+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0x92722c85|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 40
w8=(w9>>>7^w9>>>18^w9>>>3^w9<<25^w9<<14)+(w6>>>17^w6>>>19^w6>>>10^w6<<15^w6<<13)+w8+w1|0;h=w8+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0xa2bfe8a1|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 41
w9=(w10>>>7^w10>>>18^w10>>>3^w10<<25^w10<<14)+(w7>>>17^w7>>>19^w7>>>10^w7<<15^w7<<13)+w9+w2|0;g=w9+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0xa81a664b|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 42
w10=(w11>>>7^w11>>>18^w11>>>3^w11<<25^w11<<14)+(w8>>>17^w8>>>19^w8>>>10^w8<<15^w8<<13)+w10+w3|0;f=w10+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0xc24b8b70|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 43
w11=(w12>>>7^w12>>>18^w12>>>3^w12<<25^w12<<14)+(w9>>>17^w9>>>19^w9>>>10^w9<<15^w9<<13)+w11+w4|0;e=w11+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0xc76c51a3|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 44
w12=(w13>>>7^w13>>>18^w13>>>3^w13<<25^w13<<14)+(w10>>>17^w10>>>19^w10>>>10^w10<<15^w10<<13)+w12+w5|0;d=w12+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0xd192e819|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 45
w13=(w14>>>7^w14>>>18^w14>>>3^w14<<25^w14<<14)+(w11>>>17^w11>>>19^w11>>>10^w11<<15^w11<<13)+w13+w6|0;c=w13+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0xd6990624|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 46
w14=(w15>>>7^w15>>>18^w15>>>3^w15<<25^w15<<14)+(w12>>>17^w12>>>19^w12>>>10^w12<<15^w12<<13)+w14+w7|0;b=w14+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0xf40e3585|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 47
w15=(w0>>>7^w0>>>18^w0>>>3^w0<<25^w0<<14)+(w13>>>17^w13>>>19^w13>>>10^w13<<15^w13<<13)+w15+w8|0;a=w15+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0x106aa070|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 48
w0=(w1>>>7^w1>>>18^w1>>>3^w1<<25^w1<<14)+(w14>>>17^w14>>>19^w14>>>10^w14<<15^w14<<13)+w0+w9|0;h=w0+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0x19a4c116|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 49
w1=(w2>>>7^w2>>>18^w2>>>3^w2<<25^w2<<14)+(w15>>>17^w15>>>19^w15>>>10^w15<<15^w15<<13)+w1+w10|0;g=w1+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0x1e376c08|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 50
w2=(w3>>>7^w3>>>18^w3>>>3^w3<<25^w3<<14)+(w0>>>17^w0>>>19^w0>>>10^w0<<15^w0<<13)+w2+w11|0;f=w2+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0x2748774c|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 51
w3=(w4>>>7^w4>>>18^w4>>>3^w4<<25^w4<<14)+(w1>>>17^w1>>>19^w1>>>10^w1<<15^w1<<13)+w3+w12|0;e=w3+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0x34b0bcb5|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 52
w4=(w5>>>7^w5>>>18^w5>>>3^w5<<25^w5<<14)+(w2>>>17^w2>>>19^w2>>>10^w2<<15^w2<<13)+w4+w13|0;d=w4+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0x391c0cb3|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 53
w5=(w6>>>7^w6>>>18^w6>>>3^w6<<25^w6<<14)+(w3>>>17^w3>>>19^w3>>>10^w3<<15^w3<<13)+w5+w14|0;c=w5+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0x4ed8aa4a|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 54
w6=(w7>>>7^w7>>>18^w7>>>3^w7<<25^w7<<14)+(w4>>>17^w4>>>19^w4>>>10^w4<<15^w4<<13)+w6+w15|0;b=w6+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0x5b9cca4f|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 55
w7=(w8>>>7^w8>>>18^w8>>>3^w8<<25^w8<<14)+(w5>>>17^w5>>>19^w5>>>10^w5<<15^w5<<13)+w7+w0|0;a=w7+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0x682e6ff3|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;// 56
w8=(w9>>>7^w9>>>18^w9>>>3^w9<<25^w9<<14)+(w6>>>17^w6>>>19^w6>>>10^w6<<15^w6<<13)+w8+w1|0;h=w8+h+(e>>>6^e>>>11^e>>>25^e<<26^e<<21^e<<7)+(g^e&(f^g))+0x748f82ee|0;d=d+h|0;h=h+(a&b^c&(a^b))+(a>>>2^a>>>13^a>>>22^a<<30^a<<19^a<<10)|0;// 57
w9=(w10>>>7^w10>>>18^w10>>>3^w10<<25^w10<<14)+(w7>>>17^w7>>>19^w7>>>10^w7<<15^w7<<13)+w9+w2|0;g=w9+g+(d>>>6^d>>>11^d>>>25^d<<26^d<<21^d<<7)+(f^d&(e^f))+0x78a5636f|0;c=c+g|0;g=g+(h&a^b&(h^a))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;// 58
w10=(w11>>>7^w11>>>18^w11>>>3^w11<<25^w11<<14)+(w8>>>17^w8>>>19^w8>>>10^w8<<15^w8<<13)+w10+w3|0;f=w10+f+(c>>>6^c>>>11^c>>>25^c<<26^c<<21^c<<7)+(e^c&(d^e))+0x84c87814|0;b=b+f|0;f=f+(g&h^a&(g^h))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;// 59
w11=(w12>>>7^w12>>>18^w12>>>3^w12<<25^w12<<14)+(w9>>>17^w9>>>19^w9>>>10^w9<<15^w9<<13)+w11+w4|0;e=w11+e+(b>>>6^b>>>11^b>>>25^b<<26^b<<21^b<<7)+(d^b&(c^d))+0x8cc70208|0;a=a+e|0;e=e+(f&g^h&(f^g))+(f>>>2^f>>>13^f>>>22^f<<30^f<<19^f<<10)|0;// 60
w12=(w13>>>7^w13>>>18^w13>>>3^w13<<25^w13<<14)+(w10>>>17^w10>>>19^w10>>>10^w10<<15^w10<<13)+w12+w5|0;d=w12+d+(a>>>6^a>>>11^a>>>25^a<<26^a<<21^a<<7)+(c^a&(b^c))+0x90befffa|0;h=h+d|0;d=d+(e&f^g&(e^f))+(e>>>2^e>>>13^e>>>22^e<<30^e<<19^e<<10)|0;// 61
w13=(w14>>>7^w14>>>18^w14>>>3^w14<<25^w14<<14)+(w11>>>17^w11>>>19^w11>>>10^w11<<15^w11<<13)+w13+w6|0;c=w13+c+(h>>>6^h>>>11^h>>>25^h<<26^h<<21^h<<7)+(b^h&(a^b))+0xa4506ceb|0;g=g+c|0;c=c+(d&e^f&(d^e))+(d>>>2^d>>>13^d>>>22^d<<30^d<<19^d<<10)|0;// 62
w14=(w15>>>7^w15>>>18^w15>>>3^w15<<25^w15<<14)+(w12>>>17^w12>>>19^w12>>>10^w12<<15^w12<<13)+w14+w7|0;b=w14+b+(g>>>6^g>>>11^g>>>25^g<<26^g<<21^g<<7)+(a^g&(h^a))+0xbef9a3f7|0;f=f+b|0;b=b+(c&d^e&(c^d))+(c>>>2^c>>>13^c>>>22^c<<30^c<<19^c<<10)|0;// 63
w15=(w0>>>7^w0>>>18^w0>>>3^w0<<25^w0<<14)+(w13>>>17^w13>>>19^w13>>>10^w13<<15^w13<<13)+w15+w8|0;a=w15+a+(f>>>6^f>>>11^f>>>25^f<<26^f<<21^f<<7)+(h^f&(g^h))+0xc67178f2|0;e=e+a|0;a=a+(b&c^d&(b^c))+(b>>>2^b>>>13^b>>>22^b<<30^b<<19^b<<10)|0;H0=H0+a|0;H1=H1+b|0;H2=H2+c|0;H3=H3+d|0;H4=H4+e|0;H5=H5+f|0;H6=H6+g|0;H7=H7+h|0;}function _core_heap(offset){offset=offset|0;_core(HEAP[offset|0]<<24|HEAP[offset|1]<<16|HEAP[offset|2]<<8|HEAP[offset|3],HEAP[offset|4]<<24|HEAP[offset|5]<<16|HEAP[offset|6]<<8|HEAP[offset|7],HEAP[offset|8]<<24|HEAP[offset|9]<<16|HEAP[offset|10]<<8|HEAP[offset|11],HEAP[offset|12]<<24|HEAP[offset|13]<<16|HEAP[offset|14]<<8|HEAP[offset|15],HEAP[offset|16]<<24|HEAP[offset|17]<<16|HEAP[offset|18]<<8|HEAP[offset|19],HEAP[offset|20]<<24|HEAP[offset|21]<<16|HEAP[offset|22]<<8|HEAP[offset|23],HEAP[offset|24]<<24|HEAP[offset|25]<<16|HEAP[offset|26]<<8|HEAP[offset|27],HEAP[offset|28]<<24|HEAP[offset|29]<<16|HEAP[offset|30]<<8|HEAP[offset|31],HEAP[offset|32]<<24|HEAP[offset|33]<<16|HEAP[offset|34]<<8|HEAP[offset|35],HEAP[offset|36]<<24|HEAP[offset|37]<<16|HEAP[offset|38]<<8|HEAP[offset|39],HEAP[offset|40]<<24|HEAP[offset|41]<<16|HEAP[offset|42]<<8|HEAP[offset|43],HEAP[offset|44]<<24|HEAP[offset|45]<<16|HEAP[offset|46]<<8|HEAP[offset|47],HEAP[offset|48]<<24|HEAP[offset|49]<<16|HEAP[offset|50]<<8|HEAP[offset|51],HEAP[offset|52]<<24|HEAP[offset|53]<<16|HEAP[offset|54]<<8|HEAP[offset|55],HEAP[offset|56]<<24|HEAP[offset|57]<<16|HEAP[offset|58]<<8|HEAP[offset|59],HEAP[offset|60]<<24|HEAP[offset|61]<<16|HEAP[offset|62]<<8|HEAP[offset|63]);}// offset — multiple of 32
function _state_to_heap(output){output=output|0;HEAP[output|0]=H0>>>24;HEAP[output|1]=H0>>>16&255;HEAP[output|2]=H0>>>8&255;HEAP[output|3]=H0&255;HEAP[output|4]=H1>>>24;HEAP[output|5]=H1>>>16&255;HEAP[output|6]=H1>>>8&255;HEAP[output|7]=H1&255;HEAP[output|8]=H2>>>24;HEAP[output|9]=H2>>>16&255;HEAP[output|10]=H2>>>8&255;HEAP[output|11]=H2&255;HEAP[output|12]=H3>>>24;HEAP[output|13]=H3>>>16&255;HEAP[output|14]=H3>>>8&255;HEAP[output|15]=H3&255;HEAP[output|16]=H4>>>24;HEAP[output|17]=H4>>>16&255;HEAP[output|18]=H4>>>8&255;HEAP[output|19]=H4&255;HEAP[output|20]=H5>>>24;HEAP[output|21]=H5>>>16&255;HEAP[output|22]=H5>>>8&255;HEAP[output|23]=H5&255;HEAP[output|24]=H6>>>24;HEAP[output|25]=H6>>>16&255;HEAP[output|26]=H6>>>8&255;HEAP[output|27]=H6&255;HEAP[output|28]=H7>>>24;HEAP[output|29]=H7>>>16&255;HEAP[output|30]=H7>>>8&255;HEAP[output|31]=H7&255;}function reset(){H0=0x6a09e667;H1=0xbb67ae85;H2=0x3c6ef372;H3=0xa54ff53a;H4=0x510e527f;H5=0x9b05688c;H6=0x1f83d9ab;H7=0x5be0cd19;TOTAL0=TOTAL1=0;}function init(h0,h1,h2,h3,h4,h5,h6,h7,total0,total1){h0=h0|0;h1=h1|0;h2=h2|0;h3=h3|0;h4=h4|0;h5=h5|0;h6=h6|0;h7=h7|0;total0=total0|0;total1=total1|0;H0=h0;H1=h1;H2=h2;H3=h3;H4=h4;H5=h5;H6=h6;H7=h7;TOTAL0=total0;TOTAL1=total1;}// offset — multiple of 64
function process(offset,length){offset=offset|0;length=length|0;var hashed=0;if(offset&63)return-1;while((length|0)>=64){_core_heap(offset);offset=offset+64|0;length=length-64|0;hashed=hashed+64|0;}TOTAL0=TOTAL0+hashed|0;if(TOTAL0>>>0<hashed>>>0)TOTAL1=TOTAL1+1|0;return hashed|0;}// offset — multiple of 64
// output — multiple of 32
function finish(offset,length,output){offset=offset|0;length=length|0;output=output|0;var hashed=0,i=0;if(offset&63)return-1;if(~output)if(output&31)return-1;if((length|0)>=64){hashed=process(offset,length)|0;if((hashed|0)==-1)return-1;offset=offset+hashed|0;length=length-hashed|0;}hashed=hashed+length|0;TOTAL0=TOTAL0+length|0;if(TOTAL0>>>0<length>>>0)TOTAL1=TOTAL1+1|0;HEAP[offset|length]=0x80;if((length|0)>=56){for(i=length+1|0;(i|0)<64;i=i+1|0)HEAP[offset|i]=0x00;_core_heap(offset);length=0;HEAP[offset|0]=0;}for(i=length+1|0;(i|0)<59;i=i+1|0)HEAP[offset|i]=0;HEAP[offset|56]=TOTAL1>>>21&255;HEAP[offset|57]=TOTAL1>>>13&255;HEAP[offset|58]=TOTAL1>>>5&255;HEAP[offset|59]=TOTAL1<<3&255|TOTAL0>>>29;HEAP[offset|60]=TOTAL0>>>21&255;HEAP[offset|61]=TOTAL0>>>13&255;HEAP[offset|62]=TOTAL0>>>5&255;HEAP[offset|63]=TOTAL0<<3&255;_core_heap(offset);if(~output)_state_to_heap(output);return hashed|0;}function hmac_reset(){H0=I0;H1=I1;H2=I2;H3=I3;H4=I4;H5=I5;H6=I6;H7=I7;TOTAL0=64;TOTAL1=0;}function _hmac_opad(){H0=O0;H1=O1;H2=O2;H3=O3;H4=O4;H5=O5;H6=O6;H7=O7;TOTAL0=64;TOTAL1=0;}function hmac_init(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;p6=p6|0;p7=p7|0;p8=p8|0;p9=p9|0;p10=p10|0;p11=p11|0;p12=p12|0;p13=p13|0;p14=p14|0;p15=p15|0;// opad
reset();_core(p0^0x5c5c5c5c,p1^0x5c5c5c5c,p2^0x5c5c5c5c,p3^0x5c5c5c5c,p4^0x5c5c5c5c,p5^0x5c5c5c5c,p6^0x5c5c5c5c,p7^0x5c5c5c5c,p8^0x5c5c5c5c,p9^0x5c5c5c5c,p10^0x5c5c5c5c,p11^0x5c5c5c5c,p12^0x5c5c5c5c,p13^0x5c5c5c5c,p14^0x5c5c5c5c,p15^0x5c5c5c5c);O0=H0;O1=H1;O2=H2;O3=H3;O4=H4;O5=H5;O6=H6;O7=H7;// ipad
reset();_core(p0^0x36363636,p1^0x36363636,p2^0x36363636,p3^0x36363636,p4^0x36363636,p5^0x36363636,p6^0x36363636,p7^0x36363636,p8^0x36363636,p9^0x36363636,p10^0x36363636,p11^0x36363636,p12^0x36363636,p13^0x36363636,p14^0x36363636,p15^0x36363636);I0=H0;I1=H1;I2=H2;I3=H3;I4=H4;I5=H5;I6=H6;I7=H7;TOTAL0=64;TOTAL1=0;}// offset — multiple of 64
// output — multiple of 32
function hmac_finish(offset,length,output){offset=offset|0;length=length|0;output=output|0;var t0=0,t1=0,t2=0,t3=0,t4=0,t5=0,t6=0,t7=0,hashed=0;if(offset&63)return-1;if(~output)if(output&31)return-1;hashed=finish(offset,length,-1)|0;t0=H0,t1=H1,t2=H2,t3=H3,t4=H4,t5=H5,t6=H6,t7=H7;_hmac_opad();_core(t0,t1,t2,t3,t4,t5,t6,t7,0x80000000,0,0,0,0,0,0,768);if(~output)_state_to_heap(output);return hashed|0;}// salt is assumed to be already processed
// offset — multiple of 64
// output — multiple of 32
function pbkdf2_generate_block(offset,length,block,count,output){offset=offset|0;length=length|0;block=block|0;count=count|0;output=output|0;var h0=0,h1=0,h2=0,h3=0,h4=0,h5=0,h6=0,h7=0,t0=0,t1=0,t2=0,t3=0,t4=0,t5=0,t6=0,t7=0;if(offset&63)return-1;if(~output)if(output&31)return-1;// pad block number into heap
// FIXME probable OOB write
HEAP[offset+length|0]=block>>>24;HEAP[offset+length+1|0]=block>>>16&255;HEAP[offset+length+2|0]=block>>>8&255;HEAP[offset+length+3|0]=block&255;// finish first iteration
hmac_finish(offset,length+4|0,-1)|0;h0=t0=H0,h1=t1=H1,h2=t2=H2,h3=t3=H3,h4=t4=H4,h5=t5=H5,h6=t6=H6,h7=t7=H7;count=count-1|0;// perform the rest iterations
while((count|0)>0){hmac_reset();_core(t0,t1,t2,t3,t4,t5,t6,t7,0x80000000,0,0,0,0,0,0,768);t0=H0,t1=H1,t2=H2,t3=H3,t4=H4,t5=H5,t6=H6,t7=H7;_hmac_opad();_core(t0,t1,t2,t3,t4,t5,t6,t7,0x80000000,0,0,0,0,0,0,768);t0=H0,t1=H1,t2=H2,t3=H3,t4=H4,t5=H5,t6=H6,t7=H7;h0=h0^H0;h1=h1^H1;h2=h2^H2;h3=h3^H3;h4=h4^H4;h5=h5^H5;h6=h6^H6;h7=h7^H7;count=count-1|0;}H0=h0;H1=h1;H2=h2;H3=h3;H4=h4;H5=h5;H6=h6;H7=h7;if(~output)_state_to_heap(output);return 0;}return{// SHA256
reset:reset,init:init,process:process,finish:finish,// HMAC-SHA256
hmac_reset:hmac_reset,hmac_init:hmac_init,hmac_finish:hmac_finish,// PBKDF2-HMAC-SHA256
pbkdf2_generate_block:pbkdf2_generate_block};};var __extends$a=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var _sha256_block_size=64;var _sha256_hash_size=32;var Sha256=/** @class */function(_super){__extends$a(Sha256,_super);function Sha256(){var _this=_super.call(this)||this;_this.NAME='sha256';_this.BLOCK_SIZE=_sha256_block_size;_this.HASH_SIZE=_sha256_hash_size;_this.heap=_heap_init();_this.asm=sha256_asm({Uint8Array:Uint8Array},null,_this.heap.buffer);_this.reset();return _this;}Sha256.NAME='sha256';return Sha256;}(Hash);var sha512_asm=function(stdlib,foreign,buffer){"use asm";// SHA512 state
var H0h=0,H0l=0,H1h=0,H1l=0,H2h=0,H2l=0,H3h=0,H3l=0,H4h=0,H4l=0,H5h=0,H5l=0,H6h=0,H6l=0,H7h=0,H7l=0,TOTAL0=0,TOTAL1=0;// HMAC state
var I0h=0,I0l=0,I1h=0,I1l=0,I2h=0,I2l=0,I3h=0,I3l=0,I4h=0,I4l=0,I5h=0,I5l=0,I6h=0,I6l=0,I7h=0,I7l=0,O0h=0,O0l=0,O1h=0,O1l=0,O2h=0,O2l=0,O3h=0,O3l=0,O4h=0,O4l=0,O5h=0,O5l=0,O6h=0,O6l=0,O7h=0,O7l=0;// I/O buffer
var HEAP=new stdlib.Uint8Array(buffer);function _core(w0h,w0l,w1h,w1l,w2h,w2l,w3h,w3l,w4h,w4l,w5h,w5l,w6h,w6l,w7h,w7l,w8h,w8l,w9h,w9l,w10h,w10l,w11h,w11l,w12h,w12l,w13h,w13l,w14h,w14l,w15h,w15l){w0h=w0h|0;w0l=w0l|0;w1h=w1h|0;w1l=w1l|0;w2h=w2h|0;w2l=w2l|0;w3h=w3h|0;w3l=w3l|0;w4h=w4h|0;w4l=w4l|0;w5h=w5h|0;w5l=w5l|0;w6h=w6h|0;w6l=w6l|0;w7h=w7h|0;w7l=w7l|0;w8h=w8h|0;w8l=w8l|0;w9h=w9h|0;w9l=w9l|0;w10h=w10h|0;w10l=w10l|0;w11h=w11h|0;w11l=w11l|0;w12h=w12h|0;w12l=w12l|0;w13h=w13h|0;w13l=w13l|0;w14h=w14h|0;w14l=w14l|0;w15h=w15h|0;w15l=w15l|0;var ah=0,al=0,bh=0,bl=0,ch=0,cl=0,dh=0,dl=0,eh=0,el=0,fh=0,fl=0,gh=0,gl=0,hh=0,hl=0,th=0,tl=0,xl=0;ah=H0h;al=H0l;bh=H1h;bl=H1l;ch=H2h;cl=H2l;dh=H3h;dl=H3l;eh=H4h;el=H4l;fh=H5h;fl=H5l;gh=H6h;gl=H6l;hh=H7h;hl=H7l;// 0
tl=0xd728ae22+w0l|0;th=0x428a2f98+w0h+(tl>>>0<w0l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 1
tl=0x23ef65cd+w1l|0;th=0x71374491+w1h+(tl>>>0<w1l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 2
tl=0xec4d3b2f+w2l|0;th=0xb5c0fbcf+w2h+(tl>>>0<w2l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 3
tl=0x8189dbbc+w3l|0;th=0xe9b5dba5+w3h+(tl>>>0<w3l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 4
tl=0xf348b538+w4l|0;th=0x3956c25b+w4h+(tl>>>0<w4l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 5
tl=0xb605d019+w5l|0;th=0x59f111f1+w5h+(tl>>>0<w5l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 6
tl=0xaf194f9b+w6l|0;th=0x923f82a4+w6h+(tl>>>0<w6l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 7
tl=0xda6d8118+w7l|0;th=0xab1c5ed5+w7h+(tl>>>0<w7l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 8
tl=0xa3030242+w8l|0;th=0xd807aa98+w8h+(tl>>>0<w8l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 9
tl=0x45706fbe+w9l|0;th=0x12835b01+w9h+(tl>>>0<w9l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 10
tl=0x4ee4b28c+w10l|0;th=0x243185be+w10h+(tl>>>0<w10l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 11
tl=0xd5ffb4e2+w11l|0;th=0x550c7dc3+w11h+(tl>>>0<w11l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 12
tl=0xf27b896f+w12l|0;th=0x72be5d74+w12h+(tl>>>0<w12l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 13
tl=0x3b1696b1+w13l|0;th=0x80deb1fe+w13h+(tl>>>0<w13l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 14
tl=0x25c71235+w14l|0;th=0x9bdc06a7+w14h+(tl>>>0<w14l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 15
tl=0xcf692694+w15l|0;th=0xc19bf174+w15h+(tl>>>0<w15l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 16
w0l=w0l+w9l|0;w0h=w0h+w9h+(w0l>>>0<w9l>>>0?1:0)|0;xl=(w1l>>>1|w1h<<31)^(w1l>>>8|w1h<<24)^(w1l>>>7|w1h<<25)|0;w0l=w0l+xl|0;w0h=w0h+((w1h>>>1|w1l<<31)^(w1h>>>8|w1l<<24)^w1h>>>7)+(w0l>>>0<xl>>>0?1:0)|0;xl=(w14l>>>19|w14h<<13)^(w14l<<3|w14h>>>29)^(w14l>>>6|w14h<<26)|0;w0l=w0l+xl|0;w0h=w0h+((w14h>>>19|w14l<<13)^(w14h<<3|w14l>>>29)^w14h>>>6)+(w0l>>>0<xl>>>0?1:0)|0;tl=0x9ef14ad2+w0l|0;th=0xe49b69c1+w0h+(tl>>>0<w0l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 17
w1l=w1l+w10l|0;w1h=w1h+w10h+(w1l>>>0<w10l>>>0?1:0)|0;xl=(w2l>>>1|w2h<<31)^(w2l>>>8|w2h<<24)^(w2l>>>7|w2h<<25)|0;w1l=w1l+xl|0;w1h=w1h+((w2h>>>1|w2l<<31)^(w2h>>>8|w2l<<24)^w2h>>>7)+(w1l>>>0<xl>>>0?1:0)|0;xl=(w15l>>>19|w15h<<13)^(w15l<<3|w15h>>>29)^(w15l>>>6|w15h<<26)|0;w1l=w1l+xl|0;w1h=w1h+((w15h>>>19|w15l<<13)^(w15h<<3|w15l>>>29)^w15h>>>6)+(w1l>>>0<xl>>>0?1:0)|0;tl=0x384f25e3+w1l|0;th=0xefbe4786+w1h+(tl>>>0<w1l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 18
w2l=w2l+w11l|0;w2h=w2h+w11h+(w2l>>>0<w11l>>>0?1:0)|0;xl=(w3l>>>1|w3h<<31)^(w3l>>>8|w3h<<24)^(w3l>>>7|w3h<<25)|0;w2l=w2l+xl|0;w2h=w2h+((w3h>>>1|w3l<<31)^(w3h>>>8|w3l<<24)^w3h>>>7)+(w2l>>>0<xl>>>0?1:0)|0;xl=(w0l>>>19|w0h<<13)^(w0l<<3|w0h>>>29)^(w0l>>>6|w0h<<26)|0;w2l=w2l+xl|0;w2h=w2h+((w0h>>>19|w0l<<13)^(w0h<<3|w0l>>>29)^w0h>>>6)+(w2l>>>0<xl>>>0?1:0)|0;tl=0x8b8cd5b5+w2l|0;th=0xfc19dc6+w2h+(tl>>>0<w2l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 19
w3l=w3l+w12l|0;w3h=w3h+w12h+(w3l>>>0<w12l>>>0?1:0)|0;xl=(w4l>>>1|w4h<<31)^(w4l>>>8|w4h<<24)^(w4l>>>7|w4h<<25)|0;w3l=w3l+xl|0;w3h=w3h+((w4h>>>1|w4l<<31)^(w4h>>>8|w4l<<24)^w4h>>>7)+(w3l>>>0<xl>>>0?1:0)|0;xl=(w1l>>>19|w1h<<13)^(w1l<<3|w1h>>>29)^(w1l>>>6|w1h<<26)|0;w3l=w3l+xl|0;w3h=w3h+((w1h>>>19|w1l<<13)^(w1h<<3|w1l>>>29)^w1h>>>6)+(w3l>>>0<xl>>>0?1:0)|0;tl=0x77ac9c65+w3l|0;th=0x240ca1cc+w3h+(tl>>>0<w3l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 20
w4l=w4l+w13l|0;w4h=w4h+w13h+(w4l>>>0<w13l>>>0?1:0)|0;xl=(w5l>>>1|w5h<<31)^(w5l>>>8|w5h<<24)^(w5l>>>7|w5h<<25)|0;w4l=w4l+xl|0;w4h=w4h+((w5h>>>1|w5l<<31)^(w5h>>>8|w5l<<24)^w5h>>>7)+(w4l>>>0<xl>>>0?1:0)|0;xl=(w2l>>>19|w2h<<13)^(w2l<<3|w2h>>>29)^(w2l>>>6|w2h<<26)|0;w4l=w4l+xl|0;w4h=w4h+((w2h>>>19|w2l<<13)^(w2h<<3|w2l>>>29)^w2h>>>6)+(w4l>>>0<xl>>>0?1:0)|0;tl=0x592b0275+w4l|0;th=0x2de92c6f+w4h+(tl>>>0<w4l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 21
w5l=w5l+w14l|0;w5h=w5h+w14h+(w5l>>>0<w14l>>>0?1:0)|0;xl=(w6l>>>1|w6h<<31)^(w6l>>>8|w6h<<24)^(w6l>>>7|w6h<<25)|0;w5l=w5l+xl|0;w5h=w5h+((w6h>>>1|w6l<<31)^(w6h>>>8|w6l<<24)^w6h>>>7)+(w5l>>>0<xl>>>0?1:0)|0;xl=(w3l>>>19|w3h<<13)^(w3l<<3|w3h>>>29)^(w3l>>>6|w3h<<26)|0;w5l=w5l+xl|0;w5h=w5h+((w3h>>>19|w3l<<13)^(w3h<<3|w3l>>>29)^w3h>>>6)+(w5l>>>0<xl>>>0?1:0)|0;tl=0x6ea6e483+w5l|0;th=0x4a7484aa+w5h+(tl>>>0<w5l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 22
w6l=w6l+w15l|0;w6h=w6h+w15h+(w6l>>>0<w15l>>>0?1:0)|0;xl=(w7l>>>1|w7h<<31)^(w7l>>>8|w7h<<24)^(w7l>>>7|w7h<<25)|0;w6l=w6l+xl|0;w6h=w6h+((w7h>>>1|w7l<<31)^(w7h>>>8|w7l<<24)^w7h>>>7)+(w6l>>>0<xl>>>0?1:0)|0;xl=(w4l>>>19|w4h<<13)^(w4l<<3|w4h>>>29)^(w4l>>>6|w4h<<26)|0;w6l=w6l+xl|0;w6h=w6h+((w4h>>>19|w4l<<13)^(w4h<<3|w4l>>>29)^w4h>>>6)+(w6l>>>0<xl>>>0?1:0)|0;tl=0xbd41fbd4+w6l|0;th=0x5cb0a9dc+w6h+(tl>>>0<w6l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 23
w7l=w7l+w0l|0;w7h=w7h+w0h+(w7l>>>0<w0l>>>0?1:0)|0;xl=(w8l>>>1|w8h<<31)^(w8l>>>8|w8h<<24)^(w8l>>>7|w8h<<25)|0;w7l=w7l+xl|0;w7h=w7h+((w8h>>>1|w8l<<31)^(w8h>>>8|w8l<<24)^w8h>>>7)+(w7l>>>0<xl>>>0?1:0)|0;xl=(w5l>>>19|w5h<<13)^(w5l<<3|w5h>>>29)^(w5l>>>6|w5h<<26)|0;w7l=w7l+xl|0;w7h=w7h+((w5h>>>19|w5l<<13)^(w5h<<3|w5l>>>29)^w5h>>>6)+(w7l>>>0<xl>>>0?1:0)|0;tl=0x831153b5+w7l|0;th=0x76f988da+w7h+(tl>>>0<w7l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 24
w8l=w8l+w1l|0;w8h=w8h+w1h+(w8l>>>0<w1l>>>0?1:0)|0;xl=(w9l>>>1|w9h<<31)^(w9l>>>8|w9h<<24)^(w9l>>>7|w9h<<25)|0;w8l=w8l+xl|0;w8h=w8h+((w9h>>>1|w9l<<31)^(w9h>>>8|w9l<<24)^w9h>>>7)+(w8l>>>0<xl>>>0?1:0)|0;xl=(w6l>>>19|w6h<<13)^(w6l<<3|w6h>>>29)^(w6l>>>6|w6h<<26)|0;w8l=w8l+xl|0;w8h=w8h+((w6h>>>19|w6l<<13)^(w6h<<3|w6l>>>29)^w6h>>>6)+(w8l>>>0<xl>>>0?1:0)|0;tl=0xee66dfab+w8l|0;th=0x983e5152+w8h+(tl>>>0<w8l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 25
w9l=w9l+w2l|0;w9h=w9h+w2h+(w9l>>>0<w2l>>>0?1:0)|0;xl=(w10l>>>1|w10h<<31)^(w10l>>>8|w10h<<24)^(w10l>>>7|w10h<<25)|0;w9l=w9l+xl|0;w9h=w9h+((w10h>>>1|w10l<<31)^(w10h>>>8|w10l<<24)^w10h>>>7)+(w9l>>>0<xl>>>0?1:0)|0;xl=(w7l>>>19|w7h<<13)^(w7l<<3|w7h>>>29)^(w7l>>>6|w7h<<26)|0;w9l=w9l+xl|0;w9h=w9h+((w7h>>>19|w7l<<13)^(w7h<<3|w7l>>>29)^w7h>>>6)+(w9l>>>0<xl>>>0?1:0)|0;tl=0x2db43210+w9l|0;th=0xa831c66d+w9h+(tl>>>0<w9l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 26
w10l=w10l+w3l|0;w10h=w10h+w3h+(w10l>>>0<w3l>>>0?1:0)|0;xl=(w11l>>>1|w11h<<31)^(w11l>>>8|w11h<<24)^(w11l>>>7|w11h<<25)|0;w10l=w10l+xl|0;w10h=w10h+((w11h>>>1|w11l<<31)^(w11h>>>8|w11l<<24)^w11h>>>7)+(w10l>>>0<xl>>>0?1:0)|0;xl=(w8l>>>19|w8h<<13)^(w8l<<3|w8h>>>29)^(w8l>>>6|w8h<<26)|0;w10l=w10l+xl|0;w10h=w10h+((w8h>>>19|w8l<<13)^(w8h<<3|w8l>>>29)^w8h>>>6)+(w10l>>>0<xl>>>0?1:0)|0;tl=0x98fb213f+w10l|0;th=0xb00327c8+w10h+(tl>>>0<w10l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 27
w11l=w11l+w4l|0;w11h=w11h+w4h+(w11l>>>0<w4l>>>0?1:0)|0;xl=(w12l>>>1|w12h<<31)^(w12l>>>8|w12h<<24)^(w12l>>>7|w12h<<25)|0;w11l=w11l+xl|0;w11h=w11h+((w12h>>>1|w12l<<31)^(w12h>>>8|w12l<<24)^w12h>>>7)+(w11l>>>0<xl>>>0?1:0)|0;xl=(w9l>>>19|w9h<<13)^(w9l<<3|w9h>>>29)^(w9l>>>6|w9h<<26)|0;w11l=w11l+xl|0;w11h=w11h+((w9h>>>19|w9l<<13)^(w9h<<3|w9l>>>29)^w9h>>>6)+(w11l>>>0<xl>>>0?1:0)|0;tl=0xbeef0ee4+w11l|0;th=0xbf597fc7+w11h+(tl>>>0<w11l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 28
w12l=w12l+w5l|0;w12h=w12h+w5h+(w12l>>>0<w5l>>>0?1:0)|0;xl=(w13l>>>1|w13h<<31)^(w13l>>>8|w13h<<24)^(w13l>>>7|w13h<<25)|0;w12l=w12l+xl|0;w12h=w12h+((w13h>>>1|w13l<<31)^(w13h>>>8|w13l<<24)^w13h>>>7)+(w12l>>>0<xl>>>0?1:0)|0;xl=(w10l>>>19|w10h<<13)^(w10l<<3|w10h>>>29)^(w10l>>>6|w10h<<26)|0;w12l=w12l+xl|0;w12h=w12h+((w10h>>>19|w10l<<13)^(w10h<<3|w10l>>>29)^w10h>>>6)+(w12l>>>0<xl>>>0?1:0)|0;tl=0x3da88fc2+w12l|0;th=0xc6e00bf3+w12h+(tl>>>0<w12l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 29
w13l=w13l+w6l|0;w13h=w13h+w6h+(w13l>>>0<w6l>>>0?1:0)|0;xl=(w14l>>>1|w14h<<31)^(w14l>>>8|w14h<<24)^(w14l>>>7|w14h<<25)|0;w13l=w13l+xl|0;w13h=w13h+((w14h>>>1|w14l<<31)^(w14h>>>8|w14l<<24)^w14h>>>7)+(w13l>>>0<xl>>>0?1:0)|0;xl=(w11l>>>19|w11h<<13)^(w11l<<3|w11h>>>29)^(w11l>>>6|w11h<<26)|0;w13l=w13l+xl|0;w13h=w13h+((w11h>>>19|w11l<<13)^(w11h<<3|w11l>>>29)^w11h>>>6)+(w13l>>>0<xl>>>0?1:0)|0;tl=0x930aa725+w13l|0;th=0xd5a79147+w13h+(tl>>>0<w13l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 30
w14l=w14l+w7l|0;w14h=w14h+w7h+(w14l>>>0<w7l>>>0?1:0)|0;xl=(w15l>>>1|w15h<<31)^(w15l>>>8|w15h<<24)^(w15l>>>7|w15h<<25)|0;w14l=w14l+xl|0;w14h=w14h+((w15h>>>1|w15l<<31)^(w15h>>>8|w15l<<24)^w15h>>>7)+(w14l>>>0<xl>>>0?1:0)|0;xl=(w12l>>>19|w12h<<13)^(w12l<<3|w12h>>>29)^(w12l>>>6|w12h<<26)|0;w14l=w14l+xl|0;w14h=w14h+((w12h>>>19|w12l<<13)^(w12h<<3|w12l>>>29)^w12h>>>6)+(w14l>>>0<xl>>>0?1:0)|0;tl=0xe003826f+w14l|0;th=0x6ca6351+w14h+(tl>>>0<w14l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 31
w15l=w15l+w8l|0;w15h=w15h+w8h+(w15l>>>0<w8l>>>0?1:0)|0;xl=(w0l>>>1|w0h<<31)^(w0l>>>8|w0h<<24)^(w0l>>>7|w0h<<25)|0;w15l=w15l+xl|0;w15h=w15h+((w0h>>>1|w0l<<31)^(w0h>>>8|w0l<<24)^w0h>>>7)+(w15l>>>0<xl>>>0?1:0)|0;xl=(w13l>>>19|w13h<<13)^(w13l<<3|w13h>>>29)^(w13l>>>6|w13h<<26)|0;w15l=w15l+xl|0;w15h=w15h+((w13h>>>19|w13l<<13)^(w13h<<3|w13l>>>29)^w13h>>>6)+(w15l>>>0<xl>>>0?1:0)|0;tl=0xa0e6e70+w15l|0;th=0x14292967+w15h+(tl>>>0<w15l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 32
w0l=w0l+w9l|0;w0h=w0h+w9h+(w0l>>>0<w9l>>>0?1:0)|0;xl=(w1l>>>1|w1h<<31)^(w1l>>>8|w1h<<24)^(w1l>>>7|w1h<<25)|0;w0l=w0l+xl|0;w0h=w0h+((w1h>>>1|w1l<<31)^(w1h>>>8|w1l<<24)^w1h>>>7)+(w0l>>>0<xl>>>0?1:0)|0;xl=(w14l>>>19|w14h<<13)^(w14l<<3|w14h>>>29)^(w14l>>>6|w14h<<26)|0;w0l=w0l+xl|0;w0h=w0h+((w14h>>>19|w14l<<13)^(w14h<<3|w14l>>>29)^w14h>>>6)+(w0l>>>0<xl>>>0?1:0)|0;tl=0x46d22ffc+w0l|0;th=0x27b70a85+w0h+(tl>>>0<w0l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 33
w1l=w1l+w10l|0;w1h=w1h+w10h+(w1l>>>0<w10l>>>0?1:0)|0;xl=(w2l>>>1|w2h<<31)^(w2l>>>8|w2h<<24)^(w2l>>>7|w2h<<25)|0;w1l=w1l+xl|0;w1h=w1h+((w2h>>>1|w2l<<31)^(w2h>>>8|w2l<<24)^w2h>>>7)+(w1l>>>0<xl>>>0?1:0)|0;xl=(w15l>>>19|w15h<<13)^(w15l<<3|w15h>>>29)^(w15l>>>6|w15h<<26)|0;w1l=w1l+xl|0;w1h=w1h+((w15h>>>19|w15l<<13)^(w15h<<3|w15l>>>29)^w15h>>>6)+(w1l>>>0<xl>>>0?1:0)|0;tl=0x5c26c926+w1l|0;th=0x2e1b2138+w1h+(tl>>>0<w1l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 34
w2l=w2l+w11l|0;w2h=w2h+w11h+(w2l>>>0<w11l>>>0?1:0)|0;xl=(w3l>>>1|w3h<<31)^(w3l>>>8|w3h<<24)^(w3l>>>7|w3h<<25)|0;w2l=w2l+xl|0;w2h=w2h+((w3h>>>1|w3l<<31)^(w3h>>>8|w3l<<24)^w3h>>>7)+(w2l>>>0<xl>>>0?1:0)|0;xl=(w0l>>>19|w0h<<13)^(w0l<<3|w0h>>>29)^(w0l>>>6|w0h<<26)|0;w2l=w2l+xl|0;w2h=w2h+((w0h>>>19|w0l<<13)^(w0h<<3|w0l>>>29)^w0h>>>6)+(w2l>>>0<xl>>>0?1:0)|0;tl=0x5ac42aed+w2l|0;th=0x4d2c6dfc+w2h+(tl>>>0<w2l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 35
w3l=w3l+w12l|0;w3h=w3h+w12h+(w3l>>>0<w12l>>>0?1:0)|0;xl=(w4l>>>1|w4h<<31)^(w4l>>>8|w4h<<24)^(w4l>>>7|w4h<<25)|0;w3l=w3l+xl|0;w3h=w3h+((w4h>>>1|w4l<<31)^(w4h>>>8|w4l<<24)^w4h>>>7)+(w3l>>>0<xl>>>0?1:0)|0;xl=(w1l>>>19|w1h<<13)^(w1l<<3|w1h>>>29)^(w1l>>>6|w1h<<26)|0;w3l=w3l+xl|0;w3h=w3h+((w1h>>>19|w1l<<13)^(w1h<<3|w1l>>>29)^w1h>>>6)+(w3l>>>0<xl>>>0?1:0)|0;tl=0x9d95b3df+w3l|0;th=0x53380d13+w3h+(tl>>>0<w3l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 36
w4l=w4l+w13l|0;w4h=w4h+w13h+(w4l>>>0<w13l>>>0?1:0)|0;xl=(w5l>>>1|w5h<<31)^(w5l>>>8|w5h<<24)^(w5l>>>7|w5h<<25)|0;w4l=w4l+xl|0;w4h=w4h+((w5h>>>1|w5l<<31)^(w5h>>>8|w5l<<24)^w5h>>>7)+(w4l>>>0<xl>>>0?1:0)|0;xl=(w2l>>>19|w2h<<13)^(w2l<<3|w2h>>>29)^(w2l>>>6|w2h<<26)|0;w4l=w4l+xl|0;w4h=w4h+((w2h>>>19|w2l<<13)^(w2h<<3|w2l>>>29)^w2h>>>6)+(w4l>>>0<xl>>>0?1:0)|0;tl=0x8baf63de+w4l|0;th=0x650a7354+w4h+(tl>>>0<w4l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 37
w5l=w5l+w14l|0;w5h=w5h+w14h+(w5l>>>0<w14l>>>0?1:0)|0;xl=(w6l>>>1|w6h<<31)^(w6l>>>8|w6h<<24)^(w6l>>>7|w6h<<25)|0;w5l=w5l+xl|0;w5h=w5h+((w6h>>>1|w6l<<31)^(w6h>>>8|w6l<<24)^w6h>>>7)+(w5l>>>0<xl>>>0?1:0)|0;xl=(w3l>>>19|w3h<<13)^(w3l<<3|w3h>>>29)^(w3l>>>6|w3h<<26)|0;w5l=w5l+xl|0;w5h=w5h+((w3h>>>19|w3l<<13)^(w3h<<3|w3l>>>29)^w3h>>>6)+(w5l>>>0<xl>>>0?1:0)|0;tl=0x3c77b2a8+w5l|0;th=0x766a0abb+w5h+(tl>>>0<w5l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 38
w6l=w6l+w15l|0;w6h=w6h+w15h+(w6l>>>0<w15l>>>0?1:0)|0;xl=(w7l>>>1|w7h<<31)^(w7l>>>8|w7h<<24)^(w7l>>>7|w7h<<25)|0;w6l=w6l+xl|0;w6h=w6h+((w7h>>>1|w7l<<31)^(w7h>>>8|w7l<<24)^w7h>>>7)+(w6l>>>0<xl>>>0?1:0)|0;xl=(w4l>>>19|w4h<<13)^(w4l<<3|w4h>>>29)^(w4l>>>6|w4h<<26)|0;w6l=w6l+xl|0;w6h=w6h+((w4h>>>19|w4l<<13)^(w4h<<3|w4l>>>29)^w4h>>>6)+(w6l>>>0<xl>>>0?1:0)|0;tl=0x47edaee6+w6l|0;th=0x81c2c92e+w6h+(tl>>>0<w6l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 39
w7l=w7l+w0l|0;w7h=w7h+w0h+(w7l>>>0<w0l>>>0?1:0)|0;xl=(w8l>>>1|w8h<<31)^(w8l>>>8|w8h<<24)^(w8l>>>7|w8h<<25)|0;w7l=w7l+xl|0;w7h=w7h+((w8h>>>1|w8l<<31)^(w8h>>>8|w8l<<24)^w8h>>>7)+(w7l>>>0<xl>>>0?1:0)|0;xl=(w5l>>>19|w5h<<13)^(w5l<<3|w5h>>>29)^(w5l>>>6|w5h<<26)|0;w7l=w7l+xl|0;w7h=w7h+((w5h>>>19|w5l<<13)^(w5h<<3|w5l>>>29)^w5h>>>6)+(w7l>>>0<xl>>>0?1:0)|0;tl=0x1482353b+w7l|0;th=0x92722c85+w7h+(tl>>>0<w7l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 40
w8l=w8l+w1l|0;w8h=w8h+w1h+(w8l>>>0<w1l>>>0?1:0)|0;xl=(w9l>>>1|w9h<<31)^(w9l>>>8|w9h<<24)^(w9l>>>7|w9h<<25)|0;w8l=w8l+xl|0;w8h=w8h+((w9h>>>1|w9l<<31)^(w9h>>>8|w9l<<24)^w9h>>>7)+(w8l>>>0<xl>>>0?1:0)|0;xl=(w6l>>>19|w6h<<13)^(w6l<<3|w6h>>>29)^(w6l>>>6|w6h<<26)|0;w8l=w8l+xl|0;w8h=w8h+((w6h>>>19|w6l<<13)^(w6h<<3|w6l>>>29)^w6h>>>6)+(w8l>>>0<xl>>>0?1:0)|0;tl=0x4cf10364+w8l|0;th=0xa2bfe8a1+w8h+(tl>>>0<w8l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 41
w9l=w9l+w2l|0;w9h=w9h+w2h+(w9l>>>0<w2l>>>0?1:0)|0;xl=(w10l>>>1|w10h<<31)^(w10l>>>8|w10h<<24)^(w10l>>>7|w10h<<25)|0;w9l=w9l+xl|0;w9h=w9h+((w10h>>>1|w10l<<31)^(w10h>>>8|w10l<<24)^w10h>>>7)+(w9l>>>0<xl>>>0?1:0)|0;xl=(w7l>>>19|w7h<<13)^(w7l<<3|w7h>>>29)^(w7l>>>6|w7h<<26)|0;w9l=w9l+xl|0;w9h=w9h+((w7h>>>19|w7l<<13)^(w7h<<3|w7l>>>29)^w7h>>>6)+(w9l>>>0<xl>>>0?1:0)|0;tl=0xbc423001+w9l|0;th=0xa81a664b+w9h+(tl>>>0<w9l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 42
w10l=w10l+w3l|0;w10h=w10h+w3h+(w10l>>>0<w3l>>>0?1:0)|0;xl=(w11l>>>1|w11h<<31)^(w11l>>>8|w11h<<24)^(w11l>>>7|w11h<<25)|0;w10l=w10l+xl|0;w10h=w10h+((w11h>>>1|w11l<<31)^(w11h>>>8|w11l<<24)^w11h>>>7)+(w10l>>>0<xl>>>0?1:0)|0;xl=(w8l>>>19|w8h<<13)^(w8l<<3|w8h>>>29)^(w8l>>>6|w8h<<26)|0;w10l=w10l+xl|0;w10h=w10h+((w8h>>>19|w8l<<13)^(w8h<<3|w8l>>>29)^w8h>>>6)+(w10l>>>0<xl>>>0?1:0)|0;tl=0xd0f89791+w10l|0;th=0xc24b8b70+w10h+(tl>>>0<w10l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 43
w11l=w11l+w4l|0;w11h=w11h+w4h+(w11l>>>0<w4l>>>0?1:0)|0;xl=(w12l>>>1|w12h<<31)^(w12l>>>8|w12h<<24)^(w12l>>>7|w12h<<25)|0;w11l=w11l+xl|0;w11h=w11h+((w12h>>>1|w12l<<31)^(w12h>>>8|w12l<<24)^w12h>>>7)+(w11l>>>0<xl>>>0?1:0)|0;xl=(w9l>>>19|w9h<<13)^(w9l<<3|w9h>>>29)^(w9l>>>6|w9h<<26)|0;w11l=w11l+xl|0;w11h=w11h+((w9h>>>19|w9l<<13)^(w9h<<3|w9l>>>29)^w9h>>>6)+(w11l>>>0<xl>>>0?1:0)|0;tl=0x654be30+w11l|0;th=0xc76c51a3+w11h+(tl>>>0<w11l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 44
w12l=w12l+w5l|0;w12h=w12h+w5h+(w12l>>>0<w5l>>>0?1:0)|0;xl=(w13l>>>1|w13h<<31)^(w13l>>>8|w13h<<24)^(w13l>>>7|w13h<<25)|0;w12l=w12l+xl|0;w12h=w12h+((w13h>>>1|w13l<<31)^(w13h>>>8|w13l<<24)^w13h>>>7)+(w12l>>>0<xl>>>0?1:0)|0;xl=(w10l>>>19|w10h<<13)^(w10l<<3|w10h>>>29)^(w10l>>>6|w10h<<26)|0;w12l=w12l+xl|0;w12h=w12h+((w10h>>>19|w10l<<13)^(w10h<<3|w10l>>>29)^w10h>>>6)+(w12l>>>0<xl>>>0?1:0)|0;tl=0xd6ef5218+w12l|0;th=0xd192e819+w12h+(tl>>>0<w12l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 45
w13l=w13l+w6l|0;w13h=w13h+w6h+(w13l>>>0<w6l>>>0?1:0)|0;xl=(w14l>>>1|w14h<<31)^(w14l>>>8|w14h<<24)^(w14l>>>7|w14h<<25)|0;w13l=w13l+xl|0;w13h=w13h+((w14h>>>1|w14l<<31)^(w14h>>>8|w14l<<24)^w14h>>>7)+(w13l>>>0<xl>>>0?1:0)|0;xl=(w11l>>>19|w11h<<13)^(w11l<<3|w11h>>>29)^(w11l>>>6|w11h<<26)|0;w13l=w13l+xl|0;w13h=w13h+((w11h>>>19|w11l<<13)^(w11h<<3|w11l>>>29)^w11h>>>6)+(w13l>>>0<xl>>>0?1:0)|0;tl=0x5565a910+w13l|0;th=0xd6990624+w13h+(tl>>>0<w13l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 46
w14l=w14l+w7l|0;w14h=w14h+w7h+(w14l>>>0<w7l>>>0?1:0)|0;xl=(w15l>>>1|w15h<<31)^(w15l>>>8|w15h<<24)^(w15l>>>7|w15h<<25)|0;w14l=w14l+xl|0;w14h=w14h+((w15h>>>1|w15l<<31)^(w15h>>>8|w15l<<24)^w15h>>>7)+(w14l>>>0<xl>>>0?1:0)|0;xl=(w12l>>>19|w12h<<13)^(w12l<<3|w12h>>>29)^(w12l>>>6|w12h<<26)|0;w14l=w14l+xl|0;w14h=w14h+((w12h>>>19|w12l<<13)^(w12h<<3|w12l>>>29)^w12h>>>6)+(w14l>>>0<xl>>>0?1:0)|0;tl=0x5771202a+w14l|0;th=0xf40e3585+w14h+(tl>>>0<w14l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 47
w15l=w15l+w8l|0;w15h=w15h+w8h+(w15l>>>0<w8l>>>0?1:0)|0;xl=(w0l>>>1|w0h<<31)^(w0l>>>8|w0h<<24)^(w0l>>>7|w0h<<25)|0;w15l=w15l+xl|0;w15h=w15h+((w0h>>>1|w0l<<31)^(w0h>>>8|w0l<<24)^w0h>>>7)+(w15l>>>0<xl>>>0?1:0)|0;xl=(w13l>>>19|w13h<<13)^(w13l<<3|w13h>>>29)^(w13l>>>6|w13h<<26)|0;w15l=w15l+xl|0;w15h=w15h+((w13h>>>19|w13l<<13)^(w13h<<3|w13l>>>29)^w13h>>>6)+(w15l>>>0<xl>>>0?1:0)|0;tl=0x32bbd1b8+w15l|0;th=0x106aa070+w15h+(tl>>>0<w15l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 48
w0l=w0l+w9l|0;w0h=w0h+w9h+(w0l>>>0<w9l>>>0?1:0)|0;xl=(w1l>>>1|w1h<<31)^(w1l>>>8|w1h<<24)^(w1l>>>7|w1h<<25)|0;w0l=w0l+xl|0;w0h=w0h+((w1h>>>1|w1l<<31)^(w1h>>>8|w1l<<24)^w1h>>>7)+(w0l>>>0<xl>>>0?1:0)|0;xl=(w14l>>>19|w14h<<13)^(w14l<<3|w14h>>>29)^(w14l>>>6|w14h<<26)|0;w0l=w0l+xl|0;w0h=w0h+((w14h>>>19|w14l<<13)^(w14h<<3|w14l>>>29)^w14h>>>6)+(w0l>>>0<xl>>>0?1:0)|0;tl=0xb8d2d0c8+w0l|0;th=0x19a4c116+w0h+(tl>>>0<w0l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 49
w1l=w1l+w10l|0;w1h=w1h+w10h+(w1l>>>0<w10l>>>0?1:0)|0;xl=(w2l>>>1|w2h<<31)^(w2l>>>8|w2h<<24)^(w2l>>>7|w2h<<25)|0;w1l=w1l+xl|0;w1h=w1h+((w2h>>>1|w2l<<31)^(w2h>>>8|w2l<<24)^w2h>>>7)+(w1l>>>0<xl>>>0?1:0)|0;xl=(w15l>>>19|w15h<<13)^(w15l<<3|w15h>>>29)^(w15l>>>6|w15h<<26)|0;w1l=w1l+xl|0;w1h=w1h+((w15h>>>19|w15l<<13)^(w15h<<3|w15l>>>29)^w15h>>>6)+(w1l>>>0<xl>>>0?1:0)|0;tl=0x5141ab53+w1l|0;th=0x1e376c08+w1h+(tl>>>0<w1l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 50
w2l=w2l+w11l|0;w2h=w2h+w11h+(w2l>>>0<w11l>>>0?1:0)|0;xl=(w3l>>>1|w3h<<31)^(w3l>>>8|w3h<<24)^(w3l>>>7|w3h<<25)|0;w2l=w2l+xl|0;w2h=w2h+((w3h>>>1|w3l<<31)^(w3h>>>8|w3l<<24)^w3h>>>7)+(w2l>>>0<xl>>>0?1:0)|0;xl=(w0l>>>19|w0h<<13)^(w0l<<3|w0h>>>29)^(w0l>>>6|w0h<<26)|0;w2l=w2l+xl|0;w2h=w2h+((w0h>>>19|w0l<<13)^(w0h<<3|w0l>>>29)^w0h>>>6)+(w2l>>>0<xl>>>0?1:0)|0;tl=0xdf8eeb99+w2l|0;th=0x2748774c+w2h+(tl>>>0<w2l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 51
w3l=w3l+w12l|0;w3h=w3h+w12h+(w3l>>>0<w12l>>>0?1:0)|0;xl=(w4l>>>1|w4h<<31)^(w4l>>>8|w4h<<24)^(w4l>>>7|w4h<<25)|0;w3l=w3l+xl|0;w3h=w3h+((w4h>>>1|w4l<<31)^(w4h>>>8|w4l<<24)^w4h>>>7)+(w3l>>>0<xl>>>0?1:0)|0;xl=(w1l>>>19|w1h<<13)^(w1l<<3|w1h>>>29)^(w1l>>>6|w1h<<26)|0;w3l=w3l+xl|0;w3h=w3h+((w1h>>>19|w1l<<13)^(w1h<<3|w1l>>>29)^w1h>>>6)+(w3l>>>0<xl>>>0?1:0)|0;tl=0xe19b48a8+w3l|0;th=0x34b0bcb5+w3h+(tl>>>0<w3l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 52
w4l=w4l+w13l|0;w4h=w4h+w13h+(w4l>>>0<w13l>>>0?1:0)|0;xl=(w5l>>>1|w5h<<31)^(w5l>>>8|w5h<<24)^(w5l>>>7|w5h<<25)|0;w4l=w4l+xl|0;w4h=w4h+((w5h>>>1|w5l<<31)^(w5h>>>8|w5l<<24)^w5h>>>7)+(w4l>>>0<xl>>>0?1:0)|0;xl=(w2l>>>19|w2h<<13)^(w2l<<3|w2h>>>29)^(w2l>>>6|w2h<<26)|0;w4l=w4l+xl|0;w4h=w4h+((w2h>>>19|w2l<<13)^(w2h<<3|w2l>>>29)^w2h>>>6)+(w4l>>>0<xl>>>0?1:0)|0;tl=0xc5c95a63+w4l|0;th=0x391c0cb3+w4h+(tl>>>0<w4l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 53
w5l=w5l+w14l|0;w5h=w5h+w14h+(w5l>>>0<w14l>>>0?1:0)|0;xl=(w6l>>>1|w6h<<31)^(w6l>>>8|w6h<<24)^(w6l>>>7|w6h<<25)|0;w5l=w5l+xl|0;w5h=w5h+((w6h>>>1|w6l<<31)^(w6h>>>8|w6l<<24)^w6h>>>7)+(w5l>>>0<xl>>>0?1:0)|0;xl=(w3l>>>19|w3h<<13)^(w3l<<3|w3h>>>29)^(w3l>>>6|w3h<<26)|0;w5l=w5l+xl|0;w5h=w5h+((w3h>>>19|w3l<<13)^(w3h<<3|w3l>>>29)^w3h>>>6)+(w5l>>>0<xl>>>0?1:0)|0;tl=0xe3418acb+w5l|0;th=0x4ed8aa4a+w5h+(tl>>>0<w5l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 54
w6l=w6l+w15l|0;w6h=w6h+w15h+(w6l>>>0<w15l>>>0?1:0)|0;xl=(w7l>>>1|w7h<<31)^(w7l>>>8|w7h<<24)^(w7l>>>7|w7h<<25)|0;w6l=w6l+xl|0;w6h=w6h+((w7h>>>1|w7l<<31)^(w7h>>>8|w7l<<24)^w7h>>>7)+(w6l>>>0<xl>>>0?1:0)|0;xl=(w4l>>>19|w4h<<13)^(w4l<<3|w4h>>>29)^(w4l>>>6|w4h<<26)|0;w6l=w6l+xl|0;w6h=w6h+((w4h>>>19|w4l<<13)^(w4h<<3|w4l>>>29)^w4h>>>6)+(w6l>>>0<xl>>>0?1:0)|0;tl=0x7763e373+w6l|0;th=0x5b9cca4f+w6h+(tl>>>0<w6l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 55
w7l=w7l+w0l|0;w7h=w7h+w0h+(w7l>>>0<w0l>>>0?1:0)|0;xl=(w8l>>>1|w8h<<31)^(w8l>>>8|w8h<<24)^(w8l>>>7|w8h<<25)|0;w7l=w7l+xl|0;w7h=w7h+((w8h>>>1|w8l<<31)^(w8h>>>8|w8l<<24)^w8h>>>7)+(w7l>>>0<xl>>>0?1:0)|0;xl=(w5l>>>19|w5h<<13)^(w5l<<3|w5h>>>29)^(w5l>>>6|w5h<<26)|0;w7l=w7l+xl|0;w7h=w7h+((w5h>>>19|w5l<<13)^(w5h<<3|w5l>>>29)^w5h>>>6)+(w7l>>>0<xl>>>0?1:0)|0;tl=0xd6b2b8a3+w7l|0;th=0x682e6ff3+w7h+(tl>>>0<w7l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 56
w8l=w8l+w1l|0;w8h=w8h+w1h+(w8l>>>0<w1l>>>0?1:0)|0;xl=(w9l>>>1|w9h<<31)^(w9l>>>8|w9h<<24)^(w9l>>>7|w9h<<25)|0;w8l=w8l+xl|0;w8h=w8h+((w9h>>>1|w9l<<31)^(w9h>>>8|w9l<<24)^w9h>>>7)+(w8l>>>0<xl>>>0?1:0)|0;xl=(w6l>>>19|w6h<<13)^(w6l<<3|w6h>>>29)^(w6l>>>6|w6h<<26)|0;w8l=w8l+xl|0;w8h=w8h+((w6h>>>19|w6l<<13)^(w6h<<3|w6l>>>29)^w6h>>>6)+(w8l>>>0<xl>>>0?1:0)|0;tl=0x5defb2fc+w8l|0;th=0x748f82ee+w8h+(tl>>>0<w8l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 57
w9l=w9l+w2l|0;w9h=w9h+w2h+(w9l>>>0<w2l>>>0?1:0)|0;xl=(w10l>>>1|w10h<<31)^(w10l>>>8|w10h<<24)^(w10l>>>7|w10h<<25)|0;w9l=w9l+xl|0;w9h=w9h+((w10h>>>1|w10l<<31)^(w10h>>>8|w10l<<24)^w10h>>>7)+(w9l>>>0<xl>>>0?1:0)|0;xl=(w7l>>>19|w7h<<13)^(w7l<<3|w7h>>>29)^(w7l>>>6|w7h<<26)|0;w9l=w9l+xl|0;w9h=w9h+((w7h>>>19|w7l<<13)^(w7h<<3|w7l>>>29)^w7h>>>6)+(w9l>>>0<xl>>>0?1:0)|0;tl=0x43172f60+w9l|0;th=0x78a5636f+w9h+(tl>>>0<w9l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 58
w10l=w10l+w3l|0;w10h=w10h+w3h+(w10l>>>0<w3l>>>0?1:0)|0;xl=(w11l>>>1|w11h<<31)^(w11l>>>8|w11h<<24)^(w11l>>>7|w11h<<25)|0;w10l=w10l+xl|0;w10h=w10h+((w11h>>>1|w11l<<31)^(w11h>>>8|w11l<<24)^w11h>>>7)+(w10l>>>0<xl>>>0?1:0)|0;xl=(w8l>>>19|w8h<<13)^(w8l<<3|w8h>>>29)^(w8l>>>6|w8h<<26)|0;w10l=w10l+xl|0;w10h=w10h+((w8h>>>19|w8l<<13)^(w8h<<3|w8l>>>29)^w8h>>>6)+(w10l>>>0<xl>>>0?1:0)|0;tl=0xa1f0ab72+w10l|0;th=0x84c87814+w10h+(tl>>>0<w10l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 59
w11l=w11l+w4l|0;w11h=w11h+w4h+(w11l>>>0<w4l>>>0?1:0)|0;xl=(w12l>>>1|w12h<<31)^(w12l>>>8|w12h<<24)^(w12l>>>7|w12h<<25)|0;w11l=w11l+xl|0;w11h=w11h+((w12h>>>1|w12l<<31)^(w12h>>>8|w12l<<24)^w12h>>>7)+(w11l>>>0<xl>>>0?1:0)|0;xl=(w9l>>>19|w9h<<13)^(w9l<<3|w9h>>>29)^(w9l>>>6|w9h<<26)|0;w11l=w11l+xl|0;w11h=w11h+((w9h>>>19|w9l<<13)^(w9h<<3|w9l>>>29)^w9h>>>6)+(w11l>>>0<xl>>>0?1:0)|0;tl=0x1a6439ec+w11l|0;th=0x8cc70208+w11h+(tl>>>0<w11l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 60
w12l=w12l+w5l|0;w12h=w12h+w5h+(w12l>>>0<w5l>>>0?1:0)|0;xl=(w13l>>>1|w13h<<31)^(w13l>>>8|w13h<<24)^(w13l>>>7|w13h<<25)|0;w12l=w12l+xl|0;w12h=w12h+((w13h>>>1|w13l<<31)^(w13h>>>8|w13l<<24)^w13h>>>7)+(w12l>>>0<xl>>>0?1:0)|0;xl=(w10l>>>19|w10h<<13)^(w10l<<3|w10h>>>29)^(w10l>>>6|w10h<<26)|0;w12l=w12l+xl|0;w12h=w12h+((w10h>>>19|w10l<<13)^(w10h<<3|w10l>>>29)^w10h>>>6)+(w12l>>>0<xl>>>0?1:0)|0;tl=0x23631e28+w12l|0;th=0x90befffa+w12h+(tl>>>0<w12l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 61
w13l=w13l+w6l|0;w13h=w13h+w6h+(w13l>>>0<w6l>>>0?1:0)|0;xl=(w14l>>>1|w14h<<31)^(w14l>>>8|w14h<<24)^(w14l>>>7|w14h<<25)|0;w13l=w13l+xl|0;w13h=w13h+((w14h>>>1|w14l<<31)^(w14h>>>8|w14l<<24)^w14h>>>7)+(w13l>>>0<xl>>>0?1:0)|0;xl=(w11l>>>19|w11h<<13)^(w11l<<3|w11h>>>29)^(w11l>>>6|w11h<<26)|0;w13l=w13l+xl|0;w13h=w13h+((w11h>>>19|w11l<<13)^(w11h<<3|w11l>>>29)^w11h>>>6)+(w13l>>>0<xl>>>0?1:0)|0;tl=0xde82bde9+w13l|0;th=0xa4506ceb+w13h+(tl>>>0<w13l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 62
w14l=w14l+w7l|0;w14h=w14h+w7h+(w14l>>>0<w7l>>>0?1:0)|0;xl=(w15l>>>1|w15h<<31)^(w15l>>>8|w15h<<24)^(w15l>>>7|w15h<<25)|0;w14l=w14l+xl|0;w14h=w14h+((w15h>>>1|w15l<<31)^(w15h>>>8|w15l<<24)^w15h>>>7)+(w14l>>>0<xl>>>0?1:0)|0;xl=(w12l>>>19|w12h<<13)^(w12l<<3|w12h>>>29)^(w12l>>>6|w12h<<26)|0;w14l=w14l+xl|0;w14h=w14h+((w12h>>>19|w12l<<13)^(w12h<<3|w12l>>>29)^w12h>>>6)+(w14l>>>0<xl>>>0?1:0)|0;tl=0xb2c67915+w14l|0;th=0xbef9a3f7+w14h+(tl>>>0<w14l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 63
w15l=w15l+w8l|0;w15h=w15h+w8h+(w15l>>>0<w8l>>>0?1:0)|0;xl=(w0l>>>1|w0h<<31)^(w0l>>>8|w0h<<24)^(w0l>>>7|w0h<<25)|0;w15l=w15l+xl|0;w15h=w15h+((w0h>>>1|w0l<<31)^(w0h>>>8|w0l<<24)^w0h>>>7)+(w15l>>>0<xl>>>0?1:0)|0;xl=(w13l>>>19|w13h<<13)^(w13l<<3|w13h>>>29)^(w13l>>>6|w13h<<26)|0;w15l=w15l+xl|0;w15h=w15h+((w13h>>>19|w13l<<13)^(w13h<<3|w13l>>>29)^w13h>>>6)+(w15l>>>0<xl>>>0?1:0)|0;tl=0xe372532b+w15l|0;th=0xc67178f2+w15h+(tl>>>0<w15l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 64
w0l=w0l+w9l|0;w0h=w0h+w9h+(w0l>>>0<w9l>>>0?1:0)|0;xl=(w1l>>>1|w1h<<31)^(w1l>>>8|w1h<<24)^(w1l>>>7|w1h<<25)|0;w0l=w0l+xl|0;w0h=w0h+((w1h>>>1|w1l<<31)^(w1h>>>8|w1l<<24)^w1h>>>7)+(w0l>>>0<xl>>>0?1:0)|0;xl=(w14l>>>19|w14h<<13)^(w14l<<3|w14h>>>29)^(w14l>>>6|w14h<<26)|0;w0l=w0l+xl|0;w0h=w0h+((w14h>>>19|w14l<<13)^(w14h<<3|w14l>>>29)^w14h>>>6)+(w0l>>>0<xl>>>0?1:0)|0;tl=0xea26619c+w0l|0;th=0xca273ece+w0h+(tl>>>0<w0l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 65
w1l=w1l+w10l|0;w1h=w1h+w10h+(w1l>>>0<w10l>>>0?1:0)|0;xl=(w2l>>>1|w2h<<31)^(w2l>>>8|w2h<<24)^(w2l>>>7|w2h<<25)|0;w1l=w1l+xl|0;w1h=w1h+((w2h>>>1|w2l<<31)^(w2h>>>8|w2l<<24)^w2h>>>7)+(w1l>>>0<xl>>>0?1:0)|0;xl=(w15l>>>19|w15h<<13)^(w15l<<3|w15h>>>29)^(w15l>>>6|w15h<<26)|0;w1l=w1l+xl|0;w1h=w1h+((w15h>>>19|w15l<<13)^(w15h<<3|w15l>>>29)^w15h>>>6)+(w1l>>>0<xl>>>0?1:0)|0;tl=0x21c0c207+w1l|0;th=0xd186b8c7+w1h+(tl>>>0<w1l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 66
w2l=w2l+w11l|0;w2h=w2h+w11h+(w2l>>>0<w11l>>>0?1:0)|0;xl=(w3l>>>1|w3h<<31)^(w3l>>>8|w3h<<24)^(w3l>>>7|w3h<<25)|0;w2l=w2l+xl|0;w2h=w2h+((w3h>>>1|w3l<<31)^(w3h>>>8|w3l<<24)^w3h>>>7)+(w2l>>>0<xl>>>0?1:0)|0;xl=(w0l>>>19|w0h<<13)^(w0l<<3|w0h>>>29)^(w0l>>>6|w0h<<26)|0;w2l=w2l+xl|0;w2h=w2h+((w0h>>>19|w0l<<13)^(w0h<<3|w0l>>>29)^w0h>>>6)+(w2l>>>0<xl>>>0?1:0)|0;tl=0xcde0eb1e+w2l|0;th=0xeada7dd6+w2h+(tl>>>0<w2l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 67
w3l=w3l+w12l|0;w3h=w3h+w12h+(w3l>>>0<w12l>>>0?1:0)|0;xl=(w4l>>>1|w4h<<31)^(w4l>>>8|w4h<<24)^(w4l>>>7|w4h<<25)|0;w3l=w3l+xl|0;w3h=w3h+((w4h>>>1|w4l<<31)^(w4h>>>8|w4l<<24)^w4h>>>7)+(w3l>>>0<xl>>>0?1:0)|0;xl=(w1l>>>19|w1h<<13)^(w1l<<3|w1h>>>29)^(w1l>>>6|w1h<<26)|0;w3l=w3l+xl|0;w3h=w3h+((w1h>>>19|w1l<<13)^(w1h<<3|w1l>>>29)^w1h>>>6)+(w3l>>>0<xl>>>0?1:0)|0;tl=0xee6ed178+w3l|0;th=0xf57d4f7f+w3h+(tl>>>0<w3l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 68
w4l=w4l+w13l|0;w4h=w4h+w13h+(w4l>>>0<w13l>>>0?1:0)|0;xl=(w5l>>>1|w5h<<31)^(w5l>>>8|w5h<<24)^(w5l>>>7|w5h<<25)|0;w4l=w4l+xl|0;w4h=w4h+((w5h>>>1|w5l<<31)^(w5h>>>8|w5l<<24)^w5h>>>7)+(w4l>>>0<xl>>>0?1:0)|0;xl=(w2l>>>19|w2h<<13)^(w2l<<3|w2h>>>29)^(w2l>>>6|w2h<<26)|0;w4l=w4l+xl|0;w4h=w4h+((w2h>>>19|w2l<<13)^(w2h<<3|w2l>>>29)^w2h>>>6)+(w4l>>>0<xl>>>0?1:0)|0;tl=0x72176fba+w4l|0;th=0x6f067aa+w4h+(tl>>>0<w4l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 69
w5l=w5l+w14l|0;w5h=w5h+w14h+(w5l>>>0<w14l>>>0?1:0)|0;xl=(w6l>>>1|w6h<<31)^(w6l>>>8|w6h<<24)^(w6l>>>7|w6h<<25)|0;w5l=w5l+xl|0;w5h=w5h+((w6h>>>1|w6l<<31)^(w6h>>>8|w6l<<24)^w6h>>>7)+(w5l>>>0<xl>>>0?1:0)|0;xl=(w3l>>>19|w3h<<13)^(w3l<<3|w3h>>>29)^(w3l>>>6|w3h<<26)|0;w5l=w5l+xl|0;w5h=w5h+((w3h>>>19|w3l<<13)^(w3h<<3|w3l>>>29)^w3h>>>6)+(w5l>>>0<xl>>>0?1:0)|0;tl=0xa2c898a6+w5l|0;th=0xa637dc5+w5h+(tl>>>0<w5l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 70
w6l=w6l+w15l|0;w6h=w6h+w15h+(w6l>>>0<w15l>>>0?1:0)|0;xl=(w7l>>>1|w7h<<31)^(w7l>>>8|w7h<<24)^(w7l>>>7|w7h<<25)|0;w6l=w6l+xl|0;w6h=w6h+((w7h>>>1|w7l<<31)^(w7h>>>8|w7l<<24)^w7h>>>7)+(w6l>>>0<xl>>>0?1:0)|0;xl=(w4l>>>19|w4h<<13)^(w4l<<3|w4h>>>29)^(w4l>>>6|w4h<<26)|0;w6l=w6l+xl|0;w6h=w6h+((w4h>>>19|w4l<<13)^(w4h<<3|w4l>>>29)^w4h>>>6)+(w6l>>>0<xl>>>0?1:0)|0;tl=0xbef90dae+w6l|0;th=0x113f9804+w6h+(tl>>>0<w6l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 71
w7l=w7l+w0l|0;w7h=w7h+w0h+(w7l>>>0<w0l>>>0?1:0)|0;xl=(w8l>>>1|w8h<<31)^(w8l>>>8|w8h<<24)^(w8l>>>7|w8h<<25)|0;w7l=w7l+xl|0;w7h=w7h+((w8h>>>1|w8l<<31)^(w8h>>>8|w8l<<24)^w8h>>>7)+(w7l>>>0<xl>>>0?1:0)|0;xl=(w5l>>>19|w5h<<13)^(w5l<<3|w5h>>>29)^(w5l>>>6|w5h<<26)|0;w7l=w7l+xl|0;w7h=w7h+((w5h>>>19|w5l<<13)^(w5h<<3|w5l>>>29)^w5h>>>6)+(w7l>>>0<xl>>>0?1:0)|0;tl=0x131c471b+w7l|0;th=0x1b710b35+w7h+(tl>>>0<w7l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 72
w8l=w8l+w1l|0;w8h=w8h+w1h+(w8l>>>0<w1l>>>0?1:0)|0;xl=(w9l>>>1|w9h<<31)^(w9l>>>8|w9h<<24)^(w9l>>>7|w9h<<25)|0;w8l=w8l+xl|0;w8h=w8h+((w9h>>>1|w9l<<31)^(w9h>>>8|w9l<<24)^w9h>>>7)+(w8l>>>0<xl>>>0?1:0)|0;xl=(w6l>>>19|w6h<<13)^(w6l<<3|w6h>>>29)^(w6l>>>6|w6h<<26)|0;w8l=w8l+xl|0;w8h=w8h+((w6h>>>19|w6l<<13)^(w6h<<3|w6l>>>29)^w6h>>>6)+(w8l>>>0<xl>>>0?1:0)|0;tl=0x23047d84+w8l|0;th=0x28db77f5+w8h+(tl>>>0<w8l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 73
w9l=w9l+w2l|0;w9h=w9h+w2h+(w9l>>>0<w2l>>>0?1:0)|0;xl=(w10l>>>1|w10h<<31)^(w10l>>>8|w10h<<24)^(w10l>>>7|w10h<<25)|0;w9l=w9l+xl|0;w9h=w9h+((w10h>>>1|w10l<<31)^(w10h>>>8|w10l<<24)^w10h>>>7)+(w9l>>>0<xl>>>0?1:0)|0;xl=(w7l>>>19|w7h<<13)^(w7l<<3|w7h>>>29)^(w7l>>>6|w7h<<26)|0;w9l=w9l+xl|0;w9h=w9h+((w7h>>>19|w7l<<13)^(w7h<<3|w7l>>>29)^w7h>>>6)+(w9l>>>0<xl>>>0?1:0)|0;tl=0x40c72493+w9l|0;th=0x32caab7b+w9h+(tl>>>0<w9l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 74
w10l=w10l+w3l|0;w10h=w10h+w3h+(w10l>>>0<w3l>>>0?1:0)|0;xl=(w11l>>>1|w11h<<31)^(w11l>>>8|w11h<<24)^(w11l>>>7|w11h<<25)|0;w10l=w10l+xl|0;w10h=w10h+((w11h>>>1|w11l<<31)^(w11h>>>8|w11l<<24)^w11h>>>7)+(w10l>>>0<xl>>>0?1:0)|0;xl=(w8l>>>19|w8h<<13)^(w8l<<3|w8h>>>29)^(w8l>>>6|w8h<<26)|0;w10l=w10l+xl|0;w10h=w10h+((w8h>>>19|w8l<<13)^(w8h<<3|w8l>>>29)^w8h>>>6)+(w10l>>>0<xl>>>0?1:0)|0;tl=0x15c9bebc+w10l|0;th=0x3c9ebe0a+w10h+(tl>>>0<w10l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 75
w11l=w11l+w4l|0;w11h=w11h+w4h+(w11l>>>0<w4l>>>0?1:0)|0;xl=(w12l>>>1|w12h<<31)^(w12l>>>8|w12h<<24)^(w12l>>>7|w12h<<25)|0;w11l=w11l+xl|0;w11h=w11h+((w12h>>>1|w12l<<31)^(w12h>>>8|w12l<<24)^w12h>>>7)+(w11l>>>0<xl>>>0?1:0)|0;xl=(w9l>>>19|w9h<<13)^(w9l<<3|w9h>>>29)^(w9l>>>6|w9h<<26)|0;w11l=w11l+xl|0;w11h=w11h+((w9h>>>19|w9l<<13)^(w9h<<3|w9l>>>29)^w9h>>>6)+(w11l>>>0<xl>>>0?1:0)|0;tl=0x9c100d4c+w11l|0;th=0x431d67c4+w11h+(tl>>>0<w11l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 76
w12l=w12l+w5l|0;w12h=w12h+w5h+(w12l>>>0<w5l>>>0?1:0)|0;xl=(w13l>>>1|w13h<<31)^(w13l>>>8|w13h<<24)^(w13l>>>7|w13h<<25)|0;w12l=w12l+xl|0;w12h=w12h+((w13h>>>1|w13l<<31)^(w13h>>>8|w13l<<24)^w13h>>>7)+(w12l>>>0<xl>>>0?1:0)|0;xl=(w10l>>>19|w10h<<13)^(w10l<<3|w10h>>>29)^(w10l>>>6|w10h<<26)|0;w12l=w12l+xl|0;w12h=w12h+((w10h>>>19|w10l<<13)^(w10h<<3|w10l>>>29)^w10h>>>6)+(w12l>>>0<xl>>>0?1:0)|0;tl=0xcb3e42b6+w12l|0;th=0x4cc5d4be+w12h+(tl>>>0<w12l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 77
w13l=w13l+w6l|0;w13h=w13h+w6h+(w13l>>>0<w6l>>>0?1:0)|0;xl=(w14l>>>1|w14h<<31)^(w14l>>>8|w14h<<24)^(w14l>>>7|w14h<<25)|0;w13l=w13l+xl|0;w13h=w13h+((w14h>>>1|w14l<<31)^(w14h>>>8|w14l<<24)^w14h>>>7)+(w13l>>>0<xl>>>0?1:0)|0;xl=(w11l>>>19|w11h<<13)^(w11l<<3|w11h>>>29)^(w11l>>>6|w11h<<26)|0;w13l=w13l+xl|0;w13h=w13h+((w11h>>>19|w11l<<13)^(w11h<<3|w11l>>>29)^w11h>>>6)+(w13l>>>0<xl>>>0?1:0)|0;tl=0xfc657e2a+w13l|0;th=0x597f299c+w13h+(tl>>>0<w13l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 78
w14l=w14l+w7l|0;w14h=w14h+w7h+(w14l>>>0<w7l>>>0?1:0)|0;xl=(w15l>>>1|w15h<<31)^(w15l>>>8|w15h<<24)^(w15l>>>7|w15h<<25)|0;w14l=w14l+xl|0;w14h=w14h+((w15h>>>1|w15l<<31)^(w15h>>>8|w15l<<24)^w15h>>>7)+(w14l>>>0<xl>>>0?1:0)|0;xl=(w12l>>>19|w12h<<13)^(w12l<<3|w12h>>>29)^(w12l>>>6|w12h<<26)|0;w14l=w14l+xl|0;w14h=w14h+((w12h>>>19|w12l<<13)^(w12h<<3|w12l>>>29)^w12h>>>6)+(w14l>>>0<xl>>>0?1:0)|0;tl=0x3ad6faec+w14l|0;th=0x5fcb6fab+w14h+(tl>>>0<w14l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;// 79
w15l=w15l+w8l|0;w15h=w15h+w8h+(w15l>>>0<w8l>>>0?1:0)|0;xl=(w0l>>>1|w0h<<31)^(w0l>>>8|w0h<<24)^(w0l>>>7|w0h<<25)|0;w15l=w15l+xl|0;w15h=w15h+((w0h>>>1|w0l<<31)^(w0h>>>8|w0l<<24)^w0h>>>7)+(w15l>>>0<xl>>>0?1:0)|0;xl=(w13l>>>19|w13h<<13)^(w13l<<3|w13h>>>29)^(w13l>>>6|w13h<<26)|0;w15l=w15l+xl|0;w15h=w15h+((w13h>>>19|w13l<<13)^(w13h<<3|w13l>>>29)^w13h>>>6)+(w15l>>>0<xl>>>0?1:0)|0;tl=0x4a475817+w15l|0;th=0x6c44198c+w15h+(tl>>>0<w15l>>>0?1:0)|0;tl=tl+hl|0;th=th+hh+(tl>>>0<hl>>>0?1:0)|0;xl=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9)|0;tl=tl+xl|0;th=th+((eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9))+(tl>>>0<xl>>>0?1:0)|0;xl=gl^el&(fl^gl)|0;tl=tl+xl|0;th=th+(gh^eh&(fh^gh))+(tl>>>0<xl>>>0?1:0)|0;hl=gl;hh=gh;gl=fl;gh=fh;fl=el;fh=eh;el=dl+tl|0;eh=dh+th+(el>>>0<dl>>>0?1:0)|0;dl=cl;dh=ch;cl=bl;ch=bh;bl=al;bh=ah;al=tl+(bl&cl^dl&(bl^cl))|0;ah=th+(bh&ch^dh&(bh^ch))+(al>>>0<tl>>>0?1:0)|0;xl=(bl>>>28|bh<<4)^(bl<<30|bh>>>2)^(bl<<25|bh>>>7)|0;al=al+xl|0;ah=ah+((bh>>>28|bl<<4)^(bh<<30|bl>>>2)^(bh<<25|bl>>>7))+(al>>>0<xl>>>0?1:0)|0;H0l=H0l+al|0;H0h=H0h+ah+(H0l>>>0<al>>>0?1:0)|0;H1l=H1l+bl|0;H1h=H1h+bh+(H1l>>>0<bl>>>0?1:0)|0;H2l=H2l+cl|0;H2h=H2h+ch+(H2l>>>0<cl>>>0?1:0)|0;H3l=H3l+dl|0;H3h=H3h+dh+(H3l>>>0<dl>>>0?1:0)|0;H4l=H4l+el|0;H4h=H4h+eh+(H4l>>>0<el>>>0?1:0)|0;H5l=H5l+fl|0;H5h=H5h+fh+(H5l>>>0<fl>>>0?1:0)|0;H6l=H6l+gl|0;H6h=H6h+gh+(H6l>>>0<gl>>>0?1:0)|0;H7l=H7l+hl|0;H7h=H7h+hh+(H7l>>>0<hl>>>0?1:0)|0;}function _core_heap(offset){offset=offset|0;_core(HEAP[offset|0]<<24|HEAP[offset|1]<<16|HEAP[offset|2]<<8|HEAP[offset|3],HEAP[offset|4]<<24|HEAP[offset|5]<<16|HEAP[offset|6]<<8|HEAP[offset|7],HEAP[offset|8]<<24|HEAP[offset|9]<<16|HEAP[offset|10]<<8|HEAP[offset|11],HEAP[offset|12]<<24|HEAP[offset|13]<<16|HEAP[offset|14]<<8|HEAP[offset|15],HEAP[offset|16]<<24|HEAP[offset|17]<<16|HEAP[offset|18]<<8|HEAP[offset|19],HEAP[offset|20]<<24|HEAP[offset|21]<<16|HEAP[offset|22]<<8|HEAP[offset|23],HEAP[offset|24]<<24|HEAP[offset|25]<<16|HEAP[offset|26]<<8|HEAP[offset|27],HEAP[offset|28]<<24|HEAP[offset|29]<<16|HEAP[offset|30]<<8|HEAP[offset|31],HEAP[offset|32]<<24|HEAP[offset|33]<<16|HEAP[offset|34]<<8|HEAP[offset|35],HEAP[offset|36]<<24|HEAP[offset|37]<<16|HEAP[offset|38]<<8|HEAP[offset|39],HEAP[offset|40]<<24|HEAP[offset|41]<<16|HEAP[offset|42]<<8|HEAP[offset|43],HEAP[offset|44]<<24|HEAP[offset|45]<<16|HEAP[offset|46]<<8|HEAP[offset|47],HEAP[offset|48]<<24|HEAP[offset|49]<<16|HEAP[offset|50]<<8|HEAP[offset|51],HEAP[offset|52]<<24|HEAP[offset|53]<<16|HEAP[offset|54]<<8|HEAP[offset|55],HEAP[offset|56]<<24|HEAP[offset|57]<<16|HEAP[offset|58]<<8|HEAP[offset|59],HEAP[offset|60]<<24|HEAP[offset|61]<<16|HEAP[offset|62]<<8|HEAP[offset|63],HEAP[offset|64]<<24|HEAP[offset|65]<<16|HEAP[offset|66]<<8|HEAP[offset|67],HEAP[offset|68]<<24|HEAP[offset|69]<<16|HEAP[offset|70]<<8|HEAP[offset|71],HEAP[offset|72]<<24|HEAP[offset|73]<<16|HEAP[offset|74]<<8|HEAP[offset|75],HEAP[offset|76]<<24|HEAP[offset|77]<<16|HEAP[offset|78]<<8|HEAP[offset|79],HEAP[offset|80]<<24|HEAP[offset|81]<<16|HEAP[offset|82]<<8|HEAP[offset|83],HEAP[offset|84]<<24|HEAP[offset|85]<<16|HEAP[offset|86]<<8|HEAP[offset|87],HEAP[offset|88]<<24|HEAP[offset|89]<<16|HEAP[offset|90]<<8|HEAP[offset|91],HEAP[offset|92]<<24|HEAP[offset|93]<<16|HEAP[offset|94]<<8|HEAP[offset|95],HEAP[offset|96]<<24|HEAP[offset|97]<<16|HEAP[offset|98]<<8|HEAP[offset|99],HEAP[offset|100]<<24|HEAP[offset|101]<<16|HEAP[offset|102]<<8|HEAP[offset|103],HEAP[offset|104]<<24|HEAP[offset|105]<<16|HEAP[offset|106]<<8|HEAP[offset|107],HEAP[offset|108]<<24|HEAP[offset|109]<<16|HEAP[offset|110]<<8|HEAP[offset|111],HEAP[offset|112]<<24|HEAP[offset|113]<<16|HEAP[offset|114]<<8|HEAP[offset|115],HEAP[offset|116]<<24|HEAP[offset|117]<<16|HEAP[offset|118]<<8|HEAP[offset|119],HEAP[offset|120]<<24|HEAP[offset|121]<<16|HEAP[offset|122]<<8|HEAP[offset|123],HEAP[offset|124]<<24|HEAP[offset|125]<<16|HEAP[offset|126]<<8|HEAP[offset|127]);}// offset — multiple of 32
function _state_to_heap(output){output=output|0;HEAP[output|0]=H0h>>>24;HEAP[output|1]=H0h>>>16&255;HEAP[output|2]=H0h>>>8&255;HEAP[output|3]=H0h&255;HEAP[output|4]=H0l>>>24;HEAP[output|5]=H0l>>>16&255;HEAP[output|6]=H0l>>>8&255;HEAP[output|7]=H0l&255;HEAP[output|8]=H1h>>>24;HEAP[output|9]=H1h>>>16&255;HEAP[output|10]=H1h>>>8&255;HEAP[output|11]=H1h&255;HEAP[output|12]=H1l>>>24;HEAP[output|13]=H1l>>>16&255;HEAP[output|14]=H1l>>>8&255;HEAP[output|15]=H1l&255;HEAP[output|16]=H2h>>>24;HEAP[output|17]=H2h>>>16&255;HEAP[output|18]=H2h>>>8&255;HEAP[output|19]=H2h&255;HEAP[output|20]=H2l>>>24;HEAP[output|21]=H2l>>>16&255;HEAP[output|22]=H2l>>>8&255;HEAP[output|23]=H2l&255;HEAP[output|24]=H3h>>>24;HEAP[output|25]=H3h>>>16&255;HEAP[output|26]=H3h>>>8&255;HEAP[output|27]=H3h&255;HEAP[output|28]=H3l>>>24;HEAP[output|29]=H3l>>>16&255;HEAP[output|30]=H3l>>>8&255;HEAP[output|31]=H3l&255;HEAP[output|32]=H4h>>>24;HEAP[output|33]=H4h>>>16&255;HEAP[output|34]=H4h>>>8&255;HEAP[output|35]=H4h&255;HEAP[output|36]=H4l>>>24;HEAP[output|37]=H4l>>>16&255;HEAP[output|38]=H4l>>>8&255;HEAP[output|39]=H4l&255;HEAP[output|40]=H5h>>>24;HEAP[output|41]=H5h>>>16&255;HEAP[output|42]=H5h>>>8&255;HEAP[output|43]=H5h&255;HEAP[output|44]=H5l>>>24;HEAP[output|45]=H5l>>>16&255;HEAP[output|46]=H5l>>>8&255;HEAP[output|47]=H5l&255;HEAP[output|48]=H6h>>>24;HEAP[output|49]=H6h>>>16&255;HEAP[output|50]=H6h>>>8&255;HEAP[output|51]=H6h&255;HEAP[output|52]=H6l>>>24;HEAP[output|53]=H6l>>>16&255;HEAP[output|54]=H6l>>>8&255;HEAP[output|55]=H6l&255;HEAP[output|56]=H7h>>>24;HEAP[output|57]=H7h>>>16&255;HEAP[output|58]=H7h>>>8&255;HEAP[output|59]=H7h&255;HEAP[output|60]=H7l>>>24;HEAP[output|61]=H7l>>>16&255;HEAP[output|62]=H7l>>>8&255;HEAP[output|63]=H7l&255;}function reset(){H0h=0x6a09e667;H0l=0xf3bcc908;H1h=0xbb67ae85;H1l=0x84caa73b;H2h=0x3c6ef372;H2l=0xfe94f82b;H3h=0xa54ff53a;H3l=0x5f1d36f1;H4h=0x510e527f;H4l=0xade682d1;H5h=0x9b05688c;H5l=0x2b3e6c1f;H6h=0x1f83d9ab;H6l=0xfb41bd6b;H7h=0x5be0cd19;H7l=0x137e2179;TOTAL0=TOTAL1=0;}function init(h0h,h0l,h1h,h1l,h2h,h2l,h3h,h3l,h4h,h4l,h5h,h5l,h6h,h6l,h7h,h7l,total0,total1){h0h=h0h|0;h0l=h0l|0;h1h=h1h|0;h1l=h1l|0;h2h=h2h|0;h2l=h2l|0;h3h=h3h|0;h3l=h3l|0;h4h=h4h|0;h4l=h4l|0;h5h=h5h|0;h5l=h5l|0;h6h=h6h|0;h6l=h6l|0;h7h=h7h|0;h7l=h7l|0;total0=total0|0;total1=total1|0;H0h=h0h;H0l=h0l;H1h=h1h;H1l=h1l;H2h=h2h;H2l=h2l;H3h=h3h;H3l=h3l;H4h=h4h;H4l=h4l;H5h=h5h;H5l=h5l;H6h=h6h;H6l=h6l;H7h=h7h;H7l=h7l;TOTAL0=total0;TOTAL1=total1;}// offset — multiple of 128
function process(offset,length){offset=offset|0;length=length|0;var hashed=0;if(offset&127)return-1;while((length|0)>=128){_core_heap(offset);offset=offset+128|0;length=length-128|0;hashed=hashed+128|0;}TOTAL0=TOTAL0+hashed|0;if(TOTAL0>>>0<hashed>>>0)TOTAL1=TOTAL1+1|0;return hashed|0;}// offset — multiple of 128
// output — multiple of 64
function finish(offset,length,output){offset=offset|0;length=length|0;output=output|0;var hashed=0,i=0;if(offset&127)return-1;if(~output)if(output&63)return-1;if((length|0)>=128){hashed=process(offset,length)|0;if((hashed|0)==-1)return-1;offset=offset+hashed|0;length=length-hashed|0;}hashed=hashed+length|0;TOTAL0=TOTAL0+length|0;if(TOTAL0>>>0<length>>>0)TOTAL1=TOTAL1+1|0;HEAP[offset|length]=0x80;if((length|0)>=112){for(i=length+1|0;(i|0)<128;i=i+1|0)HEAP[offset|i]=0x00;_core_heap(offset);length=0;HEAP[offset|0]=0;}for(i=length+1|0;(i|0)<123;i=i+1|0)HEAP[offset|i]=0;HEAP[offset|120]=TOTAL1>>>21&255;HEAP[offset|121]=TOTAL1>>>13&255;HEAP[offset|122]=TOTAL1>>>5&255;HEAP[offset|123]=TOTAL1<<3&255|TOTAL0>>>29;HEAP[offset|124]=TOTAL0>>>21&255;HEAP[offset|125]=TOTAL0>>>13&255;HEAP[offset|126]=TOTAL0>>>5&255;HEAP[offset|127]=TOTAL0<<3&255;_core_heap(offset);if(~output)_state_to_heap(output);return hashed|0;}function hmac_reset(){H0h=I0h;H0l=I0l;H1h=I1h;H1l=I1l;H2h=I2h;H2l=I2l;H3h=I3h;H3l=I3l;H4h=I4h;H4l=I4l;H5h=I5h;H5l=I5l;H6h=I6h;H6l=I6l;H7h=I7h;H7l=I7l;TOTAL0=128;TOTAL1=0;}function _hmac_opad(){H0h=O0h;H0l=O0l;H1h=O1h;H1l=O1l;H2h=O2h;H2l=O2l;H3h=O3h;H3l=O3l;H4h=O4h;H4l=O4l;H5h=O5h;H5l=O5l;H6h=O6h;H6l=O6l;H7h=O7h;H7l=O7l;TOTAL0=128;TOTAL1=0;}function hmac_init(p0h,p0l,p1h,p1l,p2h,p2l,p3h,p3l,p4h,p4l,p5h,p5l,p6h,p6l,p7h,p7l,p8h,p8l,p9h,p9l,p10h,p10l,p11h,p11l,p12h,p12l,p13h,p13l,p14h,p14l,p15h,p15l){p0h=p0h|0;p0l=p0l|0;p1h=p1h|0;p1l=p1l|0;p2h=p2h|0;p2l=p2l|0;p3h=p3h|0;p3l=p3l|0;p4h=p4h|0;p4l=p4l|0;p5h=p5h|0;p5l=p5l|0;p6h=p6h|0;p6l=p6l|0;p7h=p7h|0;p7l=p7l|0;p8h=p8h|0;p8l=p8l|0;p9h=p9h|0;p9l=p9l|0;p10h=p10h|0;p10l=p10l|0;p11h=p11h|0;p11l=p11l|0;p12h=p12h|0;p12l=p12l|0;p13h=p13h|0;p13l=p13l|0;p14h=p14h|0;p14l=p14l|0;p15h=p15h|0;p15l=p15l|0;// opad
reset();_core(p0h^0x5c5c5c5c,p0l^0x5c5c5c5c,p1h^0x5c5c5c5c,p1l^0x5c5c5c5c,p2h^0x5c5c5c5c,p2l^0x5c5c5c5c,p3h^0x5c5c5c5c,p3l^0x5c5c5c5c,p4h^0x5c5c5c5c,p4l^0x5c5c5c5c,p5h^0x5c5c5c5c,p5l^0x5c5c5c5c,p6h^0x5c5c5c5c,p6l^0x5c5c5c5c,p7h^0x5c5c5c5c,p7l^0x5c5c5c5c,p8h^0x5c5c5c5c,p8l^0x5c5c5c5c,p9h^0x5c5c5c5c,p9l^0x5c5c5c5c,p10h^0x5c5c5c5c,p10l^0x5c5c5c5c,p11h^0x5c5c5c5c,p11l^0x5c5c5c5c,p12h^0x5c5c5c5c,p12l^0x5c5c5c5c,p13h^0x5c5c5c5c,p13l^0x5c5c5c5c,p14h^0x5c5c5c5c,p14l^0x5c5c5c5c,p15h^0x5c5c5c5c,p15l^0x5c5c5c5c);O0h=H0h;O0l=H0l;O1h=H1h;O1l=H1l;O2h=H2h;O2l=H2l;O3h=H3h;O3l=H3l;O4h=H4h;O4l=H4l;O5h=H5h;O5l=H5l;O6h=H6h;O6l=H6l;O7h=H7h;O7l=H7l;// ipad
reset();_core(p0h^0x36363636,p0l^0x36363636,p1h^0x36363636,p1l^0x36363636,p2h^0x36363636,p2l^0x36363636,p3h^0x36363636,p3l^0x36363636,p4h^0x36363636,p4l^0x36363636,p5h^0x36363636,p5l^0x36363636,p6h^0x36363636,p6l^0x36363636,p7h^0x36363636,p7l^0x36363636,p8h^0x36363636,p8l^0x36363636,p9h^0x36363636,p9l^0x36363636,p10h^0x36363636,p10l^0x36363636,p11h^0x36363636,p11l^0x36363636,p12h^0x36363636,p12l^0x36363636,p13h^0x36363636,p13l^0x36363636,p14h^0x36363636,p14l^0x36363636,p15h^0x36363636,p15l^0x36363636);I0h=H0h;I0l=H0l;I1h=H1h;I1l=H1l;I2h=H2h;I2l=H2l;I3h=H3h;I3l=H3l;I4h=H4h;I4l=H4l;I5h=H5h;I5l=H5l;I6h=H6h;I6l=H6l;I7h=H7h;I7l=H7l;TOTAL0=128;TOTAL1=0;}// offset — multiple of 128
// output — multiple of 64
function hmac_finish(offset,length,output){offset=offset|0;length=length|0;output=output|0;var t0h=0,t0l=0,t1h=0,t1l=0,t2h=0,t2l=0,t3h=0,t3l=0,t4h=0,t4l=0,t5h=0,t5l=0,t6h=0,t6l=0,t7h=0,t7l=0,hashed=0;if(offset&127)return-1;if(~output)if(output&63)return-1;hashed=finish(offset,length,-1)|0;t0h=H0h;t0l=H0l;t1h=H1h;t1l=H1l;t2h=H2h;t2l=H2l;t3h=H3h;t3l=H3l;t4h=H4h;t4l=H4l;t5h=H5h;t5l=H5l;t6h=H6h;t6l=H6l;t7h=H7h;t7l=H7l;_hmac_opad();_core(t0h,t0l,t1h,t1l,t2h,t2l,t3h,t3l,t4h,t4l,t5h,t5l,t6h,t6l,t7h,t7l,0x80000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536);if(~output)_state_to_heap(output);return hashed|0;}// salt is assumed to be already processed
// offset — multiple of 128
// output — multiple of 64
function pbkdf2_generate_block(offset,length,block,count,output){offset=offset|0;length=length|0;block=block|0;count=count|0;output=output|0;var h0h=0,h0l=0,h1h=0,h1l=0,h2h=0,h2l=0,h3h=0,h3l=0,h4h=0,h4l=0,h5h=0,h5l=0,h6h=0,h6l=0,h7h=0,h7l=0,t0h=0,t0l=0,t1h=0,t1l=0,t2h=0,t2l=0,t3h=0,t3l=0,t4h=0,t4l=0,t5h=0,t5l=0,t6h=0,t6l=0,t7h=0,t7l=0;if(offset&127)return-1;if(~output)if(output&63)return-1;// pad block number into heap
// FIXME probable OOB write
HEAP[offset+length|0]=block>>>24;HEAP[offset+length+1|0]=block>>>16&255;HEAP[offset+length+2|0]=block>>>8&255;HEAP[offset+length+3|0]=block&255;// finish first iteration
hmac_finish(offset,length+4|0,-1)|0;h0h=t0h=H0h;h0l=t0l=H0l;h1h=t1h=H1h;h1l=t1l=H1l;h2h=t2h=H2h;h2l=t2l=H2l;h3h=t3h=H3h;h3l=t3l=H3l;h4h=t4h=H4h;h4l=t4l=H4l;h5h=t5h=H5h;h5l=t5l=H5l;h6h=t6h=H6h;h6l=t6l=H6l;h7h=t7h=H7h;h7l=t7l=H7l;count=count-1|0;// perform the rest iterations
while((count|0)>0){hmac_reset();_core(t0h,t0l,t1h,t1l,t2h,t2l,t3h,t3l,t4h,t4l,t5h,t5l,t6h,t6l,t7h,t7l,0x80000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536);t0h=H0h;t0l=H0l;t1h=H1h;t1l=H1l;t2h=H2h;t2l=H2l;t3h=H3h;t3l=H3l;t4h=H4h;t4l=H4l;t5h=H5h;t5l=H5l;t6h=H6h;t6l=H6l;t7h=H7h;t7l=H7l;_hmac_opad();_core(t0h,t0l,t1h,t1l,t2h,t2l,t3h,t3l,t4h,t4l,t5h,t5l,t6h,t6l,t7h,t7l,0x80000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536);t0h=H0h;t0l=H0l;t1h=H1h;t1l=H1l;t2h=H2h;t2l=H2l;t3h=H3h;t3l=H3l;t4h=H4h;t4l=H4l;t5h=H5h;t5l=H5l;t6h=H6h;t6l=H6l;t7h=H7h;t7l=H7l;h0h=h0h^H0h;h0l=h0l^H0l;h1h=h1h^H1h;h1l=h1l^H1l;h2h=h2h^H2h;h2l=h2l^H2l;h3h=h3h^H3h;h3l=h3l^H3l;h4h=h4h^H4h;h4l=h4l^H4l;h5h=h5h^H5h;h5l=h5l^H5l;h6h=h6h^H6h;h6l=h6l^H6l;h7h=h7h^H7h;h7l=h7l^H7l;count=count-1|0;}H0h=h0h;H0l=h0l;H1h=h1h;H1l=h1l;H2h=h2h;H2l=h2l;H3h=h3h;H3l=h3l;H4h=h4h;H4l=h4l;H5h=h5h;H5l=h5l;H6h=h6h;H6l=h6l;H7h=h7h;H7l=h7l;if(~output)_state_to_heap(output);return 0;}return{// SHA512
reset:reset,init:init,process:process,finish:finish,// HMAC-SHA512
hmac_reset:hmac_reset,hmac_init:hmac_init,hmac_finish:hmac_finish,// PBKDF2-HMAC-SHA512
pbkdf2_generate_block:pbkdf2_generate_block};};var __extends$b=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var _sha512_block_size=128;var _sha512_hash_size=64;var Sha512=/** @class */function(_super){__extends$b(Sha512,_super);function Sha512(){var _this=_super.call(this)||this;_this.NAME='sha512';_this.BLOCK_SIZE=_sha512_block_size;_this.HASH_SIZE=_sha512_hash_size;_this.heap=_heap_init();_this.asm=sha512_asm({Uint8Array:Uint8Array},null,_this.heap.buffer);_this.reset();return _this;}Sha512.NAME='sha512';return Sha512;}(Hash);var Hmac=/** @class */function(){function Hmac(hash,password,verify){if(!hash.HASH_SIZE)throw new SyntaxError("option 'hash' supplied doesn't seem to be a valid hash function");this.hash=hash;this.BLOCK_SIZE=this.hash.BLOCK_SIZE;this.HMAC_SIZE=this.hash.HASH_SIZE;this.result=null;this.key=_hmac_key(this.hash,password);var ipad=new Uint8Array(this.key);for(var i=0;i<ipad.length;++i)ipad[i]^=0x36;this.hash.reset().process(ipad);if(verify!==undefined){this._hmac_init_verify(verify);}else{this.verify=null;}}Hmac.prototype.process=function(data){if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');this.hash.process(data);return this;};Hmac.prototype.finish=function(){if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');var inner_result=this.hash.finish().result;var opad=new Uint8Array(this.key);for(var i=0;i<opad.length;++i)opad[i]^=0x5c;var verify=this.verify;var result=this.hash.reset().process(opad).process(inner_result).finish().result;if(verify){if(verify.length===result.length){var diff=0;for(var i=0;i<verify.length;i++){diff|=verify[i]^result[i];}if(diff!==0)throw new Error("HMAC verification failed, hash value doesn't match");}else{throw new Error("HMAC verification failed, lengths doesn't match");}}this.result=result;return this;};Hmac.prototype._hmac_init_verify=function(verify){if(verify.length!==this.HMAC_SIZE)throw new IllegalArgumentError('illegal verification tag size');this.verify=verify;};return Hmac;}();function _hmac_key(hash,password){var key=new Uint8Array(hash.BLOCK_SIZE);if(password.length>hash.BLOCK_SIZE){key.set(hash.reset().process(password).finish().result);}else{key.set(password);}return key;}var __extends$c=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var HmacSha1=/** @class */function(_super){__extends$c(HmacSha1,_super);function HmacSha1(password,verify){var _this=this;var hash=new Sha1();// Calculate ipad, init the underlying engine, calculate this.key
_this=_super.call(this,hash,password,verify)||this;_this.reset();if(verify!==undefined){_this._hmac_init_verify(verify);}else{_this.verify=null;}return _this;}HmacSha1.prototype.reset=function(){this.result=null;var key=this.key;this.hash.reset().asm.hmac_init(key[0]<<24|key[1]<<16|key[2]<<8|key[3],key[4]<<24|key[5]<<16|key[6]<<8|key[7],key[8]<<24|key[9]<<16|key[10]<<8|key[11],key[12]<<24|key[13]<<16|key[14]<<8|key[15],key[16]<<24|key[17]<<16|key[18]<<8|key[19],key[20]<<24|key[21]<<16|key[22]<<8|key[23],key[24]<<24|key[25]<<16|key[26]<<8|key[27],key[28]<<24|key[29]<<16|key[30]<<8|key[31],key[32]<<24|key[33]<<16|key[34]<<8|key[35],key[36]<<24|key[37]<<16|key[38]<<8|key[39],key[40]<<24|key[41]<<16|key[42]<<8|key[43],key[44]<<24|key[45]<<16|key[46]<<8|key[47],key[48]<<24|key[49]<<16|key[50]<<8|key[51],key[52]<<24|key[53]<<16|key[54]<<8|key[55],key[56]<<24|key[57]<<16|key[58]<<8|key[59],key[60]<<24|key[61]<<16|key[62]<<8|key[63]);return this;};HmacSha1.prototype.finish=function(){if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');var hash=this.hash;var asm=this.hash.asm;var heap=this.hash.heap;asm.hmac_finish(hash.pos,hash.len,0);var verify=this.verify;var result=new Uint8Array(_sha1_hash_size);result.set(heap.subarray(0,_sha1_hash_size));if(verify){if(verify.length===result.length){var diff=0;for(var i=0;i<verify.length;i++){diff|=verify[i]^result[i];}if(diff!==0)throw new Error("HMAC verification failed, hash value doesn't match");}else{throw new Error("HMAC verification failed, lengths doesn't match");}}else{this.result=result;}return this;};return HmacSha1;}(Hmac);var __extends$d=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var HmacSha256=/** @class */function(_super){__extends$d(HmacSha256,_super);function HmacSha256(password,verify){var _this=this;var hash=new Sha256();// Calculate ipad, init the underlying engine, calculate this.key
_this=_super.call(this,hash,password,verify)||this;_this.reset();if(verify!==undefined){_this._hmac_init_verify(verify);}else{_this.verify=null;}return _this;}HmacSha256.prototype.reset=function(){var key=this.key;this.hash.reset().asm.hmac_init(key[0]<<24|key[1]<<16|key[2]<<8|key[3],key[4]<<24|key[5]<<16|key[6]<<8|key[7],key[8]<<24|key[9]<<16|key[10]<<8|key[11],key[12]<<24|key[13]<<16|key[14]<<8|key[15],key[16]<<24|key[17]<<16|key[18]<<8|key[19],key[20]<<24|key[21]<<16|key[22]<<8|key[23],key[24]<<24|key[25]<<16|key[26]<<8|key[27],key[28]<<24|key[29]<<16|key[30]<<8|key[31],key[32]<<24|key[33]<<16|key[34]<<8|key[35],key[36]<<24|key[37]<<16|key[38]<<8|key[39],key[40]<<24|key[41]<<16|key[42]<<8|key[43],key[44]<<24|key[45]<<16|key[46]<<8|key[47],key[48]<<24|key[49]<<16|key[50]<<8|key[51],key[52]<<24|key[53]<<16|key[54]<<8|key[55],key[56]<<24|key[57]<<16|key[58]<<8|key[59],key[60]<<24|key[61]<<16|key[62]<<8|key[63]);return this;};HmacSha256.prototype.finish=function(){if(this.key===null)throw new IllegalStateError('no key is associated with the instance');if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');var hash=this.hash;var asm=this.hash.asm;var heap=this.hash.heap;asm.hmac_finish(hash.pos,hash.len,0);var verify=this.verify;var result=new Uint8Array(_sha256_hash_size);result.set(heap.subarray(0,_sha256_hash_size));if(verify){if(verify.length===result.length){var diff=0;for(var i=0;i<verify.length;i++){diff|=verify[i]^result[i];}if(diff!==0)throw new Error("HMAC verification failed, hash value doesn't match");}else{throw new Error("HMAC verification failed, lengths doesn't match");}}else{this.result=result;}return this;};return HmacSha256;}(Hmac);var __extends$e=undefined&&undefined.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var HmacSha512=/** @class */function(_super){__extends$e(HmacSha512,_super);function HmacSha512(password,verify){var _this=this;var hash=new Sha512();// Calculate ipad, init the underlying engine, calculate this.key
_this=_super.call(this,hash,password,verify)||this;_this.reset();if(verify!==undefined){_this._hmac_init_verify(verify);}else{_this.verify=null;}return _this;}HmacSha512.prototype.reset=function(){var key=this.key;this.hash.reset().asm.hmac_init(key[0]<<24|key[1]<<16|key[2]<<8|key[3],key[4]<<24|key[5]<<16|key[6]<<8|key[7],key[8]<<24|key[9]<<16|key[10]<<8|key[11],key[12]<<24|key[13]<<16|key[14]<<8|key[15],key[16]<<24|key[17]<<16|key[18]<<8|key[19],key[20]<<24|key[21]<<16|key[22]<<8|key[23],key[24]<<24|key[25]<<16|key[26]<<8|key[27],key[28]<<24|key[29]<<16|key[30]<<8|key[31],key[32]<<24|key[33]<<16|key[34]<<8|key[35],key[36]<<24|key[37]<<16|key[38]<<8|key[39],key[40]<<24|key[41]<<16|key[42]<<8|key[43],key[44]<<24|key[45]<<16|key[46]<<8|key[47],key[48]<<24|key[49]<<16|key[50]<<8|key[51],key[52]<<24|key[53]<<16|key[54]<<8|key[55],key[56]<<24|key[57]<<16|key[58]<<8|key[59],key[60]<<24|key[61]<<16|key[62]<<8|key[63],key[64]<<24|key[65]<<16|key[66]<<8|key[67],key[68]<<24|key[69]<<16|key[70]<<8|key[71],key[72]<<24|key[73]<<16|key[74]<<8|key[75],key[76]<<24|key[77]<<16|key[78]<<8|key[79],key[80]<<24|key[81]<<16|key[82]<<8|key[83],key[84]<<24|key[85]<<16|key[86]<<8|key[87],key[88]<<24|key[89]<<16|key[90]<<8|key[91],key[92]<<24|key[93]<<16|key[94]<<8|key[95],key[96]<<24|key[97]<<16|key[98]<<8|key[99],key[100]<<24|key[101]<<16|key[102]<<8|key[103],key[104]<<24|key[105]<<16|key[106]<<8|key[107],key[108]<<24|key[109]<<16|key[110]<<8|key[111],key[112]<<24|key[113]<<16|key[114]<<8|key[115],key[116]<<24|key[117]<<16|key[118]<<8|key[119],key[120]<<24|key[121]<<16|key[122]<<8|key[123],key[124]<<24|key[125]<<16|key[126]<<8|key[127]);return this;};HmacSha512.prototype.finish=function(){if(this.key===null)throw new IllegalStateError('no key is associated with the instance');if(this.result!==null)throw new IllegalStateError('state must be reset before processing new data');var hash=this.hash;var asm=this.hash.asm;var heap=this.hash.heap;asm.hmac_finish(hash.pos,hash.len,0);var verify=this.verify;var result=new Uint8Array(_sha512_hash_size);result.set(heap.subarray(0,_sha512_hash_size));if(verify){if(verify.length===result.length){var diff=0;for(var i=0;i<verify.length;i++){diff|=verify[i]^result[i];}if(diff!==0)throw new Error("HMAC verification failed, hash value doesn't match");}else{throw new Error("HMAC verification failed, lengths doesn't match");}}else{this.result=result;}return this;};return HmacSha512;}(Hmac);function Pbkdf2HmacSha1(password,salt,count,length){var hmac=new HmacSha1(password);var result=new Uint8Array(length);var blocks=Math.ceil(length/hmac.HMAC_SIZE);for(var i=1;i<=blocks;++i){var j=(i-1)*hmac.HMAC_SIZE;var l=(i<blocks?0:length%hmac.HMAC_SIZE)||hmac.HMAC_SIZE;hmac.reset().process(salt);hmac.hash.asm.pbkdf2_generate_block(hmac.hash.pos,hmac.hash.len,i,count,0);result.set(hmac.hash.heap.subarray(0,l),j);}return result;}function Pbkdf2HmacSha256(password,salt,count,length){var hmac=new HmacSha256(password);var result=new Uint8Array(length);var blocks=Math.ceil(length/hmac.HMAC_SIZE);for(var i=1;i<=blocks;++i){var j=(i-1)*hmac.HMAC_SIZE;var l=(i<blocks?0:length%hmac.HMAC_SIZE)||hmac.HMAC_SIZE;hmac.reset().process(salt);hmac.hash.asm.pbkdf2_generate_block(hmac.hash.pos,hmac.hash.len,i,count,0);result.set(hmac.hash.heap.subarray(0,l),j);}return result;}function Pbkdf2HmacSha512(password,salt,count,length){var hmac=new HmacSha512(password);var result=new Uint8Array(length);var blocks=Math.ceil(length/hmac.HMAC_SIZE);for(var i=1;i<=blocks;++i){var j=(i-1)*hmac.HMAC_SIZE;var l=(i<blocks?0:length%hmac.HMAC_SIZE)||hmac.HMAC_SIZE;hmac.reset().process(salt);hmac.hash.asm.pbkdf2_generate_block(hmac.hash.pos,hmac.hash.len,i,count,0);result.set(hmac.hash.heap.subarray(0,l),j);}return result;}var RSA=/** @class */function(){function RSA(key){var l=key.length;if(l!==2&&l!==3&&l!==8)throw new SyntaxError('unexpected key type');var k0=new Modulus(new BigNumber(key[0]));var k1=new BigNumber(key[1]);this.key={0:k0,1:k1};if(l>2){this.key[2]=new BigNumber(key[2]);}if(l>3){this.key[3]=new Modulus(new BigNumber(key[3]));this.key[4]=new Modulus(new BigNumber(key[4]));this.key[5]=new BigNumber(key[5]);this.key[6]=new BigNumber(key[6]);this.key[7]=new BigNumber(key[7]);}}RSA.prototype.encrypt=function(msg){if(!this.key)throw new IllegalStateError('no key is associated with the instance');if(this.key[0].compare(msg)<=0)throw new RangeError('data too large');var m=this.key[0];var e=this.key[1];var result=m.power(msg,e).toBytes();var bytelen=m.bitLength+7>>3;if(result.length<bytelen){var r=new Uint8Array(bytelen);r.set(result,bytelen-result.length);result=r;}this.result=result;return this;};RSA.prototype.decrypt=function(msg){if(this.key[0].compare(msg)<=0)throw new RangeError('data too large');var result;var m;if(this.key[3]!==undefined){m=this.key[0];var p=this.key[3];var q=this.key[4];var dp=this.key[5];var dq=this.key[6];var u=this.key[7];var x=p.power(msg,dp);var y=q.power(msg,dq);var t=x.subtract(y);while(t.sign<0)t=t.add(p);var h=p.reduce(u.multiply(t));result=h.multiply(q).add(y).clamp(m.bitLength).toBytes();}else{m=this.key[0];var d=this.key[2];result=m.power(msg,d).toBytes();}var bytelen=m.bitLength+7>>3;if(result.length<bytelen){var r=new Uint8Array(bytelen);r.set(result,bytelen-result.length);result=r;}this.result=result;return this;};return RSA;}();var RSA_OAEP=/** @class */function(){function RSA_OAEP(key,hash,label){this.rsa=new RSA(key);this.hash=hash;if(label!==undefined){this.label=label.length>0?label:null;}else{this.label=null;}}RSA_OAEP.prototype.encrypt=function(data,random){var key_size=Math.ceil(this.rsa.key[0].bitLength/8);var hash_size=this.hash.HASH_SIZE;var data_length=data.byteLength||data.length||0;var ps_length=key_size-data_length-2*hash_size-2;if(data_length>key_size-2*this.hash.HASH_SIZE-2)throw new IllegalArgumentError('data too large');var message=new Uint8Array(key_size);var seed=message.subarray(1,hash_size+1);var data_block=message.subarray(hash_size+1);data_block.set(data,hash_size+ps_length+1);data_block.set(this.hash.process(this.label||new Uint8Array(0)).finish().result,0);data_block[hash_size+ps_length]=1;if(random!==undefined){if(seed.length!==random.length)throw new IllegalArgumentError('random size must equal the hash size');seed.set(random);}else{getRandomValues(seed);}var data_block_mask=this.RSA_MGF1_generate(seed,data_block.length);for(var i=0;i<data_block.length;i++)data_block[i]^=data_block_mask[i];var seed_mask=this.RSA_MGF1_generate(data_block,seed.length);for(var i=0;i<seed.length;i++)seed[i]^=seed_mask[i];this.rsa.encrypt(new BigNumber(message));return new Uint8Array(this.rsa.result);};RSA_OAEP.prototype.decrypt=function(data){if(!this.rsa.key)throw new IllegalStateError('no key is associated with the instance');var key_size=Math.ceil(this.rsa.key[0].bitLength/8);var hash_size=this.hash.HASH_SIZE;var data_length=data.byteLength||data.length||0;if(data_length!==key_size)throw new IllegalArgumentError('bad data');this.rsa.decrypt(new BigNumber(data));var z=this.rsa.result[0];var seed=this.rsa.result.subarray(1,hash_size+1);var data_block=this.rsa.result.subarray(hash_size+1);if(z!==0)throw new SecurityError('decryption failed');var seed_mask=this.RSA_MGF1_generate(data_block,seed.length);for(var i=0;i<seed.length;i++)seed[i]^=seed_mask[i];var data_block_mask=this.RSA_MGF1_generate(seed,data_block.length);for(var i=0;i<data_block.length;i++)data_block[i]^=data_block_mask[i];var lhash=this.hash.reset().process(this.label||new Uint8Array(0)).finish().result;for(var i=0;i<hash_size;i++){if(lhash[i]!==data_block[i])throw new SecurityError('decryption failed');}var ps_end=hash_size;for(;ps_end<data_block.length;ps_end++){var psz=data_block[ps_end];if(psz===1)break;if(psz!==0)throw new SecurityError('decryption failed');}if(ps_end===data_block.length)throw new SecurityError('decryption failed');this.rsa.result=data_block.subarray(ps_end+1);return new Uint8Array(this.rsa.result);};RSA_OAEP.prototype.RSA_MGF1_generate=function(seed,length){if(length===void 0){length=0;}var hash_size=this.hash.HASH_SIZE;//    if ( length > (hash_size * 0x100000000) )
//        throw new IllegalArgumentError("mask length too large");
var mask=new Uint8Array(length);var counter=new Uint8Array(4);var chunks=Math.ceil(length/hash_size);for(var i=0;i<chunks;i++){counter[0]=i>>>24,counter[1]=i>>>16&255,counter[2]=i>>>8&255,counter[3]=i&255;var submask=mask.subarray(i*hash_size);var chunk=this.hash.reset().process(seed).process(counter).finish().result;if(chunk.length>submask.length)chunk=chunk.subarray(0,submask.length);submask.set(chunk);}return mask;};return RSA_OAEP;}();var RSA_PSS=/** @class */function(){function RSA_PSS(key,hash,saltLength){if(saltLength===void 0){saltLength=4;}this.rsa=new RSA(key);this.hash=hash;this.saltLength=saltLength;if(this.saltLength<0)throw new TypeError('saltLength should be a non-negative number');if(this.rsa.key!==null&&Math.ceil((this.rsa.key[0].bitLength-1)/8)<this.hash.HASH_SIZE+this.saltLength+2)throw new SyntaxError('saltLength is too large');}RSA_PSS.prototype.sign=function(data,random){var key_bits=this.rsa.key[0].bitLength;var hash_size=this.hash.HASH_SIZE;var message_length=Math.ceil((key_bits-1)/8);var salt_length=this.saltLength;var ps_length=message_length-salt_length-hash_size-2;var message=new Uint8Array(message_length);var h_block=message.subarray(message_length-hash_size-1,message_length-1);var d_block=message.subarray(0,message_length-hash_size-1);var d_salt=d_block.subarray(ps_length+1);var m_block=new Uint8Array(8+hash_size+salt_length);var m_hash=m_block.subarray(8,8+hash_size);var m_salt=m_block.subarray(8+hash_size);m_hash.set(this.hash.process(data).finish().result);if(salt_length>0){if(random!==undefined){if(m_salt.length!==random.length)throw new IllegalArgumentError('random size must equal the salt size');m_salt.set(random);}else{getRandomValues(m_salt);}}d_block[ps_length]=1;d_salt.set(m_salt);h_block.set(this.hash.reset().process(m_block).finish().result);var d_block_mask=this.RSA_MGF1_generate(h_block,d_block.length);for(var i=0;i<d_block.length;i++)d_block[i]^=d_block_mask[i];message[message_length-1]=0xbc;var zbits=8*message_length-key_bits+1;if(zbits%8)message[0]&=0xff>>>zbits;this.rsa.decrypt(new BigNumber(message));return this.rsa.result;};RSA_PSS.prototype.verify=function(signature,data){var key_bits=this.rsa.key[0].bitLength;var hash_size=this.hash.HASH_SIZE;var message_length=Math.ceil((key_bits-1)/8);var salt_length=this.saltLength;var ps_length=message_length-salt_length-hash_size-2;this.rsa.encrypt(new BigNumber(signature));var message=this.rsa.result;if(message[message_length-1]!==0xbc)throw new SecurityError('bad signature');var h_block=message.subarray(message_length-hash_size-1,message_length-1);var d_block=message.subarray(0,message_length-hash_size-1);var d_salt=d_block.subarray(ps_length+1);var zbits=8*message_length-key_bits+1;if(zbits%8&&message[0]>>>8-zbits)throw new SecurityError('bad signature');var d_block_mask=this.RSA_MGF1_generate(h_block,d_block.length);for(var i=0;i<d_block.length;i++)d_block[i]^=d_block_mask[i];if(zbits%8)message[0]&=0xff>>>zbits;for(var i=0;i<ps_length;i++){if(d_block[i]!==0)throw new SecurityError('bad signature');}if(d_block[ps_length]!==1)throw new SecurityError('bad signature');var m_block=new Uint8Array(8+hash_size+salt_length);var m_hash=m_block.subarray(8,8+hash_size);var m_salt=m_block.subarray(8+hash_size);m_hash.set(this.hash.reset().process(data).finish().result);m_salt.set(d_salt);var h_block_verify=this.hash.reset().process(m_block).finish().result;for(var i=0;i<hash_size;i++){if(h_block[i]!==h_block_verify[i])throw new SecurityError('bad signature');}};RSA_PSS.prototype.RSA_MGF1_generate=function(seed,length){if(length===void 0){length=0;}var hash_size=this.hash.HASH_SIZE;//    if ( length > (hash_size * 0x100000000) )
//        throw new IllegalArgumentError("mask length too large");
var mask=new Uint8Array(length);var counter=new Uint8Array(4);var chunks=Math.ceil(length/hash_size);for(var i=0;i<chunks;i++){counter[0]=i>>>24,counter[1]=i>>>16&255,counter[2]=i>>>8&255,counter[3]=i&255;var submask=mask.subarray(i*hash_size);var chunk=this.hash.reset().process(seed).process(counter).finish().result;if(chunk.length>submask.length)chunk=chunk.subarray(0,submask.length);submask.set(chunk);}return mask;};return RSA_PSS;}();var RSA_PKCS1_v1_5=/** @class */function(){function RSA_PKCS1_v1_5(key,hash){this.rsa=new RSA(key);this.hash=hash;}RSA_PKCS1_v1_5.prototype.sign=function(data){if(!this.rsa.key){throw new IllegalStateError('no key is associated with the instance');}var prefix=getHashPrefix(this.hash);var hash_size=this.hash.HASH_SIZE;var t_len=prefix.length+hash_size;var k=this.rsa.key[0].bitLength+7>>3;if(k<t_len+11){throw new Error('Message too long');}var m_hash=new Uint8Array(hash_size);m_hash.set(this.hash.process(data).finish().result);// EM = 0x00 || 0x01 || PS || 0x00 || T
var em=new Uint8Array(k);var i=0;em[i++]=0;// 0x00
em[i++]=1;// 0x01
// PS
for(i;i<k-t_len-1;i++){em[i]=0xff;}em[i++]=0;em.set(prefix,i);// 0x00
// T
em.set(m_hash,em.length-hash_size);this.rsa.decrypt(new BigNumber(em));return this.rsa.result;};RSA_PKCS1_v1_5.prototype.verify=function(signature,data){var prefix=getHashPrefix(this.hash);var hash_size=this.hash.HASH_SIZE;var t_len=prefix.length+hash_size;var k=this.rsa.key[0].bitLength+7>>3;if(k<t_len+11){throw new SecurityError('Bad signature');}this.rsa.encrypt(new BigNumber(signature));var m_hash=new Uint8Array(hash_size);m_hash.set(this.hash.process(data).finish().result);var res=1;// EM = 0x00 || 0x01 || PS || 0x00 || T
var decryptedSignature=this.rsa.result;var i=0;res&=decryptedSignature[i++]===0?1:0;// 0x00
res&=decryptedSignature[i++]===1?1:0;// 0x01
// PS
for(i;i<k-t_len-1;i++){res&=decryptedSignature[i]===0xff?1:0;}res&=decryptedSignature[i++]===0?1:0;// 0x00
// T
var j=0;var n=i+prefix.length;// prefix
for(i;i<n;i++){res&=decryptedSignature[i]===prefix[j++]?1:0;}j=0;n=i+m_hash.length;// hash
for(i;i<n;i++){res&=decryptedSignature[i]===m_hash[j++]?1:0;}if(!res){throw new SecurityError('Bad signature');}};return RSA_PKCS1_v1_5;}();var HASH_PREFIXES={sha1:new Uint8Array([0x30,0x21,0x30,0x09,0x06,0x05,0x2b,0x0e,0x03,0x02,0x1a,0x05,0x00,0x04,0x14]),sha256:new Uint8Array([0x30,0x31,0x30,0x0d,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,0x01,0x05,0x00,0x04,0x20]),sha384:new Uint8Array([0x30,0x41,0x30,0x0d,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,0x02,0x05,0x00,0x04,0x30]),sha512:new Uint8Array([0x30,0x51,0x30,0x0d,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,0x03,0x05,0x00,0x04,0x40])};function getHashPrefix(hash){var prefix=HASH_PREFIXES[hash.NAME];if(!prefix){throw new Error("Cannot get hash prefix for hash algorithm '"+hash.NAME+"'");}return prefix;}exports.string_to_bytes=string_to_bytes;exports.hex_to_bytes=hex_to_bytes;exports.base64_to_bytes=base64_to_bytes;exports.bytes_to_string=bytes_to_string;exports.bytes_to_hex=bytes_to_hex;exports.bytes_to_base64=bytes_to_base64;exports.IllegalStateError=IllegalStateError;exports.IllegalArgumentError=IllegalArgumentError;exports.SecurityError=SecurityError;exports.AES_CBC=AES_CBC;exports.AES_CCM=AES_CCM;exports.AES_CFB=AES_CFB;exports.AES_CMAC=AES_CMAC;exports.AES_CTR=AES_CTR;exports.AES_ECB=AES_ECB;exports.AES_GCM=AES_GCM;exports.AES_OFB=AES_OFB;exports.BigNumber=BigNumber;exports.Modulus=Modulus;exports.Sha1=Sha1;exports.Sha256=Sha256;exports.Sha512=Sha512;exports.HmacSha1=HmacSha1;exports.HmacSha256=HmacSha256;exports.HmacSha512=HmacSha512;exports.Pbkdf2HmacSha1=Pbkdf2HmacSha1;exports.Pbkdf2HmacSha256=Pbkdf2HmacSha256;exports.Pbkdf2HmacSha512=Pbkdf2HmacSha512;exports.RSA_OAEP=RSA_OAEP;exports.RSA_PKCS1_v1_5=RSA_PKCS1_v1_5;exports.RSA_PSS=RSA_PSS;exports.RSA=RSA;}).call(this);}).call(this,require('_process'),require("buffer").Buffer);},{"_process":242,"buffer":140,"crypto":148}],40:[function(require,module,exports){'use strict';const asn1=exports;asn1.bignum=require('bn.js');asn1.define=require('./asn1/api').define;asn1.base=require('./asn1/base');asn1.constants=require('./asn1/constants');asn1.decoders=require('./asn1/decoders');asn1.encoders=require('./asn1/encoders');},{"./asn1/api":41,"./asn1/base":43,"./asn1/constants":47,"./asn1/decoders":49,"./asn1/encoders":52,"bn.js":54}],41:[function(require,module,exports){'use strict';const encoders=require('./encoders');const decoders=require('./decoders');const inherits=require('inherits');const api=exports;api.define=function define(name,body){return new Entity(name,body);};function Entity(name,body){this.name=name;this.body=body;this.decoders={};this.encoders={};}Entity.prototype._createNamed=function createNamed(Base){const name=this.name;function Generated(entity){this._initNamed(entity,name);}inherits(Generated,Base);Generated.prototype._initNamed=function _initNamed(entity,name){Base.call(this,entity,name);};return new Generated(this);};Entity.prototype._getDecoder=function _getDecoder(enc){enc=enc||'der';// Lazily create decoder
if(!this.decoders.hasOwnProperty(enc))this.decoders[enc]=this._createNamed(decoders[enc]);return this.decoders[enc];};Entity.prototype.decode=function decode(data,enc,options){return this._getDecoder(enc).decode(data,options);};Entity.prototype._getEncoder=function _getEncoder(enc){enc=enc||'der';// Lazily create encoder
if(!this.encoders.hasOwnProperty(enc))this.encoders[enc]=this._createNamed(encoders[enc]);return this.encoders[enc];};Entity.prototype.encode=function encode(data,enc,/* internal */reporter){return this._getEncoder(enc).encode(data,reporter);};},{"./decoders":49,"./encoders":52,"inherits":223}],42:[function(require,module,exports){'use strict';const inherits=require('inherits');const Reporter=require('../base/reporter').Reporter;const Buffer=require('safer-buffer').Buffer;function DecoderBuffer(base,options){Reporter.call(this,options);if(!Buffer.isBuffer(base)){this.error('Input not Buffer');return;}this.base=base;this.offset=0;this.length=base.length;}inherits(DecoderBuffer,Reporter);exports.DecoderBuffer=DecoderBuffer;DecoderBuffer.isDecoderBuffer=function isDecoderBuffer(data){if(data instanceof DecoderBuffer){return true;}// Or accept compatible API
const isCompatible=typeof data==='object'&&Buffer.isBuffer(data.base)&&data.constructor.name==='DecoderBuffer'&&typeof data.offset==='number'&&typeof data.length==='number'&&typeof data.save==='function'&&typeof data.restore==='function'&&typeof data.isEmpty==='function'&&typeof data.readUInt8==='function'&&typeof data.skip==='function'&&typeof data.raw==='function';return isCompatible;};DecoderBuffer.prototype.save=function save(){return{offset:this.offset,reporter:Reporter.prototype.save.call(this)};};DecoderBuffer.prototype.restore=function restore(save){// Return skipped data
const res=new DecoderBuffer(this.base);res.offset=save.offset;res.length=this.offset;this.offset=save.offset;Reporter.prototype.restore.call(this,save.reporter);return res;};DecoderBuffer.prototype.isEmpty=function isEmpty(){return this.offset===this.length;};DecoderBuffer.prototype.readUInt8=function readUInt8(fail){if(this.offset+1<=this.length)return this.base.readUInt8(this.offset++,true);else return this.error(fail||'DecoderBuffer overrun');};DecoderBuffer.prototype.skip=function skip(bytes,fail){if(!(this.offset+bytes<=this.length))return this.error(fail||'DecoderBuffer overrun');const res=new DecoderBuffer(this.base);// Share reporter state
res._reporterState=this._reporterState;res.offset=this.offset;res.length=this.offset+bytes;this.offset+=bytes;return res;};DecoderBuffer.prototype.raw=function raw(save){return this.base.slice(save?save.offset:this.offset,this.length);};function EncoderBuffer(value,reporter){if(Array.isArray(value)){this.length=0;this.value=value.map(function(item){if(!EncoderBuffer.isEncoderBuffer(item))item=new EncoderBuffer(item,reporter);this.length+=item.length;return item;},this);}else if(typeof value==='number'){if(!(0<=value&&value<=0xff))return reporter.error('non-byte EncoderBuffer value');this.value=value;this.length=1;}else if(typeof value==='string'){this.value=value;this.length=Buffer.byteLength(value);}else if(Buffer.isBuffer(value)){this.value=value;this.length=value.length;}else{return reporter.error('Unsupported type: '+typeof value);}}exports.EncoderBuffer=EncoderBuffer;EncoderBuffer.isEncoderBuffer=function isEncoderBuffer(data){if(data instanceof EncoderBuffer){return true;}// Or accept compatible API
const isCompatible=typeof data==='object'&&data.constructor.name==='EncoderBuffer'&&typeof data.length==='number'&&typeof data.join==='function';return isCompatible;};EncoderBuffer.prototype.join=function join(out,offset){if(!out)out=Buffer.alloc(this.length);if(!offset)offset=0;if(this.length===0)return out;if(Array.isArray(this.value)){this.value.forEach(function(item){item.join(out,offset);offset+=item.length;});}else{if(typeof this.value==='number')out[offset]=this.value;else if(typeof this.value==='string')out.write(this.value,offset);else if(Buffer.isBuffer(this.value))this.value.copy(out,offset);offset+=this.length;}return out;};},{"../base/reporter":45,"inherits":223,"safer-buffer":255}],43:[function(require,module,exports){'use strict';const base=exports;base.Reporter=require('./reporter').Reporter;base.DecoderBuffer=require('./buffer').DecoderBuffer;base.EncoderBuffer=require('./buffer').EncoderBuffer;base.Node=require('./node');},{"./buffer":42,"./node":44,"./reporter":45}],44:[function(require,module,exports){'use strict';const Reporter=require('../base/reporter').Reporter;const EncoderBuffer=require('../base/buffer').EncoderBuffer;const DecoderBuffer=require('../base/buffer').DecoderBuffer;const assert=require('minimalistic-assert');// Supported tags
const tags=['seq','seqof','set','setof','objid','bool','gentime','utctime','null_','enum','int','objDesc','bitstr','bmpstr','charstr','genstr','graphstr','ia5str','iso646str','numstr','octstr','printstr','t61str','unistr','utf8str','videostr'];// Public methods list
const methods=['key','obj','use','optional','explicit','implicit','def','choice','any','contains'].concat(tags);// Overrided methods list
const overrided=['_peekTag','_decodeTag','_use','_decodeStr','_decodeObjid','_decodeTime','_decodeNull','_decodeInt','_decodeBool','_decodeList','_encodeComposite','_encodeStr','_encodeObjid','_encodeTime','_encodeNull','_encodeInt','_encodeBool'];function Node(enc,parent,name){const state={};this._baseState=state;state.name=name;state.enc=enc;state.parent=parent||null;state.children=null;// State
state.tag=null;state.args=null;state.reverseArgs=null;state.choice=null;state.optional=false;state.any=false;state.obj=false;state.use=null;state.useDecoder=null;state.key=null;state['default']=null;state.explicit=null;state.implicit=null;state.contains=null;// Should create new instance on each method
if(!state.parent){state.children=[];this._wrap();}}module.exports=Node;const stateProps=['enc','parent','children','tag','args','reverseArgs','choice','optional','any','obj','use','alteredUse','key','default','explicit','implicit','contains'];Node.prototype.clone=function clone(){const state=this._baseState;const cstate={};stateProps.forEach(function(prop){cstate[prop]=state[prop];});const res=new this.constructor(cstate.parent);res._baseState=cstate;return res;};Node.prototype._wrap=function wrap(){const state=this._baseState;methods.forEach(function(method){this[method]=function _wrappedMethod(){const clone=new this.constructor(this);state.children.push(clone);return clone[method].apply(clone,arguments);};},this);};Node.prototype._init=function init(body){const state=this._baseState;assert(state.parent===null);body.call(this);// Filter children
state.children=state.children.filter(function(child){return child._baseState.parent===this;},this);assert.equal(state.children.length,1,'Root node can have only one child');};Node.prototype._useArgs=function useArgs(args){const state=this._baseState;// Filter children and args
const children=args.filter(function(arg){return arg instanceof this.constructor;},this);args=args.filter(function(arg){return!(arg instanceof this.constructor);},this);if(children.length!==0){assert(state.children===null);state.children=children;// Replace parent to maintain backward link
children.forEach(function(child){child._baseState.parent=this;},this);}if(args.length!==0){assert(state.args===null);state.args=args;state.reverseArgs=args.map(function(arg){if(typeof arg!=='object'||arg.constructor!==Object)return arg;const res={};Object.keys(arg).forEach(function(key){if(key==(key|0))key|=0;const value=arg[key];res[value]=key;});return res;});}};//
// Overrided methods
//
overrided.forEach(function(method){Node.prototype[method]=function _overrided(){const state=this._baseState;throw new Error(method+' not implemented for encoding: '+state.enc);};});//
// Public methods
//
tags.forEach(function(tag){Node.prototype[tag]=function _tagMethod(){const state=this._baseState;const args=Array.prototype.slice.call(arguments);assert(state.tag===null);state.tag=tag;this._useArgs(args);return this;};});Node.prototype.use=function use(item){assert(item);const state=this._baseState;assert(state.use===null);state.use=item;return this;};Node.prototype.optional=function optional(){const state=this._baseState;state.optional=true;return this;};Node.prototype.def=function def(val){const state=this._baseState;assert(state['default']===null);state['default']=val;state.optional=true;return this;};Node.prototype.explicit=function explicit(num){const state=this._baseState;assert(state.explicit===null&&state.implicit===null);state.explicit=num;return this;};Node.prototype.implicit=function implicit(num){const state=this._baseState;assert(state.explicit===null&&state.implicit===null);state.implicit=num;return this;};Node.prototype.obj=function obj(){const state=this._baseState;const args=Array.prototype.slice.call(arguments);state.obj=true;if(args.length!==0)this._useArgs(args);return this;};Node.prototype.key=function key(newKey){const state=this._baseState;assert(state.key===null);state.key=newKey;return this;};Node.prototype.any=function any(){const state=this._baseState;state.any=true;return this;};Node.prototype.choice=function choice(obj){const state=this._baseState;assert(state.choice===null);state.choice=obj;this._useArgs(Object.keys(obj).map(function(key){return obj[key];}));return this;};Node.prototype.contains=function contains(item){const state=this._baseState;assert(state.use===null);state.contains=item;return this;};//
// Decoding
//
Node.prototype._decode=function decode(input,options){const state=this._baseState;// Decode root node
if(state.parent===null)return input.wrapResult(state.children[0]._decode(input,options));let result=state['default'];let present=true;let prevKey=null;if(state.key!==null)prevKey=input.enterKey(state.key);// Check if tag is there
if(state.optional){let tag=null;if(state.explicit!==null)tag=state.explicit;else if(state.implicit!==null)tag=state.implicit;else if(state.tag!==null)tag=state.tag;if(tag===null&&!state.any){// Trial and Error
const save=input.save();try{if(state.choice===null)this._decodeGeneric(state.tag,input,options);else this._decodeChoice(input,options);present=true;}catch(e){present=false;}input.restore(save);}else{present=this._peekTag(input,tag,state.any);if(input.isError(present))return present;}}// Push object on stack
let prevObj;if(state.obj&&present)prevObj=input.enterObject();if(present){// Unwrap explicit values
if(state.explicit!==null){const explicit=this._decodeTag(input,state.explicit);if(input.isError(explicit))return explicit;input=explicit;}const start=input.offset;// Unwrap implicit and normal values
if(state.use===null&&state.choice===null){let save;if(state.any)save=input.save();const body=this._decodeTag(input,state.implicit!==null?state.implicit:state.tag,state.any);if(input.isError(body))return body;if(state.any)result=input.raw(save);else input=body;}if(options&&options.track&&state.tag!==null)options.track(input.path(),start,input.length,'tagged');if(options&&options.track&&state.tag!==null)options.track(input.path(),input.offset,input.length,'content');// Select proper method for tag
if(state.any){// no-op
}else if(state.choice===null){result=this._decodeGeneric(state.tag,input,options);}else{result=this._decodeChoice(input,options);}if(input.isError(result))return result;// Decode children
if(!state.any&&state.choice===null&&state.children!==null){state.children.forEach(function decodeChildren(child){// NOTE: We are ignoring errors here, to let parser continue with other
// parts of encoded data
child._decode(input,options);});}// Decode contained/encoded by schema, only in bit or octet strings
if(state.contains&&(state.tag==='octstr'||state.tag==='bitstr')){const data=new DecoderBuffer(result);result=this._getUse(state.contains,input._reporterState.obj)._decode(data,options);}}// Pop object
if(state.obj&&present)result=input.leaveObject(prevObj);// Set key
if(state.key!==null&&(result!==null||present===true))input.leaveKey(prevKey,state.key,result);else if(prevKey!==null)input.exitKey(prevKey);return result;};Node.prototype._decodeGeneric=function decodeGeneric(tag,input,options){const state=this._baseState;if(tag==='seq'||tag==='set')return null;if(tag==='seqof'||tag==='setof')return this._decodeList(input,tag,state.args[0],options);else if(/str$/.test(tag))return this._decodeStr(input,tag,options);else if(tag==='objid'&&state.args)return this._decodeObjid(input,state.args[0],state.args[1],options);else if(tag==='objid')return this._decodeObjid(input,null,null,options);else if(tag==='gentime'||tag==='utctime')return this._decodeTime(input,tag,options);else if(tag==='null_')return this._decodeNull(input,options);else if(tag==='bool')return this._decodeBool(input,options);else if(tag==='objDesc')return this._decodeStr(input,tag,options);else if(tag==='int'||tag==='enum')return this._decodeInt(input,state.args&&state.args[0],options);if(state.use!==null){return this._getUse(state.use,input._reporterState.obj)._decode(input,options);}else{return input.error('unknown tag: '+tag);}};Node.prototype._getUse=function _getUse(entity,obj){const state=this._baseState;// Create altered use decoder if implicit is set
state.useDecoder=this._use(entity,obj);assert(state.useDecoder._baseState.parent===null);state.useDecoder=state.useDecoder._baseState.children[0];if(state.implicit!==state.useDecoder._baseState.implicit){state.useDecoder=state.useDecoder.clone();state.useDecoder._baseState.implicit=state.implicit;}return state.useDecoder;};Node.prototype._decodeChoice=function decodeChoice(input,options){const state=this._baseState;let result=null;let match=false;Object.keys(state.choice).some(function(key){const save=input.save();const node=state.choice[key];try{const value=node._decode(input,options);if(input.isError(value))return false;result={type:key,value:value};match=true;}catch(e){input.restore(save);return false;}return true;},this);if(!match)return input.error('Choice not matched');return result;};//
// Encoding
//
Node.prototype._createEncoderBuffer=function createEncoderBuffer(data){return new EncoderBuffer(data,this.reporter);};Node.prototype._encode=function encode(data,reporter,parent){const state=this._baseState;if(state['default']!==null&&state['default']===data)return;const result=this._encodeValue(data,reporter,parent);if(result===undefined)return;if(this._skipDefault(result,reporter,parent))return;return result;};Node.prototype._encodeValue=function encode(data,reporter,parent){const state=this._baseState;// Decode root node
if(state.parent===null)return state.children[0]._encode(data,reporter||new Reporter());let result=null;// Set reporter to share it with a child class
this.reporter=reporter;// Check if data is there
if(state.optional&&data===undefined){if(state['default']!==null)data=state['default'];else return;}// Encode children first
let content=null;let primitive=false;if(state.any){// Anything that was given is translated to buffer
result=this._createEncoderBuffer(data);}else if(state.choice){result=this._encodeChoice(data,reporter);}else if(state.contains){content=this._getUse(state.contains,parent)._encode(data,reporter);primitive=true;}else if(state.children){content=state.children.map(function(child){if(child._baseState.tag==='null_')return child._encode(null,reporter,data);if(child._baseState.key===null)return reporter.error('Child should have a key');const prevKey=reporter.enterKey(child._baseState.key);if(typeof data!=='object')return reporter.error('Child expected, but input is not object');const res=child._encode(data[child._baseState.key],reporter,data);reporter.leaveKey(prevKey);return res;},this).filter(function(child){return child;});content=this._createEncoderBuffer(content);}else{if(state.tag==='seqof'||state.tag==='setof'){// TODO(indutny): this should be thrown on DSL level
if(!(state.args&&state.args.length===1))return reporter.error('Too many args for : '+state.tag);if(!Array.isArray(data))return reporter.error('seqof/setof, but data is not Array');const child=this.clone();child._baseState.implicit=null;content=this._createEncoderBuffer(data.map(function(item){const state=this._baseState;return this._getUse(state.args[0],data)._encode(item,reporter);},child));}else if(state.use!==null){result=this._getUse(state.use,parent)._encode(data,reporter);}else{content=this._encodePrimitive(state.tag,data);primitive=true;}}// Encode data itself
if(!state.any&&state.choice===null){const tag=state.implicit!==null?state.implicit:state.tag;const cls=state.implicit===null?'universal':'context';if(tag===null){if(state.use===null)reporter.error('Tag could be omitted only for .use()');}else{if(state.use===null)result=this._encodeComposite(tag,primitive,cls,content);}}// Wrap in explicit
if(state.explicit!==null)result=this._encodeComposite(state.explicit,false,'context',result);return result;};Node.prototype._encodeChoice=function encodeChoice(data,reporter){const state=this._baseState;const node=state.choice[data.type];if(!node){assert(false,data.type+' not found in '+JSON.stringify(Object.keys(state.choice)));}return node._encode(data.value,reporter);};Node.prototype._encodePrimitive=function encodePrimitive(tag,data){const state=this._baseState;if(/str$/.test(tag))return this._encodeStr(data,tag);else if(tag==='objid'&&state.args)return this._encodeObjid(data,state.reverseArgs[0],state.args[1]);else if(tag==='objid')return this._encodeObjid(data,null,null);else if(tag==='gentime'||tag==='utctime')return this._encodeTime(data,tag);else if(tag==='null_')return this._encodeNull();else if(tag==='int'||tag==='enum')return this._encodeInt(data,state.args&&state.reverseArgs[0]);else if(tag==='bool')return this._encodeBool(data);else if(tag==='objDesc')return this._encodeStr(data,tag);else throw new Error('Unsupported tag: '+tag);};Node.prototype._isNumstr=function isNumstr(str){return /^[0-9 ]*$/.test(str);};Node.prototype._isPrintstr=function isPrintstr(str){return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);};},{"../base/buffer":42,"../base/reporter":45,"minimalistic-assert":228}],45:[function(require,module,exports){'use strict';const inherits=require('inherits');function Reporter(options){this._reporterState={obj:null,path:[],options:options||{},errors:[]};}exports.Reporter=Reporter;Reporter.prototype.isError=function isError(obj){return obj instanceof ReporterError;};Reporter.prototype.save=function save(){const state=this._reporterState;return{obj:state.obj,pathLen:state.path.length};};Reporter.prototype.restore=function restore(data){const state=this._reporterState;state.obj=data.obj;state.path=state.path.slice(0,data.pathLen);};Reporter.prototype.enterKey=function enterKey(key){return this._reporterState.path.push(key);};Reporter.prototype.exitKey=function exitKey(index){const state=this._reporterState;state.path=state.path.slice(0,index-1);};Reporter.prototype.leaveKey=function leaveKey(index,key,value){const state=this._reporterState;this.exitKey(index);if(state.obj!==null)state.obj[key]=value;};Reporter.prototype.path=function path(){return this._reporterState.path.join('/');};Reporter.prototype.enterObject=function enterObject(){const state=this._reporterState;const prev=state.obj;state.obj={};return prev;};Reporter.prototype.leaveObject=function leaveObject(prev){const state=this._reporterState;const now=state.obj;state.obj=prev;return now;};Reporter.prototype.error=function error(msg){let err;const state=this._reporterState;const inherited=msg instanceof ReporterError;if(inherited){err=msg;}else{err=new ReporterError(state.path.map(function(elem){return'['+JSON.stringify(elem)+']';}).join(''),msg.message||msg,msg.stack);}if(!state.options.partial)throw err;if(!inherited)state.errors.push(err);return err;};Reporter.prototype.wrapResult=function wrapResult(result){const state=this._reporterState;if(!state.options.partial)return result;return{result:this.isError(result)?null:result,errors:state.errors};};function ReporterError(path,msg){this.path=path;this.rethrow(msg);}inherits(ReporterError,Error);ReporterError.prototype.rethrow=function rethrow(msg){this.message=msg+' at: '+(this.path||'(shallow)');if(Error.captureStackTrace)Error.captureStackTrace(this,ReporterError);if(!this.stack){try{// IE only adds stack when thrown
throw new Error(this.message);}catch(e){this.stack=e.stack;}}return this;};},{"inherits":223}],46:[function(require,module,exports){'use strict';// Helper
function reverse(map){const res={};Object.keys(map).forEach(function(key){// Convert key to integer if it is stringified
if((key|0)==key)key=key|0;const value=map[key];res[value]=key;});return res;}exports.tagClass={0:'universal',1:'application',2:'context',3:'private'};exports.tagClassByName=reverse(exports.tagClass);exports.tag={0x00:'end',0x01:'bool',0x02:'int',0x03:'bitstr',0x04:'octstr',0x05:'null_',0x06:'objid',0x07:'objDesc',0x08:'external',0x09:'real',0x0a:'enum',0x0b:'embed',0x0c:'utf8str',0x0d:'relativeOid',0x10:'seq',0x11:'set',0x12:'numstr',0x13:'printstr',0x14:'t61str',0x15:'videostr',0x16:'ia5str',0x17:'utctime',0x18:'gentime',0x19:'graphstr',0x1a:'iso646str',0x1b:'genstr',0x1c:'unistr',0x1d:'charstr',0x1e:'bmpstr'};exports.tagByName=reverse(exports.tag);},{}],47:[function(require,module,exports){'use strict';const constants=exports;// Helper
constants._reverse=function reverse(map){const res={};Object.keys(map).forEach(function(key){// Convert key to integer if it is stringified
if((key|0)==key)key=key|0;const value=map[key];res[value]=key;});return res;};constants.der=require('./der');},{"./der":46}],48:[function(require,module,exports){'use strict';const inherits=require('inherits');const bignum=require('bn.js');const DecoderBuffer=require('../base/buffer').DecoderBuffer;const Node=require('../base/node');// Import DER constants
const der=require('../constants/der');function DERDecoder(entity){this.enc='der';this.name=entity.name;this.entity=entity;// Construct base tree
this.tree=new DERNode();this.tree._init(entity.body);}module.exports=DERDecoder;DERDecoder.prototype.decode=function decode(data,options){if(!DecoderBuffer.isDecoderBuffer(data)){data=new DecoderBuffer(data,options);}return this.tree._decode(data,options);};// Tree methods
function DERNode(parent){Node.call(this,'der',parent);}inherits(DERNode,Node);DERNode.prototype._peekTag=function peekTag(buffer,tag,any){if(buffer.isEmpty())return false;const state=buffer.save();const decodedTag=derDecodeTag(buffer,'Failed to peek tag: "'+tag+'"');if(buffer.isError(decodedTag))return decodedTag;buffer.restore(state);return decodedTag.tag===tag||decodedTag.tagStr===tag||decodedTag.tagStr+'of'===tag||any;};DERNode.prototype._decodeTag=function decodeTag(buffer,tag,any){const decodedTag=derDecodeTag(buffer,'Failed to decode tag of "'+tag+'"');if(buffer.isError(decodedTag))return decodedTag;let len=derDecodeLen(buffer,decodedTag.primitive,'Failed to get length of "'+tag+'"');// Failure
if(buffer.isError(len))return len;if(!any&&decodedTag.tag!==tag&&decodedTag.tagStr!==tag&&decodedTag.tagStr+'of'!==tag){return buffer.error('Failed to match tag: "'+tag+'"');}if(decodedTag.primitive||len!==null)return buffer.skip(len,'Failed to match body of: "'+tag+'"');// Indefinite length... find END tag
const state=buffer.save();const res=this._skipUntilEnd(buffer,'Failed to skip indefinite length body: "'+this.tag+'"');if(buffer.isError(res))return res;len=buffer.offset-state.offset;buffer.restore(state);return buffer.skip(len,'Failed to match body of: "'+tag+'"');};DERNode.prototype._skipUntilEnd=function skipUntilEnd(buffer,fail){for(;;){const tag=derDecodeTag(buffer,fail);if(buffer.isError(tag))return tag;const len=derDecodeLen(buffer,tag.primitive,fail);if(buffer.isError(len))return len;let res;if(tag.primitive||len!==null)res=buffer.skip(len);else res=this._skipUntilEnd(buffer,fail);// Failure
if(buffer.isError(res))return res;if(tag.tagStr==='end')break;}};DERNode.prototype._decodeList=function decodeList(buffer,tag,decoder,options){const result=[];while(!buffer.isEmpty()){const possibleEnd=this._peekTag(buffer,'end');if(buffer.isError(possibleEnd))return possibleEnd;const res=decoder.decode(buffer,'der',options);if(buffer.isError(res)&&possibleEnd)break;result.push(res);}return result;};DERNode.prototype._decodeStr=function decodeStr(buffer,tag){if(tag==='bitstr'){const unused=buffer.readUInt8();if(buffer.isError(unused))return unused;return{unused:unused,data:buffer.raw()};}else if(tag==='bmpstr'){const raw=buffer.raw();if(raw.length%2===1)return buffer.error('Decoding of string type: bmpstr length mismatch');let str='';for(let i=0;i<raw.length/2;i++){str+=String.fromCharCode(raw.readUInt16BE(i*2));}return str;}else if(tag==='numstr'){const numstr=buffer.raw().toString('ascii');if(!this._isNumstr(numstr)){return buffer.error('Decoding of string type: '+'numstr unsupported characters');}return numstr;}else if(tag==='octstr'){return buffer.raw();}else if(tag==='objDesc'){return buffer.raw();}else if(tag==='printstr'){const printstr=buffer.raw().toString('ascii');if(!this._isPrintstr(printstr)){return buffer.error('Decoding of string type: '+'printstr unsupported characters');}return printstr;}else if(/str$/.test(tag)){return buffer.raw().toString();}else{return buffer.error('Decoding of string type: '+tag+' unsupported');}};DERNode.prototype._decodeObjid=function decodeObjid(buffer,values,relative){let result;const identifiers=[];let ident=0;let subident=0;while(!buffer.isEmpty()){subident=buffer.readUInt8();ident<<=7;ident|=subident&0x7f;if((subident&0x80)===0){identifiers.push(ident);ident=0;}}if(subident&0x80)identifiers.push(ident);const first=identifiers[0]/40|0;const second=identifiers[0]%40;if(relative)result=identifiers;else result=[first,second].concat(identifiers.slice(1));if(values){let tmp=values[result.join(' ')];if(tmp===undefined)tmp=values[result.join('.')];if(tmp!==undefined)result=tmp;}return result;};DERNode.prototype._decodeTime=function decodeTime(buffer,tag){const str=buffer.raw().toString();let year;let mon;let day;let hour;let min;let sec;if(tag==='gentime'){year=str.slice(0,4)|0;mon=str.slice(4,6)|0;day=str.slice(6,8)|0;hour=str.slice(8,10)|0;min=str.slice(10,12)|0;sec=str.slice(12,14)|0;}else if(tag==='utctime'){year=str.slice(0,2)|0;mon=str.slice(2,4)|0;day=str.slice(4,6)|0;hour=str.slice(6,8)|0;min=str.slice(8,10)|0;sec=str.slice(10,12)|0;if(year<70)year=2000+year;else year=1900+year;}else{return buffer.error('Decoding '+tag+' time is not supported yet');}return Date.UTC(year,mon-1,day,hour,min,sec,0);};DERNode.prototype._decodeNull=function decodeNull(){return null;};DERNode.prototype._decodeBool=function decodeBool(buffer){const res=buffer.readUInt8();if(buffer.isError(res))return res;else return res!==0;};DERNode.prototype._decodeInt=function decodeInt(buffer,values){// Bigint, return as it is (assume big endian)
const raw=buffer.raw();let res=new bignum(raw);if(values)res=values[res.toString(10)]||res;return res;};DERNode.prototype._use=function use(entity,obj){if(typeof entity==='function')entity=entity(obj);return entity._getDecoder('der').tree;};// Utility methods
function derDecodeTag(buf,fail){let tag=buf.readUInt8(fail);if(buf.isError(tag))return tag;const cls=der.tagClass[tag>>6];const primitive=(tag&0x20)===0;// Multi-octet tag - load
if((tag&0x1f)===0x1f){let oct=tag;tag=0;while((oct&0x80)===0x80){oct=buf.readUInt8(fail);if(buf.isError(oct))return oct;tag<<=7;tag|=oct&0x7f;}}else{tag&=0x1f;}const tagStr=der.tag[tag];return{cls:cls,primitive:primitive,tag:tag,tagStr:tagStr};}function derDecodeLen(buf,primitive,fail){let len=buf.readUInt8(fail);if(buf.isError(len))return len;// Indefinite form
if(!primitive&&len===0x80)return null;// Definite form
if((len&0x80)===0){// Short form
return len;}// Long form
const num=len&0x7f;if(num>4)return buf.error('length octect is too long');len=0;for(let i=0;i<num;i++){len<<=8;const j=buf.readUInt8(fail);if(buf.isError(j))return j;len|=j;}return len;}},{"../base/buffer":42,"../base/node":44,"../constants/der":46,"bn.js":54,"inherits":223}],49:[function(require,module,exports){'use strict';const decoders=exports;decoders.der=require('./der');decoders.pem=require('./pem');},{"./der":48,"./pem":50}],50:[function(require,module,exports){'use strict';const inherits=require('inherits');const Buffer=require('safer-buffer').Buffer;const DERDecoder=require('./der');function PEMDecoder(entity){DERDecoder.call(this,entity);this.enc='pem';}inherits(PEMDecoder,DERDecoder);module.exports=PEMDecoder;PEMDecoder.prototype.decode=function decode(data,options){const lines=data.toString().split(/[\r\n]+/g);const label=options.label.toUpperCase();const re=/^-----(BEGIN|END) ([^-]+)-----$/;let start=-1;let end=-1;for(let i=0;i<lines.length;i++){const match=lines[i].match(re);if(match===null)continue;if(match[2]!==label)continue;if(start===-1){if(match[1]!=='BEGIN')break;start=i;}else{if(match[1]!=='END')break;end=i;break;}}if(start===-1||end===-1)throw new Error('PEM section not found for: '+label);const base64=lines.slice(start+1,end).join('');// Remove excessive symbols
base64.replace(/[^a-z0-9+/=]+/gi,'');const input=Buffer.from(base64,'base64');return DERDecoder.prototype.decode.call(this,input,options);};},{"./der":48,"inherits":223,"safer-buffer":255}],51:[function(require,module,exports){'use strict';const inherits=require('inherits');const Buffer=require('safer-buffer').Buffer;const Node=require('../base/node');// Import DER constants
const der=require('../constants/der');function DEREncoder(entity){this.enc='der';this.name=entity.name;this.entity=entity;// Construct base tree
this.tree=new DERNode();this.tree._init(entity.body);}module.exports=DEREncoder;DEREncoder.prototype.encode=function encode(data,reporter){return this.tree._encode(data,reporter).join();};// Tree methods
function DERNode(parent){Node.call(this,'der',parent);}inherits(DERNode,Node);DERNode.prototype._encodeComposite=function encodeComposite(tag,primitive,cls,content){const encodedTag=encodeTag(tag,primitive,cls,this.reporter);// Short form
if(content.length<0x80){const header=Buffer.alloc(2);header[0]=encodedTag;header[1]=content.length;return this._createEncoderBuffer([header,content]);}// Long form
// Count octets required to store length
let lenOctets=1;for(let i=content.length;i>=0x100;i>>=8)lenOctets++;const header=Buffer.alloc(1+1+lenOctets);header[0]=encodedTag;header[1]=0x80|lenOctets;for(let i=1+lenOctets,j=content.length;j>0;i--,j>>=8)header[i]=j&0xff;return this._createEncoderBuffer([header,content]);};DERNode.prototype._encodeStr=function encodeStr(str,tag){if(tag==='bitstr'){return this._createEncoderBuffer([str.unused|0,str.data]);}else if(tag==='bmpstr'){const buf=Buffer.alloc(str.length*2);for(let i=0;i<str.length;i++){buf.writeUInt16BE(str.charCodeAt(i),i*2);}return this._createEncoderBuffer(buf);}else if(tag==='numstr'){if(!this._isNumstr(str)){return this.reporter.error('Encoding of string type: numstr supports '+'only digits and space');}return this._createEncoderBuffer(str);}else if(tag==='printstr'){if(!this._isPrintstr(str)){return this.reporter.error('Encoding of string type: printstr supports '+'only latin upper and lower case letters, '+'digits, space, apostrophe, left and rigth '+'parenthesis, plus sign, comma, hyphen, '+'dot, slash, colon, equal sign, '+'question mark');}return this._createEncoderBuffer(str);}else if(/str$/.test(tag)){return this._createEncoderBuffer(str);}else if(tag==='objDesc'){return this._createEncoderBuffer(str);}else{return this.reporter.error('Encoding of string type: '+tag+' unsupported');}};DERNode.prototype._encodeObjid=function encodeObjid(id,values,relative){if(typeof id==='string'){if(!values)return this.reporter.error('string objid given, but no values map found');if(!values.hasOwnProperty(id))return this.reporter.error('objid not found in values map');id=values[id].split(/[\s.]+/g);for(let i=0;i<id.length;i++)id[i]|=0;}else if(Array.isArray(id)){id=id.slice();for(let i=0;i<id.length;i++)id[i]|=0;}if(!Array.isArray(id)){return this.reporter.error('objid() should be either array or string, '+'got: '+JSON.stringify(id));}if(!relative){if(id[1]>=40)return this.reporter.error('Second objid identifier OOB');id.splice(0,2,id[0]*40+id[1]);}// Count number of octets
let size=0;for(let i=0;i<id.length;i++){let ident=id[i];for(size++;ident>=0x80;ident>>=7)size++;}const objid=Buffer.alloc(size);let offset=objid.length-1;for(let i=id.length-1;i>=0;i--){let ident=id[i];objid[offset--]=ident&0x7f;while((ident>>=7)>0)objid[offset--]=0x80|ident&0x7f;}return this._createEncoderBuffer(objid);};function two(num){if(num<10)return'0'+num;else return num;}DERNode.prototype._encodeTime=function encodeTime(time,tag){let str;const date=new Date(time);if(tag==='gentime'){str=[two(date.getUTCFullYear()),two(date.getUTCMonth()+1),two(date.getUTCDate()),two(date.getUTCHours()),two(date.getUTCMinutes()),two(date.getUTCSeconds()),'Z'].join('');}else if(tag==='utctime'){str=[two(date.getUTCFullYear()%100),two(date.getUTCMonth()+1),two(date.getUTCDate()),two(date.getUTCHours()),two(date.getUTCMinutes()),two(date.getUTCSeconds()),'Z'].join('');}else{this.reporter.error('Encoding '+tag+' time is not supported yet');}return this._encodeStr(str,'octstr');};DERNode.prototype._encodeNull=function encodeNull(){return this._createEncoderBuffer('');};DERNode.prototype._encodeInt=function encodeInt(num,values){if(typeof num==='string'){if(!values)return this.reporter.error('String int or enum given, but no values map');if(!values.hasOwnProperty(num)){return this.reporter.error('Values map doesn\'t contain: '+JSON.stringify(num));}num=values[num];}// Bignum, assume big endian
if(typeof num!=='number'&&!Buffer.isBuffer(num)){const numArray=num.toArray();if(!num.sign&&numArray[0]&0x80){numArray.unshift(0);}num=Buffer.from(numArray);}if(Buffer.isBuffer(num)){let size=num.length;if(num.length===0)size++;const out=Buffer.alloc(size);num.copy(out);if(num.length===0)out[0]=0;return this._createEncoderBuffer(out);}if(num<0x80)return this._createEncoderBuffer(num);if(num<0x100)return this._createEncoderBuffer([0,num]);let size=1;for(let i=num;i>=0x100;i>>=8)size++;const out=new Array(size);for(let i=out.length-1;i>=0;i--){out[i]=num&0xff;num>>=8;}if(out[0]&0x80){out.unshift(0);}return this._createEncoderBuffer(Buffer.from(out));};DERNode.prototype._encodeBool=function encodeBool(value){return this._createEncoderBuffer(value?0xff:0);};DERNode.prototype._use=function use(entity,obj){if(typeof entity==='function')entity=entity(obj);return entity._getEncoder('der').tree;};DERNode.prototype._skipDefault=function skipDefault(dataBuffer,reporter,parent){const state=this._baseState;let i;if(state['default']===null)return false;const data=dataBuffer.join();if(state.defaultBuffer===undefined)state.defaultBuffer=this._encodeValue(state['default'],reporter,parent).join();if(data.length!==state.defaultBuffer.length)return false;for(i=0;i<data.length;i++)if(data[i]!==state.defaultBuffer[i])return false;return true;};// Utility methods
function encodeTag(tag,primitive,cls,reporter){let res;if(tag==='seqof')tag='seq';else if(tag==='setof')tag='set';if(der.tagByName.hasOwnProperty(tag))res=der.tagByName[tag];else if(typeof tag==='number'&&(tag|0)===tag)res=tag;else return reporter.error('Unknown tag: '+tag);if(res>=0x1f)return reporter.error('Multi-octet tag encoding unsupported');if(!primitive)res|=0x20;res|=der.tagClassByName[cls||'universal']<<6;return res;}},{"../base/node":44,"../constants/der":46,"inherits":223,"safer-buffer":255}],52:[function(require,module,exports){'use strict';const encoders=exports;encoders.der=require('./der');encoders.pem=require('./pem');},{"./der":51,"./pem":53}],53:[function(require,module,exports){'use strict';const inherits=require('inherits');const DEREncoder=require('./der');function PEMEncoder(entity){DEREncoder.call(this,entity);this.enc='pem';}inherits(PEMEncoder,DEREncoder);module.exports=PEMEncoder;PEMEncoder.prototype.encode=function encode(data,options){const buf=DEREncoder.prototype.encode.call(this,data);const p=buf.toString('base64');const out=['-----BEGIN '+options.label+'-----'];for(let i=0;i<p.length;i+=64)out.push(p.slice(i,i+64));out.push('-----END '+options.label+'-----');return out.join('\n');};},{"./der":51,"inherits":223}],54:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments);},{"buffer":96,"dup":2}],55:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Explorer_1=__importDefault(require("../../Actions/Explorer"));const ApiError_1=__importDefault(require("../../Errors/ApiError"));function buildDataOptions(options,data){const dataKeys=Object.keys(data);const dataFields={};for(const key of dataKeys){if(typeof data[key]==='number'){dataFields['data:number.'+key]=data[key];}else if(typeof data[key]==='boolean'){dataFields['data:bool.'+key]=data[key];}else{dataFields['data.'+key]=data[key];}}return Object.assign({},options,dataFields);}class ExplorerApi{constructor(endpoint,namespace,args){this.endpoint=endpoint;this.namespace=namespace;if(args.fetch){this.fetchBuiltin=args.fetch;}else{this.fetchBuiltin=window.fetch;}this.action=(async()=>{return new Explorer_1.default((await this.getConfig()).contract,this);})();}async getConfig(){return await this.fetchEndpoint('/v1/config',{});}async getAssets(options={},page=1,limit=100,data={}){return await this.fetchEndpoint('/v1/assets',Object.assign({page,limit},buildDataOptions(options,data)));}async countAssets(options,data={}){return await this.countEndpoint('/v1/assets',buildDataOptions(options,data));}async getAsset(id){return await this.fetchEndpoint('/v1/assets/'+id,{});}async getAssetStats(id){return await this.fetchEndpoint('/v1/assets/'+id+'/stats',{});}async getAssetLogs(id,page=1,limit=100,order='desc'){return await this.fetchEndpoint('/v1/assets/'+id+'/logs',{page,limit,order});}async getCollections(options={},page=1,limit=100){return await this.fetchEndpoint('/v1/collections',Object.assign({page,limit},options));}async countCollections(options={}){return await this.countEndpoint('/v1/collections',options);}async getCollection(name){return await this.fetchEndpoint('/v1/collections/'+name,{});}async getCollectionStats(name){return await this.fetchEndpoint('/v1/collections/'+name+'/stats',{});}async getCollectionLogs(name,page=1,limit=100,order='desc'){return await this.fetchEndpoint('/v1/collections/'+name+'/logs',{page,limit,order});}async getSchemas(options={},page=1,limit=100){return await this.fetchEndpoint('/v1/schemas',Object.assign({page,limit},options));}async countSchemas(options={}){return await this.countEndpoint('/v1/schemas',options);}async getSchema(collection,name){return await this.fetchEndpoint('/v1/schemas/'+collection+'/'+name,{});}async getSchemaStats(collection,name){return await this.fetchEndpoint('/v1/schemas/'+collection+'/'+name+'/stats',{});}async getSchemaLogs(collection,name,page=1,limit=100,order='desc'){return await this.fetchEndpoint('/v1/schemas/'+collection+'/'+name+'/logs',{page,limit,order});}async getTemplates(options={},page=1,limit=100,data={}){return await this.fetchEndpoint('/v1/templates',Object.assign({page,limit},buildDataOptions(options,data)));}async countTemplates(options={},data={}){return await this.countEndpoint('/v1/templates',buildDataOptions(options,data));}async getTemplate(collection,id){return await this.fetchEndpoint('/v1/templates/'+collection+'/'+id,{});}async getTemplateStats(collection,name){return await this.fetchEndpoint('/v1/templates/'+collection+'/'+name+'/stats',{});}async getTemplateLogs(collection,id,page=1,limit=100,order='desc'){return await this.fetchEndpoint('/v1/templates/'+collection+'/'+id+'/logs',{page,limit,order});}async getTransfers(options={},page=1,limit=100){return await this.fetchEndpoint('/v1/transfers',Object.assign({page,limit},options));}async countTransfers(options={}){return await this.countEndpoint('/v1/transfers',options);}async getOffers(options={},page=1,limit=100){return await this.fetchEndpoint('/v1/offers',Object.assign({page,limit},options));}async countOffers(options={}){return await this.countEndpoint('/v1/offers',options);}async getOffer(id){return await this.fetchEndpoint('/v1/offers/'+id,{});}async getAccounts(options={},page=1,limit=100){return await this.fetchEndpoint('/v1/accounts',Object.assign({page,limit},options));}async getBurns(options={},page=1,limit=100){return await this.fetchEndpoint('/v1/burns',Object.assign({page,limit},options));}async countAccounts(options={}){return await this.countEndpoint('/v1/accounts',options);}async getAccount(account,options={}){return await this.fetchEndpoint('/v1/accounts/'+account,options);}async getAccountCollection(account,collection){return await this.fetchEndpoint('/v1/accounts/'+account+'/'+collection,{});}async getAccountBurns(account,options={}){return await this.fetchEndpoint('/v1/burns/'+account,options);}async fetchEndpoint(path,args){let response,json;const f=this.fetchBuiltin;const queryString=Object.keys(args).map(key=>{let value=args[key];if(value===true){value='true';}if(value===false){value='false';}return key+'='+encodeURIComponent(value);}).join('&');try{response=await f(this.endpoint+'/'+this.namespace+path+(queryString.length>0?'?'+queryString:''));json=await response.json();}catch(e){throw new ApiError_1.default(e.message,500);}if(response.status!==200){throw new ApiError_1.default(json.message,response.status);}if(!json.success){throw new ApiError_1.default(json.message,response.status);}return json.data;}async countEndpoint(path,args){const res=await this.fetchEndpoint(path+'/_count',args);return parseInt(res,10);}}exports.default=ExplorerApi;},{"../../Actions/Explorer":64,"../../Errors/ApiError":67}],56:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Serialization_1=require("../../Serialization");const Collection_1=__importDefault(require("./Collection"));const Schema_1=__importDefault(require("./Schema"));const Template_1=__importDefault(require("./Template"));class RpcAsset{constructor(api,owner,id,data,collection,schema,template,cache=true){this.api=api;this.owner=owner;this.id=id;this._data=new Promise(async(resolve,reject)=>{if(data){resolve(data);}else{try{resolve((await api.queue.fetchAsset(owner,id,cache)));}catch(e){reject(e);}}});this._template=new Promise(async(resolve,reject)=>{if(template){resolve(template);}else{try{const row=await this._data;if(Number(row.template_id)<0){return resolve(null);}resolve(new Template_1.default(api,row.collection_name,row.template_id,undefined,undefined,cache));}catch(e){reject(e);}}});this._collection=new Promise(async(resolve,reject)=>{if(collection){resolve(collection);}else{try{const row=await this._data;resolve(new Collection_1.default(api,row.collection_name,undefined,cache));}catch(e){reject(e);}}});this._schema=new Promise(async(resolve,reject)=>{if(schema){resolve(schema);}else{try{const row=await this._data;resolve(new Schema_1.default(api,row.collection_name,row.schema_name,undefined,cache));}catch(e){reject(e);}}});}async template(){return await this._template;}async collection(){return await this._collection;}async schema(){return await this._schema;}async backedTokens(){return(await this._data).backed_tokens;}async immutableData(){const schema=await this.schema();const row=await this._data;return Serialization_1.deserialize(row.immutable_serialized_data,(await schema.format()));}async mutableData(){const schema=await this.schema();const row=await this._data;return Serialization_1.deserialize(row.mutable_serialized_data,(await schema.format()));}async data(){const mutableData=await this.mutableData();const immutableData=await this.immutableData();const template=await this.template();const templateData=template?await template.immutableData():{};return Object.assign({},mutableData,immutableData,templateData);}async toObject(){const template=await this.template();const collection=await this.collection();const schema=await this.schema();return{asset_id:this.id,collection:await collection.toObject(),schema:await schema.toObject(),template:template?await template.toObject():null,backedTokens:await this.backedTokens(),immutableData:await this.immutableData(),mutableData:await this.mutableData(),data:await this.data()};}}exports.default=RpcAsset;},{"../../Serialization":89,"./Collection":58,"./Schema":61,"./Template":62}],57:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});// @ts-ignore
const pure_cache_1=__importDefault(require("pure-cache"));class RpcCache{constructor(){this.cache=new pure_cache_1.default({expiryCheckInterval:60*1000});}getAsset(assetID,data){if(data){data.mutable_serialized_data=new Uint8Array(data.mutable_serialized_data);data.immutable_serialized_data=new Uint8Array(data.immutable_serialized_data);}return this.access('assets',assetID,data);}deleteAsset(assetID){this.delete('assets',assetID);}getTemplate(collectionName,templateID,data){if(data){data.immutable_serialized_data=new Uint8Array(data.immutable_serialized_data);}return this.access('templates',collectionName+':'+templateID,data);}deleteTemplate(collectionName,templateID){this.delete('templates',collectionName+':'+templateID);}getSchema(collectionName,schemaName,data){return this.access('schemas',collectionName+':'+schemaName,data);}deleteSchema(collectionName,schemaName){this.delete('schemas',collectionName+':'+schemaName);}getCollection(collectionName,data){return this.access('collections',collectionName,data);}deleteCollection(collectionName){this.delete('collections',collectionName);}getOffer(offerID,data){return this.access('offers',offerID,data);}deleteOffer(offerID){this.delete('offers',offerID);}access(namespace,identifier,data){if(typeof data==='undefined'){const cache=this.cache.get(namespace+':'+identifier);return cache===null?null:cache.value;}this.cache.put(namespace+':'+identifier,data,15*60*1000);return data;}delete(namespace,identifier){this.cache.remove(namespace+':'+identifier);}}exports.default=RpcCache;},{"pure-cache":250}],58:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const Schema_1=require("../../Schema");const Serialization_1=require("../../Serialization");class RpcCollection{constructor(api,name,data,cache=true){this.api=api;this.name=name;this._data=new Promise(async(resolve,reject)=>{if(data){resolve(data);}else{try{resolve((await api.queue.fetchCollection(name,cache)));}catch(e){reject(e);}}});}async author(){return(await this._data).author;}async allowNotify(){return(await this._data).allow_notify;}async authorizedAccounts(){return(await this._data).authorized_accounts;}async notifyAccounts(){return(await this._data).notify_accounts;}async marketFee(){return Number((await this._data).market_fee);}async data(){return Serialization_1.deserialize((await this._data).serialized_data,Schema_1.ObjectSchema((await this.api.config()).collection_format));}async toObject(){return{collection_name:this.name,author:await this.author(),allowNotify:await this.allowNotify(),authorizedAccounts:await this.authorizedAccounts(),notifyAccounts:await this.notifyAccounts(),marketFee:await this.marketFee(),data:await this.data()};}}exports.default=RpcCollection;},{"../../Schema":75,"../../Serialization":89}],59:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Asset_1=__importDefault(require("./Asset"));class RpcOffer{constructor(api,id,data,senderAssets,receiverAssets,cache=true){this.api=api;this.id=id;this._data=new Promise(async(resolve,reject)=>{if(data){resolve(data);}else{try{resolve((await this.api.queue.fetchOffer(id,cache)));}catch(e){reject(e);}}});this._senderAssets=new Promise(async(resolve,reject)=>{if(senderAssets){resolve(senderAssets);}else{try{const row=await this._data;const inventory=await this.api.queue.fetchAccountAssets(row.sender);return resolve(row.sender_asset_ids.map(assetID=>{const asset=inventory.find(assetRow=>assetRow.asset_id===assetID);return asset?new Asset_1.default(this.api,row.sender,assetID,asset,undefined,undefined,undefined,cache):assetID;}));}catch(e){return reject(e);}}});this._recipientAssets=new Promise(async(resolve,reject)=>{if(receiverAssets){resolve(receiverAssets);}else{try{const row=await this._data;const inventory=await this.api.queue.fetchAccountAssets(row.recipient);return resolve(row.recipient_asset_ids.map(assetID=>{const asset=inventory.find(assetRow=>assetRow.asset_id===assetID);return asset?new Asset_1.default(this.api,row.recipient,assetID,asset,undefined,undefined,undefined,cache):assetID;}));}catch(e){return reject(e);}}});}async sender(){return(await this._data).sender;}async recipient(){return(await this._data).recipient;}async senderAssets(){return await this._senderAssets;}async recipientAssets(){return await this._recipientAssets;}async memo(){return(await this._data).memo;}async toObject(){return{offer_id:this.id,sender:{account:await this.sender(),assets:await Promise.all((await this.senderAssets()).map(async asset=>typeof asset==='string'?asset:await asset.toObject()))},recipient:{account:await this.recipient(),assets:await Promise.all((await this.recipientAssets()).map(async asset=>typeof asset==='string'?asset:await asset.toObject()))},memo:await this.memo()};}}exports.default=RpcOffer;},{"./Asset":56}],60:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class RpcQueue{constructor(api,requestLimit=4){this.api=api;this.requestLimit=requestLimit;this.elements=[];this.interval=null;this.preloadedCollections={};}async fetchAsset(owner,assetID,useCache=true){return await this.fetch_single_row('assets',owner,assetID,data=>{return useCache||typeof data!=='undefined'?this.api.cache.getAsset(assetID,data):null;});}async fetchAccountAssets(account){const rows=await this.fetch_all_rows('assets',account,'asset_id');return rows.map(asset=>{return this.api.cache.getAsset(asset.asset_id,asset);});}async fetchTemplate(collectionName,templateID,useCache=true){return await this.fetch_single_row('templates',collectionName,templateID,data=>{return useCache||typeof data!=='undefined'?this.api.cache.getTemplate(collectionName,templateID,data):null;});}async fetchSchema(collectionName,schemaName,useCache=true){return await this.fetch_single_row('schemas',collectionName,schemaName,data=>{return useCache||typeof data!=='undefined'?this.api.cache.getSchema(collectionName,schemaName,data):null;});}async fetchCollection(collectionName,useCache=true){return await this.fetch_single_row('collections',this.api.contract,collectionName,data=>{return useCache||typeof data!=='undefined'?this.api.cache.getCollection(collectionName,data):null;});}async fetchCollectionSchemas(collectionName){const rows=await this.fetch_all_rows('schemas',collectionName,'schema_name');return rows.map(schema=>{return this.api.cache.getSchema(collectionName,schema.schema_name,schema);});}async fetchCollectionTemplates(collectionName){const rows=await this.fetch_all_rows('templates',collectionName,'template_id');return rows.map(template=>{return this.api.cache.getTemplate(collectionName,String(template.template_id),template);});}async preloadCollection(collectionName,useCache=true){if(!useCache||!this.preloadedCollections[collectionName]||this.preloadedCollections[collectionName]+15*60*1000<Date.now()){await this.fetchCollectionSchemas(collectionName);await this.fetchCollectionTemplates(collectionName);}}async fetchOffer(offerID,useCache=true){return await this.fetch_single_row('offers',this.api.contract,offerID,data=>{return useCache||typeof data!=='undefined'?this.api.cache.getOffer(offerID,data):null;});}async fetchAccountOffers(account){const rows=await Promise.all([this.fetch_all_rows('offers',this.api.contract,'offer_sender',account,account,2,'name'),this.fetch_all_rows('offers',this.api.contract,'offer_recipient',account,account,3,'name')]);const offers=rows[0].concat(rows[1]);return offers.map(offer=>{return this.api.cache.getOffer(offer.offer_id,offer);});}dequeue(){if(this.interval){return;}this.interval=setInterval(async()=>{if(this.elements.length>0){this.elements.shift()();}else{clearInterval(this.interval);this.interval=null;}},Math.ceil(1000/this.requestLimit));}async fetch_single_row(table,scope,match,cacheFn,indexPosition=1,keyType=''){return new Promise((resolve,reject)=>{let data=cacheFn();if(data!==null){return resolve(data);}this.elements.push(async()=>{data=cacheFn();if(data!==null){return resolve(data);}try{const options={code:this.api.contract,table,scope,limit:1,lower_bound:match,upper_bound:match,index_position:indexPosition,key_type:keyType};const resp=await this.api.getTableRows(options);if(resp.rows.length===0){return reject(new Error('Row not found for '+JSON.stringify(options)));}return resolve(cacheFn(resp.rows[0]));}catch(e){return reject(e);}});this.dequeue();});}async fetch_all_rows(table,scope,tableKey,lowerBound='',upperBound='',indexPosition=1,keyType=''){return new Promise(async(resolve,reject)=>{this.elements.push(async()=>{const resp=await this.api.getTableRows({code:this.api.contract,scope,table,lower_bound:lowerBound,upper_bound:upperBound,limit:1000,index_position:indexPosition,key_type:keyType});if(resp.more&&indexPosition===1){this.elements.unshift(async()=>{try{const next=await this.fetch_all_rows(table,scope,tableKey,resp.rows[resp.rows.length-1][tableKey],upperBound,indexPosition,keyType);if(next.length>0){next.shift();}resolve(resp.rows.concat(next));}catch(e){reject(e);}});this.dequeue();}else{resolve(resp.rows);}});this.dequeue();});}}exports.default=RpcQueue;},{}],61:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Schema_1=require("../../Schema");const Collection_1=__importDefault(require("./Collection"));class RpcSchema{constructor(api,collection,name,data,cache=true){this.api=api;this.collection=collection;this.name=name;this._data=new Promise(async(resolve,reject)=>{if(data){resolve(data);}else{try{resolve((await api.queue.fetchSchema(collection,name,cache)));}catch(e){reject(e);}}});this._collection=new Promise(async(resolve,reject)=>{try{resolve(new Collection_1.default(api,collection,undefined,cache));}catch(e){reject(e);}});}async format(){return Schema_1.ObjectSchema((await this._data).format);}async rawFormat(){return(await this._data).format;}async toObject(){return{collection_name:this.collection,schema_name:this.name,format:await this.rawFormat()};}}exports.default=RpcSchema;},{"../../Schema":75,"./Collection":58}],62:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Serialization_1=require("../../Serialization");const Schema_1=__importDefault(require("./Schema"));class RpcTemplate{constructor(api,collection,id,data,schema,cache=true){this.api=api;this.collection=collection;this.id=id;this._data=new Promise(async(resolve,reject)=>{if(data){resolve(data);}else{try{resolve((await api.queue.fetchTemplate(collection,id,cache)));}catch(e){reject(e);}}});this._schema=new Promise(async(resolve,reject)=>{if(schema){resolve(schema);}else{try{const row=await this._data;resolve(new Schema_1.default(this.api,collection,row.schema_name,undefined,cache));}catch(e){reject(e);}}});}async schema(){return await this._schema;}async immutableData(){const schema=await this._schema;return Serialization_1.deserialize((await this._data).immutable_serialized_data,(await schema.format()));}async isTransferable(){return(await this._data).transferable;}async isBurnable(){return(await this._data).burnable;}async maxSupply(){return(await this._data).max_supply;}async circulation(){return(await this._data).issued_supply;}async toObject(){return{collection_name:this.collection,template_id:this.id,schema:await(await this.schema()).toObject(),immutableData:await this.immutableData(),transferable:await this.isTransferable(),burnable:await this.isBurnable(),maxSupply:await this.maxSupply(),circulation:await this.circulation()};}}exports.default=RpcTemplate;},{"../../Serialization":89,"./Schema":61}],63:[function(require,module,exports){(function(global){(function(){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Rpc_1=__importDefault(require("../../Actions/Rpc"));const RpcError_1=__importDefault(require("../../Errors/RpcError"));const Asset_1=__importDefault(require("./Asset"));const Cache_1=__importDefault(require("./Cache"));const Collection_1=__importDefault(require("./Collection"));const Offer_1=__importDefault(require("./Offer"));const Queue_1=__importDefault(require("./Queue"));const Schema_1=__importDefault(require("./Schema"));const Template_1=__importDefault(require("./Template"));class RpcApi{constructor(endpoint,contract,args={rateLimit:4}){this.endpoint=endpoint;this.contract=contract;if(args.fetch){this.fetchBuiltin=args.fetch;}else{this.fetchBuiltin=global.fetch;}this.queue=new Queue_1.default(this,args.rateLimit);this.cache=new Cache_1.default();this.action=new Rpc_1.default(this);this._config=new Promise(async(resolve,reject)=>{try{const resp=await this.getTableRows({code:this.contract,scope:this.contract,table:'config'});if(resp.rows.length!==1){return reject('invalid config');}return resolve(resp.rows[0]);}catch(e){reject(e);}});}async config(){return await this._config;}async getAsset(owner,id,cache=true){if(!cache){this.cache.deleteAsset(id);}const data=await this.queue.fetchAsset(owner,id,cache);return new Asset_1.default(this,owner,id,data,undefined,undefined,undefined,cache);}async getTemplate(collectionName,templateID,cache=true){if(!cache){this.cache.deleteTemplate(collectionName,templateID);}const data=await this.queue.fetchTemplate(collectionName,templateID,cache);return new Template_1.default(this,collectionName,templateID,data,undefined,cache);}async getCollection(collectionName,cache=true){if(!cache){this.cache.deleteCollection(collectionName);}const data=await this.queue.fetchCollection(collectionName,cache);return new Collection_1.default(this,collectionName,data,cache);}async getCollectionTemplates(collectionName){return(await this.queue.fetchCollectionTemplates(collectionName)).map(templateRow=>{return new Template_1.default(this,collectionName,String(templateRow.template_id),templateRow,undefined);});}async getCollectionsSchemas(collectionName){return(await this.queue.fetchCollectionSchemas(collectionName)).map(schemaRow=>{return new Schema_1.default(this,collectionName,schemaRow.schema_name,undefined);});}async getSchema(collectionName,schemaName,cache=true){if(!cache){this.cache.deleteSchema(collectionName,schemaName);}const data=await this.queue.fetchSchema(collectionName,schemaName,cache);return new Schema_1.default(this,collectionName,schemaName,data,cache);}async getOffer(offerID,cache=true){if(!cache){this.cache.deleteOffer(offerID);}const data=await this.queue.fetchOffer(offerID,cache);return new Offer_1.default(this,offerID,data,undefined,undefined,cache);}async getAccountOffers(account){return(await this.queue.fetchAccountOffers(account)).map(offerRow=>{return new Offer_1.default(this,offerRow.offer_id,offerRow,undefined,undefined);});}async getAccountAssets(account){return(await this.queue.fetchAccountAssets(account)).map(assetRow=>{return new Asset_1.default(this,account,assetRow.asset_id,assetRow,undefined,undefined,undefined);});}async getCollectionInventory(collectionName,account){await this.queue.preloadCollection(collectionName,true);return(await this.queue.fetchAccountAssets(account)).filter(assetRow=>assetRow.collection_name===collectionName).map(assetRow=>{return new Asset_1.default(this,account,assetRow.asset_id,assetRow,undefined,undefined,undefined);});}async preloadCollection(collectionName,cache=true){await this.queue.preloadCollection(collectionName,cache);}async getTableRows({code,scope,table,table_key='',lower_bound='',upper_bound='',index_position=1,key_type=''}){return await this.fetchRpc('/v1/chain/get_table_rows',{code,scope,table,table_key,lower_bound,upper_bound,index_position,key_type,limit:101,reverse:false,show_payer:false,json:true});}async fetchRpc(path,body){let response;let json;try{const f=this.fetchBuiltin;response=await f(this.endpoint+path,{body:JSON.stringify(body),method:'POST'});json=await response.json();}catch(e){e.isFetchError=true;throw e;}if(json.processed&&json.processed.except||!response.ok){throw new RpcError_1.default(json);}return json;}}exports.default=RpcApi;}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"../../Actions/Rpc":66,"../../Errors/RpcError":69,"./Asset":56,"./Cache":57,"./Collection":58,"./Offer":59,"./Queue":60,"./Schema":61,"./Template":62}],64:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const Generator_1=require("./Generator");/* tslint:disable:variable-name */class ExplorerActionGenerator extends Generator_1.ActionGenerator{constructor(contract,api){super(contract);this.api=api;this.config=api.getConfig();}async createcol(authorization,author,collection_name,allow_notify,authorized_accounts,notify_accounts,market_fee,data){return super.createcol(authorization,author,collection_name,allow_notify,authorized_accounts,notify_accounts,market_fee,Generator_1.toAttributeMap(data,(await this.config).collection_format));}async createtempl(authorization,authorized_creator,collection_name,schema_name,transferable,burnable,max_supply,immutable_data){const schema=await this.api.getSchema(collection_name,schema_name);const immutable_attribute_map=Generator_1.toAttributeMap(immutable_data,schema.format);return super.createtempl(authorization,authorized_creator,collection_name,schema_name,transferable,burnable,max_supply,immutable_attribute_map);}async mintasset(authorization,authorized_minter,collection_name,schema_name,template_id,new_owner,immutable_data,mutable_data,tokens_to_back){const schema=await this.api.getSchema(collection_name,schema_name);const immutable_attribute_map=Generator_1.toAttributeMap(immutable_data,schema.format);const mutable_attribute_map=Generator_1.toAttributeMap(mutable_data,schema.format);return super.mintasset(authorization,authorized_minter,collection_name,schema_name,template_id,new_owner,immutable_attribute_map,mutable_attribute_map,tokens_to_back);}async setassetdata(authorization,authorized_editor,owner,asset_id,mutable_data){const asset=await this.api.getAsset(asset_id);const mutable_attribute_map=Generator_1.toAttributeMap(mutable_data,asset.schema.format);return super.setassetdata(authorization,authorized_editor,owner,asset_id,mutable_attribute_map);}async setcoldata(authorization,collection_name,data){const mdata=Generator_1.toAttributeMap(data,(await this.config).collection_format);return super.setcoldata(authorization,collection_name,mdata);}}exports.default=ExplorerActionGenerator;},{"./Generator":65}],65:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.toAttributeMap=exports.ActionGenerator=void 0;const SerializationError_1=__importDefault(require("../Errors/SerializationError"));/* tslint:disable:variable-name */class ActionGenerator{constructor(contract){this.contract=contract;}async acceptoffer(authorization,offer_id){return this._pack(authorization,'acceptoffer',{offer_id});}async addcolauth(authorization,collection_name,account_to_add){return this._pack(authorization,'addcolauth',{collection_name,account_to_add});}async addconftoken(authorization,token_contract,token_symbol){return this._pack(authorization,'addconftoken',{token_contract,token_symbol});}async addnotifyacc(authorization,collection_name,account_to_add){return this._pack(authorization,'addnotifyacc',{collection_name,account_to_add});}async announcedepo(authorization,owner,symbol_to_announce){return this._pack(authorization,'announcedepo',{owner,symbol_to_announce});}async backasset(authorization,payer,asset_owner,asset_id,token_to_back){return this._pack(authorization,'backasset',{payer,asset_owner,asset_id,token_to_back});}async burnasset(authorization,asset_owner,asset_id){return this._pack(authorization,'burnasset',{asset_owner,asset_id});}async canceloffer(authorization,offer_id){return this._pack(authorization,'canceloffer',{offer_id});}async createcol(authorization,author,collection_name,allow_notify,authorized_accounts,notify_accounts,market_fee,data){return this._pack(authorization,'createcol',{author,collection_name,allow_notify,authorized_accounts,notify_accounts,market_fee,data});}async createoffer(authorization,sender,recipient,sender_asset_ids,recipient_asset_ids,memo){return this._pack(authorization,'createoffer',{sender,recipient,sender_asset_ids,recipient_asset_ids,memo});}async createtempl(authorization,authorized_creator,collection_name,schema_name,transferable,burnable,max_supply,immutable_data){return this._pack(authorization,'createtempl',{authorized_creator,collection_name,schema_name,transferable,burnable,max_supply,immutable_data});}async createschema(authorization,authorized_creator,collection_name,schema_name,schema_format){return this._pack(authorization,'createschema',{authorized_creator,collection_name,schema_name,schema_format});}async declineoffer(authorization,offer_id){return this._pack(authorization,'declineoffer',{offer_id});}async extendschema(authorization,authorized_editor,collection_name,schema_name,schema_format_extension){return this._pack(authorization,'extendschema',{authorized_editor,collection_name,schema_name,schema_format_extension});}async forbidnotify(authorization,collection_name){return this._pack(authorization,'forbidnotify',{collection_name});}async locktemplate(authorization,authorized_editor,collection_name,template_id){return this._pack(authorization,'locktemplate',{authorized_editor,collection_name,template_id});}async mintasset(authorization,authorized_minter,collection_name,schema_name,template_id,new_asset_owner,immutable_data,mutable_data,tokens_to_back){return this._pack(authorization,'mintasset',{authorized_minter,collection_name,schema_name,template_id,new_asset_owner,immutable_data,mutable_data,tokens_to_back});}async payofferram(authorization,payer,offer_id){return this._pack(authorization,'payofferram',{payer,offer_id});}async remcolauth(authorization,collection_name,account_to_remove){return this._pack(authorization,'remcolauth',{collection_name,account_to_remove});}async remnotifyacc(authorization,collection_name,account_to_remove){return this._pack(authorization,'remnotifyacc',{collection_name,account_to_remove});}async setassetdata(authorization,authorized_editor,asset_owner,asset_id,new_mutable_data){return this._pack(authorization,'setassetdata',{authorized_editor,asset_owner,asset_id,new_mutable_data});}async setcoldata(authorization,collection_name,data){return this._pack(authorization,'setcoldata',{collection_name,data});}async setmarketfee(authorization,collection_name,market_fee){return this._pack(authorization,'setmarketfee',{collection_name,market_fee});}async transfer(authorization,account_from,account_to,asset_ids,memo){return this._pack(authorization,'transfer',{from:account_from,to:account_to,asset_ids,memo});}async withdraw(authorization,owner,token_to_withdraw){return this._pack(authorization,'withdraw',{owner,token_to_withdraw});}_pack(authorization,name,data){return[{account:this.contract,name,authorization,data}];}}exports.ActionGenerator=ActionGenerator;function toAttributeMap(obj,schema){const types={};const result=[];for(const row of schema){types[row.name]=row.type;}const keys=Object.keys(obj);for(const key of keys){if(typeof types[key]!=='undefined'){throw new SerializationError_1.default('field not defined in schema');}result.push({key,value:[types[key],obj[key]]});}return result;}exports.toAttributeMap=toAttributeMap;},{"../Errors/SerializationError":71}],66:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const Generator_1=require("./Generator");/* tslint:disable:variable-name */class RpcActionGenerator extends Generator_1.ActionGenerator{constructor(api){super(api.contract);this.api=api;}async createcol(authorization,author,collection_name,allow_notify,authorized_accounts,notify_accounts,market_fee,data){const config=await this.api.config();return super.createcol(authorization,author,collection_name,allow_notify,authorized_accounts,notify_accounts,market_fee,Generator_1.toAttributeMap(data,config.collection_format));}async createtempl(authorization,authorized_creator,collection_name,schema_name,transferable,burnable,max_supply,immutable_data){const schema=await this.api.getSchema(collection_name,schema_name);const immutable_attribute_map=Generator_1.toAttributeMap(immutable_data,(await schema.rawFormat()));return super.createtempl(authorization,authorized_creator,collection_name,schema_name,transferable,burnable,max_supply,immutable_attribute_map);}async mintasset(authorization,authorized_minter,collection_name,schema_name,template_id,new_owner,immutable_data,mutable_data,tokens_to_back){const template=await this.api.getTemplate(collection_name,template_id);const immutable_attribute_map=Generator_1.toAttributeMap(immutable_data,(await(await template.schema()).rawFormat()));const mutable_attribute_map=Generator_1.toAttributeMap(mutable_data,(await(await template.schema()).rawFormat()));return super.mintasset(authorization,authorized_minter,collection_name,schema_name,template_id,new_owner,immutable_attribute_map,mutable_attribute_map,tokens_to_back);}async setassetdata(authorization,authorized_editor,owner,asset_id,mutable_data){const asset=await this.api.getAsset(owner,asset_id);const schema=await asset.schema();const mutable_attribute_map=Generator_1.toAttributeMap(mutable_data,(await schema.rawFormat()));return super.setassetdata(authorization,authorized_editor,owner,asset_id,mutable_attribute_map);}async setcoldata(authorization,collection_name,data){const mdata=Generator_1.toAttributeMap(data,(await this.api.config()).collection_format);return super.setcoldata(authorization,collection_name,mdata);}}exports.default=RpcActionGenerator;},{"./Generator":65}],67:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class ApiError extends Error{constructor(message,status){super(message);this.message=message;this.status=status;this.isApiError=true;}}exports.default=ApiError;},{}],68:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class DeserializationError extends Error{}exports.default=DeserializationError;},{}],69:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class RpcError extends Error{constructor(json){if(json.error&&json.error.details&&json.error.details.length&&json.error.details[0].message){super(json.error.details[0].message);}else if(json.processed&&json.processed.except&&json.processed.except.message){super(json.processed.except.message);}else{super(json.message);}this.json=json;}}exports.default=RpcError;},{}],70:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class SchemaError extends Error{}exports.default=SchemaError;},{}],71:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class SerializationError extends Error{}exports.default=SerializationError;},{}],72:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const SchemaError_1=__importDefault(require("../Errors/SchemaError"));const Binary_1=require("../Serialization/Binary");class MappingSchema{constructor(attributes){this.attributes=attributes;this.reserved=4;}deserialize(state,upwardsCompatible=false){const object={};while(state.position<state.data.length){const identifier=Binary_1.varint_decode(state);if(identifier.equals(0)){break;}const attribute=this.getAttribute(identifier.toJSNumber(),!upwardsCompatible);if(attribute){object[attribute.name]=attribute.value.deserialize(state);}}return object;}serialize(object){const data=[];for(let i=0;i<this.attributes.length;i++){const attribute=this.attributes[i];if(typeof object[attribute.name]==='undefined'){continue;}data.push(Binary_1.varint_encode(i+this.reserved));data.push(attribute.value.serialize(object[attribute.name]));}data.push(Binary_1.varint_encode(0));return Binary_1.concat_byte_arrays(data);}getAttribute(identifier,throwError=true){const attributeID=identifier-this.reserved;if(attributeID>=this.attributes.length){if(throwError){throw new SchemaError_1.default('attribute does not exists');}return;}return this.attributes[Number(attributeID)];}}exports.default=MappingSchema;},{"../Errors/SchemaError":70,"../Serialization/Binary":76}],73:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const SchemaError_1=__importDefault(require("../Errors/SchemaError"));const __1=require("..");class ValueSchema{constructor(type){if(typeof __1.ParserTypes[type]==='undefined'){throw new SchemaError_1.default(`attribute type '${type}' not defined`);}this.parser=__1.ParserTypes[type];}deserialize(state){return this.parser.deserialize(state);}serialize(value){return this.parser.serialize(value);}}exports.default=ValueSchema;},{"..":90,"../Errors/SchemaError":70}],74:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const Binary_1=require("../Serialization/Binary");class VectorSchema{constructor(element){this.element=element;}deserialize(state){const length=Binary_1.varint_decode(state).toJSNumber();const array=[];for(let i=0;i<length;i++){array.push(this.element.deserialize(state));}return array;}serialize(array){const data=[Binary_1.varint_encode(array.length)];for(const element of array){data.push(this.element.serialize(element));}return Binary_1.concat_byte_arrays(data);}}exports.default=VectorSchema;},{"../Serialization/Binary":76}],75:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.ObjectSchema=void 0;const SchemaError_1=__importDefault(require("../Errors/SchemaError"));const MappingSchema_1=__importDefault(require("./MappingSchema"));const ValueSchema_1=__importDefault(require("./ValueSchema"));const VectorSchema_1=__importDefault(require("./VectorSchema"));function buildObjectSchema(objectID,lookup){const attributes=[];let fields=lookup[objectID];if(typeof fields==='undefined'){fields=[];}delete lookup[objectID];for(const field of fields){attributes.push({name:field.name,value:buildValueSchema(field.type,lookup)});}return new MappingSchema_1.default(attributes);}function buildValueSchema(type,lookup){if(type.endsWith('[]')){return new VectorSchema_1.default(buildValueSchema(type.substring(0,type.length-2),lookup));}// not supported by the contract currently
if(type.startsWith('object{')&&type.endsWith('}')){const objectID=parseInt(type.substring(7,type.length-1),10);if(isNaN(objectID)){throw new SchemaError_1.default(`invalid type '${type}'`);}return buildObjectSchema(objectID,lookup);}return new ValueSchema_1.default(type);}function ObjectSchema(schema){const objectLookup={};for(const schemaObject of schema){const objectID=typeof schemaObject.parent==='undefined'?0:schemaObject.parent;if(typeof objectLookup[objectID]==='undefined'){objectLookup[objectID]=[];}objectLookup[objectID].push(schemaObject);}return buildObjectSchema(0,objectLookup);}exports.ObjectSchema=ObjectSchema;},{"../Errors/SchemaError":70,"./MappingSchema":72,"./ValueSchema":73,"./VectorSchema":74}],76:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.byte_vector_to_int=exports.int_to_byte_vector=exports.concat_byte_arrays=exports.hex_encode=exports.hex_decode=exports.base58_encode=exports.base58_decode=exports.zigzag_decode=exports.zigzag_encode=exports.integer_unsign=exports.integer_sign=exports.varint_decode=exports.varint_encode=void 0;const big_integer_1=__importDefault(require("big-integer"));const DeserializationError_1=__importDefault(require("../Errors/DeserializationError"));const SerializationError_1=__importDefault(require("../Errors/SerializationError"));const Base_1=__importDefault(require("./Coders/Base"));function varint_encode(input){const bytes=[];let n=big_integer_1.default(input);if(n.lesser(0)){throw new SerializationError_1.default('cant pack negative integer');}while(true){const byte=n.and(0x7F);n=n.shiftRight(7);if(n.equals(0)){bytes.push(byte.toJSNumber());break;}bytes.push(byte.toJSNumber()+128);}return new Uint8Array(bytes);}exports.varint_encode=varint_encode;function varint_decode(state){let result=big_integer_1.default(0);for(let i=0;true;i++){if(state.position>=state.data.length){throw new DeserializationError_1.default('failed to unpack integer');}const byte=big_integer_1.default(state.data[state.position]);state.position+=1;if(byte.lesser(128)){result=result.plus(byte.shiftLeft(7*i));break;}result=result.plus(byte.and(0x7F).shiftLeft(7*i));}return result;}exports.varint_decode=varint_decode;function integer_sign(input,size){const n=big_integer_1.default(input);if(n.greaterOrEquals(big_integer_1.default(2).pow(8*size-1))){throw new Error('cannot sign integer: too big');}if(n.greaterOrEquals(0)){return n;}return n.negate().xor(big_integer_1.default(2).pow(8*size).minus(1)).plus(1);}exports.integer_sign=integer_sign;function integer_unsign(input,size){const n=big_integer_1.default(input);if(n.greater(big_integer_1.default(2).pow(8*size))){throw new Error('cannot unsign integer: too big');}if(n.greater(big_integer_1.default(2).pow(8*size-1))){return n.minus(1).xor(big_integer_1.default(2).pow(8*size).minus(1)).negate();}return n;}exports.integer_unsign=integer_unsign;function zigzag_encode(input){const n=big_integer_1.default(input);if(n.lesser(0)){return n.plus(1).multiply(-2).plus(1);}return n.multiply(2);}exports.zigzag_encode=zigzag_encode;function zigzag_decode(input){const n=big_integer_1.default(input);if(n.mod(2).equals(0)){return n.divmod(2).quotient;}return n.divmod(2).quotient.multiply(-1).minus(1);}exports.zigzag_decode=zigzag_decode;const bs58=new Base_1.default('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');function base58_decode(data){return bs58.decode(data);}exports.base58_decode=base58_decode;function base58_encode(data){return bs58.encode(data);}exports.base58_encode=base58_encode;function hex_decode(hex){const bytes=hex.match(/.{1,2}/g);if(!bytes){return new Uint8Array(0);}return new Uint8Array(bytes.map(byte=>parseInt(byte,16)));}exports.hex_decode=hex_decode;function hex_encode(bytes){return bytes.reduce((str,byte)=>str+byte.toString(16).padStart(2,'0'),'');}exports.hex_encode=hex_encode;function concat_byte_arrays(arr){// concat all bytearrays into one array
const data=new Uint8Array(arr.reduce((acc,val)=>acc+val.length,0));let offset=0;for(const bytes of arr){data.set(bytes,offset);offset+=bytes.length;}return data;}exports.concat_byte_arrays=concat_byte_arrays;function int_to_byte_vector(n){const bytes=[];let num=big_integer_1.default(n);while(num.notEquals(0)){bytes.push(num.and(0xFF).toJSNumber());num=num.shiftRight(8);}return new Uint8Array(bytes);}exports.int_to_byte_vector=int_to_byte_vector;function byte_vector_to_int(bytes){let num=big_integer_1.default(0);for(let i=0;i<bytes.length;i++){num=num.plus(big_integer_1.default(bytes[i]).shiftLeft(8*i));}return num.toJSNumber();}exports.byte_vector_to_int=byte_vector_to_int;},{"../Errors/DeserializationError":68,"../Errors/SerializationError":71,"./Coders/Base":77,"big-integer":93}],77:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});/* based on npm base-x module (removed buffer, added class structure) */class BaseCoder{constructor(ALPHABET){this.ALPHABET=ALPHABET;if(ALPHABET.length>=255){throw new TypeError('Alphabet too long');}this.BASE_MAP=new Uint8Array(256);for(let j=0;j<this.BASE_MAP.length;j++){this.BASE_MAP[j]=255;}for(let i=0;i<ALPHABET.length;i++){const x=ALPHABET.charAt(i);const xc=x.charCodeAt(0);if(this.BASE_MAP[xc]!==255){throw new TypeError(x+' is ambiguous');}this.BASE_MAP[xc]=i;}this.BASE=ALPHABET.length;this.LEADER=ALPHABET.charAt(0);this.FACTOR=Math.log(this.BASE)/Math.log(256);// log(BASE) / log(256), rounded up
this.iFACTOR=Math.log(256)/Math.log(this.BASE);// log(256) / log(BASE), rounded up
}encode(source){if(source.length===0){return'';}// Skip & count leading zeroes.
let zeroes=0;let length=0;let pbegin=0;const pend=source.length;while(pbegin!==pend&&source[pbegin]===0){pbegin++;zeroes++;}// Allocate enough space in big-endian base58 representation.
const size=(pend-pbegin)*this.iFACTOR+1>>>0;const b58=new Uint8Array(size);// Process the bytes.
while(pbegin!==pend){let carry=source[pbegin];// Apply "b58 = b58 * 256 + ch".
let i=0;for(let it1=size-1;(carry!==0||i<length)&&it1!==-1;it1--,i++){carry+=256*b58[it1]>>>0;b58[it1]=carry%this.BASE>>>0;carry=carry/this.BASE>>>0;}if(carry!==0){throw new Error('Non-zero carry');}length=i;pbegin++;}// Skip leading zeroes in base58 result.
let it2=size-length;while(it2!==size&&b58[it2]===0){it2++;}// Translate the result into a string.
let str=this.LEADER.repeat(zeroes);for(;it2<size;++it2){str+=this.ALPHABET.charAt(b58[it2]);}return str;}decode(source){const buffer=this.decodeUnsafe(source);if(buffer){return buffer;}throw new Error('Non-base'+this.BASE+' character');}decodeUnsafe(source){if(source.length===0){return new Uint8Array(0);}let psz=0;// Skip leading spaces.
if(source[psz]===' '){return new Uint8Array(0);}// Skip and count leading '1's.
let zeroes=0;let length=0;while(source[psz]===this.LEADER){zeroes++;psz++;}// Allocate enough space in big-endian base256 representation.
const size=(source.length-psz)*this.FACTOR+1>>>0;// log(58) / log(256), rounded up.
const b256=new Uint8Array(size);// Process the characters.
while(source[psz]){// Decode character
let carry=this.BASE_MAP[source.charCodeAt(psz)];// Invalid character
if(carry===255){return new Uint8Array(0);}let i=0;for(let it3=size-1;(carry!==0||i<length)&&it3!==-1;it3--,i++){carry+=this.BASE*b256[it3]>>>0;b256[it3]=carry%256>>>0;carry=carry/256>>>0;}if(carry!==0){throw new Error('Non-zero carry');}length=i;psz++;}// Skip trailing spaces.
if(source[psz]===' '){return new Uint8Array(0);}// Skip leading zeroes in b256.
let it4=size-length;while(it4!==size&&b256[it4]===0){it4++;}const vch=new Uint8Array(zeroes+(size-it4));vch.fill(0x00,0,zeroes);let j=zeroes;while(it4!==size){vch[j++]=b256[it4++];}return vch;}}exports.default=BaseCoder;},{}],78:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.prepare=void 0;class SerializationState{constructor(data,position=0){this.data=data;this.position=position;}}exports.default=SerializationState;function prepare(data){return new SerializationState(data,0);}exports.prepare=prepare;},{}],79:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const FixedParser_1=__importDefault(require("./FixedParser"));class BooleanParser extends FixedParser_1.default{constructor(){super(1);}deserialize(state){const data=super.deserialize(state);return data[0]===1?1:0;}serialize(data){return super.serialize(new Uint8Array([data?1:0]));}}exports.default=BooleanParser;},{"./FixedParser":82}],80:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.ByteParser=void 0;const VariableParser_1=__importDefault(require("./VariableParser"));class ByteParser extends VariableParser_1.default{deserialize(state){return super.deserialize(state);}serialize(data){return super.serialize(data);}}exports.ByteParser=ByteParser;},{"./VariableParser":87}],81:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const big_integer_1=__importDefault(require("big-integer"));const FixedParser_1=__importDefault(require("./FixedParser"));class FixedIntegerParser extends FixedParser_1.default{deserialize(state){const data=super.deserialize(state).reverse();let n=big_integer_1.default(0);for(const byte of data){n=n.shiftLeft(8);n=n.plus(byte);}if(this.size<=6){return n.toJSNumber();}return n.toString();}serialize(data){let n=big_integer_1.default(data);const buffer=[];for(let i=0;i<this.size;i++){buffer.push(n.and(0xFF).toJSNumber());n=n.shiftRight(8);}return super.serialize(new Uint8Array(buffer));}}exports.default=FixedIntegerParser;},{"./FixedParser":82,"big-integer":93}],82:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const DeserializationError_1=__importDefault(require("../../Errors/DeserializationError"));const SerializationError_1=__importDefault(require("../../Errors/SerializationError"));class FixedParser{constructor(size){this.size=size;}deserialize(state){state.position+=this.size;const data=state.data.slice(state.position-this.size,state.position);if(data.length!==this.size){throw new DeserializationError_1.default('FixedParser: read past end');}return data;}serialize(data){if(data.length!==this.size){throw new SerializationError_1.default(`input data does not conform fixed size`);}return data;}}exports.default=FixedParser;},{"../../Errors/DeserializationError":68,"../../Errors/SerializationError":71}],83:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const FixedParser_1=__importDefault(require("./FixedParser"));// tslint:disable-next-line:no-var-requires
const fp=require('../../../lib/float');class FloatingParser extends FixedParser_1.default{constructor(isDouble){super(isDouble?8:4);this.isDouble=isDouble;}deserialize(state){if(this.isDouble){return fp.readDoubleLE(super.deserialize(state));}return fp.readFloatLE(super.deserialize(state));}serialize(data){// tslint:disable-next-line:prefer-const
let bytes=[];if(this.isDouble){fp.writeDoubleLE(bytes,data);return super.serialize(new Uint8Array(bytes));}fp.writeFloatLE(bytes,data);return super.serialize(new Uint8Array(bytes));}}exports.default=FloatingParser;},{"../../../lib/float":91,"./FixedParser":82}],84:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const Binary_1=require("../Binary");const VariableParser_1=__importDefault(require("./VariableParser"));class IPFSParser extends VariableParser_1.default{deserialize(state){return Binary_1.base58_encode(super.deserialize(state));}serialize(data){return super.serialize(Binary_1.base58_decode(data));}}exports.default=IPFSParser;},{"../Binary":76,"./VariableParser":87}],85:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const VariableParser_1=__importDefault(require("./VariableParser"));class StringParser extends VariableParser_1.default{deserialize(state){return new TextDecoder().decode(super.deserialize(state));}serialize(data){return super.serialize(new TextEncoder().encode(data));}}exports.default=StringParser;},{"./VariableParser":87}],86:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const big_integer_1=__importDefault(require("big-integer"));const DeserializationError_1=__importDefault(require("../../Errors/DeserializationError"));const SerializationError_1=__importDefault(require("../../Errors/SerializationError"));const Binary_1=require("../Binary");class VariableIntegerParser{constructor(size,unsigned){this.size=size;this.unsigned=unsigned;}deserialize(state){let n=Binary_1.varint_decode(state);if(!this.unsigned){n=Binary_1.zigzag_decode(n);}if(n.greaterOrEquals(big_integer_1.default(2).pow(this.size*8-(this.unsigned?0:1)))){throw new DeserializationError_1.default('number \''+n.toString()+'\' too large for given type');}if(this.size<=6){return n.toJSNumber();}return n.toString();}serialize(data){let n=big_integer_1.default(data);if(n.greaterOrEquals(big_integer_1.default(2).pow(this.size*8-(this.unsigned?0:1)))){throw new SerializationError_1.default('number \''+n.toString()+'\' too large for given type');}if(!this.unsigned){n=Binary_1.zigzag_encode(n);}return Binary_1.varint_encode(n);}}exports.default=VariableIntegerParser;},{"../../Errors/DeserializationError":68,"../../Errors/SerializationError":71,"../Binary":76,"big-integer":93}],87:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});const DeserializationError_1=__importDefault(require("../../Errors/DeserializationError"));const Binary_1=require("../Binary");class VariableParser{deserialize(state){const length=Binary_1.varint_decode(state).toJSNumber();state.position+=length;const data=state.data.slice(state.position-length,state.position);if(data.length!==length){throw new DeserializationError_1.default(`VariableParser: read past end`);}return data;}serialize(data){return Binary_1.concat_byte_arrays([Binary_1.varint_encode(data.length),data]);}}exports.default=VariableParser;},{"../../Errors/DeserializationError":68,"../Binary":76}],88:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.ParserTypes=void 0;const BooleanParser_1=__importDefault(require("./TypeParser/BooleanParser"));const ByteParser_1=require("./TypeParser/ByteParser");const FixedIntegerParser_1=__importDefault(require("./TypeParser/FixedIntegerParser"));const FloatingParser_1=__importDefault(require("./TypeParser/FloatingParser"));const IPFSParser_1=__importDefault(require("./TypeParser/IPFSParser"));const StringParser_1=__importDefault(require("./TypeParser/StringParser"));const VariableIntegerParser_1=__importDefault(require("./TypeParser/VariableIntegerParser"));// tslint:disable:object-literal-sort-keys
exports.ParserTypes={int8:new VariableIntegerParser_1.default(1,false),int16:new VariableIntegerParser_1.default(2,false),int32:new VariableIntegerParser_1.default(4,false),int64:new VariableIntegerParser_1.default(8,false),uint8:new VariableIntegerParser_1.default(1,true),uint16:new VariableIntegerParser_1.default(2,true),uint32:new VariableIntegerParser_1.default(4,true),uint64:new VariableIntegerParser_1.default(8,true),fixed8:new FixedIntegerParser_1.default(1),fixed16:new FixedIntegerParser_1.default(2),fixed32:new FixedIntegerParser_1.default(4),fixed64:new FixedIntegerParser_1.default(8),bool:new BooleanParser_1.default(),bytes:new ByteParser_1.ByteParser(),string:new StringParser_1.default(),image:new StringParser_1.default(),ipfs:new IPFSParser_1.default(),float:new FloatingParser_1.default(false),double:new FloatingParser_1.default(true)};},{"./TypeParser/BooleanParser":79,"./TypeParser/ByteParser":80,"./TypeParser/FixedIntegerParser":81,"./TypeParser/FloatingParser":83,"./TypeParser/IPFSParser":84,"./TypeParser/StringParser":85,"./TypeParser/VariableIntegerParser":86}],89:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.deserialize=exports.serialize=void 0;const MappingSchema_1=__importDefault(require("../Schema/MappingSchema"));const Binary_1=require("./Binary");const State_1=__importDefault(require("./State"));function serialize(object,schema){const data=schema.serialize(object);// remove terminating 0 byte because it is unnecessary
if(schema instanceof MappingSchema_1.default){return data.slice(0,data.length-1);}return data;}exports.serialize=serialize;function deserialize(data,schema){if(schema instanceof MappingSchema_1.default){data=Binary_1.concat_byte_arrays([data,Binary_1.varint_encode(0)]);}const state=new State_1.default(data,0);return schema.deserialize(state);}exports.deserialize=deserialize;},{"../Schema/MappingSchema":72,"./Binary":76,"./State":78}],90:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.ActionGenerator=exports.ExplorerActionGenerator=exports.RpcActionGenerator=exports.ParserTypes=exports.serialize=exports.deserialize=exports.ObjectSchema=exports.ExplorerApi=exports.RpcApi=void 0;const Explorer_1=__importDefault(require("./Actions/Explorer"));exports.ExplorerActionGenerator=Explorer_1.default;const Generator_1=require("./Actions/Generator");Object.defineProperty(exports,"ActionGenerator",{enumerable:true,get:function(){return Generator_1.ActionGenerator;}});const Rpc_1=__importDefault(require("./Actions/Rpc"));exports.RpcActionGenerator=Rpc_1.default;const Explorer_2=__importDefault(require("./API/Explorer"));exports.ExplorerApi=Explorer_2.default;const Rpc_2=__importDefault(require("./API/Rpc"));exports.RpcApi=Rpc_2.default;const Schema_1=require("./Schema");Object.defineProperty(exports,"ObjectSchema",{enumerable:true,get:function(){return Schema_1.ObjectSchema;}});const Serialization_1=require("./Serialization");Object.defineProperty(exports,"deserialize",{enumerable:true,get:function(){return Serialization_1.deserialize;}});Object.defineProperty(exports,"serialize",{enumerable:true,get:function(){return Serialization_1.serialize;}});const Types_1=require("./Serialization/Types");Object.defineProperty(exports,"ParserTypes",{enumerable:true,get:function(){return Types_1.ParserTypes;}});},{"./API/Explorer":55,"./API/Rpc":63,"./Actions/Explorer":64,"./Actions/Generator":65,"./Actions/Rpc":66,"./Schema":75,"./Serialization":89,"./Serialization/Types":88}],91:[function(require,module,exports){/**
 * pure javascript functions to read and write 32-bit and 64-bit IEEE 754 floating-point
 *
 * Copyright (C) 2017-2019 Andras Radics
 * Licensed under the Apache License, Version 2.0
 */// removed buffer
'use strict';var isBigeCpu=false;var readFloat32Array,writeFloat32Array,readFloat32ArrayRev,writeFloat32ArrayRev;var readFloat64Array,writeFloat64Array,readFloat64ArrayRev,writeFloat64ArrayRev;// test FloatArray existence with && to not throw off code coverage
typeof Float32Array==='function'&&function(){var _fp32=new Float32Array(1);var _b32=new Uint8Array(_fp32.buffer);_fp32[0]=-1;isBigeCpu=_b32[3]===0;readFloat32Array=function readFloat32Array(buf,pos){pos=pos||0;if(pos<0||pos+4>buf.length)return 0;_b32[0]=buf[pos++];_b32[1]=buf[pos++];_b32[2]=buf[pos++];_b32[3]=buf[pos];//_b32[0] = buf[pos+0]; _b32[1] = buf[pos+1]; _b32[2] = buf[pos+2]; _b32[3] = buf[pos+3];
return _fp32[0];};readFloat32ArrayRev=function readFloat32ArrayRev(buf,pos){pos=pos||0;if(pos<0||pos+4>buf.length)return 0;_b32[3]=buf[pos++];_b32[2]=buf[pos++];_b32[1]=buf[pos++];_b32[0]=buf[pos];//_b32[3] = buf[pos+0]; _b32[2] = buf[pos+1]; _b32[1] = buf[pos+2]; _b32[0] = buf[pos+3];
return _fp32[0];};writeFloat32Array=function writeFloat32Array(buf,v,pos){pos=pos||0;_fp32[0]=v;buf[pos++]=_b32[0];buf[pos++]=_b32[1];buf[pos++]=_b32[2];buf[pos]=_b32[3];//buf[pos+0] = _b32[0]; buf[pos+1] = _b32[1]; buf[pos+2] = _b32[2]; buf[pos+3] = _b32[3];
};writeFloat32ArrayRev=function writeFloat32ArrayRev(buf,v,pos){pos=pos||0;_fp32[0]=v;buf[pos++]=_b32[3];buf[pos++]=_b32[2];buf[pos++]=_b32[1];buf[pos]=_b32[0];//buf[pos+0] = _b32[3]; buf[pos+1] = _b32[2]; buf[pos+2] = _b32[1]; buf[pos+3] = _b32[0];
};}();typeof Float64Array==='function'&&function(){var _fp64=new Float64Array(1);var _b64=new Uint8Array(_fp64.buffer);readFloat64Array=function readFloat64Array(buf,pos){pos=pos||0;if(pos<0||pos+8>buf.length)return 0;//_b64[0] = buf[pos++]; _b64[1] = buf[pos++]; _b64[2] = buf[pos++]; _b64[3] = buf[pos++];
//_b64[4] = buf[pos++]; _b64[5] = buf[pos++]; _b64[6] = buf[pos++]; _b64[7] = buf[pos];
_b64[0]=buf[pos+0];_b64[1]=buf[pos+1];_b64[2]=buf[pos+2];_b64[3]=buf[pos+3];_b64[4]=buf[pos+4];_b64[5]=buf[pos+5];_b64[6]=buf[pos+6];_b64[7]=buf[pos+7];return _fp64[0];};readFloat64ArrayRev=function readFloat64ArrayRev(buf,pos){pos=pos||0;if(pos<0||pos+8>buf.length)return 0;//_b64[7] = buf[pos++]; _b64[6] = buf[pos++]; _b64[5] = buf[pos++]; _b64[4] = buf[pos++];
//_b64[3] = buf[pos++]; _b64[2] = buf[pos++]; _b64[1] = buf[pos++]; _b64[0] = buf[pos];
_b64[7]=buf[pos+0];_b64[6]=buf[pos+1];_b64[5]=buf[pos+2];_b64[4]=buf[pos+3];_b64[3]=buf[pos+4];_b64[2]=buf[pos+5];_b64[1]=buf[pos+6];_b64[0]=buf[pos+7];return _fp64[0];};writeFloat64Array=function writeFloat64Array(buf,v,pos){pos=pos||0;_fp64[0]=v;buf[pos+0]=_b64[0];buf[pos+1]=_b64[1];buf[pos+2]=_b64[2];buf[pos+3]=_b64[3];buf[pos+4]=_b64[4];buf[pos+5]=_b64[5];buf[pos+6]=_b64[6];buf[pos+7]=_b64[7];};writeFloat64ArrayRev=function writeFloat64ArrayRev(buf,v,pos){pos=pos||0;_fp64[0]=v;buf[pos+0]=_b64[7];buf[pos+1]=_b64[6];buf[pos+2]=_b64[5];buf[pos+3]=_b64[4];buf[pos+4]=_b64[3];buf[pos+5]=_b64[2];buf[pos+6]=_b64[1];buf[pos+7]=_b64[0];};}();// arithmetic operations preserve NaN, but logical ops (, >>, etc) convert them to zero
// Assemble the word to generate NaN if any reads are undefined (outside the bounds of the array).
function readWord(buf,offs,dirn){var a=buf[offs++],b=buf[offs++],c=buf[offs++],d=buf[offs];return dirn==='bige'?((a*256+b)*256+c)*256+d:((d*256+c)*256+b)*256+a;}function writeWord(buf,v,offs,dirn){var a=v>>>24&0xff,b=v>>16&0xff,c=v>>8&0xff,d=v&0xff;dirn==='bige'?(buf[offs++]=a,buf[offs++]=b,buf[offs++]=c,buf[offs]=d):(buf[offs++]=d,buf[offs++]=c,buf[offs++]=b,buf[offs]=a);}// write the two-word value [hi,lo] where hi holds the 32 msb bits and lo the 32 lsb bits
function writeDoubleWord(buf,hi,lo,offs,dirn){if(dirn==='bige'){writeWord(buf,hi,offs,dirn);writeWord(buf,lo,offs+4,dirn);}else{writeWord(buf,lo,offs,dirn);writeWord(buf,hi,offs+4,dirn);}}// given an exponent n, return 2**n
// n is always an integer, faster to shift when possible
// Note that nodejs Math.pow() is faster than a lookup table (may be caching)
var _2eXp=new Array();for(var i=0;i<1200;i++)_2eXp[i]=Math.pow(2,i);var _2eXn=new Array();for(var i=0;i<1200;i++)_2eXn[i]=Math.pow(2,-i);function pow2(exp){return exp>=0?_2eXp[exp]:_2eXn[-exp];//return (exp >= 0) ? (exp <  31 ? (1 << exp) :        Math.pow(2, exp))
//                  : (exp > -31 ? (1 / (1 << -exp)) : Math.pow(2, exp));
}// getFloat() from qbson, https://github.com/andrasq/node-qbson:
/*
 * extract the 64-bit little-endian ieee 754 floating-point value
 *   see http://en.wikipedia.org/wiki/Double-precision_floating-point_format
 *   1 bit sign + 11 bits exponent + (1 implicit mantissa 1 bit) + 52 mantissa bits
 */var _rshift32=1/0x100000000;// >> 32 for floats
var _rshift20=1/0x100000;// >> 20 for floats
var _lshift32=1*0x100000000;// << 32
var _rshift52=1*_rshift32*_rshift20;// >> 52
var _rshift1023=pow2(-1023);// 2^-1023
function readDouble(buf,offset,dirn){var w0=readWord(buf,offset,dirn);var w1=readWord(buf,offset+4,dirn);var highWord,lowWord;dirn==='bige'?(highWord=w0,lowWord=w1):(highWord=w1,lowWord=w0);var mantissa=(highWord&0x000FFFFF)*_lshift32+lowWord;var exponent=(highWord&0x7FF00000)>>>20;var sign=highWord>>31||1;// -1, 1, or 1 if NaN
var value;if(exponent===0x000){// zero if !mantissa, else subnormal (non-normalized reduced precision small value)
// recover negative zero -0.0 as distinct from 0.0
// subnormals do not have an implied leading 1 bit and are positioned 1 bit to the left
value=mantissa?mantissa*pow2(-52+1-1023):0.0;}else if(exponent<0x7ff){// normalized value with an implied leading 1 bit and 1023 biased exponent
// test for NaN with (mantissa >= 0), and return 0 if NaN ie read from outside buffer bounds
value=mantissa>=0?(1+mantissa*_rshift52)*pow2(exponent-1023):0.0;}else{// Infinity if zero mantissa (+/- per sign), NaN if nonzero mantissa
value=mantissa?NaN:Infinity;}return sign*value;}//
// Note: node-v9 prefers +28% (sign * value), node v6 doesnt care, node v8 likes +16% (-value : value)
//
// float32: 1 sign + 8 exponent + 24 mantissa (23 stored, 1 implied)
// see https://en.wikipedia.org/wiki/Single-precision_floating-point_format
//
// Exponent     Mantissa == 0   Mantissa > 0    Value
// 00           +0, -0          denormalized    2^(  1-127) * (0. + (mantissa / 2^23))
// 00.. FE                      normalized      2^(exp-127) * (1. + (mantissa / 2^23))
// FF           +/-Infinity     NaN             -
//
var _rshift23=Math.pow(2,-23);// >> 23 for floats
var _rshift127=Math.pow(2,-127);// 2^-127
function readFloat(buf,offset,dirn){var word=readWord(buf,offset,dirn);var mantissa=word&0x007FFFFF;var exponent=(word&0x7F800000)>>>23;var sign=word>>31||1;// -1, 1, or 1 if NaN
var value;if(exponent===0x000){value=mantissa?mantissa*_rshift23*2*_rshift127:0.0;}else if(exponent<0xff){value=(1+mantissa*_rshift23)*pow2(exponent-127);// * _rshift127;
}else{value=mantissa?NaN:Infinity;}return sign*value;//return (word >>> 31) ? -value : value;
}// given a positive value v, normalize it to between 1 and less than 2 with a binary exponent
// The exponent is the number of bit places it was shifted, positive if v was >= 2.
// The special values 0, -0, NaN, +Infinity and -Infinity are not handled here.
// Looping is faster than (Math.log(v) / Math.LN2) in node-v6, v8, and v9.
// This function can account for half the time taken to write a double.
var _parts={exp:0,mant:0};function normalize(v){var exp=0;if(v>=2){exp=countDoublings(1,v);v*=pow2(-exp);// if doubled to exactly v/2, adjust up to v
if(v>=2){v/=2;exp+=1;}}else if(v<1){exp=countDoublings(v,2);// avoid using pow2 exponents > 1023, they overflow to Infinity
if(exp<=1023)v*=pow2(exp);else{v*=pow2(exp-100);v*=pow2(100);}exp=-exp;}// TODO: pass in num bits, and normalize straight to mantissa / denorm
_parts.exp=exp;_parts.mant=v;return _parts;}// count how many doublings of a are needed for it be close to b.
// Returns a shift count that grows (a) to at least (b/2) but less than (b).
// Doubling 1 toward v ensures that (v >> n) >= 1 < 2,
// and doubling from v toward 2 ensures that (v << n) >= 1 < 2.
var _2e192=Math.pow(2,192);function countDoublings(a,b){var n=0;while(a*_2e192<b){a*=_2e192;n+=192;}while(a*0x10000000000000000<b){a*=0x10000000000000000;n+=64;}while(a*0x10000<b){a*=0x10000;n+=16;}while(a*0x40<b){a*=0x40;n+=6;}while(a*2<b){a*=2;n+=1;}return n;}// round the fraction in v and scale up to scale = 2^n bits
// https://blog.angularindepth.com/how-to-round-binary-fractions-625c8fa3a1af
// Rounding can cause the scaled value to exceed 2^n.
function roundMantissa(v,scale){v*=scale;// round to nearest, but round a 0.5 tie to even (0.5 to 0.0 and 1.5 to 2.0)
// round all numbers with a fraction other than 1/2, and round up odd numbers with
return v-Math.floor(v)!==0.5||v&1?v+0.5:v;}// float32: 1 sign + 8 exponent + (1 implied mantissa 1 bit) + 23 stored mantissa bits
// NaN types: quiet Nan = x.ff.8xxx, signaling NaN = x.ff.0xx1 (msb zero, at least one other bit set)
// JavaScript built-in NaN is the non-signaling 7fc00000, but arithmetic can yield a negative NaN ffc00000.
function writeFloat(buf,v,offset,dirn){var norm,word,sign=0;if(v<0){sign=0x80000000;v=-v;}if(!(v&&v<Infinity)){if(v===0){// -0, +0
word=1/v<0?0x80000000:0x00000000;}else if(v===Infinity){// -Infinity, +Infinity
word=sign|0x7F800000;}else{// NaN - positive, non-signaling
word=0x7FC00000;}writeWord(buf,word,offset,dirn);}else{norm=normalize(v);// separate exponent and mantissa
norm.exp+=127;// bias exponent
if(norm.exp<=0){// denormalized number
if(norm.exp<=-25){// too small, underflow to zero.  -24 might round up though.
norm.mant=0;norm.exp=0;}else{// denormalize
norm.mant=roundMantissa(norm.mant,pow2(22+norm.exp));norm.exp=0;// rounding can carry out and re-normalize the number
if(norm.mant>=0x800000){norm.mant-=0x800000;norm.exp+=1;}}}else{norm.mant=roundMantissa(norm.mant-1,0x800000);// if rounding overflowed into the hidden 1s place, hide it and adjust the exponent
if(norm.mant>=0x800000){norm.mant-=0x800000;norm.exp+=1;}if(norm.exp>254){// overflow to Infinity
norm.mant=0;norm.exp=255;}}word=sign|norm.exp<<23|norm.mant;writeWord(buf,word,offset,dirn);}}// double64: 1 bit sign + 11 bits exponent + (1 implied mantissa 1 bit) + 52 stored mantissa bits
// Writing doubles is simpler than floats, because the internal javascript 64-bit floats
// are identical to the stored representation, and thus will not overflow or underflow.
var doubleArray=[0,0,0,0,0,0,0,0];var doubleBuf=new Uint8Array(8);var _2e52=Math.pow(2,52);function writeDouble(buf,v,offset,dirn){var norm,highWord,lowWord,sign=0;if(v<0){sign=0x80000000;v=-v;}if(!(v&&v<Infinity)){if(v===0){// -0, +0
highWord=1/v<0?0x80000000:0;lowWord=0;}else if(v===Infinity){// -Infinity, +Infinity
highWord=sign+0x7FF00000;lowWord=0;}else{// NaN - positive, non-signaling
highWord=0x7FF80000;lowWord=0;}writeDoubleWord(buf,highWord,lowWord,offset,dirn);}else{norm=normalize(v);// separate exponent and mantissa
norm.exp+=1023;// bias exponent
if(norm.exp<=0){// denormalized
// JavaScript numbers can not hold values small enough to underflow
// and no need to round, all bits will be written
norm.mant*=pow2(51+norm.exp);norm.exp=0;}else{// no need to round, all bits will be written
norm.mant=(norm.mant-1)*_2e52;}highWord=sign|norm.exp<<20|norm.mant/0x100000000;lowWord=norm.mant>>>0;writeDoubleWord(buf,highWord,lowWord,offset,dirn);}};(function install(){var exports=typeof module==='object'&&module.exports||this;exports.readWord=readWord;exports.writeWord=writeWord;exports.writeDoubleWord=writeDoubleWord;exports.readFloat=readFloat;exports.writeFloat=writeFloat;exports.readDouble=readDouble;exports.writeDouble=writeDouble;// expose the implementation to the tests
exports._useFloatArray=function(yesno){exports._usingFloatArray=yesno;if(yesno){// software conversion is faster for float32 than Float32Array
// Only read via Float32Array if yesno == 'full'.
if(yesno=='full')exports.readFloatLE=isBigeCpu?readFloat32ArrayRev:readFloat32Array;exports.writeFloatLE=isBigeCpu?writeFloat32ArrayRev:writeFloat32Array;if(yesno=='full')exports.readFloatBE=isBigeCpu?readFloat32Array:readFloat32ArrayRev;exports.writeFloatBE=isBigeCpu?writeFloat32Array:writeFloat32ArrayRev;exports.readDoubleLE=isBigeCpu?readFloat64ArrayRev:readFloat64Array;exports.writeDoubleLE=isBigeCpu?writeFloat64ArrayRev:writeFloat64Array;exports.readDoubleBE=isBigeCpu?readFloat64Array:readFloat64ArrayRev;exports.writeDoubleBE=isBigeCpu?writeFloat64Array:writeFloat64ArrayRev;}else{exports._usingFloatArray='';exports.readFloatLE=function readFloatLE(buf,offset){return exports.readFloat(buf,offset||0,'le');};exports.writeFloatLE=function writeFloatLE(buf,v,offset){exports.writeFloat(buf,v,offset||0,'le');};exports.readFloatBE=function readFloatBE(buf,offset){return exports.readFloat(buf,offset||0,'bige');};exports.writeFloatBE=function writeFloatBE(buf,v,offset){exports.writeFloat(buf,v,offset||0,'bige');};exports.readDoubleLE=function readDoubleLE(buf,offset){return exports.readDouble(buf,offset||0,'le');};exports.writeDoubleLE=function writeDoubleLE(buf,v,offset){exports.writeDouble(buf,v,offset||0,'le');};exports.readDoubleBE=function readDoubleBE(buf,offset){return exports.readDouble(buf,offset||0,'bige');};exports.writeDoubleBE=function writeDoubleLE(buf,v,offset){exports.writeDouble(buf,v,offset||0,'bige');};}};// expose the cpu endianism to the tests
exports._getBigeCpu=function(){return isBigeCpu;};exports._setBigeCpu=function(yesno){isBigeCpu=yesno;};// by default export the software conversion functions, then
// if available, convert by casting a FloatArray to a byte array
exports._useFloatArray(false);exports._useFloatArray(readFloat32Array&&readFloat64Array&&'fastest');// accelerate access
install.prototype=exports;}).call(this);},{}],92:[function(require,module,exports){'use strict';exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;function getLens(b64){var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}// Trim off extra bytes after placeholder bytes are found
// See: https://github.com/beatgammit/base64-js/issues/42
var validLen=b64.indexOf('=');if(validLen===-1)validLen=len;var placeHoldersLen=validLen===len?0:4-validLen%4;return[validLen,placeHoldersLen];}// base64 is 4/3 + up to two characters of the original data
function byteLength(b64){var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}function _byteLength(b64,validLen,placeHoldersLen){return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}function toByteArray(b64){var tmp;var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));var curByte=0;// if there are placeholders, only get up to the last complete 4 chars
var len=placeHoldersLen>0?validLen-4:validLen;var i;for(i=0;i<len;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[curByte++]=tmp>>16&0xFF;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16&0xFF0000)+(uint8[i+1]<<8&0xFF00)+(uint8[i+2]&0xFF);output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes
var parts=[];var maxChunkLength=16383;// must be multiple of 3
// go through the array every three bytes, we'll deal with trailing stuff later
for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes
if(extraBytes===1){tmp=uint8[len-1];parts.push(lookup[tmp>>2]+lookup[tmp<<4&0x3F]+'==');}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];parts.push(lookup[tmp>>10]+lookup[tmp>>4&0x3F]+lookup[tmp<<2&0x3F]+'=');}return parts.join('');}},{}],93:[function(require,module,exports){var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz";var supportsNativeBigInt=typeof BigInt==="function";function Integer(v,radix,alphabet,caseSensitive){if(typeof v==="undefined")return Integer[0];if(typeof radix!=="undefined")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v);}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false;}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true;}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value;}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT;}function smallToArray(n){// For performance reasons doesn't reference BASE, need to change this function if BASE changes
if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)];}function arrayToSmall(arr){// If BASE changes this function may need to change
trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE;}}return arr;}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1;}function createArray(length){// function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
var x=new Array(length);var i=-1;while(++i<length){x[i]=0;}return x;}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n);}function add(a,b){// assumes a and b are arrays with a.length >= b.length
var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base;}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base;}if(carry>0)r.push(carry);return r;}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a);}function addSmall(a,carry){// assumes a is array, carry is number with 0 <= carry < MAX_INT
var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate());}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign);}return new BigInteger(addAny(a,b),this.sign);};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate());}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b));}return new BigInteger(addSmall(b,Math.abs(a)),a<0);};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value);};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){// assumes a and b are arrays with a >= b
var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1;}else borrow=0;r[i]=difference;}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break;}r[i]=difference;}for(;i<a_l;i++){r[i]=a[i];}trim(r);return r;}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b);}else{value=subtract(b,a);sign=!sign;}value=arrayToSmall(value);if(typeof value==="number"){if(sign)value=-value;return new SmallInteger(value);}return new BigInteger(value,sign);}function subtractSmall(a,b,sign){// assumes a is array, b is number with 0 <= b < MAX_INT
var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference;}r=arrayToSmall(r);if(typeof r==="number"){if(sign)r=-r;return new SmallInteger(r);}return new BigInteger(r,sign);}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate());}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign);};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate());}var b=n.value;if(n.isSmall){return new SmallInteger(a-b);}return subtractSmall(b,Math.abs(a),a>=0);};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value);};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign);};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small;};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value);};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false);};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value));};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value);};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry;}}trim(r);return r;}function multiplySmall(a,b){// assumes a is array, b is number with |b| < BASE
var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}function shiftLeft(x,n){var r=[];while(n-->0)r.push(0);return r.concat(x);}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product;}// The following function is derived from a surface fit of a graph plotting the performance difference
// between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
function useKaratsuba(l1,l2){return-0.012*l1-0.012*l2+0.000015*l1*l2>0;}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign);}b=smallToArray(abs);}if(useKaratsuba(a.length,b.length))// Karatsuba is only faster for certain array sizes
return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign);};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){// a >= 0
if(a<BASE){return new BigInteger(multiplySmall(b,a),sign);}return new BigInteger(multiplyLong(b,smallToArray(a)),sign);}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value);}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign);};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign);};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this);};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value);};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){//console.assert(2 * BASE * BASE < MAX_INT);
var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base;}r[i+l]=carry;}trim(r);return r;}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false);};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false);};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value);};function divMod1(a,b){// Left over from previous version. Performs faster than divMod2 on smaller input sizes.
var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],// normalization
lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit);}// quotientDigit <= base - 1
carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1;}else{remainder[shift+i]=borrow;borrow=0;}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0;}else{remainder[shift+i]=carry;carry=1;}}borrow+=carry;}result[shift]=quotientDigit;}// denormalization
remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)];}function divMod2(a,b){// Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
// Performs faster than divMod1 on larger input sizes.
var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue;}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base;}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--;}while(guess);result.push(guess);part=subtract(part,check);}result.reverse();return[arrayToSmall(result),arrayToSmall(part)];}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0;}return[quotient,remainder|0];}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)];}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error("Cannot divide by zero");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)];}return[Integer[0],self];}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient==="number"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)];}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)];}b=smallToArray(abs);}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];// divMod1 is faster on smaller input sizes
if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient==="number"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient);}else quotient=new BigInteger(quotient,qSign);if(typeof mod==="number"){if(mSign)mod=-mod;mod=new SmallInteger(mod);}else mod=new BigInteger(mod,mSign);return[quotient,mod];}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]};};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0];};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value);};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1];};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value);};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0];}if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b;}if(b===0)break;b/=2;x=x.square();}return y;};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b;}if(b===_0)break;b/=_2;x=x.square();}return y;};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],base=this.mod(mod);if(exp.isNegative()){exp=exp.multiply(Integer[-1]);base=base.modInv(mod);}while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod);}return r;};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1;}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1;}return 0;}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b);};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1;}return-1;};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1;};BigInteger.prototype.compare=function(v){// See discussion about comparison with Infinity:
// https://github.com/peterolson/BigInteger.js/issues/61
if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1;}if(n.isSmall){return this.sign?-1:1;}return compareAbs(a,b)*(this.sign?-1:1);};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1;}if(a<0!==n.sign){return a<0?-1:1;}return a<0?1:-1;};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1;};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0;};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0;};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0;};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0;};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0;};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0;};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0;};SmallInteger.prototype.isEven=function(){return(this.value&1)===0;};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0);};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1;};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1;};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1);};BigInteger.prototype.isPositive=function(){return!this.sign;};SmallInteger.prototype.isPositive=function(){return this.value>0;};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign;};SmallInteger.prototype.isNegative=function(){return this.value<0;};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false;};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1;};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1);};BigInteger.prototype.isZero=function(){return false;};SmallInteger.prototype.isZero=function(){return this.value===0;};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0);};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero();};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true;// we don't know if it's prime: let the other functions figure it out
}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next;}return false;}return true;}// Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2));}return millerRabinTest(n,a);};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations,rng){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2),rng));}return millerRabinTest(n,a);};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR));}if(!r.isUnit())throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");if(t.compare(0)===-1){t=t.add(n);}if(this.isNegative()){return t.negate();}return t;};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign);}return new BigInteger(addSmall(value,1),this.sign);};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false);};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1));};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true);}return subtractSmall(value,1,this.sign);};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true);};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1));};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE;}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1;}return result.multiply(powersOfTwo[n]);};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1;}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit;// two's complement for negative numbers
}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit;// two's complement for negative numbers
}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit));}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]));}return sum;}BigInteger.prototype.not=function(){return this.negate().prev();};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b;});};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b;});};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b;});};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){// get lowestOneBit (rough)
// SmallInteger: return Min(lowestOneBit(n), 1 << 30)
// BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
var v=n.value,x=typeof v==="number"?v|LOBMASK_I:typeof v==="bigint"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x;}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2};}return{p:bigInt(1),e:0};}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1));}if(n.compareTo(bigInt(0))===0){return bigInt(0);}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1));};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b;}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b;}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d);}while(a.isEven()){a=a.divide(roughLOB(a));}do{while(b.isEven()){b=b.divide(roughLOB(b));}if(a.greater(b)){t=b;b=a;a=t;}b=b.subtract(a);}while(!b.isZero());return c.isUnit()?a:a.multiply(c);}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b);}function randBetween(a,b,rng){a=parseValue(a);b=parseValue(b);var usedRNG=rng||Math.random;var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(usedRNG()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(usedRNG()*top);result.push(digit);if(digit<top)restricted=false;}return low.add(Integer.fromArray(result,BASE,false));}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase();}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i;}for(i=0;i<length;i++){var c=text[i];if(c==="-")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c==="1"&&absBase===1)continue;throw new Error(c+" is not a valid digit in base "+base+".");}}}base=parseValue(base);var digits=[];var isNegative=text[0]==="-";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c==="<"){var start=i;do{i++;}while(text[i]!==">"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)));}else throw new Error(c+" is not a valid character");}return parseBaseFromArray(digits,base,isNegative);};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base);}return isNegative?val.negate():val;}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit];}return"<"+digit+">";}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error("Cannot convert nonzero numbers to base 0.");}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false};}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs();}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg};}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next();}out.push(digit.toJSNumber());}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg};}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?"-":"")+arr.value.map(function(x){return stringify(x,alphabet);}).join('');}BigInteger.prototype.toArray=function(radix){return toBase(this,radix);};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix);};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix);};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros="0000000",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit;}var sign=this.sign?"-":"";return sign+str;};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value);};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString();};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10);};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value;};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10);};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error("Invalid integer: "+v);}var sign=v[0]==="-";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error("Invalid integer: "+split.join("e"));if(split.length===2){var exp=split[1];if(exp[0]==="+")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0];var decimalPlace=text.indexOf(".");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1);}if(exp<0)throw new Error("Cannot include negative exponent part for integers");text+=new Array(exp+1).join("0");v=text;}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error("Invalid integer: "+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?"-"+v:v));}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l;}trim(r);return new BigInteger(r,sign);}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v));}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v);}return parseStringValue(v.toString());}function parseValue(v){if(typeof v==="number"){return parseNumberValue(v);}if(typeof v==="string"){return parseStringValue(v);}if(typeof v==="bigint"){return new NativeBigInt(v);}return v;}// Pre-define numbers in range [-999,999]
for(var i=0;i<1000;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i);}// Backwards compatibility
Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt;};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative);};return Integer;}();// Node.js check
if(typeof module!=="undefined"&&module.hasOwnProperty("exports")){module.exports=bigInt;}//amd check
if(typeof define==="function"&&define.amd){define(function(){return bigInt;});}},{}],94:[function(require,module,exports){(function(module,exports){'use strict';// Utils
function assert(val,msg){if(!val)throw new Error(msg||'Assertion failed');}// Could use `inherits` module, but don't want to move from single file
// architecture yet.
function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;}// BN
function BN(number,base,endian){if(BN.isBN(number)){return number;}this.negative=0;this.words=null;this.length=0;// Reduction context
this.red=null;if(number!==null){if(base==='le'||base==='be'){endian=base;base=10;}this._init(number||0,base||10,endian||'be');}}if(typeof module==='object'){module.exports=BN;}else{exports.BN=BN;}BN.BN=BN;BN.wordSize=26;var Buffer;try{if(typeof window!=='undefined'&&typeof window.Buffer!=='undefined'){Buffer=window.Buffer;}else{Buffer=require('buffer').Buffer;}}catch(e){}BN.isBN=function isBN(num){if(num instanceof BN){return true;}return num!==null&&typeof num==='object'&&num.constructor.wordSize===BN.wordSize&&Array.isArray(num.words);};BN.max=function max(left,right){if(left.cmp(right)>0)return left;return right;};BN.min=function min(left,right){if(left.cmp(right)<0)return left;return right;};BN.prototype._init=function init(number,base,endian){if(typeof number==='number'){return this._initNumber(number,base,endian);}if(typeof number==='object'){return this._initArray(number,base,endian);}if(base==='hex'){base=16;}assert(base===(base|0)&&base>=2&&base<=36);number=number.toString().replace(/\s+/g,'');var start=0;if(number[0]==='-'){start++;this.negative=1;}if(start<number.length){if(base===16){this._parseHex(number,start,endian);}else{this._parseBase(number,base,start);if(endian==='le'){this._initArray(this.toArray(),base,endian);}}}};BN.prototype._initNumber=function _initNumber(number,base,endian){if(number<0){this.negative=1;number=-number;}if(number<0x4000000){this.words=[number&0x3ffffff];this.length=1;}else if(number<0x10000000000000){this.words=[number&0x3ffffff,number/0x4000000&0x3ffffff];this.length=2;}else{assert(number<0x20000000000000);// 2 ^ 53 (unsafe)
this.words=[number&0x3ffffff,number/0x4000000&0x3ffffff,1];this.length=3;}if(endian!=='le')return;// Reverse the bytes
this._initArray(this.toArray(),base,endian);};BN.prototype._initArray=function _initArray(number,base,endian){// Perhaps a Uint8Array
assert(typeof number.length==='number');if(number.length<=0){this.words=[0];this.length=1;return this;}this.length=Math.ceil(number.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0;}var j,w;var off=0;if(endian==='be'){for(i=number.length-1,j=0;i>=0;i-=3){w=number[i]|number[i-1]<<8|number[i-2]<<16;this.words[j]|=w<<off&0x3ffffff;this.words[j+1]=w>>>26-off&0x3ffffff;off+=24;if(off>=26){off-=26;j++;}}}else if(endian==='le'){for(i=0,j=0;i<number.length;i+=3){w=number[i]|number[i+1]<<8|number[i+2]<<16;this.words[j]|=w<<off&0x3ffffff;this.words[j+1]=w>>>26-off&0x3ffffff;off+=24;if(off>=26){off-=26;j++;}}}return this._strip();};function parseHex4Bits(string,index){var c=string.charCodeAt(index);// '0' - '9'
if(c>=48&&c<=57){return c-48;// 'A' - 'F'
}else if(c>=65&&c<=70){return c-55;// 'a' - 'f'
}else if(c>=97&&c<=102){return c-87;}else{assert(false,'Invalid character in '+string);}}function parseHexByte(string,lowerBound,index){var r=parseHex4Bits(string,index);if(index-1>=lowerBound){r|=parseHex4Bits(string,index-1)<<4;}return r;}BN.prototype._parseHex=function _parseHex(number,start,endian){// Create possibly bigger array to ensure that it fits the number
this.length=Math.ceil((number.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0;}// 24-bits chunks
var off=0;var j=0;var w;if(endian==='be'){for(i=number.length-1;i>=start;i-=2){w=parseHexByte(number,start,i)<<off;this.words[j]|=w&0x3ffffff;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26;}else{off+=8;}}}else{var parseLength=number.length-start;for(i=parseLength%2===0?start+1:start;i<number.length;i+=2){w=parseHexByte(number,start,i)<<off;this.words[j]|=w&0x3ffffff;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26;}else{off+=8;}}}this._strip();};function parseBase(str,start,end,mul){var r=0;var b=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul;// 'a'
if(c>=49){b=c-49+0xa;// 'A'
}else if(c>=17){b=c-17+0xa;// '0' - '9'
}else{b=c;}assert(c>=0&&b<mul,'Invalid character');r+=b;}return r;}BN.prototype._parseBase=function _parseBase(number,base,start){// Initialize as zero
this.words=[0];this.length=1;// Find length of limb in base
for(var limbLen=0,limbPow=1;limbPow<=0x3ffffff;limbPow*=base){limbLen++;}limbLen--;limbPow=limbPow/base|0;var total=number.length-start;var mod=total%limbLen;var end=Math.min(total,total-mod)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number,i,i+limbLen,base);this.imuln(limbPow);if(this.words[0]+word<0x4000000){this.words[0]+=word;}else{this._iaddn(word);}}if(mod!==0){var pow=1;word=parseBase(number,i,number.length,base);for(i=0;i<mod;i++){pow*=base;}this.imuln(pow);if(this.words[0]+word<0x4000000){this.words[0]+=word;}else{this._iaddn(word);}}this._strip();};BN.prototype.copy=function copy(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i];}dest.length=this.length;dest.negative=this.negative;dest.red=this.red;};function move(dest,src){dest.words=src.words;dest.length=src.length;dest.negative=src.negative;dest.red=src.red;}BN.prototype._move=function _move(dest){move(dest,this);};BN.prototype.clone=function clone(){var r=new BN(null);this.copy(r);return r;};BN.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0;}return this;};// Remove leading `0` from `this`
BN.prototype._strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--;}return this._normSign();};BN.prototype._normSign=function _normSign(){// -0 = 0
if(this.length===1&&this.words[0]===0){this.negative=0;}return this;};// Check Symbol.for because not everywhere where Symbol defined
// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
if(typeof Symbol!=='undefined'&&typeof Symbol.for==='function'){try{BN.prototype[Symbol.for('nodejs.util.inspect.custom')]=inspect;}catch(e){BN.prototype.inspect=inspect;}}else{BN.prototype.inspect=inspect;}function inspect(){return(this.red?'<BN-R: ':'<BN: ')+this.toString(16)+'>';}/*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */var zeros=['','0','00','000','0000','00000','000000','0000000','00000000','000000000','0000000000','00000000000','000000000000','0000000000000','00000000000000','000000000000000','0000000000000000','00000000000000000','000000000000000000','0000000000000000000','00000000000000000000','000000000000000000000','0000000000000000000000','00000000000000000000000','000000000000000000000000','0000000000000000000000000'];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,10000000,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64000000,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,24300000,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(base,padding){base=base||10;padding=padding|0||1;var out;if(base===16||base==='hex'){out='';var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&0xffffff).toString(16);carry=w>>>24-off&0xffffff;if(carry!==0||i!==this.length-1){out=zeros[6-word.length]+word+out;}else{out=word+out;}off+=2;if(off>=26){off-=26;i--;}}if(carry!==0){out=carry.toString(16)+out;}while(out.length%padding!==0){out='0'+out;}if(this.negative!==0){out='-'+out;}return out;}if(base===(base|0)&&base>=2&&base<=36){// var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
var groupSize=groupSizes[base];// var groupBase = Math.pow(base, groupSize);
var groupBase=groupBases[base];out='';var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modrn(groupBase).toString(base);c=c.idivn(groupBase);if(!c.isZero()){out=zeros[groupSize-r.length]+r+out;}else{out=r+out;}}if(this.isZero()){out='0'+out;}while(out.length%padding!==0){out='0'+out;}if(this.negative!==0){out='-'+out;}return out;}assert(false,'Base should be between 2 and 36');};BN.prototype.toNumber=function toNumber(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*0x4000000;}else if(this.length===3&&this.words[2]===0x01){// NOTE: at this stage it is known that the top bit is set
ret+=0x10000000000000+this.words[1]*0x4000000;}else if(this.length>2){assert(false,'Number can only safely store up to 53 bits');}return this.negative!==0?-ret:ret;};BN.prototype.toJSON=function toJSON(){return this.toString(16,2);};if(Buffer){BN.prototype.toBuffer=function toBuffer(endian,length){return this.toArrayLike(Buffer,endian,length);};}BN.prototype.toArray=function toArray(endian,length){return this.toArrayLike(Array,endian,length);};var allocate=function allocate(ArrayType,size){if(ArrayType.allocUnsafe){return ArrayType.allocUnsafe(size);}return new ArrayType(size);};BN.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){this._strip();var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert(byteLength<=reqLength,'byte array longer than desired length');assert(reqLength>0,'Requested array length <= 0');var res=allocate(ArrayType,reqLength);var postfix=endian==='le'?'LE':'BE';this['_toArrayLike'+postfix](res,byteLength);return res;};BN.prototype._toArrayLikeLE=function _toArrayLikeLE(res,byteLength){var position=0;var carry=0;for(var i=0,shift=0;i<this.length;i++){var word=this.words[i]<<shift|carry;res[position++]=word&0xff;if(position<res.length){res[position++]=word>>8&0xff;}if(position<res.length){res[position++]=word>>16&0xff;}if(shift===6){if(position<res.length){res[position++]=word>>24&0xff;}carry=0;shift=0;}else{carry=word>>>24;shift+=2;}}if(position<res.length){res[position++]=carry;while(position<res.length){res[position++]=0;}}};BN.prototype._toArrayLikeBE=function _toArrayLikeBE(res,byteLength){var position=res.length-1;var carry=0;for(var i=0,shift=0;i<this.length;i++){var word=this.words[i]<<shift|carry;res[position--]=word&0xff;if(position>=0){res[position--]=word>>8&0xff;}if(position>=0){res[position--]=word>>16&0xff;}if(shift===6){if(position>=0){res[position--]=word>>24&0xff;}carry=0;shift=0;}else{carry=word>>>24;shift+=2;}}if(position>=0){res[position--]=carry;while(position>=0){res[position--]=0;}}};if(Math.clz32){BN.prototype._countBits=function _countBits(w){return 32-Math.clz32(w);};}else{BN.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=0x1000){r+=13;t>>>=13;}if(t>=0x40){r+=7;t>>>=7;}if(t>=0x8){r+=4;t>>>=4;}if(t>=0x02){r+=2;t>>>=2;}return r+t;};}BN.prototype._zeroBits=function _zeroBits(w){// Short-cut
if(w===0)return 26;var t=w;var r=0;if((t&0x1fff)===0){r+=13;t>>>=13;}if((t&0x7f)===0){r+=7;t>>>=7;}if((t&0xf)===0){r+=4;t>>>=4;}if((t&0x3)===0){r+=2;t>>>=2;}if((t&0x1)===0){r++;}return r;};// Return number of used bits in a BN
BN.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi;};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=num.words[off]>>>wbit&0x01;}return w;}// Number of trailing zero bits
BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b=this._zeroBits(this.words[i]);r+=b;if(b!==26)break;}return r;};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8);};BN.prototype.toTwos=function toTwos(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1);}return this.clone();};BN.prototype.fromTwos=function fromTwos(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg();}return this.clone();};BN.prototype.isNeg=function isNeg(){return this.negative!==0;};// Return negative clone of `this`
BN.prototype.neg=function neg(){return this.clone().ineg();};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1;}return this;};// Or `num` with `this` in-place
BN.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0;}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i];}return this._strip();};BN.prototype.ior=function ior(num){assert((this.negative|num.negative)===0);return this.iuor(num);};// Or `num` with `this`
BN.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this);};BN.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this);};// And `num` with `this` in-place
BN.prototype.iuand=function iuand(num){// b = min-length(num, this)
var b;if(this.length>num.length){b=num;}else{b=this;}for(var i=0;i<b.length;i++){this.words[i]=this.words[i]&num.words[i];}this.length=b.length;return this._strip();};BN.prototype.iand=function iand(num){assert((this.negative|num.negative)===0);return this.iuand(num);};// And `num` with `this`
BN.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this);};BN.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this);};// Xor `num` with `this` in-place
BN.prototype.iuxor=function iuxor(num){// a.length > b.length
var a;var b;if(this.length>num.length){a=this;b=num;}else{a=num;b=this;}for(var i=0;i<b.length;i++){this.words[i]=a.words[i]^b.words[i];}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i];}}this.length=a.length;return this._strip();};BN.prototype.ixor=function ixor(num){assert((this.negative|num.negative)===0);return this.iuxor(num);};// Xor `num` with `this`
BN.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this);};BN.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this);};// Not ``this`` with ``width`` bitwidth
BN.prototype.inotn=function inotn(width){assert(typeof width==='number'&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;// Extend the buffer with leading zeroes
this._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--;}// Handle complete words
for(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&0x3ffffff;}// Handle the residue
if(bitsLeft>0){this.words[i]=~this.words[i]&0x3ffffff>>26-bitsLeft;}// And remove leading zeroes
return this._strip();};BN.prototype.notn=function notn(width){return this.clone().inotn(width);};// Set `bit` of `this`
BN.prototype.setn=function setn(bit,val){assert(typeof bit==='number'&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit;}else{this.words[off]=this.words[off]&~(1<<wbit);}return this._strip();};// Add `num` to `this` in-place
BN.prototype.iadd=function iadd(num){var r;// negative + positive
if(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign();// positive + negative
}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign();}// a.length > b.length
var a,b;if(this.length>num.length){a=this;b=num;}else{a=num;b=this;}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)+(b.words[i]|0)+carry;this.words[i]=r&0x3ffffff;carry=r>>>26;}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&0x3ffffff;carry=r>>>26;}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++;// Copy the rest of the words
}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i];}}return this;};// Add `num` to `this`
BN.prototype.add=function add(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res;}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res;}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this);};// Subtract `num` from `this` in-place
BN.prototype.isub=function isub(num){// this - (-num) = this + num
if(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign();// -this - num = -(this + num)
}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign();}// At this point both numbers are positive
var cmp=this.cmp(num);// Optimization - zeroify
if(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this;}// a > b
var a,b;if(cmp>0){a=this;b=num;}else{a=num;b=this;}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)-(b.words[i]|0)+carry;carry=r>>26;this.words[i]=r&0x3ffffff;}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&0x3ffffff;}// Copy rest of the words
if(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i];}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1;}return this._strip();};// Subtract `num` from `this`
BN.prototype.sub=function sub(num){return this.clone().isub(num);};function smallMulTo(self,num,out){out.negative=num.negative^self.negative;var len=self.length+num.length|0;out.length=len;len=len-1|0;// Peel one iteration (compiler can't do it, because of code complexity)
var a=self.words[0]|0;var b=num.words[0]|0;var r=a*b;var lo=r&0x3ffffff;var carry=r/0x4000000|0;out.words[0]=lo;for(var k=1;k<len;k++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,
// note that ncarry could be >= 0x3ffffff
var ncarry=carry>>>26;var rword=carry&0x3ffffff;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j|0;a=self.words[i]|0;b=num.words[j]|0;r=a*b+rword;ncarry+=r/0x4000000|0;rword=r&0x3ffffff;}out.words[k]=rword|0;carry=ncarry|0;}if(carry!==0){out.words[k]=carry|0;}else{out.length--;}return out._strip();}// TODO(indutny): it may be reasonable to omit it for users who don't need
// to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
// multiplication (like elliptic secp256k1).
var comb10MulTo=function comb10MulTo(self,num,out){var a=self.words;var b=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&0x1fff;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&0x1fff;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&0x1fff;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&0x1fff;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&0x1fff;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&0x1fff;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&0x1fff;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&0x1fff;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&0x1fff;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&0x1fff;var ah9=a9>>>13;var b0=b[0]|0;var bl0=b0&0x1fff;var bh0=b0>>>13;var b1=b[1]|0;var bl1=b1&0x1fff;var bh1=b1>>>13;var b2=b[2]|0;var bl2=b2&0x1fff;var bh2=b2>>>13;var b3=b[3]|0;var bl3=b3&0x1fff;var bh3=b3>>>13;var b4=b[4]|0;var bl4=b4&0x1fff;var bh4=b4>>>13;var b5=b[5]|0;var bl5=b5&0x1fff;var bh5=b5>>>13;var b6=b[6]|0;var bl6=b6&0x1fff;var bh6=b6>>>13;var b7=b[7]|0;var bl7=b7&0x1fff;var bh7=b7>>>13;var b8=b[8]|0;var bl8=b8&0x1fff;var bh8=b8>>>13;var b9=b[9]|0;var bl9=b9&0x1fff;var bh9=b9>>>13;out.negative=self.negative^num.negative;out.length=19;/* k = 0 */lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=0x3ffffff;/* k = 1 */lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=0x3ffffff;/* k = 2 */lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=0x3ffffff;/* k = 3 */lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=0x3ffffff;/* k = 4 */lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=0x3ffffff;/* k = 5 */lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=0x3ffffff;/* k = 6 */lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=0x3ffffff;/* k = 7 */lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=0x3ffffff;/* k = 8 */lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=0x3ffffff;/* k = 9 */lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=0x3ffffff;/* k = 10 */lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=0x3ffffff;/* k = 11 */lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=0x3ffffff;/* k = 12 */lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=0x3ffffff;/* k = 13 */lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=0x3ffffff;/* k = 14 */lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=0x3ffffff;/* k = 15 */lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=0x3ffffff;/* k = 16 */lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=0x3ffffff;/* k = 17 */lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=0x3ffffff;/* k = 18 */lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=0x3ffffff;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++;}return out;};// Polyfill comb
if(!Math.imul){comb10MulTo=smallMulTo;}function bigMulTo(self,num,out){out.negative=num.negative^self.negative;out.length=self.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,
// note that ncarry could be >= 0x3ffffff
var ncarry=hncarry;hncarry=0;var rword=carry&0x3ffffff;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j;var a=self.words[i]|0;var b=num.words[j]|0;var r=a*b;var lo=r&0x3ffffff;ncarry=ncarry+(r/0x4000000|0)|0;lo=lo+rword|0;rword=lo&0x3ffffff;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=0x3ffffff;}out.words[k]=rword;carry=ncarry;ncarry=hncarry;}if(carry!==0){out.words[k]=carry;}else{out.length--;}return out._strip();}function jumboMulTo(self,num,out){// Temporary disable, see https://github.com/indutny/bn.js/issues/211
// var fftm = new FFTM();
// return fftm.mulp(self, num, out);
return bigMulTo(self,num,out);}BN.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out);}else if(len<63){res=smallMulTo(this,num,out);}else if(len<1024){res=bigMulTo(this,num,out);}else{res=jumboMulTo(this,num,out);}return res;};// Cooley-Tukey algorithm for FFT
// slightly revisited to rely on looping instead of recursion
function FFTM(x,y){this.x=x;this.y=y;}FFTM.prototype.makeRBT=function makeRBT(N){var t=new Array(N);var l=BN.prototype._countBits(N)-1;for(var i=0;i<N;i++){t[i]=this.revBin(i,l,N);}return t;};// Returns binary-reversed representation of `x`
FFTM.prototype.revBin=function revBin(x,l,N){if(x===0||x===N-1)return x;var rb=0;for(var i=0;i<l;i++){rb|=(x&1)<<l-i-1;x>>=1;}return rb;};// Performs "tweedling" phase, therefore 'emulating'
// behaviour of the recursive algorithm
FFTM.prototype.permute=function permute(rbt,rws,iws,rtws,itws,N){for(var i=0;i<N;i++){rtws[i]=rws[rbt[i]];itws[i]=iws[rbt[i]];}};FFTM.prototype.transform=function transform(rws,iws,rtws,itws,N,rbt){this.permute(rbt,rws,iws,rtws,itws,N);for(var s=1;s<N;s<<=1){var l=s<<1;var rtwdf=Math.cos(2*Math.PI/l);var itwdf=Math.sin(2*Math.PI/l);for(var p=0;p<N;p+=l){var rtwdf_=rtwdf;var itwdf_=itwdf;for(var j=0;j<s;j++){var re=rtws[p+j];var ie=itws[p+j];var ro=rtws[p+j+s];var io=itws[p+j+s];var rx=rtwdf_*ro-itwdf_*io;io=rtwdf_*io+itwdf_*ro;ro=rx;rtws[p+j]=re+ro;itws[p+j]=ie+io;rtws[p+j+s]=re-ro;itws[p+j+s]=ie-io;/* jshint maxdepth : false */if(j!==l){rx=rtwdf*rtwdf_-itwdf*itwdf_;itwdf_=rtwdf*itwdf_+itwdf*rtwdf_;rtwdf_=rx;}}}}};FFTM.prototype.guessLen13b=function guessLen13b(n,m){var N=Math.max(m,n)|1;var odd=N&1;var i=0;for(N=N/2|0;N;N=N>>>1){i++;}return 1<<i+1+odd;};FFTM.prototype.conjugate=function conjugate(rws,iws,N){if(N<=1)return;for(var i=0;i<N/2;i++){var t=rws[i];rws[i]=rws[N-i-1];rws[N-i-1]=t;t=iws[i];iws[i]=-iws[N-i-1];iws[N-i-1]=-t;}};FFTM.prototype.normalize13b=function normalize13b(ws,N){var carry=0;for(var i=0;i<N/2;i++){var w=Math.round(ws[2*i+1]/N)*0x2000+Math.round(ws[2*i]/N)+carry;ws[i]=w&0x3ffffff;if(w<0x4000000){carry=0;}else{carry=w/0x4000000|0;}}return ws;};FFTM.prototype.convert13b=function convert13b(ws,len,rws,N){var carry=0;for(var i=0;i<len;i++){carry=carry+(ws[i]|0);rws[2*i]=carry&0x1fff;carry=carry>>>13;rws[2*i+1]=carry&0x1fff;carry=carry>>>13;}// Pad with zeroes
for(i=2*len;i<N;++i){rws[i]=0;}assert(carry===0);assert((carry&~0x1fff)===0);};FFTM.prototype.stub=function stub(N){var ph=new Array(N);for(var i=0;i<N;i++){ph[i]=0;}return ph;};FFTM.prototype.mulp=function mulp(x,y,out){var N=2*this.guessLen13b(x.length,y.length);var rbt=this.makeRBT(N);var _=this.stub(N);var rws=new Array(N);var rwst=new Array(N);var iwst=new Array(N);var nrws=new Array(N);var nrwst=new Array(N);var niwst=new Array(N);var rmws=out.words;rmws.length=N;this.convert13b(x.words,x.length,rws,N);this.convert13b(y.words,y.length,nrws,N);this.transform(rws,_,rwst,iwst,N,rbt);this.transform(nrws,_,nrwst,niwst,N,rbt);for(var i=0;i<N;i++){var rx=rwst[i]*nrwst[i]-iwst[i]*niwst[i];iwst[i]=rwst[i]*niwst[i]+iwst[i]*nrwst[i];rwst[i]=rx;}this.conjugate(rwst,iwst,N);this.transform(rwst,iwst,rmws,_,N,rbt);this.conjugate(rmws,_,N);this.normalize13b(rmws,N);out.negative=x.negative^y.negative;out.length=x.length+y.length;return out._strip();};// Multiply `this` by `num`
BN.prototype.mul=function mul(num){var out=new BN(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out);};// Multiply employing FFT
BN.prototype.mulf=function mulf(num){var out=new BN(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out);};// In-place Multiplication
BN.prototype.imul=function imul(num){return this.clone().mulTo(num,this);};BN.prototype.imuln=function imuln(num){var isNegNum=num<0;if(isNegNum)num=-num;assert(typeof num==='number');assert(num<0x4000000);// Carry
var carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&0x3ffffff)+(carry&0x3ffffff);carry>>=26;carry+=w/0x4000000|0;// NOTE: lo is 27bit maximum
carry+=lo>>>26;this.words[i]=lo&0x3ffffff;}if(carry!==0){this.words[i]=carry;this.length++;}return isNegNum?this.ineg():this;};BN.prototype.muln=function muln(num){return this.clone().imuln(num);};// `this` * `this`
BN.prototype.sqr=function sqr(){return this.mul(this);};// `this` * `this` in-place
BN.prototype.isqr=function isqr(){return this.imul(this.clone());};// Math.pow(`this`, `num`)
BN.prototype.pow=function pow(num){var w=toBitArray(num);if(w.length===0)return new BN(1);// Skip leading zeroes
var res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break;}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q);}}return res;};// Shift-left in-place
BN.prototype.iushln=function iushln(bits){assert(typeof bits==='number'&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=0x3ffffff>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r;}if(carry){this.words[i]=carry;this.length++;}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i];}for(i=0;i<s;i++){this.words[i]=0;}this.length+=s;}return this._strip();};BN.prototype.ishln=function ishln(bits){// TODO(indutny): implement me
assert(this.negative===0);return this.iushln(bits);};// Shift-right in-place
// NOTE: `hint` is a lowest bit before trailing zeroes
// NOTE: if `extended` is present - it will be filled with destroyed bits
BN.prototype.iushrn=function iushrn(bits,hint,extended){assert(typeof bits==='number'&&bits>=0);var h;if(hint){h=(hint-hint%26)/26;}else{h=0;}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask=0x3ffffff^0x3ffffff>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);// Extended mode, copy masked part
if(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i];}maskedWords.length=s;}if(s===0){// No-op, we should not move anything at all
}else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s];}}else{this.words[0]=0;this.length=1;}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask;}// Push carried bits as a mask
if(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry;}if(this.length===0){this.words[0]=0;this.length=1;}return this._strip();};BN.prototype.ishrn=function ishrn(bits,hint,extended){// TODO(indutny): implement me
assert(this.negative===0);return this.iushrn(bits,hint,extended);};// Shift-left
BN.prototype.shln=function shln(bits){return this.clone().ishln(bits);};BN.prototype.ushln=function ushln(bits){return this.clone().iushln(bits);};// Shift-right
BN.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits);};BN.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits);};// Test if n bit is set
BN.prototype.testn=function testn(bit){assert(typeof bit==='number'&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;// Fast case: bit is much higher than all existing words
if(this.length<=s)return false;// Check bit and return
var w=this.words[s];return!!(w&q);};// Return only lowers bits of number (in-place)
BN.prototype.imaskn=function imaskn(bits){assert(typeof bits==='number'&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert(this.negative===0,'imaskn works only with positive numbers');if(this.length<=s){return this;}if(r!==0){s++;}this.length=Math.min(s,this.length);if(r!==0){var mask=0x3ffffff^0x3ffffff>>>r<<r;this.words[this.length-1]&=mask;}return this._strip();};// Return only lowers bits of number
BN.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits);};// Add plain number `num` to `this`
BN.prototype.iaddn=function iaddn(num){assert(typeof num==='number');assert(num<0x4000000);if(num<0)return this.isubn(-num);// Possible sign change
if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<=num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this;}this.negative=0;this.isubn(num);this.negative=1;return this;}// Add without checks
return this._iaddn(num);};BN.prototype._iaddn=function _iaddn(num){this.words[0]+=num;// Carry
for(var i=0;i<this.length&&this.words[i]>=0x4000000;i++){this.words[i]-=0x4000000;if(i===this.length-1){this.words[i+1]=1;}else{this.words[i+1]++;}}this.length=Math.max(this.length,i+1);return this;};// Subtract plain number `num` from `this`
BN.prototype.isubn=function isubn(num){assert(typeof num==='number');assert(num<0x4000000);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this;}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1;}else{// Carry
for(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=0x4000000;this.words[i+1]-=1;}}return this._strip();};BN.prototype.addn=function addn(num){return this.clone().iaddn(num);};BN.prototype.subn=function subn(num){return this.clone().isubn(num);};BN.prototype.iabs=function iabs(){this.negative=0;return this;};BN.prototype.abs=function abs(){return this.clone().iabs();};BN.prototype._ishlnsubmul=function _ishlnsubmul(num,mul,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul;w-=right&0x3ffffff;carry=(w>>26)-(right/0x4000000|0);this.words[i+shift]=w&0x3ffffff;}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&0x3ffffff;}if(carry===0)return this._strip();// Subtraction overflow
assert(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&0x3ffffff;}this.negative=1;return this._strip();};BN.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b=num;// Normalize
var bhi=b.words[b.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b=b.ushln(shift);a.iushln(shift);bhi=b.words[b.length-1]|0;}// Initialize quotient
var m=a.length-b.length;var q;if(mode!=='mod'){q=new BN(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0;}}var diff=a.clone()._ishlnsubmul(b,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1;}}for(var j=m-1;j>=0;j--){var qj=(a.words[b.length+j]|0)*0x4000000+(a.words[b.length+j-1]|0);// NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
// (0x7ffffff)
qj=Math.min(qj/bhi|0,0x3ffffff);a._ishlnsubmul(b,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b,1,j);if(!a.isZero()){a.negative^=1;}}if(q){q.words[j]=qj;}}if(q){q._strip();}a._strip();// Denormalize
if(mode!=='div'&&shift!==0){a.iushrn(shift);}return{div:q||null,mod:a};};// NOTE: 1) `mode` can be set to `mod` to request mod only,
//       to `div` to request div only, or be absent to
//       request both div & mod
//       2) `positive` is true if unsigned mod is requested
BN.prototype.divmod=function divmod(num,mode,positive){assert(!num.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)};}var div,mod,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!=='mod'){div=res.div.neg();}if(mode!=='div'){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.iadd(num);}}return{div:div,mod:mod};}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!=='mod'){div=res.div.neg();}return{div:div,mod:res.mod};}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!=='div'){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.isub(num);}}return{div:res.div,mod:mod};}// Both numbers are positive at this point
// Strip both numbers to approximate shift value
if(num.length>this.length||this.cmp(num)<0){return{div:new BN(0),mod:this};}// Very short reduction
if(num.length===1){if(mode==='div'){return{div:this.divn(num.words[0]),mod:null};}if(mode==='mod'){return{div:null,mod:new BN(this.modrn(num.words[0]))};}return{div:this.divn(num.words[0]),mod:new BN(this.modrn(num.words[0]))};}return this._wordDiv(num,mode);};// Find `this` / `num`
BN.prototype.div=function div(num){return this.divmod(num,'div',false).div;};// Find `this` % `num`
BN.prototype.mod=function mod(num){return this.divmod(num,'mod',false).mod;};BN.prototype.umod=function umod(num){return this.divmod(num,'mod',true).mod;};// Find Round(`this` / `num`)
BN.prototype.divRound=function divRound(num){var dm=this.divmod(num);// Fast case - exact division
if(dm.mod.isZero())return dm.div;var mod=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod.cmp(half);// Round down
if(cmp<0||r2===1&&cmp===0)return dm.div;// Round up
return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1);};BN.prototype.modrn=function modrn(num){var isNegNum=num<0;if(isNegNum)num=-num;assert(num<=0x3ffffff);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num;}return isNegNum?-acc:acc;};// WARNING: DEPRECATED
BN.prototype.modn=function modn(num){return this.modrn(num);};// In-place division by number
BN.prototype.idivn=function idivn(num){var isNegNum=num<0;if(isNegNum)num=-num;assert(num<=0x3ffffff);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*0x4000000;this.words[i]=w/num|0;carry=w%num;}this._strip();return isNegNum?this.ineg():this;};BN.prototype.divn=function divn(num){return this.clone().idivn(num);};BN.prototype.egcd=function egcd(p){assert(p.negative===0);assert(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p);}else{x=x.clone();}// A * x + B * y = x
var A=new BN(1);var B=new BN(0);// C * x + D * y = y
var C=new BN(0);var D=new BN(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g;}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){x.iushrn(i);while(i-->0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp);}A.iushrn(1);B.iushrn(1);}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){y.iushrn(j);while(j-->0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp);}C.iushrn(1);D.iushrn(1);}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D);}else{y.isub(x);C.isub(A);D.isub(B);}}return{a:C,b:D,gcd:y.iushln(g)};};// This is reduced incarnation of the binary EEA
// above, designated to invert members of the
// _prime_ fields F(p) at a maximal speed
BN.prototype._invmp=function _invmp(p){assert(p.negative===0);assert(!p.isZero());var a=this;var b=p.clone();if(a.negative!==0){a=a.umod(p);}else{a=a.clone();}var x1=new BN(1);var x2=new BN(0);var delta=b.clone();while(a.cmpn(1)>0&&b.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){a.iushrn(i);while(i-->0){if(x1.isOdd()){x1.iadd(delta);}x1.iushrn(1);}}for(var j=0,jm=1;(b.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){b.iushrn(j);while(j-->0){if(x2.isOdd()){x2.iadd(delta);}x2.iushrn(1);}}if(a.cmp(b)>=0){a.isub(b);x1.isub(x2);}else{b.isub(a);x2.isub(x1);}}var res;if(a.cmpn(1)===0){res=x1;}else{res=x2;}if(res.cmpn(0)<0){res.iadd(p);}return res;};BN.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b=num.clone();a.negative=0;b.negative=0;// Remove common factor of two
for(var shift=0;a.isEven()&&b.isEven();shift++){a.iushrn(1);b.iushrn(1);}do{while(a.isEven()){a.iushrn(1);}while(b.isEven()){b.iushrn(1);}var r=a.cmp(b);if(r<0){// Swap `a` and `b` to make `a` always bigger than `b`
var t=a;a=b;b=t;}else if(r===0||b.cmpn(1)===0){break;}a.isub(b);}while(true);return b.iushln(shift);};// Invert number in the field F(num)
BN.prototype.invm=function invm(num){return this.egcd(num).a.umod(num);};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0;};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1;};// And first word and num
BN.prototype.andln=function andln(num){return this.words[0]&num;};// Increment at the bit position in-line
BN.prototype.bincn=function bincn(bit){assert(typeof bit==='number');var r=bit%26;var s=(bit-r)/26;var q=1<<r;// Fast case: bit is much higher than all existing words
if(this.length<=s){this._expand(s+1);this.words[s]|=q;return this;}// Add bit and propagate, if needed
var carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=0x3ffffff;this.words[i]=w;}if(carry!==0){this.words[i]=carry;this.length++;}return this;};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0;};BN.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this._strip();var res;if(this.length>1){res=1;}else{if(negative){num=-num;}assert(num<=0x3ffffff,'Number is too big');var w=this.words[0]|0;res=w===num?0:w<num?-1:1;}if(this.negative!==0)return-res|0;return res;};// Compare two numbers and return:
// 1 - if `this` > `num`
// 0 - if `this` == `num`
// -1 - if `this` < `num`
BN.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res;};// Unsigned comparison
BN.prototype.ucmp=function ucmp(num){// At this point both numbers have the same sign
if(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b=num.words[i]|0;if(a===b)continue;if(a<b){res=-1;}else if(a>b){res=1;}break;}return res;};BN.prototype.gtn=function gtn(num){return this.cmpn(num)===1;};BN.prototype.gt=function gt(num){return this.cmp(num)===1;};BN.prototype.gten=function gten(num){return this.cmpn(num)>=0;};BN.prototype.gte=function gte(num){return this.cmp(num)>=0;};BN.prototype.ltn=function ltn(num){return this.cmpn(num)===-1;};BN.prototype.lt=function lt(num){return this.cmp(num)===-1;};BN.prototype.lten=function lten(num){return this.cmpn(num)<=0;};BN.prototype.lte=function lte(num){return this.cmp(num)<=0;};BN.prototype.eqn=function eqn(num){return this.cmpn(num)===0;};BN.prototype.eq=function eq(num){return this.cmp(num)===0;};//
// A reduce context, could be using montgomery or something better, depending
// on the `m` itself.
//
BN.red=function red(num){return new Red(num);};BN.prototype.toRed=function toRed(ctx){assert(!this.red,'Already a number in reduction context');assert(this.negative===0,'red works only with positives');return ctx.convertTo(this)._forceRed(ctx);};BN.prototype.fromRed=function fromRed(){assert(this.red,'fromRed works only with numbers in reduction context');return this.red.convertFrom(this);};BN.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this;};BN.prototype.forceRed=function forceRed(ctx){assert(!this.red,'Already a number in reduction context');return this._forceRed(ctx);};BN.prototype.redAdd=function redAdd(num){assert(this.red,'redAdd works only with red numbers');return this.red.add(this,num);};BN.prototype.redIAdd=function redIAdd(num){assert(this.red,'redIAdd works only with red numbers');return this.red.iadd(this,num);};BN.prototype.redSub=function redSub(num){assert(this.red,'redSub works only with red numbers');return this.red.sub(this,num);};BN.prototype.redISub=function redISub(num){assert(this.red,'redISub works only with red numbers');return this.red.isub(this,num);};BN.prototype.redShl=function redShl(num){assert(this.red,'redShl works only with red numbers');return this.red.shl(this,num);};BN.prototype.redMul=function redMul(num){assert(this.red,'redMul works only with red numbers');this.red._verify2(this,num);return this.red.mul(this,num);};BN.prototype.redIMul=function redIMul(num){assert(this.red,'redMul works only with red numbers');this.red._verify2(this,num);return this.red.imul(this,num);};BN.prototype.redSqr=function redSqr(){assert(this.red,'redSqr works only with red numbers');this.red._verify1(this);return this.red.sqr(this);};BN.prototype.redISqr=function redISqr(){assert(this.red,'redISqr works only with red numbers');this.red._verify1(this);return this.red.isqr(this);};// Square root over p
BN.prototype.redSqrt=function redSqrt(){assert(this.red,'redSqrt works only with red numbers');this.red._verify1(this);return this.red.sqrt(this);};BN.prototype.redInvm=function redInvm(){assert(this.red,'redInvm works only with red numbers');this.red._verify1(this);return this.red.invm(this);};// Return negative clone of `this` % `red modulo`
BN.prototype.redNeg=function redNeg(){assert(this.red,'redNeg works only with red numbers');this.red._verify1(this);return this.red.neg(this);};BN.prototype.redPow=function redPow(num){assert(this.red&&!num.red,'redPow(normalNum)');this.red._verify1(this);return this.red.pow(this,num);};// Prime numbers with efficient reduction
var primes={k256:null,p224:null,p192:null,p25519:null};// Pseudo-Mersenne prime
function MPrime(name,p){// P = 2 ^ N - K
this.name=name;this.p=new BN(p,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp();}MPrime.prototype._tmp=function _tmp(){var tmp=new BN(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp;};MPrime.prototype.ireduce=function ireduce(num){// Assumes that `num` is less than `P^2`
// num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
var r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength();}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1;}else if(cmp>0){r.isub(this.p);}else{if(r.strip!==undefined){// r is a BN v4 instance
r.strip();}else{// r is a BN v5 instance
r._strip();}}return r;};MPrime.prototype.split=function split(input,out){input.iushrn(this.n,0,out);};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k);};function K256(){MPrime.call(this,'k256','ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');}inherits(K256,MPrime);K256.prototype.split=function split(input,output){// 256 = 9 * 26 + 22
var mask=0x3fffff;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output.words[i]=input.words[i];}output.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return;}// Shift by 9 limbs
var prev=input.words[9];output.words[output.length++]=prev&mask;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask)<<4|prev>>>22;prev=next;}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10;}else{input.length-=9;}};K256.prototype.imulK=function imulK(num){// K = 0x1000003d1 = [ 0x40, 0x3d1 ]
num.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;// bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
var lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*0x3d1;num.words[i]=lo&0x3ffffff;lo=w*0x40+(lo/0x4000000|0);}// Fast length reduction
if(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--;}}return num;};function P224(){MPrime.call(this,'p224','ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');}inherits(P224,MPrime);function P192(){MPrime.call(this,'p192','ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');}inherits(P192,MPrime);function P25519(){// 2 ^ 255 - 19
MPrime.call(this,'25519','7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(num){// K = 0x13
var carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*0x13+carry;var lo=hi&0x3ffffff;hi>>>=26;num.words[i]=lo;carry=hi;}if(carry!==0){num.words[num.length++]=carry;}return num;};// Exported mostly for testing purposes, use plain name instead
BN._prime=function prime(name){// Cached version of prime
if(primes[name])return primes[name];var prime;if(name==='k256'){prime=new K256();}else if(name==='p224'){prime=new P224();}else if(name==='p192'){prime=new P192();}else if(name==='p25519'){prime=new P25519();}else{throw new Error('Unknown prime '+name);}primes[name]=prime;return prime;};//
// Base reduction engine
//
function Red(m){if(typeof m==='string'){var prime=BN._prime(m);this.m=prime.p;this.prime=prime;}else{assert(m.gtn(1),'modulus must be greater than 1');this.m=m;this.prime=null;}}Red.prototype._verify1=function _verify1(a){assert(a.negative===0,'red works only with positives');assert(a.red,'red works only with red numbers');};Red.prototype._verify2=function _verify2(a,b){assert((a.negative|b.negative)===0,'red works only with positives');assert(a.red&&a.red===b.red,'red works only with red numbers');};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);move(a,a.umod(this.m)._forceRed(this));return a;};Red.prototype.neg=function neg(a){if(a.isZero()){return a.clone();}return this.m.sub(a)._forceRed(this);};Red.prototype.add=function add(a,b){this._verify2(a,b);var res=a.add(b);if(res.cmp(this.m)>=0){res.isub(this.m);}return res._forceRed(this);};Red.prototype.iadd=function iadd(a,b){this._verify2(a,b);var res=a.iadd(b);if(res.cmp(this.m)>=0){res.isub(this.m);}return res;};Red.prototype.sub=function sub(a,b){this._verify2(a,b);var res=a.sub(b);if(res.cmpn(0)<0){res.iadd(this.m);}return res._forceRed(this);};Red.prototype.isub=function isub(a,b){this._verify2(a,b);var res=a.isub(b);if(res.cmpn(0)<0){res.iadd(this.m);}return res;};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num));};Red.prototype.imul=function imul(a,b){this._verify2(a,b);return this.imod(a.imul(b));};Red.prototype.mul=function mul(a,b){this._verify2(a,b);return this.imod(a.mul(b));};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone());};Red.prototype.sqr=function sqr(a){return this.mul(a,a);};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert(mod3%2===1);// Fast case
if(mod3===3){var pow=this.m.add(new BN(1)).iushrn(2);return this.pow(a,pow);}// Tonelli-Shanks algorithm (Totally unoptimized and slow)
//
// Find Q and S, that Q * 2 ^ S = (P - 1)
var q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1);}assert(!q.isZero());var one=new BN(1).toRed(this);var nOne=one.redNeg();// Find quadratic non-residue
// NOTE: Max is such because of generalized Riemann hypothesis.
var lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne);}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr();}assert(i<m);var b=this.pow(c,new BN(1).iushln(m-i-1));r=r.redMul(b);c=b.redSqr();t=t.redMul(c);m=i;}return r;};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg();}else{return this.imod(inv);}};Red.prototype.pow=function pow(a,num){if(num.isZero())return new BN(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a);}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26;}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res);}if(bit===0&&current===0){currentLen=0;continue;}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0;}start=26;}return res;};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r;};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res;};//
// Montgomery method engine
//
BN.mont=function mont(num){return new Mont(num);};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26;}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv);}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift));};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r;};Mont.prototype.imul=function imul(a,b){if(a.isZero()||b.isZero()){a.words[0]=0;a.length=1;return a;}var t=a.imul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m);}else if(u.cmpn(0)<0){res=u.iadd(this.m);}return res._forceRed(this);};Mont.prototype.mul=function mul(a,b){if(a.isZero()||b.isZero())return new BN(0)._forceRed(this);var t=a.mul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m);}else if(u.cmpn(0)<0){res=u.iadd(this.m);}return res._forceRed(this);};Mont.prototype.invm=function invm(a){// (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
var res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this);};})(typeof module==='undefined'||module,this);},{"buffer":96}],95:[function(require,module,exports){var r;module.exports=function rand(len){if(!r)r=new Rand(null);return r.generate(len);};function Rand(rand){this.rand=rand;}module.exports.Rand=Rand;Rand.prototype.generate=function generate(len){return this._rand(len);};// Emulate crypto API using randy
Rand.prototype._rand=function _rand(n){if(this.rand.getBytes)return this.rand.getBytes(n);var res=new Uint8Array(n);for(var i=0;i<res.length;i++)res[i]=this.rand.getByte();return res;};if(typeof self==='object'){if(self.crypto&&self.crypto.getRandomValues){// Modern browsers
Rand.prototype._rand=function _rand(n){var arr=new Uint8Array(n);self.crypto.getRandomValues(arr);return arr;};}else if(self.msCrypto&&self.msCrypto.getRandomValues){// IE
Rand.prototype._rand=function _rand(n){var arr=new Uint8Array(n);self.msCrypto.getRandomValues(arr);return arr;};// Safari's WebWorkers do not have `crypto`
}else if(typeof window==='object'){// Old junk
Rand.prototype._rand=function(){throw new Error('Not implemented yet');};}}else{// Node.js or Web worker with no crypto support
try{var crypto=require('crypto');if(typeof crypto.randomBytes!=='function')throw new Error('Not supported');Rand.prototype._rand=function _rand(n){return crypto.randomBytes(n);};}catch(e){}}},{"crypto":96}],96:[function(require,module,exports){},{}],97:[function(require,module,exports){// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/
var Buffer=require('safe-buffer').Buffer;function asUInt32Array(buf){if(!Buffer.isBuffer(buf))buf=Buffer.from(buf);var len=buf.length/4|0;var out=new Array(len);for(var i=0;i<len;i++){out[i]=buf.readUInt32BE(i*4);}return out;}function scrubVec(v){for(var i=0;i<v.length;v++){v[i]=0;}}function cryptBlock(M,keySchedule,SUB_MIX,SBOX,nRounds){var SUB_MIX0=SUB_MIX[0];var SUB_MIX1=SUB_MIX[1];var SUB_MIX2=SUB_MIX[2];var SUB_MIX3=SUB_MIX[3];var s0=M[0]^keySchedule[0];var s1=M[1]^keySchedule[1];var s2=M[2]^keySchedule[2];var s3=M[3]^keySchedule[3];var t0,t1,t2,t3;var ksRow=4;for(var round=1;round<nRounds;round++){t0=SUB_MIX0[s0>>>24]^SUB_MIX1[s1>>>16&0xff]^SUB_MIX2[s2>>>8&0xff]^SUB_MIX3[s3&0xff]^keySchedule[ksRow++];t1=SUB_MIX0[s1>>>24]^SUB_MIX1[s2>>>16&0xff]^SUB_MIX2[s3>>>8&0xff]^SUB_MIX3[s0&0xff]^keySchedule[ksRow++];t2=SUB_MIX0[s2>>>24]^SUB_MIX1[s3>>>16&0xff]^SUB_MIX2[s0>>>8&0xff]^SUB_MIX3[s1&0xff]^keySchedule[ksRow++];t3=SUB_MIX0[s3>>>24]^SUB_MIX1[s0>>>16&0xff]^SUB_MIX2[s1>>>8&0xff]^SUB_MIX3[s2&0xff]^keySchedule[ksRow++];s0=t0;s1=t1;s2=t2;s3=t3;}t0=(SBOX[s0>>>24]<<24|SBOX[s1>>>16&0xff]<<16|SBOX[s2>>>8&0xff]<<8|SBOX[s3&0xff])^keySchedule[ksRow++];t1=(SBOX[s1>>>24]<<24|SBOX[s2>>>16&0xff]<<16|SBOX[s3>>>8&0xff]<<8|SBOX[s0&0xff])^keySchedule[ksRow++];t2=(SBOX[s2>>>24]<<24|SBOX[s3>>>16&0xff]<<16|SBOX[s0>>>8&0xff]<<8|SBOX[s1&0xff])^keySchedule[ksRow++];t3=(SBOX[s3>>>24]<<24|SBOX[s0>>>16&0xff]<<16|SBOX[s1>>>8&0xff]<<8|SBOX[s2&0xff])^keySchedule[ksRow++];t0=t0>>>0;t1=t1>>>0;t2=t2>>>0;t3=t3>>>0;return[t0,t1,t2,t3];}// AES constants
var RCON=[0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36];var G=function(){// Compute double table
var d=new Array(256);for(var j=0;j<256;j++){if(j<128){d[j]=j<<1;}else{d[j]=j<<1^0x11b;}}var SBOX=[];var INV_SBOX=[];var SUB_MIX=[[],[],[],[]];var INV_SUB_MIX=[[],[],[],[]];// Walk GF(2^8)
var x=0;var xi=0;for(var i=0;i<256;++i){// Compute sbox
var sx=xi^xi<<1^xi<<2^xi<<3^xi<<4;sx=sx>>>8^sx&0xff^0x63;SBOX[x]=sx;INV_SBOX[sx]=x;// Compute multiplication
var x2=d[x];var x4=d[x2];var x8=d[x4];// Compute sub bytes, mix columns tables
var t=d[sx]*0x101^sx*0x1010100;SUB_MIX[0][x]=t<<24|t>>>8;SUB_MIX[1][x]=t<<16|t>>>16;SUB_MIX[2][x]=t<<8|t>>>24;SUB_MIX[3][x]=t;// Compute inv sub bytes, inv mix columns tables
t=x8*0x1010101^x4*0x10001^x2*0x101^x*0x1010100;INV_SUB_MIX[0][sx]=t<<24|t>>>8;INV_SUB_MIX[1][sx]=t<<16|t>>>16;INV_SUB_MIX[2][sx]=t<<8|t>>>24;INV_SUB_MIX[3][sx]=t;if(x===0){x=xi=1;}else{x=x2^d[d[d[x8^x2]]];xi^=d[d[xi]];}}return{SBOX:SBOX,INV_SBOX:INV_SBOX,SUB_MIX:SUB_MIX,INV_SUB_MIX:INV_SUB_MIX};}();function AES(key){this._key=asUInt32Array(key);this._reset();}AES.blockSize=4*4;AES.keySize=256/8;AES.prototype.blockSize=AES.blockSize;AES.prototype.keySize=AES.keySize;AES.prototype._reset=function(){var keyWords=this._key;var keySize=keyWords.length;var nRounds=keySize+6;var ksRows=(nRounds+1)*4;var keySchedule=[];for(var k=0;k<keySize;k++){keySchedule[k]=keyWords[k];}for(k=keySize;k<ksRows;k++){var t=keySchedule[k-1];if(k%keySize===0){t=t<<8|t>>>24;t=G.SBOX[t>>>24]<<24|G.SBOX[t>>>16&0xff]<<16|G.SBOX[t>>>8&0xff]<<8|G.SBOX[t&0xff];t^=RCON[k/keySize|0]<<24;}else if(keySize>6&&k%keySize===4){t=G.SBOX[t>>>24]<<24|G.SBOX[t>>>16&0xff]<<16|G.SBOX[t>>>8&0xff]<<8|G.SBOX[t&0xff];}keySchedule[k]=keySchedule[k-keySize]^t;}var invKeySchedule=[];for(var ik=0;ik<ksRows;ik++){var ksR=ksRows-ik;var tt=keySchedule[ksR-(ik%4?0:4)];if(ik<4||ksR<=4){invKeySchedule[ik]=tt;}else{invKeySchedule[ik]=G.INV_SUB_MIX[0][G.SBOX[tt>>>24]]^G.INV_SUB_MIX[1][G.SBOX[tt>>>16&0xff]]^G.INV_SUB_MIX[2][G.SBOX[tt>>>8&0xff]]^G.INV_SUB_MIX[3][G.SBOX[tt&0xff]];}}this._nRounds=nRounds;this._keySchedule=keySchedule;this._invKeySchedule=invKeySchedule;};AES.prototype.encryptBlockRaw=function(M){M=asUInt32Array(M);return cryptBlock(M,this._keySchedule,G.SUB_MIX,G.SBOX,this._nRounds);};AES.prototype.encryptBlock=function(M){var out=this.encryptBlockRaw(M);var buf=Buffer.allocUnsafe(16);buf.writeUInt32BE(out[0],0);buf.writeUInt32BE(out[1],4);buf.writeUInt32BE(out[2],8);buf.writeUInt32BE(out[3],12);return buf;};AES.prototype.decryptBlock=function(M){M=asUInt32Array(M);// swap
var m1=M[1];M[1]=M[3];M[3]=m1;var out=cryptBlock(M,this._invKeySchedule,G.INV_SUB_MIX,G.INV_SBOX,this._nRounds);var buf=Buffer.allocUnsafe(16);buf.writeUInt32BE(out[0],0);buf.writeUInt32BE(out[3],4);buf.writeUInt32BE(out[2],8);buf.writeUInt32BE(out[1],12);return buf;};AES.prototype.scrub=function(){scrubVec(this._keySchedule);scrubVec(this._invKeySchedule);scrubVec(this._key);};module.exports.AES=AES;},{"safe-buffer":254}],98:[function(require,module,exports){var aes=require('./aes');var Buffer=require('safe-buffer').Buffer;var Transform=require('cipher-base');var inherits=require('inherits');var GHASH=require('./ghash');var xor=require('buffer-xor');var incr32=require('./incr32');function xorTest(a,b){var out=0;if(a.length!==b.length)out++;var len=Math.min(a.length,b.length);for(var i=0;i<len;++i){out+=a[i]^b[i];}return out;}function calcIv(self,iv,ck){if(iv.length===12){self._finID=Buffer.concat([iv,Buffer.from([0,0,0,1])]);return Buffer.concat([iv,Buffer.from([0,0,0,2])]);}var ghash=new GHASH(ck);var len=iv.length;var toPad=len%16;ghash.update(iv);if(toPad){toPad=16-toPad;ghash.update(Buffer.alloc(toPad,0));}ghash.update(Buffer.alloc(8,0));var ivBits=len*8;var tail=Buffer.alloc(8);tail.writeUIntBE(ivBits,0,8);ghash.update(tail);self._finID=ghash.state;var out=Buffer.from(self._finID);incr32(out);return out;}function StreamCipher(mode,key,iv,decrypt){Transform.call(this);var h=Buffer.alloc(4,0);this._cipher=new aes.AES(key);var ck=this._cipher.encryptBlock(h);this._ghash=new GHASH(ck);iv=calcIv(this,iv,ck);this._prev=Buffer.from(iv);this._cache=Buffer.allocUnsafe(0);this._secCache=Buffer.allocUnsafe(0);this._decrypt=decrypt;this._alen=0;this._len=0;this._mode=mode;this._authTag=null;this._called=false;}inherits(StreamCipher,Transform);StreamCipher.prototype._update=function(chunk){if(!this._called&&this._alen){var rump=16-this._alen%16;if(rump<16){rump=Buffer.alloc(rump,0);this._ghash.update(rump);}}this._called=true;var out=this._mode.encrypt(this,chunk);if(this._decrypt){this._ghash.update(chunk);}else{this._ghash.update(out);}this._len+=chunk.length;return out;};StreamCipher.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error('Unsupported state or unable to authenticate data');var tag=xor(this._ghash.final(this._alen*8,this._len*8),this._cipher.encryptBlock(this._finID));if(this._decrypt&&xorTest(tag,this._authTag))throw new Error('Unsupported state or unable to authenticate data');this._authTag=tag;this._cipher.scrub();};StreamCipher.prototype.getAuthTag=function getAuthTag(){if(this._decrypt||!Buffer.isBuffer(this._authTag))throw new Error('Attempting to get auth tag in unsupported state');return this._authTag;};StreamCipher.prototype.setAuthTag=function setAuthTag(tag){if(!this._decrypt)throw new Error('Attempting to set auth tag in unsupported state');this._authTag=tag;};StreamCipher.prototype.setAAD=function setAAD(buf){if(this._called)throw new Error('Attempting to set AAD in unsupported state');this._ghash.update(buf);this._alen+=buf.length;};module.exports=StreamCipher;},{"./aes":97,"./ghash":102,"./incr32":103,"buffer-xor":139,"cipher-base":141,"inherits":223,"safe-buffer":254}],99:[function(require,module,exports){var ciphers=require('./encrypter');var deciphers=require('./decrypter');var modes=require('./modes/list.json');function getCiphers(){return Object.keys(modes);}exports.createCipher=exports.Cipher=ciphers.createCipher;exports.createCipheriv=exports.Cipheriv=ciphers.createCipheriv;exports.createDecipher=exports.Decipher=deciphers.createDecipher;exports.createDecipheriv=exports.Decipheriv=deciphers.createDecipheriv;exports.listCiphers=exports.getCiphers=getCiphers;},{"./decrypter":100,"./encrypter":101,"./modes/list.json":111}],100:[function(require,module,exports){var AuthCipher=require('./authCipher');var Buffer=require('safe-buffer').Buffer;var MODES=require('./modes');var StreamCipher=require('./streamCipher');var Transform=require('cipher-base');var aes=require('./aes');var ebtk=require('evp_bytestokey');var inherits=require('inherits');function Decipher(mode,key,iv){Transform.call(this);this._cache=new Splitter();this._last=void 0;this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=true;}inherits(Decipher,Transform);Decipher.prototype._update=function(data){this._cache.add(data);var chunk;var thing;var out=[];while(chunk=this._cache.get(this._autopadding)){thing=this._mode.decrypt(this,chunk);out.push(thing);}return Buffer.concat(out);};Decipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){return unpad(this._mode.decrypt(this,chunk));}else if(chunk){throw new Error('data not multiple of block length');}};Decipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this;};function Splitter(){this.cache=Buffer.allocUnsafe(0);}Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data]);};Splitter.prototype.get=function(autoPadding){var out;if(autoPadding){if(this.cache.length>16){out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out;}}else{if(this.cache.length>=16){out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out;}}return null;};Splitter.prototype.flush=function(){if(this.cache.length)return this.cache;};function unpad(last){var padded=last[15];if(padded<1||padded>16){throw new Error('unable to decrypt data');}var i=-1;while(++i<padded){if(last[i+(16-padded)]!==padded){throw new Error('unable to decrypt data');}}if(padded===16)return;return last.slice(0,16-padded);}function createDecipheriv(suite,password,iv){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');if(typeof iv==='string')iv=Buffer.from(iv);if(config.mode!=='GCM'&&iv.length!==config.iv)throw new TypeError('invalid iv length '+iv.length);if(typeof password==='string')password=Buffer.from(password);if(password.length!==config.key/8)throw new TypeError('invalid key length '+password.length);if(config.type==='stream'){return new StreamCipher(config.module,password,iv,true);}else if(config.type==='auth'){return new AuthCipher(config.module,password,iv,true);}return new Decipher(config.module,password,iv);}function createDecipher(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');var keys=ebtk(password,false,config.key,config.iv);return createDecipheriv(suite,keys.key,keys.iv);}exports.createDecipher=createDecipher;exports.createDecipheriv=createDecipheriv;},{"./aes":97,"./authCipher":98,"./modes":110,"./streamCipher":113,"cipher-base":141,"evp_bytestokey":191,"inherits":223,"safe-buffer":254}],101:[function(require,module,exports){var MODES=require('./modes');var AuthCipher=require('./authCipher');var Buffer=require('safe-buffer').Buffer;var StreamCipher=require('./streamCipher');var Transform=require('cipher-base');var aes=require('./aes');var ebtk=require('evp_bytestokey');var inherits=require('inherits');function Cipher(mode,key,iv){Transform.call(this);this._cache=new Splitter();this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=true;}inherits(Cipher,Transform);Cipher.prototype._update=function(data){this._cache.add(data);var chunk;var thing;var out=[];while(chunk=this._cache.get()){thing=this._mode.encrypt(this,chunk);out.push(thing);}return Buffer.concat(out);};var PADDING=Buffer.alloc(16,0x10);Cipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){chunk=this._mode.encrypt(this,chunk);this._cipher.scrub();return chunk;}if(!chunk.equals(PADDING)){this._cipher.scrub();throw new Error('data not multiple of block length');}};Cipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this;};function Splitter(){this.cache=Buffer.allocUnsafe(0);}Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data]);};Splitter.prototype.get=function(){if(this.cache.length>15){var out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out;}return null;};Splitter.prototype.flush=function(){var len=16-this.cache.length;var padBuff=Buffer.allocUnsafe(len);var i=-1;while(++i<len){padBuff.writeUInt8(len,i);}return Buffer.concat([this.cache,padBuff]);};function createCipheriv(suite,password,iv){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');if(typeof password==='string')password=Buffer.from(password);if(password.length!==config.key/8)throw new TypeError('invalid key length '+password.length);if(typeof iv==='string')iv=Buffer.from(iv);if(config.mode!=='GCM'&&iv.length!==config.iv)throw new TypeError('invalid iv length '+iv.length);if(config.type==='stream'){return new StreamCipher(config.module,password,iv);}else if(config.type==='auth'){return new AuthCipher(config.module,password,iv);}return new Cipher(config.module,password,iv);}function createCipher(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');var keys=ebtk(password,false,config.key,config.iv);return createCipheriv(suite,keys.key,keys.iv);}exports.createCipheriv=createCipheriv;exports.createCipher=createCipher;},{"./aes":97,"./authCipher":98,"./modes":110,"./streamCipher":113,"cipher-base":141,"evp_bytestokey":191,"inherits":223,"safe-buffer":254}],102:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;var ZEROES=Buffer.alloc(16,0);function toArray(buf){return[buf.readUInt32BE(0),buf.readUInt32BE(4),buf.readUInt32BE(8),buf.readUInt32BE(12)];}function fromArray(out){var buf=Buffer.allocUnsafe(16);buf.writeUInt32BE(out[0]>>>0,0);buf.writeUInt32BE(out[1]>>>0,4);buf.writeUInt32BE(out[2]>>>0,8);buf.writeUInt32BE(out[3]>>>0,12);return buf;}function GHASH(key){this.h=key;this.state=Buffer.alloc(16,0);this.cache=Buffer.allocUnsafe(0);}// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash=function(block){var i=-1;while(++i<block.length){this.state[i]^=block[i];}this._multiply();};GHASH.prototype._multiply=function(){var Vi=toArray(this.h);var Zi=[0,0,0,0];var j,xi,lsbVi;var i=-1;while(++i<128){xi=(this.state[~~(i/8)]&1<<7-i%8)!==0;if(xi){// Z_i+1 = Z_i ^ V_i
Zi[0]^=Vi[0];Zi[1]^=Vi[1];Zi[2]^=Vi[2];Zi[3]^=Vi[3];}// Store the value of LSB(V_i)
lsbVi=(Vi[3]&1)!==0;// V_i+1 = V_i >> 1
for(j=3;j>0;j--){Vi[j]=Vi[j]>>>1|(Vi[j-1]&1)<<31;}Vi[0]=Vi[0]>>>1;// If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
if(lsbVi){Vi[0]=Vi[0]^0xe1<<24;}}this.state=fromArray(Zi);};GHASH.prototype.update=function(buf){this.cache=Buffer.concat([this.cache,buf]);var chunk;while(this.cache.length>=16){chunk=this.cache.slice(0,16);this.cache=this.cache.slice(16);this.ghash(chunk);}};GHASH.prototype.final=function(abl,bl){if(this.cache.length){this.ghash(Buffer.concat([this.cache,ZEROES],16));}this.ghash(fromArray([0,abl,0,bl]));return this.state;};module.exports=GHASH;},{"safe-buffer":254}],103:[function(require,module,exports){function incr32(iv){var len=iv.length;var item;while(len--){item=iv.readUInt8(len);if(item===255){iv.writeUInt8(0,len);}else{item++;iv.writeUInt8(item,len);break;}}}module.exports=incr32;},{}],104:[function(require,module,exports){var xor=require('buffer-xor');exports.encrypt=function(self,block){var data=xor(block,self._prev);self._prev=self._cipher.encryptBlock(data);return self._prev;};exports.decrypt=function(self,block){var pad=self._prev;self._prev=block;var out=self._cipher.decryptBlock(block);return xor(out,pad);};},{"buffer-xor":139}],105:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;var xor=require('buffer-xor');function encryptStart(self,data,decrypt){var len=data.length;var out=xor(data,self._cache);self._cache=self._cache.slice(len);self._prev=Buffer.concat([self._prev,decrypt?data:out]);return out;}exports.encrypt=function(self,data,decrypt){var out=Buffer.allocUnsafe(0);var len;while(data.length){if(self._cache.length===0){self._cache=self._cipher.encryptBlock(self._prev);self._prev=Buffer.allocUnsafe(0);}if(self._cache.length<=data.length){len=self._cache.length;out=Buffer.concat([out,encryptStart(self,data.slice(0,len),decrypt)]);data=data.slice(len);}else{out=Buffer.concat([out,encryptStart(self,data,decrypt)]);break;}}return out;};},{"buffer-xor":139,"safe-buffer":254}],106:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;function encryptByte(self,byteParam,decrypt){var pad;var i=-1;var len=8;var out=0;var bit,value;while(++i<len){pad=self._cipher.encryptBlock(self._prev);bit=byteParam&1<<7-i?0x80:0;value=pad[0]^bit;out+=(value&0x80)>>i%8;self._prev=shiftIn(self._prev,decrypt?bit:value);}return out;}function shiftIn(buffer,value){var len=buffer.length;var i=-1;var out=Buffer.allocUnsafe(buffer.length);buffer=Buffer.concat([buffer,Buffer.from([value])]);while(++i<len){out[i]=buffer[i]<<1|buffer[i+1]>>7;}return out;}exports.encrypt=function(self,chunk,decrypt){var len=chunk.length;var out=Buffer.allocUnsafe(len);var i=-1;while(++i<len){out[i]=encryptByte(self,chunk[i],decrypt);}return out;};},{"safe-buffer":254}],107:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;function encryptByte(self,byteParam,decrypt){var pad=self._cipher.encryptBlock(self._prev);var out=pad[0]^byteParam;self._prev=Buffer.concat([self._prev.slice(1),Buffer.from([decrypt?byteParam:out])]);return out;}exports.encrypt=function(self,chunk,decrypt){var len=chunk.length;var out=Buffer.allocUnsafe(len);var i=-1;while(++i<len){out[i]=encryptByte(self,chunk[i],decrypt);}return out;};},{"safe-buffer":254}],108:[function(require,module,exports){var xor=require('buffer-xor');var Buffer=require('safe-buffer').Buffer;var incr32=require('../incr32');function getBlock(self){var out=self._cipher.encryptBlockRaw(self._prev);incr32(self._prev);return out;}var blockSize=16;exports.encrypt=function(self,chunk){var chunkNum=Math.ceil(chunk.length/blockSize);var start=self._cache.length;self._cache=Buffer.concat([self._cache,Buffer.allocUnsafe(chunkNum*blockSize)]);for(var i=0;i<chunkNum;i++){var out=getBlock(self);var offset=start+i*blockSize;self._cache.writeUInt32BE(out[0],offset+0);self._cache.writeUInt32BE(out[1],offset+4);self._cache.writeUInt32BE(out[2],offset+8);self._cache.writeUInt32BE(out[3],offset+12);}var pad=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,pad);};},{"../incr32":103,"buffer-xor":139,"safe-buffer":254}],109:[function(require,module,exports){exports.encrypt=function(self,block){return self._cipher.encryptBlock(block);};exports.decrypt=function(self,block){return self._cipher.decryptBlock(block);};},{}],110:[function(require,module,exports){var modeModules={ECB:require('./ecb'),CBC:require('./cbc'),CFB:require('./cfb'),CFB8:require('./cfb8'),CFB1:require('./cfb1'),OFB:require('./ofb'),CTR:require('./ctr'),GCM:require('./ctr')};var modes=require('./list.json');for(var key in modes){modes[key].module=modeModules[modes[key].mode];}module.exports=modes;},{"./cbc":104,"./cfb":105,"./cfb1":106,"./cfb8":107,"./ctr":108,"./ecb":109,"./list.json":111,"./ofb":112}],111:[function(require,module,exports){module.exports={"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}};},{}],112:[function(require,module,exports){(function(Buffer){(function(){var xor=require('buffer-xor');function getBlock(self){self._prev=self._cipher.encryptBlock(self._prev);return self._prev;}exports.encrypt=function(self,chunk){while(self._cache.length<chunk.length){self._cache=Buffer.concat([self._cache,getBlock(self)]);}var pad=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,pad);};}).call(this);}).call(this,require("buffer").Buffer);},{"buffer":140,"buffer-xor":139}],113:[function(require,module,exports){var aes=require('./aes');var Buffer=require('safe-buffer').Buffer;var Transform=require('cipher-base');var inherits=require('inherits');function StreamCipher(mode,key,iv,decrypt){Transform.call(this);this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._cache=Buffer.allocUnsafe(0);this._secCache=Buffer.allocUnsafe(0);this._decrypt=decrypt;this._mode=mode;}inherits(StreamCipher,Transform);StreamCipher.prototype._update=function(chunk){return this._mode.encrypt(this,chunk,this._decrypt);};StreamCipher.prototype._final=function(){this._cipher.scrub();};module.exports=StreamCipher;},{"./aes":97,"cipher-base":141,"inherits":223,"safe-buffer":254}],114:[function(require,module,exports){var DES=require('browserify-des');var aes=require('browserify-aes/browser');var aesModes=require('browserify-aes/modes');var desModes=require('browserify-des/modes');var ebtk=require('evp_bytestokey');function createCipher(suite,password){suite=suite.toLowerCase();var keyLen,ivLen;if(aesModes[suite]){keyLen=aesModes[suite].key;ivLen=aesModes[suite].iv;}else if(desModes[suite]){keyLen=desModes[suite].key*8;ivLen=desModes[suite].iv;}else{throw new TypeError('invalid suite type');}var keys=ebtk(password,false,keyLen,ivLen);return createCipheriv(suite,keys.key,keys.iv);}function createDecipher(suite,password){suite=suite.toLowerCase();var keyLen,ivLen;if(aesModes[suite]){keyLen=aesModes[suite].key;ivLen=aesModes[suite].iv;}else if(desModes[suite]){keyLen=desModes[suite].key*8;ivLen=desModes[suite].iv;}else{throw new TypeError('invalid suite type');}var keys=ebtk(password,false,keyLen,ivLen);return createDecipheriv(suite,keys.key,keys.iv);}function createCipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite])return aes.createCipheriv(suite,key,iv);if(desModes[suite])return new DES({key:key,iv:iv,mode:suite});throw new TypeError('invalid suite type');}function createDecipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite])return aes.createDecipheriv(suite,key,iv);if(desModes[suite])return new DES({key:key,iv:iv,mode:suite,decrypt:true});throw new TypeError('invalid suite type');}function getCiphers(){return Object.keys(desModes).concat(aes.getCiphers());}exports.createCipher=exports.Cipher=createCipher;exports.createCipheriv=exports.Cipheriv=createCipheriv;exports.createDecipher=exports.Decipher=createDecipher;exports.createDecipheriv=exports.Decipheriv=createDecipheriv;exports.listCiphers=exports.getCiphers=getCiphers;},{"browserify-aes/browser":99,"browserify-aes/modes":110,"browserify-des":115,"browserify-des/modes":116,"evp_bytestokey":191}],115:[function(require,module,exports){var CipherBase=require('cipher-base');var des=require('des.js');var inherits=require('inherits');var Buffer=require('safe-buffer').Buffer;var modes={'des-ede3-cbc':des.CBC.instantiate(des.EDE),'des-ede3':des.EDE,'des-ede-cbc':des.CBC.instantiate(des.EDE),'des-ede':des.EDE,'des-cbc':des.CBC.instantiate(des.DES),'des-ecb':des.DES};modes.des=modes['des-cbc'];modes.des3=modes['des-ede3-cbc'];module.exports=DES;inherits(DES,CipherBase);function DES(opts){CipherBase.call(this);var modeName=opts.mode.toLowerCase();var mode=modes[modeName];var type;if(opts.decrypt){type='decrypt';}else{type='encrypt';}var key=opts.key;if(!Buffer.isBuffer(key)){key=Buffer.from(key);}if(modeName==='des-ede'||modeName==='des-ede-cbc'){key=Buffer.concat([key,key.slice(0,8)]);}var iv=opts.iv;if(!Buffer.isBuffer(iv)){iv=Buffer.from(iv);}this._des=mode.create({key:key,iv:iv,type:type});}DES.prototype._update=function(data){return Buffer.from(this._des.update(data));};DES.prototype._final=function(){return Buffer.from(this._des.final());};},{"cipher-base":141,"des.js":149,"inherits":223,"safe-buffer":254}],116:[function(require,module,exports){exports['des-ecb']={key:8,iv:0};exports['des-cbc']=exports.des={key:8,iv:8};exports['des-ede3-cbc']=exports.des3={key:24,iv:8};exports['des-ede3']={key:24,iv:0};exports['des-ede-cbc']={key:16,iv:8};exports['des-ede']={key:16,iv:0};},{}],117:[function(require,module,exports){(function(Buffer){(function(){var BN=require('bn.js');var randomBytes=require('randombytes');function blind(priv){var r=getr(priv);var blinder=r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();return{blinder:blinder,unblinder:r.invm(priv.modulus)};}function getr(priv){var len=priv.modulus.byteLength();var r;do{r=new BN(randomBytes(len));}while(r.cmp(priv.modulus)>=0||!r.umod(priv.prime1)||!r.umod(priv.prime2));return r;}function crt(msg,priv){var blinds=blind(priv);var len=priv.modulus.byteLength();var blinded=new BN(msg).mul(blinds.blinder).umod(priv.modulus);var c1=blinded.toRed(BN.mont(priv.prime1));var c2=blinded.toRed(BN.mont(priv.prime2));var qinv=priv.coefficient;var p=priv.prime1;var q=priv.prime2;var m1=c1.redPow(priv.exponent1).fromRed();var m2=c2.redPow(priv.exponent2).fromRed();var h=m1.isub(m2).imul(qinv).umod(p).imul(q);return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer,'be',len);}crt.getr=getr;module.exports=crt;}).call(this);}).call(this,require("buffer").Buffer);},{"bn.js":94,"buffer":140,"randombytes":251}],118:[function(require,module,exports){module.exports=require('./browser/algorithms.json');},{"./browser/algorithms.json":119}],119:[function(require,module,exports){module.exports={"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}};},{}],120:[function(require,module,exports){module.exports={"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"};},{}],121:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;var createHash=require('create-hash');var stream=require('readable-stream');var inherits=require('inherits');var sign=require('./sign');var verify=require('./verify');var algorithms=require('./algorithms.json');Object.keys(algorithms).forEach(function(key){algorithms[key].id=Buffer.from(algorithms[key].id,'hex');algorithms[key.toLowerCase()]=algorithms[key];});function Sign(algorithm){stream.Writable.call(this);var data=algorithms[algorithm];if(!data)throw new Error('Unknown message digest');this._hashType=data.hash;this._hash=createHash(data.hash);this._tag=data.id;this._signType=data.sign;}inherits(Sign,stream.Writable);Sign.prototype._write=function _write(data,_,done){this._hash.update(data);done();};Sign.prototype.update=function update(data,enc){if(typeof data==='string')data=Buffer.from(data,enc);this._hash.update(data);return this;};Sign.prototype.sign=function signMethod(key,enc){this.end();var hash=this._hash.digest();var sig=sign(hash,key,this._hashType,this._signType,this._tag);return enc?sig.toString(enc):sig;};function Verify(algorithm){stream.Writable.call(this);var data=algorithms[algorithm];if(!data)throw new Error('Unknown message digest');this._hash=createHash(data.hash);this._tag=data.id;this._signType=data.sign;}inherits(Verify,stream.Writable);Verify.prototype._write=function _write(data,_,done){this._hash.update(data);done();};Verify.prototype.update=function update(data,enc){if(typeof data==='string')data=Buffer.from(data,enc);this._hash.update(data);return this;};Verify.prototype.verify=function verifyMethod(key,sig,enc){if(typeof sig==='string')sig=Buffer.from(sig,enc);this.end();var hash=this._hash.digest();return verify(sig,hash,key,this._signType,this._tag);};function createSign(algorithm){return new Sign(algorithm);}function createVerify(algorithm){return new Verify(algorithm);}module.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify};},{"./algorithms.json":119,"./sign":122,"./verify":123,"create-hash":144,"inherits":223,"readable-stream":138,"safe-buffer":254}],122:[function(require,module,exports){// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer=require('safe-buffer').Buffer;var createHmac=require('create-hmac');var crt=require('browserify-rsa');var EC=require('elliptic').ec;var BN=require('bn.js');var parseKeys=require('parse-asn1');var curves=require('./curves.json');function sign(hash,key,hashType,signType,tag){var priv=parseKeys(key);if(priv.curve){// rsa keys can be interpreted as ecdsa ones in openssl
if(signType!=='ecdsa'&&signType!=='ecdsa/rsa')throw new Error('wrong private key type');return ecSign(hash,priv);}else if(priv.type==='dsa'){if(signType!=='dsa')throw new Error('wrong private key type');return dsaSign(hash,priv,hashType);}else{if(signType!=='rsa'&&signType!=='ecdsa/rsa')throw new Error('wrong private key type');}hash=Buffer.concat([tag,hash]);var len=priv.modulus.byteLength();var pad=[0,1];while(hash.length+pad.length+1<len)pad.push(0xff);pad.push(0x00);var i=-1;while(++i<hash.length)pad.push(hash[i]);var out=crt(pad,priv);return out;}function ecSign(hash,priv){var curveId=curves[priv.curve.join('.')];if(!curveId)throw new Error('unknown curve '+priv.curve.join('.'));var curve=new EC(curveId);var key=curve.keyFromPrivate(priv.privateKey);var out=key.sign(hash);return Buffer.from(out.toDER());}function dsaSign(hash,priv,algo){var x=priv.params.priv_key;var p=priv.params.p;var q=priv.params.q;var g=priv.params.g;var r=new BN(0);var k;var H=bits2int(hash,q).mod(q);var s=false;var kv=getKey(x,q,hash,algo);while(s===false){k=makeKey(q,kv,algo);r=makeR(g,k,p,q);s=k.invm(q).imul(H.add(x.mul(r))).mod(q);if(s.cmpn(0)===0){s=false;r=new BN(0);}}return toDER(r,s);}function toDER(r,s){r=r.toArray();s=s.toArray();// Pad values
if(r[0]&0x80)r=[0].concat(r);if(s[0]&0x80)s=[0].concat(s);var total=r.length+s.length+4;var res=[0x30,total,0x02,r.length];res=res.concat(r,[0x02,s.length],s);return Buffer.from(res);}function getKey(x,q,hash,algo){x=Buffer.from(x.toArray());if(x.length<q.byteLength()){var zeros=Buffer.alloc(q.byteLength()-x.length);x=Buffer.concat([zeros,x]);}var hlen=hash.length;var hbits=bits2octets(hash,q);var v=Buffer.alloc(hlen);v.fill(1);var k=Buffer.alloc(hlen);k=createHmac(algo,k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();v=createHmac(algo,k).update(v).digest();k=createHmac(algo,k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();v=createHmac(algo,k).update(v).digest();return{k:k,v:v};}function bits2int(obits,q){var bits=new BN(obits);var shift=(obits.length<<3)-q.bitLength();if(shift>0)bits.ishrn(shift);return bits;}function bits2octets(bits,q){bits=bits2int(bits,q);bits=bits.mod(q);var out=Buffer.from(bits.toArray());if(out.length<q.byteLength()){var zeros=Buffer.alloc(q.byteLength()-out.length);out=Buffer.concat([zeros,out]);}return out;}function makeKey(q,kv,algo){var t;var k;do{t=Buffer.alloc(0);while(t.length*8<q.bitLength()){kv.v=createHmac(algo,kv.k).update(kv.v).digest();t=Buffer.concat([t,kv.v]);}k=bits2int(t,q);kv.k=createHmac(algo,kv.k).update(kv.v).update(Buffer.from([0])).digest();kv.v=createHmac(algo,kv.k).update(kv.v).digest();}while(k.cmp(q)!==-1);return k;}function makeR(g,k,p,q){return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);}module.exports=sign;module.exports.getKey=getKey;module.exports.makeKey=makeKey;},{"./curves.json":120,"bn.js":94,"browserify-rsa":117,"create-hmac":146,"elliptic":161,"parse-asn1":235,"safe-buffer":254}],123:[function(require,module,exports){// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer=require('safe-buffer').Buffer;var BN=require('bn.js');var EC=require('elliptic').ec;var parseKeys=require('parse-asn1');var curves=require('./curves.json');function verify(sig,hash,key,signType,tag){var pub=parseKeys(key);if(pub.type==='ec'){// rsa keys can be interpreted as ecdsa ones in openssl
if(signType!=='ecdsa'&&signType!=='ecdsa/rsa')throw new Error('wrong public key type');return ecVerify(sig,hash,pub);}else if(pub.type==='dsa'){if(signType!=='dsa')throw new Error('wrong public key type');return dsaVerify(sig,hash,pub);}else{if(signType!=='rsa'&&signType!=='ecdsa/rsa')throw new Error('wrong public key type');}hash=Buffer.concat([tag,hash]);var len=pub.modulus.byteLength();var pad=[1];var padNum=0;while(hash.length+pad.length+2<len){pad.push(0xff);padNum++;}pad.push(0x00);var i=-1;while(++i<hash.length){pad.push(hash[i]);}pad=Buffer.from(pad);var red=BN.mont(pub.modulus);sig=new BN(sig).toRed(red);sig=sig.redPow(new BN(pub.publicExponent));sig=Buffer.from(sig.fromRed().toArray());var out=padNum<8?1:0;len=Math.min(sig.length,pad.length);if(sig.length!==pad.length)out=1;i=-1;while(++i<len)out|=sig[i]^pad[i];return out===0;}function ecVerify(sig,hash,pub){var curveId=curves[pub.data.algorithm.curve.join('.')];if(!curveId)throw new Error('unknown curve '+pub.data.algorithm.curve.join('.'));var curve=new EC(curveId);var pubkey=pub.data.subjectPrivateKey.data;return curve.verify(hash,sig,pubkey);}function dsaVerify(sig,hash,pub){var p=pub.data.p;var q=pub.data.q;var g=pub.data.g;var y=pub.data.pub_key;var unpacked=parseKeys.signature.decode(sig,'der');var s=unpacked.s;var r=unpacked.r;checkValue(s,q);checkValue(r,q);var montp=BN.mont(p);var w=s.invm(q);var v=g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);return v.cmp(r)===0;}function checkValue(b,q){if(b.cmpn(0)<=0)throw new Error('invalid sig');if(b.cmp(q)>=q)throw new Error('invalid sig');}module.exports=verify;},{"./curves.json":120,"bn.js":94,"elliptic":161,"parse-asn1":235,"safe-buffer":254}],124:[function(require,module,exports){'use strict';function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}var codes={};function createErrorType(code,message,Base){if(!Base){Base=Error;}function getMessage(arg1,arg2,arg3){if(typeof message==='string'){return message;}else{return message(arg1,arg2,arg3);}}var NodeError=/*#__PURE__*/function(_Base){_inheritsLoose(NodeError,_Base);function NodeError(arg1,arg2,arg3){return _Base.call(this,getMessage(arg1,arg2,arg3))||this;}return NodeError;}(Base);NodeError.prototype.name=Base.name;NodeError.prototype.code=code;codes[code]=NodeError;}// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected,thing){if(Array.isArray(expected)){var len=expected.length;expected=expected.map(function(i){return String(i);});if(len>2){return"one of ".concat(thing," ").concat(expected.slice(0,len-1).join(', '),", or ")+expected[len-1];}else if(len===2){return"one of ".concat(thing," ").concat(expected[0]," or ").concat(expected[1]);}else{return"of ".concat(thing," ").concat(expected[0]);}}else{return"of ".concat(thing," ").concat(String(expected));}}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str,search,pos){return str.substr(!pos||pos<0?0:+pos,search.length)===search;}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str,search,this_len){if(this_len===undefined||this_len>str.length){this_len=str.length;}return str.substring(this_len-search.length,this_len)===search;}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str,search,start){if(typeof start!=='number'){start=0;}if(start+search.length>str.length){return false;}else{return str.indexOf(search,start)!==-1;}}createErrorType('ERR_INVALID_OPT_VALUE',function(name,value){return'The value "'+value+'" is invalid for option "'+name+'"';},TypeError);createErrorType('ERR_INVALID_ARG_TYPE',function(name,expected,actual){// determiner: 'must be' or 'must not be'
var determiner;if(typeof expected==='string'&&startsWith(expected,'not ')){determiner='must not be';expected=expected.replace(/^not /,'');}else{determiner='must be';}var msg;if(endsWith(name,' argument')){// For cases like 'first argument'
msg="The ".concat(name," ").concat(determiner," ").concat(oneOf(expected,'type'));}else{var type=includes(name,'.')?'property':'argument';msg="The \"".concat(name,"\" ").concat(type," ").concat(determiner," ").concat(oneOf(expected,'type'));}msg+=". Received type ".concat(typeof actual);return msg;},TypeError);createErrorType('ERR_STREAM_PUSH_AFTER_EOF','stream.push() after EOF');createErrorType('ERR_METHOD_NOT_IMPLEMENTED',function(name){return'The '+name+' method is not implemented';});createErrorType('ERR_STREAM_PREMATURE_CLOSE','Premature close');createErrorType('ERR_STREAM_DESTROYED',function(name){return'Cannot call '+name+' after a stream was destroyed';});createErrorType('ERR_MULTIPLE_CALLBACK','Callback called multiple times');createErrorType('ERR_STREAM_CANNOT_PIPE','Cannot pipe, not readable');createErrorType('ERR_STREAM_WRITE_AFTER_END','write after end');createErrorType('ERR_STREAM_NULL_VALUES','May not write null values to stream',TypeError);createErrorType('ERR_UNKNOWN_ENCODING',function(arg){return'Unknown encoding: '+arg;},TypeError);createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT','stream.unshift() after end event');module.exports.codes=codes;},{}],125:[function(require,module,exports){(function(process){(function(){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';/*<replacement>*/var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj){keys.push(key);}return keys;};/*</replacement>*/module.exports=Duplex;var Readable=require('./_stream_readable');var Writable=require('./_stream_writable');require('inherits')(Duplex,Readable);{// Allow the keys array to be GC'ed.
var keys=objectKeys(Writable.prototype);for(var v=0;v<keys.length;v++){var method=keys[v];if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];}}function Duplex(options){if(!(this instanceof Duplex))return new Duplex(options);Readable.call(this,options);Writable.call(this,options);this.allowHalfOpen=true;if(options){if(options.readable===false)this.readable=false;if(options.writable===false)this.writable=false;if(options.allowHalfOpen===false){this.allowHalfOpen=false;this.once('end',onend);}}}Object.defineProperty(Duplex.prototype,'writableHighWaterMark',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.highWaterMark;}});Object.defineProperty(Duplex.prototype,'writableBuffer',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer();}});Object.defineProperty(Duplex.prototype,'writableLength',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.length;}});// the no-half-open enforcer
function onend(){// If the writable side ended, then we're ok.
if(this._writableState.ended)return;// no more data can be written.
// But allow more writes to happen in this tick.
process.nextTick(onEndNT,this);}function onEndNT(self){self.end();}Object.defineProperty(Duplex.prototype,'destroyed',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false;}return this._readableState.destroyed&&this._writableState.destroyed;},set:function set(value){// we ignore the value if the stream
// has not been initialized yet
if(this._readableState===undefined||this._writableState===undefined){return;}// backward compatibility, the user is explicitly
// managing destroyed
this._readableState.destroyed=value;this._writableState.destroyed=value;}});}).call(this);}).call(this,require('_process'));},{"./_stream_readable":127,"./_stream_writable":129,"_process":242,"inherits":223}],126:[function(require,module,exports){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';module.exports=PassThrough;var Transform=require('./_stream_transform');require('inherits')(PassThrough,Transform);function PassThrough(options){if(!(this instanceof PassThrough))return new PassThrough(options);Transform.call(this,options);}PassThrough.prototype._transform=function(chunk,encoding,cb){cb(null,chunk);};},{"./_stream_transform":128,"inherits":223}],127:[function(require,module,exports){(function(process,global){(function(){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';module.exports=Readable;/*<replacement>*/var Duplex;/*</replacement>*/Readable.ReadableState=ReadableState;/*<replacement>*/var EE=require('events').EventEmitter;var EElistenerCount=function EElistenerCount(emitter,type){return emitter.listeners(type).length;};/*</replacement>*//*<replacement>*/var Stream=require('./internal/streams/stream');/*</replacement>*/var Buffer=require('buffer').Buffer;var OurUint8Array=global.Uint8Array||function(){};function _uint8ArrayToBuffer(chunk){return Buffer.from(chunk);}function _isUint8Array(obj){return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;}/*<replacement>*/var debugUtil=require('util');var debug;if(debugUtil&&debugUtil.debuglog){debug=debugUtil.debuglog('stream');}else{debug=function debug(){};}/*</replacement>*/var BufferList=require('./internal/streams/buffer_list');var destroyImpl=require('./internal/streams/destroy');var _require=require('./internal/streams/state'),getHighWaterMark=_require.getHighWaterMark;var _require$codes=require('../errors').codes,ERR_INVALID_ARG_TYPE=_require$codes.ERR_INVALID_ARG_TYPE,ERR_STREAM_PUSH_AFTER_EOF=_require$codes.ERR_STREAM_PUSH_AFTER_EOF,ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,ERR_STREAM_UNSHIFT_AFTER_END_EVENT=_require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;// Lazy loaded to improve the startup performance.
var StringDecoder;var createReadableStreamAsyncIterator;var from;require('inherits')(Readable,Stream);var errorOrDestroy=destroyImpl.errorOrDestroy;var kProxyEvents=['error','close','destroy','pause','resume'];function prependListener(emitter,event,fn){// Sadly this is not cacheable as some libraries bundle their own
// event emitter implementation with them.
if(typeof emitter.prependListener==='function')return emitter.prependListener(event,fn);// This is a hack to make sure that our error handler is attached before any
// userland ones.  NEVER DO THIS. This is here only because this code needs
// to continue to work with older versions of Node.js that do not include
// the prependListener() method. The goal is to eventually remove this hack.
if(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(Array.isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];}function ReadableState(options,stream,isDuplex){Duplex=Duplex||require('./_stream_duplex');options=options||{};// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream.
// These options can be provided separately as readableXXX and writableXXX.
if(typeof isDuplex!=='boolean')isDuplex=stream instanceof Duplex;// object stream flag. Used to make read(n) ignore n and to
// make all the buffer merging and length checks go away
this.objectMode=!!options.objectMode;if(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
this.highWaterMark=getHighWaterMark(this,options,'readableHighWaterMark',isDuplex);// A linked list is used to store data chunks instead of an array because the
// linked list can remove elements from the beginning faster than
// array.shift()
this.buffer=new BufferList();this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;// a flag to be able to tell if the event 'readable'/'data' is emitted
// immediately, or on a later tick.  We set this to true at first, because
// any actions that shouldn't happen until "later" should generally also
// not happen before the first read call.
this.sync=true;// whenever we return null, then we set a flag to say
// that we're awaiting a 'readable' event emission.
this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;// Should close be emitted on destroy. Defaults to true.
this.emitClose=options.emitClose!==false;// Should .destroy() be called after 'end' (and potentially 'finish')
this.autoDestroy=!!options.autoDestroy;// has it been destroyed
this.destroyed=false;// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=options.defaultEncoding||'utf8';// the number of writers that are awaiting a drain event in .pipe()s
this.awaitDrain=0;// if true, a maybeReadMore has been scheduled
this.readingMore=false;this.decoder=null;this.encoding=null;if(options.encoding){if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;this.decoder=new StringDecoder(options.encoding);this.encoding=options.encoding;}}function Readable(options){Duplex=Duplex||require('./_stream_duplex');if(!(this instanceof Readable))return new Readable(options);// Checking for a Stream.Duplex instance is faster here instead of inside
// the ReadableState constructor, at least with V8 6.5
var isDuplex=this instanceof Duplex;this._readableState=new ReadableState(options,this,isDuplex);// legacy
this.readable=true;if(options){if(typeof options.read==='function')this._read=options.read;if(typeof options.destroy==='function')this._destroy=options.destroy;}Stream.call(this);}Object.defineProperty(Readable.prototype,'destroyed',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){if(this._readableState===undefined){return false;}return this._readableState.destroyed;},set:function set(value){// we ignore the value if the stream
// has not been initialized yet
if(!this._readableState){return;}// backward compatibility, the user is explicitly
// managing destroyed
this._readableState.destroyed=value;}});Readable.prototype.destroy=destroyImpl.destroy;Readable.prototype._undestroy=destroyImpl.undestroy;Readable.prototype._destroy=function(err,cb){cb(err);};// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push=function(chunk,encoding){var state=this._readableState;var skipChunkCheck;if(!state.objectMode){if(typeof chunk==='string'){encoding=encoding||state.defaultEncoding;if(encoding!==state.encoding){chunk=Buffer.from(chunk,encoding);encoding='';}skipChunkCheck=true;}}else{skipChunkCheck=true;}return readableAddChunk(this,chunk,encoding,false,skipChunkCheck);};// Unshift should *always* be something directly out of read()
Readable.prototype.unshift=function(chunk){return readableAddChunk(this,chunk,null,true,false);};function readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){debug('readableAddChunk',chunk);var state=stream._readableState;if(chunk===null){state.reading=false;onEofChunk(stream,state);}else{var er;if(!skipChunkCheck)er=chunkInvalid(state,chunk);if(er){errorOrDestroy(stream,er);}else if(state.objectMode||chunk&&chunk.length>0){if(typeof chunk!=='string'&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){chunk=_uint8ArrayToBuffer(chunk);}if(addToFront){if(state.endEmitted)errorOrDestroy(stream,new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream,state,chunk,true);}else if(state.ended){errorOrDestroy(stream,new ERR_STREAM_PUSH_AFTER_EOF());}else if(state.destroyed){return false;}else{state.reading=false;if(state.decoder&&!encoding){chunk=state.decoder.write(chunk);if(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state);}else{addChunk(stream,state,chunk,false);}}}else if(!addToFront){state.reading=false;maybeReadMore(stream,state);}}// We can push more data if we are below the highWaterMark.
// Also, if we have no data yet, we can stand some more bytes.
// This is to work around cases where hwm=0, such as the repl.
return!state.ended&&(state.length<state.highWaterMark||state.length===0);}function addChunk(stream,state,chunk,addToFront){if(state.flowing&&state.length===0&&!state.sync){state.awaitDrain=0;stream.emit('data',chunk);}else{// update the buffer info.
state.length+=state.objectMode?1:chunk.length;if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);if(state.needReadable)emitReadable(stream);}maybeReadMore(stream,state);}function chunkInvalid(state,chunk){var er;if(!_isUint8Array(chunk)&&typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){er=new ERR_INVALID_ARG_TYPE('chunk',['string','Buffer','Uint8Array'],chunk);}return er;}Readable.prototype.isPaused=function(){return this._readableState.flowing===false;};// backwards compatibility.
Readable.prototype.setEncoding=function(enc){if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;var decoder=new StringDecoder(enc);this._readableState.decoder=decoder;// If setEncoding(null), decoder.encoding equals utf8
this._readableState.encoding=this._readableState.decoder.encoding;// Iterate over current buffer to convert already stored Buffers:
var p=this._readableState.buffer.head;var content='';while(p!==null){content+=decoder.write(p.data);p=p.next;}this._readableState.buffer.clear();if(content!=='')this._readableState.buffer.push(content);this._readableState.length=content.length;return this;};// Don't raise the hwm > 1GB
var MAX_HWM=0x40000000;function computeNewHighWaterMark(n){if(n>=MAX_HWM){// TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
n=MAX_HWM;}else{// Get the next highest power of 2 to prevent increasing hwm excessively in
// tiny amounts
n--;n|=n>>>1;n|=n>>>2;n|=n>>>4;n|=n>>>8;n|=n>>>16;n++;}return n;}// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n,state){if(n<=0||state.length===0&&state.ended)return 0;if(state.objectMode)return 1;if(n!==n){// Only flow one buffer at a time
if(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;}// If we're asking for more than the current hwm, then raise the hwm.
if(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);if(n<=state.length)return n;// Don't have enough
if(!state.ended){state.needReadable=true;return 0;}return state.length;}// you can override either this method, or the async _read(n) below.
Readable.prototype.read=function(n){debug('read',n);n=parseInt(n,10);var state=this._readableState;var nOrig=n;if(n!==0)state.emittedReadable=false;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(n===0&&state.needReadable&&((state.highWaterMark!==0?state.length>=state.highWaterMark:state.length>0)||state.ended)){debug('read: emitReadable',state.length,state.ended);if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);return null;}n=howMuchToRead(n,state);// if we've ended, and we're now clear, then finish it up.
if(n===0&&state.ended){if(state.length===0)endReadable(this);return null;}// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var doRead=state.needReadable;debug('need readable',doRead);// if we currently have less than the highWaterMark, then also read some
if(state.length===0||state.length-n<state.highWaterMark){doRead=true;debug('length less than watermark',doRead);}// however, if we've ended, then there's no point, and if we're already
// reading, then it's unnecessary.
if(state.ended||state.reading){doRead=false;debug('reading or ended',doRead);}else if(doRead){debug('do read');state.reading=true;state.sync=true;// if the length is currently zero, then we *need* a readable event.
if(state.length===0)state.needReadable=true;// call internal read method
this._read(state.highWaterMark);state.sync=false;// If _read pushed data synchronously, then `reading` will be false,
// and we need to re-evaluate how much data we can return to the user.
if(!state.reading)n=howMuchToRead(nOrig,state);}var ret;if(n>0)ret=fromList(n,state);else ret=null;if(ret===null){state.needReadable=state.length<=state.highWaterMark;n=0;}else{state.length-=n;state.awaitDrain=0;}if(state.length===0){// If we have nothing in the buffer, then we want to know
// as soon as we *do* get something into the buffer.
if(!state.ended)state.needReadable=true;// If we tried to read() past the EOF, then emit end on the next tick.
if(nOrig!==n&&state.ended)endReadable(this);}if(ret!==null)this.emit('data',ret);return ret;};function onEofChunk(stream,state){debug('onEofChunk');if(state.ended)return;if(state.decoder){var chunk=state.decoder.end();if(chunk&&chunk.length){state.buffer.push(chunk);state.length+=state.objectMode?1:chunk.length;}}state.ended=true;if(state.sync){// if we are sync, wait until next tick to emit the data.
// Otherwise we risk emitting data in the flow()
// the readable code triggers during a read() call
emitReadable(stream);}else{// emit 'readable' now to make sure it gets picked up.
state.needReadable=false;if(!state.emittedReadable){state.emittedReadable=true;emitReadable_(stream);}}}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream){var state=stream._readableState;debug('emitReadable',state.needReadable,state.emittedReadable);state.needReadable=false;if(!state.emittedReadable){debug('emitReadable',state.flowing);state.emittedReadable=true;process.nextTick(emitReadable_,stream);}}function emitReadable_(stream){var state=stream._readableState;debug('emitReadable_',state.destroyed,state.length,state.ended);if(!state.destroyed&&(state.length||state.ended)){stream.emit('readable');state.emittedReadable=false;}// The stream needs another readable event if
// 1. It is not flowing, as the flow mechanism will take
//    care of it.
// 2. It is not ended.
// 3. It is below the highWaterMark, so we can schedule
//    another readable later.
state.needReadable=!state.flowing&&!state.ended&&state.length<=state.highWaterMark;flow(stream);}// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream,state){if(!state.readingMore){state.readingMore=true;process.nextTick(maybeReadMore_,stream,state);}}function maybeReadMore_(stream,state){// Attempt to read more data if we should.
//
// The conditions for reading more data are (one of):
// - Not enough data buffered (state.length < state.highWaterMark). The loop
//   is responsible for filling the buffer with enough data if such data
//   is available. If highWaterMark is 0 and we are not in the flowing mode
//   we should _not_ attempt to buffer any extra data. We'll get more data
//   when the stream consumer calls read() instead.
// - No data in the buffer, and the stream is in flowing mode. In this mode
//   the loop below is responsible for ensuring read() is called. Failing to
//   call read here would abort the flow and there's no other mechanism for
//   continuing the flow if the stream consumer has just subscribed to the
//   'data' event.
//
// In addition to the above conditions to keep reading data, the following
// conditions prevent the data from being read:
// - The stream has ended (state.ended).
// - There is already a pending 'read' operation (state.reading). This is a
//   case where the the stream has called the implementation defined _read()
//   method, but they are processing the call asynchronously and have _not_
//   called push() with new data. In this case we skip performing more
//   read()s. The execution ends in this method again after the _read() ends
//   up calling push() with more data.
while(!state.reading&&!state.ended&&(state.length<state.highWaterMark||state.flowing&&state.length===0)){var len=state.length;debug('maybeReadMore read 0');stream.read(0);if(len===state.length)// didn't get any data, stop spinning.
break;}state.readingMore=false;}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read=function(n){errorOrDestroy(this,new ERR_METHOD_NOT_IMPLEMENTED('_read()'));};Readable.prototype.pipe=function(dest,pipeOpts){var src=this;var state=this._readableState;switch(state.pipesCount){case 0:state.pipes=dest;break;case 1:state.pipes=[state.pipes,dest];break;default:state.pipes.push(dest);break;}state.pipesCount+=1;debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;var endFn=doEnd?onend:unpipe;if(state.endEmitted)process.nextTick(endFn);else src.once('end',endFn);dest.on('unpipe',onunpipe);function onunpipe(readable,unpipeInfo){debug('onunpipe');if(readable===src){if(unpipeInfo&&unpipeInfo.hasUnpiped===false){unpipeInfo.hasUnpiped=true;cleanup();}}}function onend(){debug('onend');dest.end();}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
var ondrain=pipeOnDrain(src);dest.on('drain',ondrain);var cleanedUp=false;function cleanup(){debug('cleanup');// cleanup event handlers once the pipe is broken
dest.removeListener('close',onclose);dest.removeListener('finish',onfinish);dest.removeListener('drain',ondrain);dest.removeListener('error',onerror);dest.removeListener('unpipe',onunpipe);src.removeListener('end',onend);src.removeListener('end',unpipe);src.removeListener('data',ondata);cleanedUp=true;// if the reader is waiting for a drain event from this
// specific writer, then it would cause it to never start
// flowing again.
// So, if this is awaiting a drain, then we just call it now.
// If we don't know, then assume that we are waiting for one.
if(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();}src.on('data',ondata);function ondata(chunk){debug('ondata');var ret=dest.write(chunk);debug('dest.write',ret);if(ret===false){// If the user unpiped during `dest.write()`, it is possible
// to get stuck in a permanently paused state if that write
// also returned false.
// => Check whether `dest` is still a piping destination.
if((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){debug('false write response, pause',state.awaitDrain);state.awaitDrain++;}src.pause();}}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function onerror(er){debug('onerror',er);unpipe();dest.removeListener('error',onerror);if(EElistenerCount(dest,'error')===0)errorOrDestroy(dest,er);}// Make sure our error handler is attached before userland ones.
prependListener(dest,'error',onerror);// Both close and finish should trigger unpipe, but only once.
function onclose(){dest.removeListener('finish',onfinish);unpipe();}dest.once('close',onclose);function onfinish(){debug('onfinish');dest.removeListener('close',onclose);unpipe();}dest.once('finish',onfinish);function unpipe(){debug('unpipe');src.unpipe(dest);}// tell the dest that it's being piped to
dest.emit('pipe',src);// start the flow if it hasn't been started already.
if(!state.flowing){debug('pipe resume');src.resume();}return dest;};function pipeOnDrain(src){return function pipeOnDrainFunctionResult(){var state=src._readableState;debug('pipeOnDrain',state.awaitDrain);if(state.awaitDrain)state.awaitDrain--;if(state.awaitDrain===0&&EElistenerCount(src,'data')){state.flowing=true;flow(src);}};}Readable.prototype.unpipe=function(dest){var state=this._readableState;var unpipeInfo={hasUnpiped:false};// if we're not piping anywhere, then do nothing.
if(state.pipesCount===0)return this;// just one destination.  most common case.
if(state.pipesCount===1){// passed in one, but it's not the right one.
if(dest&&dest!==state.pipes)return this;if(!dest)dest=state.pipes;// got a match.
state.pipes=null;state.pipesCount=0;state.flowing=false;if(dest)dest.emit('unpipe',this,unpipeInfo);return this;}// slow case. multiple pipe destinations.
if(!dest){// remove all.
var dests=state.pipes;var len=state.pipesCount;state.pipes=null;state.pipesCount=0;state.flowing=false;for(var i=0;i<len;i++){dests[i].emit('unpipe',this,{hasUnpiped:false});}return this;}// try to find the right one.
var index=indexOf(state.pipes,dest);if(index===-1)return this;state.pipes.splice(index,1);state.pipesCount-=1;if(state.pipesCount===1)state.pipes=state.pipes[0];dest.emit('unpipe',this,unpipeInfo);return this;};// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on=function(ev,fn){var res=Stream.prototype.on.call(this,ev,fn);var state=this._readableState;if(ev==='data'){// update readableListening so that resume() may be a no-op
// a few lines down. This is needed to support once('readable').
state.readableListening=this.listenerCount('readable')>0;// Try start flowing on next tick if stream isn't explicitly paused
if(state.flowing!==false)this.resume();}else if(ev==='readable'){if(!state.endEmitted&&!state.readableListening){state.readableListening=state.needReadable=true;state.flowing=false;state.emittedReadable=false;debug('on readable',state.length,state.reading);if(state.length){emitReadable(this);}else if(!state.reading){process.nextTick(nReadingNextTick,this);}}}return res;};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(ev,fn){var res=Stream.prototype.removeListener.call(this,ev,fn);if(ev==='readable'){// We need to check if there is someone still listening to
// readable and reset the state. However this needs to happen
// after readable has been emitted but before I/O (nextTick) to
// support once('readable', fn) cycles. This means that calling
// resume within the same tick will have no
// effect.
process.nextTick(updateReadableListening,this);}return res;};Readable.prototype.removeAllListeners=function(ev){var res=Stream.prototype.removeAllListeners.apply(this,arguments);if(ev==='readable'||ev===undefined){// We need to check if there is someone still listening to
// readable and reset the state. However this needs to happen
// after readable has been emitted but before I/O (nextTick) to
// support once('readable', fn) cycles. This means that calling
// resume within the same tick will have no
// effect.
process.nextTick(updateReadableListening,this);}return res;};function updateReadableListening(self){var state=self._readableState;state.readableListening=self.listenerCount('readable')>0;if(state.resumeScheduled&&!state.paused){// flowing needs to be set to true now, otherwise
// the upcoming resume will not flow.
state.flowing=true;// crude way to check if we should resume
}else if(self.listenerCount('data')>0){self.resume();}}function nReadingNextTick(self){debug('readable nexttick read 0');self.read(0);}// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume=function(){var state=this._readableState;if(!state.flowing){debug('resume');// we flow only if there is no one listening
// for readable, but we still have to call
// resume()
state.flowing=!state.readableListening;resume(this,state);}state.paused=false;return this;};function resume(stream,state){if(!state.resumeScheduled){state.resumeScheduled=true;process.nextTick(resume_,stream,state);}}function resume_(stream,state){debug('resume',state.reading);if(!state.reading){stream.read(0);}state.resumeScheduled=false;stream.emit('resume');flow(stream);if(state.flowing&&!state.reading)stream.read(0);}Readable.prototype.pause=function(){debug('call pause flowing=%j',this._readableState.flowing);if(this._readableState.flowing!==false){debug('pause');this._readableState.flowing=false;this.emit('pause');}this._readableState.paused=true;return this;};function flow(stream){var state=stream._readableState;debug('flow',state.flowing);while(state.flowing&&stream.read()!==null){;}}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap=function(stream){var _this=this;var state=this._readableState;var paused=false;stream.on('end',function(){debug('wrapped end');if(state.decoder&&!state.ended){var chunk=state.decoder.end();if(chunk&&chunk.length)_this.push(chunk);}_this.push(null);});stream.on('data',function(chunk){debug('wrapped data');if(state.decoder)chunk=state.decoder.write(chunk);// don't skip over falsy values in objectMode
if(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;var ret=_this.push(chunk);if(!ret){paused=true;stream.pause();}});// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var i in stream){if(this[i]===undefined&&typeof stream[i]==='function'){this[i]=function methodWrap(method){return function methodWrapReturnFunction(){return stream[method].apply(stream,arguments);};}(i);}}// proxy certain important events.
for(var n=0;n<kProxyEvents.length;n++){stream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]));}// when we try to consume some more bytes, simply unpause the
// underlying stream.
this._read=function(n){debug('wrapped _read',n);if(paused){paused=false;stream.resume();}};return this;};if(typeof Symbol==='function'){Readable.prototype[Symbol.asyncIterator]=function(){if(createReadableStreamAsyncIterator===undefined){createReadableStreamAsyncIterator=require('./internal/streams/async_iterator');}return createReadableStreamAsyncIterator(this);};}Object.defineProperty(Readable.prototype,'readableHighWaterMark',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState.highWaterMark;}});Object.defineProperty(Readable.prototype,'readableBuffer',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer;}});Object.defineProperty(Readable.prototype,'readableFlowing',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState.flowing;},set:function set(state){if(this._readableState){this._readableState.flowing=state;}}});// exposed for testing purposes only.
Readable._fromList=fromList;Object.defineProperty(Readable.prototype,'readableLength',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState.length;}});// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n,state){// nothing buffered
if(state.length===0)return null;var ret;if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){// read it all, truncate the list
if(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.first();else ret=state.buffer.concat(state.length);state.buffer.clear();}else{// read part of list
ret=state.buffer.consume(n,state.decoder);}return ret;}function endReadable(stream){var state=stream._readableState;debug('endReadable',state.endEmitted);if(!state.endEmitted){state.ended=true;process.nextTick(endReadableNT,state,stream);}}function endReadableNT(state,stream){debug('endReadableNT',state.endEmitted,state.length);// Check that we didn't get one last unshift.
if(!state.endEmitted&&state.length===0){state.endEmitted=true;stream.readable=false;stream.emit('end');if(state.autoDestroy){// In case of duplex streams we need a way to detect
// if the writable side is ready for autoDestroy as well
var wState=stream._writableState;if(!wState||wState.autoDestroy&&wState.finished){stream.destroy();}}}}if(typeof Symbol==='function'){Readable.from=function(iterable,opts){if(from===undefined){from=require('./internal/streams/from');}return from(Readable,iterable,opts);};}function indexOf(xs,x){for(var i=0,l=xs.length;i<l;i++){if(xs[i]===x)return i;}return-1;}}).call(this);}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"../errors":124,"./_stream_duplex":125,"./internal/streams/async_iterator":130,"./internal/streams/buffer_list":131,"./internal/streams/destroy":132,"./internal/streams/from":134,"./internal/streams/state":136,"./internal/streams/stream":137,"_process":242,"buffer":140,"events":190,"inherits":223,"string_decoder/":280,"util":96}],128:[function(require,module,exports){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';module.exports=Transform;var _require$codes=require('../errors').codes,ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,ERR_MULTIPLE_CALLBACK=_require$codes.ERR_MULTIPLE_CALLBACK,ERR_TRANSFORM_ALREADY_TRANSFORMING=_require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,ERR_TRANSFORM_WITH_LENGTH_0=_require$codes.ERR_TRANSFORM_WITH_LENGTH_0;var Duplex=require('./_stream_duplex');require('inherits')(Transform,Duplex);function afterTransform(er,data){var ts=this._transformState;ts.transforming=false;var cb=ts.writecb;if(cb===null){return this.emit('error',new ERR_MULTIPLE_CALLBACK());}ts.writechunk=null;ts.writecb=null;if(data!=null)// single equals check for both `null` and `undefined`
this.push(data);cb(er);var rs=this._readableState;rs.reading=false;if(rs.needReadable||rs.length<rs.highWaterMark){this._read(rs.highWaterMark);}}function Transform(options){if(!(this instanceof Transform))return new Transform(options);Duplex.call(this,options);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};// start out asking for a readable event once data is transformed.
this._readableState.needReadable=true;// we have implemented the _read method, and done the other things
// that Readable wants before the first _read call, so unset the
// sync guard flag.
this._readableState.sync=false;if(options){if(typeof options.transform==='function')this._transform=options.transform;if(typeof options.flush==='function')this._flush=options.flush;}// When the writable side finishes, then flush out anything remaining.
this.on('prefinish',prefinish);}function prefinish(){var _this=this;if(typeof this._flush==='function'&&!this._readableState.destroyed){this._flush(function(er,data){done(_this,er,data);});}else{done(this,null,null);}}Transform.prototype.push=function(chunk,encoding){this._transformState.needTransform=false;return Duplex.prototype.push.call(this,chunk,encoding);};// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform=function(chunk,encoding,cb){cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));};Transform.prototype._write=function(chunk,encoding,cb){var ts=this._transformState;ts.writecb=cb;ts.writechunk=chunk;ts.writeencoding=encoding;if(!ts.transforming){var rs=this._readableState;if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);}};// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read=function(n){var ts=this._transformState;if(ts.writechunk!==null&&!ts.transforming){ts.transforming=true;this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);}else{// mark that we need a transform, so that any data that comes in
// will get processed, now that we've asked for it.
ts.needTransform=true;}};Transform.prototype._destroy=function(err,cb){Duplex.prototype._destroy.call(this,err,function(err2){cb(err2);});};function done(stream,er,data){if(er)return stream.emit('error',er);if(data!=null)// single equals check for both `null` and `undefined`
stream.push(data);// TODO(BridgeAR): Write a test for these two error cases
// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
if(stream._writableState.length)throw new ERR_TRANSFORM_WITH_LENGTH_0();if(stream._transformState.transforming)throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();return stream.push(null);}},{"../errors":124,"./_stream_duplex":125,"inherits":223}],129:[function(require,module,exports){(function(process,global){(function(){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';module.exports=Writable;/* <replacement> */function WriteReq(chunk,encoding,cb){this.chunk=chunk;this.encoding=encoding;this.callback=cb;this.next=null;}// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state){var _this=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(_this,state);};}/* </replacement> *//*<replacement>*/var Duplex;/*</replacement>*/Writable.WritableState=WritableState;/*<replacement>*/var internalUtil={deprecate:require('util-deprecate')};/*</replacement>*//*<replacement>*/var Stream=require('./internal/streams/stream');/*</replacement>*/var Buffer=require('buffer').Buffer;var OurUint8Array=global.Uint8Array||function(){};function _uint8ArrayToBuffer(chunk){return Buffer.from(chunk);}function _isUint8Array(obj){return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;}var destroyImpl=require('./internal/streams/destroy');var _require=require('./internal/streams/state'),getHighWaterMark=_require.getHighWaterMark;var _require$codes=require('../errors').codes,ERR_INVALID_ARG_TYPE=_require$codes.ERR_INVALID_ARG_TYPE,ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,ERR_MULTIPLE_CALLBACK=_require$codes.ERR_MULTIPLE_CALLBACK,ERR_STREAM_CANNOT_PIPE=_require$codes.ERR_STREAM_CANNOT_PIPE,ERR_STREAM_DESTROYED=_require$codes.ERR_STREAM_DESTROYED,ERR_STREAM_NULL_VALUES=_require$codes.ERR_STREAM_NULL_VALUES,ERR_STREAM_WRITE_AFTER_END=_require$codes.ERR_STREAM_WRITE_AFTER_END,ERR_UNKNOWN_ENCODING=_require$codes.ERR_UNKNOWN_ENCODING;var errorOrDestroy=destroyImpl.errorOrDestroy;require('inherits')(Writable,Stream);function nop(){}function WritableState(options,stream,isDuplex){Duplex=Duplex||require('./_stream_duplex');options=options||{};// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream,
// e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
if(typeof isDuplex!=='boolean')isDuplex=stream instanceof Duplex;// object stream flag to indicate whether or not this stream
// contains buffers or objects.
this.objectMode=!!options.objectMode;if(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
this.highWaterMark=getHighWaterMark(this,options,'writableHighWaterMark',isDuplex);// if _final has been called
this.finalCalled=false;// drain event flag.
this.needDrain=false;// at the start of calling end()
this.ending=false;// when end() has been called, and returned
this.ended=false;// when 'finish' is emitted
this.finished=false;// has it been destroyed
this.destroyed=false;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var noDecode=options.decodeStrings===false;this.decodeStrings=!noDecode;// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=options.defaultEncoding||'utf8';// not an actual buffer we keep track of, but a measurement
// of how much we're waiting to get pushed to some underlying
// socket or file.
this.length=0;// a flag to see when we're in the middle of a write.
this.writing=false;// when true all writes will be buffered until .uncork() call
this.corked=0;// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=true;// a flag to know if we're processing previously buffered items, which
// may call the _write() callback in the same tick, so that we don't
// end up in an overlapped onwrite situation.
this.bufferProcessing=false;// the callback that's passed to _write(chunk,cb)
this.onwrite=function(er){onwrite(stream,er);};// the callback that the user supplies to write(chunk,encoding,cb)
this.writecb=null;// the amount that is being written when _write is called.
this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;// number of pending user-supplied write callbacks
// this must be 0 before 'finish' can be emitted
this.pendingcb=0;// emit prefinish if the only thing we're waiting for is _write cbs
// This is relevant for synchronous Transform streams
this.prefinished=false;// True if the error was already emitted and should not be thrown again
this.errorEmitted=false;// Should close be emitted on destroy. Defaults to true.
this.emitClose=options.emitClose!==false;// Should .destroy() be called after 'finish' (and potentially 'end')
this.autoDestroy=!!options.autoDestroy;// count buffered requests
this.bufferedRequestCount=0;// allocate the first CorkedRequest, there is always
// one allocated and free to use, and we maintain at most two
this.corkedRequestsFree=new CorkedRequest(this);}WritableState.prototype.getBuffer=function getBuffer(){var current=this.bufferedRequest;var out=[];while(current){out.push(current);current=current.next;}return out;};(function(){try{Object.defineProperty(WritableState.prototype,'buffer',{get:internalUtil.deprecate(function writableStateBufferGetter(){return this.getBuffer();},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.','DEP0003')});}catch(_){}})();// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;if(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){realHasInstance=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(object){if(realHasInstance.call(this,object))return true;if(this!==Writable)return false;return object&&object._writableState instanceof WritableState;}});}else{realHasInstance=function realHasInstance(object){return object instanceof this;};}function Writable(options){Duplex=Duplex||require('./_stream_duplex');// Writable ctor is applied to Duplexes, too.
// `realHasInstance` is necessary because using plain `instanceof`
// would return false, as no `_writableState` property is attached.
// Trying to use the custom `instanceof` for Writable here will also break the
// Node.js LazyTransform implementation, which has a non-trivial getter for
// `_writableState` that would lead to infinite recursion.
// Checking for a Stream.Duplex instance is faster here instead of inside
// the WritableState constructor, at least with V8 6.5
var isDuplex=this instanceof Duplex;if(!isDuplex&&!realHasInstance.call(Writable,this))return new Writable(options);this._writableState=new WritableState(options,this,isDuplex);// legacy.
this.writable=true;if(options){if(typeof options.write==='function')this._write=options.write;if(typeof options.writev==='function')this._writev=options.writev;if(typeof options.destroy==='function')this._destroy=options.destroy;if(typeof options.final==='function')this._final=options.final;}Stream.call(this);}// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe=function(){errorOrDestroy(this,new ERR_STREAM_CANNOT_PIPE());};function writeAfterEnd(stream,cb){var er=new ERR_STREAM_WRITE_AFTER_END();// TODO: defer error events consistently everywhere, not just the cb
errorOrDestroy(stream,er);process.nextTick(cb,er);}// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream,state,chunk,cb){var er;if(chunk===null){er=new ERR_STREAM_NULL_VALUES();}else if(typeof chunk!=='string'&&!state.objectMode){er=new ERR_INVALID_ARG_TYPE('chunk',['string','Buffer'],chunk);}if(er){errorOrDestroy(stream,er);process.nextTick(cb,er);return false;}return true;}Writable.prototype.write=function(chunk,encoding,cb){var state=this._writableState;var ret=false;var isBuf=!state.objectMode&&_isUint8Array(chunk);if(isBuf&&!Buffer.isBuffer(chunk)){chunk=_uint8ArrayToBuffer(chunk);}if(typeof encoding==='function'){cb=encoding;encoding=null;}if(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;if(typeof cb!=='function')cb=nop;if(state.ending)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){state.pendingcb++;ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);}return ret;};Writable.prototype.cork=function(){this._writableState.corked++;};Writable.prototype.uncork=function(){var state=this._writableState;if(state.corked){state.corked--;if(!state.writing&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){// node::ParseEncoding() requires lower case.
if(typeof encoding==='string')encoding=encoding.toLowerCase();if(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new ERR_UNKNOWN_ENCODING(encoding);this._writableState.defaultEncoding=encoding;return this;};Object.defineProperty(Writable.prototype,'writableBuffer',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer();}});function decodeChunk(state,chunk,encoding){if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){chunk=Buffer.from(chunk,encoding);}return chunk;}Object.defineProperty(Writable.prototype,'writableHighWaterMark',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.highWaterMark;}});// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){if(!isBuf){var newChunk=decodeChunk(state,chunk,encoding);if(chunk!==newChunk){isBuf=true;encoding='buffer';chunk=newChunk;}}var len=state.objectMode?1:chunk.length;state.length+=len;var ret=state.length<state.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
if(!ret)state.needDrain=true;if(state.writing||state.corked){var last=state.lastBufferedRequest;state.lastBufferedRequest={chunk:chunk,encoding:encoding,isBuf:isBuf,callback:cb,next:null};if(last){last.next=state.lastBufferedRequest;}else{state.bufferedRequest=state.lastBufferedRequest;}state.bufferedRequestCount+=1;}else{doWrite(stream,state,false,len,chunk,encoding,cb);}return ret;}function doWrite(stream,state,writev,len,chunk,encoding,cb){state.writelen=len;state.writecb=cb;state.writing=true;state.sync=true;if(state.destroyed)state.onwrite(new ERR_STREAM_DESTROYED('write'));else if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);state.sync=false;}function onwriteError(stream,state,sync,er,cb){--state.pendingcb;if(sync){// defer the callback if we are being called synchronously
// to avoid piling up things on the stack
process.nextTick(cb,er);// this can emit finish, and it will always happen
// after error
process.nextTick(finishMaybe,stream,state);stream._writableState.errorEmitted=true;errorOrDestroy(stream,er);}else{// the caller expect this to happen before if
// it is async
cb(er);stream._writableState.errorEmitted=true;errorOrDestroy(stream,er);// this can emit finish, but finish must
// always follow error
finishMaybe(stream,state);}}function onwriteStateUpdate(state){state.writing=false;state.writecb=null;state.length-=state.writelen;state.writelen=0;}function onwrite(stream,er){var state=stream._writableState;var sync=state.sync;var cb=state.writecb;if(typeof cb!=='function')throw new ERR_MULTIPLE_CALLBACK();onwriteStateUpdate(state);if(er)onwriteError(stream,state,sync,er,cb);else{// Check if we're actually ready to finish, but don't emit yet
var finished=needFinish(state)||stream.destroyed;if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){clearBuffer(stream,state);}if(sync){process.nextTick(afterWrite,stream,state,finished,cb);}else{afterWrite(stream,state,finished,cb);}}}function afterWrite(stream,state,finished,cb){if(!finished)onwriteDrain(stream,state);state.pendingcb--;cb();finishMaybe(stream,state);}// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream,state){if(state.length===0&&state.needDrain){state.needDrain=false;stream.emit('drain');}}// if there's something in the buffer waiting, then process it
function clearBuffer(stream,state){state.bufferProcessing=true;var entry=state.bufferedRequest;if(stream._writev&&entry&&entry.next){// Fast case, write everything using _writev()
var l=state.bufferedRequestCount;var buffer=new Array(l);var holder=state.corkedRequestsFree;holder.entry=entry;var count=0;var allBuffers=true;while(entry){buffer[count]=entry;if(!entry.isBuf)allBuffers=false;entry=entry.next;count+=1;}buffer.allBuffers=allBuffers;doWrite(stream,state,true,state.length,buffer,'',holder.finish);// doWrite is almost always async, defer these to save a bit of time
// as the hot path ends with doWrite
state.pendingcb++;state.lastBufferedRequest=null;if(holder.next){state.corkedRequestsFree=holder.next;holder.next=null;}else{state.corkedRequestsFree=new CorkedRequest(state);}state.bufferedRequestCount=0;}else{// Slow case, write chunks one-by-one
while(entry){var chunk=entry.chunk;var encoding=entry.encoding;var cb=entry.callback;var len=state.objectMode?1:chunk.length;doWrite(stream,state,false,len,chunk,encoding,cb);entry=entry.next;state.bufferedRequestCount--;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(state.writing){break;}}if(entry===null)state.lastBufferedRequest=null;}state.bufferedRequest=entry;state.bufferProcessing=false;}Writable.prototype._write=function(chunk,encoding,cb){cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));};Writable.prototype._writev=null;Writable.prototype.end=function(chunk,encoding,cb){var state=this._writableState;if(typeof chunk==='function'){cb=chunk;chunk=null;encoding=null;}else if(typeof encoding==='function'){cb=encoding;encoding=null;}if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);// .end() fully uncorks
if(state.corked){state.corked=1;this.uncork();}// ignore unnecessary end() calls.
if(!state.ending)endWritable(this,state,cb);return this;};Object.defineProperty(Writable.prototype,'writableLength',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.length;}});function needFinish(state){return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;}function callFinal(stream,state){stream._final(function(err){state.pendingcb--;if(err){errorOrDestroy(stream,err);}state.prefinished=true;stream.emit('prefinish');finishMaybe(stream,state);});}function prefinish(stream,state){if(!state.prefinished&&!state.finalCalled){if(typeof stream._final==='function'&&!state.destroyed){state.pendingcb++;state.finalCalled=true;process.nextTick(callFinal,stream,state);}else{state.prefinished=true;stream.emit('prefinish');}}}function finishMaybe(stream,state){var need=needFinish(state);if(need){prefinish(stream,state);if(state.pendingcb===0){state.finished=true;stream.emit('finish');if(state.autoDestroy){// In case of duplex streams we need a way to detect
// if the readable side is ready for autoDestroy as well
var rState=stream._readableState;if(!rState||rState.autoDestroy&&rState.endEmitted){stream.destroy();}}}}return need;}function endWritable(stream,state,cb){state.ending=true;finishMaybe(stream,state);if(cb){if(state.finished)process.nextTick(cb);else stream.once('finish',cb);}state.ended=true;stream.writable=false;}function onCorkedFinish(corkReq,state,err){var entry=corkReq.entry;corkReq.entry=null;while(entry){var cb=entry.callback;state.pendingcb--;cb(err);entry=entry.next;}// reuse the free corkReq.
state.corkedRequestsFree.next=corkReq;}Object.defineProperty(Writable.prototype,'destroyed',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){if(this._writableState===undefined){return false;}return this._writableState.destroyed;},set:function set(value){// we ignore the value if the stream
// has not been initialized yet
if(!this._writableState){return;}// backward compatibility, the user is explicitly
// managing destroyed
this._writableState.destroyed=value;}});Writable.prototype.destroy=destroyImpl.destroy;Writable.prototype._undestroy=destroyImpl.undestroy;Writable.prototype._destroy=function(err,cb){cb(err);};}).call(this);}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"../errors":124,"./_stream_duplex":125,"./internal/streams/destroy":132,"./internal/streams/state":136,"./internal/streams/stream":137,"_process":242,"buffer":140,"inherits":223,"util-deprecate":282}],130:[function(require,module,exports){(function(process){(function(){'use strict';var _Object$setPrototypeO;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var finished=require('./end-of-stream');var kLastResolve=Symbol('lastResolve');var kLastReject=Symbol('lastReject');var kError=Symbol('error');var kEnded=Symbol('ended');var kLastPromise=Symbol('lastPromise');var kHandlePromise=Symbol('handlePromise');var kStream=Symbol('stream');function createIterResult(value,done){return{value:value,done:done};}function readAndResolve(iter){var resolve=iter[kLastResolve];if(resolve!==null){var data=iter[kStream].read();// we defer if data is null
// we can be expecting either 'end' or
// 'error'
if(data!==null){iter[kLastPromise]=null;iter[kLastResolve]=null;iter[kLastReject]=null;resolve(createIterResult(data,false));}}}function onReadable(iter){// we wait for the next tick, because it might
// emit an error with process.nextTick
process.nextTick(readAndResolve,iter);}function wrapForNext(lastPromise,iter){return function(resolve,reject){lastPromise.then(function(){if(iter[kEnded]){resolve(createIterResult(undefined,true));return;}iter[kHandlePromise](resolve,reject);},reject);};}var AsyncIteratorPrototype=Object.getPrototypeOf(function(){});var ReadableStreamAsyncIteratorPrototype=Object.setPrototypeOf((_Object$setPrototypeO={get stream(){return this[kStream];},next:function next(){var _this=this;// if we have detected an error in the meanwhile
// reject straight away
var error=this[kError];if(error!==null){return Promise.reject(error);}if(this[kEnded]){return Promise.resolve(createIterResult(undefined,true));}if(this[kStream].destroyed){// We need to defer via nextTick because if .destroy(err) is
// called, the error will be emitted via nextTick, and
// we cannot guarantee that there is no error lingering around
// waiting to be emitted.
return new Promise(function(resolve,reject){process.nextTick(function(){if(_this[kError]){reject(_this[kError]);}else{resolve(createIterResult(undefined,true));}});});}// if we have multiple next() calls
// we will wait for the previous Promise to finish
// this logic is optimized to support for await loops,
// where next() is only called once at a time
var lastPromise=this[kLastPromise];var promise;if(lastPromise){promise=new Promise(wrapForNext(lastPromise,this));}else{// fast path needed to support multiple this.push()
// without triggering the next() queue
var data=this[kStream].read();if(data!==null){return Promise.resolve(createIterResult(data,false));}promise=new Promise(this[kHandlePromise]);}this[kLastPromise]=promise;return promise;}},_defineProperty(_Object$setPrototypeO,Symbol.asyncIterator,function(){return this;}),_defineProperty(_Object$setPrototypeO,"return",function _return(){var _this2=this;// destroy(err, cb) is a private API
// we can guarantee we have that here, because we control the
// Readable class this is attached to
return new Promise(function(resolve,reject){_this2[kStream].destroy(null,function(err){if(err){reject(err);return;}resolve(createIterResult(undefined,true));});});}),_Object$setPrototypeO),AsyncIteratorPrototype);var createReadableStreamAsyncIterator=function createReadableStreamAsyncIterator(stream){var _Object$create;var iterator=Object.create(ReadableStreamAsyncIteratorPrototype,(_Object$create={},_defineProperty(_Object$create,kStream,{value:stream,writable:true}),_defineProperty(_Object$create,kLastResolve,{value:null,writable:true}),_defineProperty(_Object$create,kLastReject,{value:null,writable:true}),_defineProperty(_Object$create,kError,{value:null,writable:true}),_defineProperty(_Object$create,kEnded,{value:stream._readableState.endEmitted,writable:true}),_defineProperty(_Object$create,kHandlePromise,{value:function value(resolve,reject){var data=iterator[kStream].read();if(data){iterator[kLastPromise]=null;iterator[kLastResolve]=null;iterator[kLastReject]=null;resolve(createIterResult(data,false));}else{iterator[kLastResolve]=resolve;iterator[kLastReject]=reject;}},writable:true}),_Object$create));iterator[kLastPromise]=null;finished(stream,function(err){if(err&&err.code!=='ERR_STREAM_PREMATURE_CLOSE'){var reject=iterator[kLastReject];// reject if we are waiting for data in the Promise
// returned by next() and store the error
if(reject!==null){iterator[kLastPromise]=null;iterator[kLastResolve]=null;iterator[kLastReject]=null;reject(err);}iterator[kError]=err;return;}var resolve=iterator[kLastResolve];if(resolve!==null){iterator[kLastPromise]=null;iterator[kLastResolve]=null;iterator[kLastReject]=null;resolve(createIterResult(undefined,true));}iterator[kEnded]=true;});stream.on('readable',onReadable.bind(null,iterator));return iterator;};module.exports=createReadableStreamAsyncIterator;}).call(this);}).call(this,require('_process'));},{"./end-of-stream":133,"_process":242}],131:[function(require,module,exports){'use strict';function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}var _require=require('buffer'),Buffer=_require.Buffer;var _require2=require('util'),inspect=_require2.inspect;var custom=inspect&&inspect.custom||'inspect';function copyBuffer(src,target,offset){Buffer.prototype.copy.call(src,target,offset);}module.exports=/*#__PURE__*/function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0;}_createClass(BufferList,[{key:"push",value:function push(v){var entry={data:v,next:null};if(this.length>0)this.tail.next=entry;else this.head=entry;this.tail=entry;++this.length;}},{key:"unshift",value:function unshift(v){var entry={data:v,next:this.head};if(this.length===0)this.tail=entry;this.head=entry;++this.length;}},{key:"shift",value:function shift(){if(this.length===0)return;var ret=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return ret;}},{key:"clear",value:function clear(){this.head=this.tail=null;this.length=0;}},{key:"join",value:function join(s){if(this.length===0)return'';var p=this.head;var ret=''+p.data;while(p=p.next){ret+=s+p.data;}return ret;}},{key:"concat",value:function concat(n){if(this.length===0)return Buffer.alloc(0);var ret=Buffer.allocUnsafe(n>>>0);var p=this.head;var i=0;while(p){copyBuffer(p.data,ret,i);i+=p.data.length;p=p.next;}return ret;}// Consumes a specified amount of bytes or characters from the buffered data.
},{key:"consume",value:function consume(n,hasStrings){var ret;if(n<this.head.data.length){// `slice` is the same for buffers and strings.
ret=this.head.data.slice(0,n);this.head.data=this.head.data.slice(n);}else if(n===this.head.data.length){// First chunk is a perfect match.
ret=this.shift();}else{// Result spans more than one buffer.
ret=hasStrings?this._getString(n):this._getBuffer(n);}return ret;}},{key:"first",value:function first(){return this.head.data;}// Consumes a specified amount of characters from the buffered data.
},{key:"_getString",value:function _getString(n){var p=this.head;var c=1;var ret=p.data;n-=ret.length;while(p=p.next){var str=p.data;var nb=n>str.length?str.length:n;if(nb===str.length)ret+=str;else ret+=str.slice(0,n);n-=nb;if(n===0){if(nb===str.length){++c;if(p.next)this.head=p.next;else this.head=this.tail=null;}else{this.head=p;p.data=str.slice(nb);}break;}++c;}this.length-=c;return ret;}// Consumes a specified amount of bytes from the buffered data.
},{key:"_getBuffer",value:function _getBuffer(n){var ret=Buffer.allocUnsafe(n);var p=this.head;var c=1;p.data.copy(ret);n-=p.data.length;while(p=p.next){var buf=p.data;var nb=n>buf.length?buf.length:n;buf.copy(ret,ret.length-n,0,nb);n-=nb;if(n===0){if(nb===buf.length){++c;if(p.next)this.head=p.next;else this.head=this.tail=null;}else{this.head=p;p.data=buf.slice(nb);}break;}++c;}this.length-=c;return ret;}// Make sure the linked list only shows the minimal necessary information.
},{key:custom,value:function value(_,options){return inspect(this,_objectSpread({},options,{// Only inspect one level.
depth:0,// It should not recurse.
customInspect:false}));}}]);return BufferList;}();},{"buffer":140,"util":96}],132:[function(require,module,exports){(function(process){(function(){'use strict';// undocumented cb() API, needed for core, not for public API
function destroy(err,cb){var _this=this;var readableDestroyed=this._readableState&&this._readableState.destroyed;var writableDestroyed=this._writableState&&this._writableState.destroyed;if(readableDestroyed||writableDestroyed){if(cb){cb(err);}else if(err){if(!this._writableState){process.nextTick(emitErrorNT,this,err);}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,err);}}return this;}// we set destroyed to true before firing error callbacks in order
// to make it re-entrance safe in case destroy() is called within callbacks
if(this._readableState){this._readableState.destroyed=true;}// if this is a duplex stream mark the writable part as destroyed as well
if(this._writableState){this._writableState.destroyed=true;}this._destroy(err||null,function(err){if(!cb&&err){if(!_this._writableState){process.nextTick(emitErrorAndCloseNT,_this,err);}else if(!_this._writableState.errorEmitted){_this._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,_this,err);}else{process.nextTick(emitCloseNT,_this);}}else if(cb){process.nextTick(emitCloseNT,_this);cb(err);}else{process.nextTick(emitCloseNT,_this);}});return this;}function emitErrorAndCloseNT(self,err){emitErrorNT(self,err);emitCloseNT(self);}function emitCloseNT(self){if(self._writableState&&!self._writableState.emitClose)return;if(self._readableState&&!self._readableState.emitClose)return;self.emit('close');}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false;}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false;}}function emitErrorNT(self,err){self.emit('error',err);}function errorOrDestroy(stream,err){// We have tests that rely on errors being emitted
// in the same tick, so changing this is semver major.
// For now when you opt-in to autoDestroy we allow
// the error to be emitted nextTick. In a future
// semver major update we should change the default to this.
var rState=stream._readableState;var wState=stream._writableState;if(rState&&rState.autoDestroy||wState&&wState.autoDestroy)stream.destroy(err);else stream.emit('error',err);}module.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy};}).call(this);}).call(this,require('_process'));},{"_process":242}],133:[function(require,module,exports){// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';var ERR_STREAM_PREMATURE_CLOSE=require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;function once(callback){var called=false;return function(){if(called)return;called=true;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}callback.apply(this,args);};}function noop(){}function isRequest(stream){return stream.setHeader&&typeof stream.abort==='function';}function eos(stream,opts,callback){if(typeof opts==='function')return eos(stream,null,opts);if(!opts)opts={};callback=once(callback||noop);var readable=opts.readable||opts.readable!==false&&stream.readable;var writable=opts.writable||opts.writable!==false&&stream.writable;var onlegacyfinish=function onlegacyfinish(){if(!stream.writable)onfinish();};var writableEnded=stream._writableState&&stream._writableState.finished;var onfinish=function onfinish(){writable=false;writableEnded=true;if(!readable)callback.call(stream);};var readableEnded=stream._readableState&&stream._readableState.endEmitted;var onend=function onend(){readable=false;readableEnded=true;if(!writable)callback.call(stream);};var onerror=function onerror(err){callback.call(stream,err);};var onclose=function onclose(){var err;if(readable&&!readableEnded){if(!stream._readableState||!stream._readableState.ended)err=new ERR_STREAM_PREMATURE_CLOSE();return callback.call(stream,err);}if(writable&&!writableEnded){if(!stream._writableState||!stream._writableState.ended)err=new ERR_STREAM_PREMATURE_CLOSE();return callback.call(stream,err);}};var onrequest=function onrequest(){stream.req.on('finish',onfinish);};if(isRequest(stream)){stream.on('complete',onfinish);stream.on('abort',onclose);if(stream.req)onrequest();else stream.on('request',onrequest);}else if(writable&&!stream._writableState){// legacy streams
stream.on('end',onlegacyfinish);stream.on('close',onlegacyfinish);}stream.on('end',onend);stream.on('finish',onfinish);if(opts.error!==false)stream.on('error',onerror);stream.on('close',onclose);return function(){stream.removeListener('complete',onfinish);stream.removeListener('abort',onclose);stream.removeListener('request',onrequest);if(stream.req)stream.req.removeListener('finish',onfinish);stream.removeListener('end',onlegacyfinish);stream.removeListener('close',onlegacyfinish);stream.removeListener('finish',onfinish);stream.removeListener('end',onend);stream.removeListener('error',onerror);stream.removeListener('close',onclose);};}module.exports=eos;},{"../../../errors":124}],134:[function(require,module,exports){module.exports=function(){throw new Error('Readable.from is not available in the browser');};},{}],135:[function(require,module,exports){// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';var eos;function once(callback){var called=false;return function(){if(called)return;called=true;callback.apply(void 0,arguments);};}var _require$codes=require('../../../errors').codes,ERR_MISSING_ARGS=_require$codes.ERR_MISSING_ARGS,ERR_STREAM_DESTROYED=_require$codes.ERR_STREAM_DESTROYED;function noop(err){// Rethrow the error if it exists to avoid swallowing it
if(err)throw err;}function isRequest(stream){return stream.setHeader&&typeof stream.abort==='function';}function destroyer(stream,reading,writing,callback){callback=once(callback);var closed=false;stream.on('close',function(){closed=true;});if(eos===undefined)eos=require('./end-of-stream');eos(stream,{readable:reading,writable:writing},function(err){if(err)return callback(err);closed=true;callback();});var destroyed=false;return function(err){if(closed)return;if(destroyed)return;destroyed=true;// request.destroy just do .end - .abort is what we want
if(isRequest(stream))return stream.abort();if(typeof stream.destroy==='function')return stream.destroy();callback(err||new ERR_STREAM_DESTROYED('pipe'));};}function call(fn){fn();}function pipe(from,to){return from.pipe(to);}function popCallback(streams){if(!streams.length)return noop;if(typeof streams[streams.length-1]!=='function')return noop;return streams.pop();}function pipeline(){for(var _len=arguments.length,streams=new Array(_len),_key=0;_key<_len;_key++){streams[_key]=arguments[_key];}var callback=popCallback(streams);if(Array.isArray(streams[0]))streams=streams[0];if(streams.length<2){throw new ERR_MISSING_ARGS('streams');}var error;var destroys=streams.map(function(stream,i){var reading=i<streams.length-1;var writing=i>0;return destroyer(stream,reading,writing,function(err){if(!error)error=err;if(err)destroys.forEach(call);if(reading)return;destroys.forEach(call);callback(error);});});return streams.reduce(pipe);}module.exports=pipeline;},{"../../../errors":124,"./end-of-stream":133}],136:[function(require,module,exports){'use strict';var ERR_INVALID_OPT_VALUE=require('../../../errors').codes.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(options,isDuplex,duplexKey){return options.highWaterMark!=null?options.highWaterMark:isDuplex?options[duplexKey]:null;}function getHighWaterMark(state,options,duplexKey,isDuplex){var hwm=highWaterMarkFrom(options,isDuplex,duplexKey);if(hwm!=null){if(!(isFinite(hwm)&&Math.floor(hwm)===hwm)||hwm<0){var name=isDuplex?duplexKey:'highWaterMark';throw new ERR_INVALID_OPT_VALUE(name,hwm);}return Math.floor(hwm);}// Default value
return state.objectMode?16:16*1024;}module.exports={getHighWaterMark:getHighWaterMark};},{"../../../errors":124}],137:[function(require,module,exports){module.exports=require('events').EventEmitter;},{"events":190}],138:[function(require,module,exports){exports=module.exports=require('./lib/_stream_readable.js');exports.Stream=exports;exports.Readable=exports;exports.Writable=require('./lib/_stream_writable.js');exports.Duplex=require('./lib/_stream_duplex.js');exports.Transform=require('./lib/_stream_transform.js');exports.PassThrough=require('./lib/_stream_passthrough.js');exports.finished=require('./lib/internal/streams/end-of-stream.js');exports.pipeline=require('./lib/internal/streams/pipeline.js');},{"./lib/_stream_duplex.js":125,"./lib/_stream_passthrough.js":126,"./lib/_stream_readable.js":127,"./lib/_stream_transform.js":128,"./lib/_stream_writable.js":129,"./lib/internal/streams/end-of-stream.js":133,"./lib/internal/streams/pipeline.js":135}],139:[function(require,module,exports){(function(Buffer){(function(){module.exports=function xor(a,b){var length=Math.min(a.length,b.length);var buffer=new Buffer(length);for(var i=0;i<length;++i){buffer[i]=a[i]^b[i];}return buffer;};}).call(this);}).call(this,require("buffer").Buffer);},{"buffer":140}],140:[function(require,module,exports){(function(Buffer){(function(){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 *//* eslint-disable no-proto */'use strict';var base64=require('base64-js');var ieee754=require('ieee754');exports.Buffer=Buffer;exports.SlowBuffer=SlowBuffer;exports.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=0x7fffffff;exports.kMaxLength=K_MAX_LENGTH;/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&typeof console.error==='function'){console.error('This browser lacks typed array (Uint8Array) support which is required by '+'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');}function typedArraySupport(){// Can typed array instances can be augmented?
try{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42;}};return arr.foo()===42;}catch(e){return false;}}Object.defineProperty(Buffer.prototype,'parent',{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer;}});Object.defineProperty(Buffer.prototype,'offset',{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset;}});function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError('The value "'+length+'" is invalid for option "size"');}// Return an augmented `Uint8Array` instance
var buf=new Uint8Array(length);buf.__proto__=Buffer.prototype;return buf;}/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */function Buffer(arg,encodingOrOffset,length){// Common case.
if(typeof arg==='number'){if(typeof encodingOrOffset==='string'){throw new TypeError('The "string" argument must be of type string. Received type number');}return allocUnsafe(arg);}return from(arg,encodingOrOffset,length);}// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if(typeof Symbol!=='undefined'&&Symbol.species!=null&&Buffer[Symbol.species]===Buffer){Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:true,enumerable:false,writable:false});}Buffer.poolSize=8192;// not used by this implementation
function from(value,encodingOrOffset,length){if(typeof value==='string'){return fromString(value,encodingOrOffset);}if(ArrayBuffer.isView(value)){return fromArrayLike(value);}if(value==null){throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+'or Array-like Object. Received type '+typeof value);}if(isInstance(value,ArrayBuffer)||value&&isInstance(value.buffer,ArrayBuffer)){return fromArrayBuffer(value,encodingOrOffset,length);}if(typeof value==='number'){throw new TypeError('The "value" argument must not be of type number. Received type number');}var valueOf=value.valueOf&&value.valueOf();if(valueOf!=null&&valueOf!==value){return Buffer.from(valueOf,encodingOrOffset,length);}var b=fromObject(value);if(b)return b;if(typeof Symbol!=='undefined'&&Symbol.toPrimitive!=null&&typeof value[Symbol.toPrimitive]==='function'){return Buffer.from(value[Symbol.toPrimitive]('string'),encodingOrOffset,length);}throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+'or Array-like Object. Received type '+typeof value);}/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/Buffer.from=function(value,encodingOrOffset,length){return from(value,encodingOrOffset,length);};// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;function assertSize(size){if(typeof size!=='number'){throw new TypeError('"size" argument must be of type number');}else if(size<0){throw new RangeError('The value "'+size+'" is invalid for option "size"');}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size);}if(fill!==undefined){// Only pay attention to encoding if it's a string. This
// prevents accidentally sending in a number that would
// be interpretted as a start offset.
return typeof encoding==='string'?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill);}return createBuffer(size);}/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/Buffer.alloc=function(size,fill,encoding){return alloc(size,fill,encoding);};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0);}/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */Buffer.allocUnsafe=function(size){return allocUnsafe(size);};/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(size);};function fromString(string,encoding){if(typeof encoding!=='string'||encoding===''){encoding='utf8';}if(!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}var length=byteLength(string,encoding)|0;var buf=createBuffer(length);var actual=buf.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will
// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
buf=buf.slice(0,actual);}return buf;}function fromArrayLike(array){var length=array.length<0?0:checked(array.length)|0;var buf=createBuffer(length);for(var i=0;i<length;i+=1){buf[i]=array[i]&255;}return buf;}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('"offset" is outside of buffer bounds');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('"length" is outside of buffer bounds');}var buf;if(byteOffset===undefined&&length===undefined){buf=new Uint8Array(array);}else if(length===undefined){buf=new Uint8Array(array,byteOffset);}else{buf=new Uint8Array(array,byteOffset,length);}// Return an augmented `Uint8Array` instance
buf.__proto__=Buffer.prototype;return buf;}function fromObject(obj){if(Buffer.isBuffer(obj)){var len=checked(obj.length)|0;var buf=createBuffer(len);if(buf.length===0){return buf;}obj.copy(buf,0,0,len);return buf;}if(obj.length!==undefined){if(typeof obj.length!=='number'||numberIsNaN(obj.length)){return createBuffer(0);}return fromArrayLike(obj);}if(obj.type==='Buffer'&&Array.isArray(obj.data)){return fromArrayLike(obj.data);}}function checked(length){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(length>=K_MAX_LENGTH){throw new RangeError('Attempt to allocate Buffer larger than maximum '+'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');}return length|0;}function SlowBuffer(length){if(+length!=length){// eslint-disable-line eqeqeq
length=0;}return Buffer.alloc(+length);}Buffer.isBuffer=function isBuffer(b){return b!=null&&b._isBuffer===true&&b!==Buffer.prototype;// so Buffer.isBuffer(Buffer.prototype) will be false
};Buffer.compare=function compare(a,b){if(isInstance(a,Uint8Array))a=Buffer.from(a,a.offset,a.byteLength);if(isInstance(b,Uint8Array))b=Buffer.from(b,b.offset,b.byteLength);if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!Array.isArray(list)){throw new TypeError('"list" argument must be an Array of Buffers');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(isInstance(buf,Uint8Array)){buf=Buffer.from(buf);}if(!Buffer.isBuffer(buf)){throw new TypeError('"list" argument must be an Array of Buffers');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(Buffer.isBuffer(string)){return string.length;}if(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){return string.byteLength;}if(typeof string!=='string'){throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. '+'Received type '+typeof string);}var len=string.length;var mustMatch=arguments.length>2&&arguments[2]===true;if(!mustMatch&&len===0)return 0;// Use a for loop to avoid recursion
var loweredCase=false;for(;;){switch(encoding){case'ascii':case'latin1':case'binary':return len;case'utf8':case'utf-8':return utf8ToBytes(string).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return len*2;case'hex':return len>>>1;case'base64':return base64ToBytes(string).length;default:if(loweredCase){return mustMatch?-1:utf8ToBytes(string).length;// assume utf8
}encoding=(''+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// property of a typed array.
// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
// undefined is handled specially as per ECMA-262 6th Edition,
// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
if(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if(start>this.length){return'';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return'';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
end>>>=0;start>>>=0;if(end<=start){return'';}if(!encoding)encoding='utf8';while(true){switch(encoding){case'hex':return hexSlice(this,start,end);case'utf8':case'utf-8':return utf8Slice(this,start,end);case'ascii':return asciiSlice(this,start,end);case'latin1':case'binary':return latin1Slice(this,start,end);case'base64':return base64Slice(this,start,end);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(encoding+'').toLowerCase();loweredCase=true;}}}// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError('Buffer size must be a multiple of 16-bits');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError('Buffer size must be a multiple of 32-bits');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError('Buffer size must be a multiple of 64-bits');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length;if(length===0)return'';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(b){if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str='';var max=exports.INSPECT_MAX_BYTES;str=this.toString('hex',0,max).replace(/(.{2})/g,'$1 ').trim();if(this.length>max)str+=' ... ';return'<Buffer '+str+'>';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(isInstance(target,Uint8Array)){target=Buffer.from(target,target.offset,target.byteLength);}if(!Buffer.isBuffer(target)){throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. '+'Received type '+typeof target);}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError('out of range index');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match
if(buffer.length===0)return-1;// Normalize byteOffset
if(typeof byteOffset==='string'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.
if(numberIsNaN(byteOffset)){// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
byteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer
if(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val
if(typeof val==='string'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf
if(Buffer.isBuffer(val)){// Special case: looking for empty string/buffer always fails
if(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==='number'){val=val&0xFF;// Search for a byte value [0-255]
if(typeof Uint8Array.prototype.indexOf==='function'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError('val must be string, number or Buffer');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==='ucs2'||encoding==='ucs-2'||encoding==='utf16le'||encoding==='utf-16le'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}var strLen=string.length;if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(numberIsNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)
if(offset===undefined){encoding='utf8';length=this.length;offset=0;// Buffer#write(string, encoding)
}else if(length===undefined&&typeof offset==='string'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])
}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===undefined)encoding='utf8';}else{encoding=length;length=undefined;}}else{throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError('Attempt to write outside buffer bounds');}if(!encoding)encoding='utf8';var loweredCase=false;for(;;){switch(encoding){case'hex':return hexWrite(this,string,offset,length);case'utf8':case'utf-8':return utf8Write(this,string,offset,length);case'ascii':return asciiWrite(this,string,offset,length);case'latin1':case'binary':return latin1Write(this,string,offset,length);case'base64':// Warning: maxLength not taken into account in base64Write
return base64Write(this,string,offset,length);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(''+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf);}else{return base64.fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
codePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)
codePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()
}// Decode in chunks to avoid "call stack size exceeded".
var res='';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out='';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res='';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf=this.subarray(start,end);// Return an augmented `Uint8Array` instance
newBuf.__proto__=Buffer.prototype;return newBuf;};/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError('Index out of range');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError('Index out of range');if(offset<0)throw new RangeError('Index out of range');}function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);}ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);}ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy=function copy(target,targetStart,start,end){if(!Buffer.isBuffer(target))throw new TypeError('argument should be a Buffer');if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we're done
if(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions
if(targetStart<0){throw new RangeError('targetStart out of bounds');}if(start<0||start>=this.length)throw new RangeError('Index out of range');if(end<0)throw new RangeError('sourceEnd out of bounds');// Are we oob?
if(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;if(this===target&&typeof Uint8Array.prototype.copyWithin==='function'){// Use built-in when available, missing from IE11
this.copyWithin(targetStart,start,end);}else if(this===target&&start<targetStart&&targetStart<end){// descending copy from end
for(var i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,end),targetStart);}return len;};// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:
if(typeof val==='string'){if(typeof start==='string'){encoding=start;start=0;end=this.length;}else if(typeof end==='string'){encoding=end;end=this.length;}if(encoding!==undefined&&typeof encoding!=='string'){throw new TypeError('encoding must be a string');}if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}if(val.length===1){var code=val.charCodeAt(0);if(encoding==='utf8'&&code<128||encoding==='latin1'){// Fast path: If `val` fits into a single byte, use that numeric value.
val=code;}}}else if(typeof val==='number'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.
if(start<0||this.length<start||this.length<end){throw new RangeError('Out of range index');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==='number'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=Buffer.isBuffer(val)?val:Buffer.from(val,encoding);var len=bytes.length;if(len===0){throw new TypeError('The value "'+val+'" is invalid for argument "value"');}for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS
// ================
var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str){// Node takes equal signs as end of the Base64 encoding
str=str.split('=')[0];// Node strips out invalid characters like \n and \t from the string, base64-js does not
str=str.trim().replace(INVALID_BASE64_RE,'');// Node converts strings with length < 2 to ''
if(str.length<2)return'';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
while(str.length%4!==0){str=str+'=';}return str;}function toHex(n){if(n<16)return'0'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component
if(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead
if(!leadSurrogate){// no lead yet
if(codePoint>0xDBFF){// unexpected trail
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead
leadSurrogate=codePoint;continue;}// 2 leads in a row
if(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair
codePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8
if(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error('Invalid code point');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node's code seems to be doing this and not & 0x7F..
byteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return base64.toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance(obj,type){return obj instanceof type||obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&obj.constructor.name===type.name;}function numberIsNaN(obj){// For IE11 support
return obj!==obj;// eslint-disable-line no-self-compare
}}).call(this);}).call(this,require("buffer").Buffer);},{"base64-js":92,"buffer":140,"ieee754":222}],141:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;var Transform=require('stream').Transform;var StringDecoder=require('string_decoder').StringDecoder;var inherits=require('inherits');function CipherBase(hashMode){Transform.call(this);this.hashMode=typeof hashMode==='string';if(this.hashMode){this[hashMode]=this._finalOrDigest;}else{this.final=this._finalOrDigest;}if(this._final){this.__final=this._final;this._final=null;}this._decoder=null;this._encoding=null;}inherits(CipherBase,Transform);CipherBase.prototype.update=function(data,inputEnc,outputEnc){if(typeof data==='string'){data=Buffer.from(data,inputEnc);}var outData=this._update(data);if(this.hashMode)return this;if(outputEnc){outData=this._toString(outData,outputEnc);}return outData;};CipherBase.prototype.setAutoPadding=function(){};CipherBase.prototype.getAuthTag=function(){throw new Error('trying to get auth tag in unsupported state');};CipherBase.prototype.setAuthTag=function(){throw new Error('trying to set auth tag in unsupported state');};CipherBase.prototype.setAAD=function(){throw new Error('trying to set aad in unsupported state');};CipherBase.prototype._transform=function(data,_,next){var err;try{if(this.hashMode){this._update(data);}else{this.push(this._update(data));}}catch(e){err=e;}finally{next(err);}};CipherBase.prototype._flush=function(done){var err;try{this.push(this.__final());}catch(e){err=e;}done(err);};CipherBase.prototype._finalOrDigest=function(outputEnc){var outData=this.__final()||Buffer.alloc(0);if(outputEnc){outData=this._toString(outData,outputEnc,true);}return outData;};CipherBase.prototype._toString=function(value,enc,fin){if(!this._decoder){this._decoder=new StringDecoder(enc);this._encoding=enc;}if(this._encoding!==enc)throw new Error('can\'t switch encodings');var out=this._decoder.write(value);if(fin){out+=this._decoder.end();}return out;};module.exports=CipherBase;},{"inherits":223,"safe-buffer":254,"stream":265,"string_decoder":280}],142:[function(require,module,exports){(function(Buffer){(function(){var elliptic=require('elliptic');var BN=require('bn.js');module.exports=function createECDH(curve){return new ECDH(curve);};var aliases={secp256k1:{name:'secp256k1',byteLength:32},secp224r1:{name:'p224',byteLength:28},prime256v1:{name:'p256',byteLength:32},prime192v1:{name:'p192',byteLength:24},ed25519:{name:'ed25519',byteLength:32},secp384r1:{name:'p384',byteLength:48},secp521r1:{name:'p521',byteLength:66}};aliases.p224=aliases.secp224r1;aliases.p256=aliases.secp256r1=aliases.prime256v1;aliases.p192=aliases.secp192r1=aliases.prime192v1;aliases.p384=aliases.secp384r1;aliases.p521=aliases.secp521r1;function ECDH(curve){this.curveType=aliases[curve];if(!this.curveType){this.curveType={name:curve};}this.curve=new elliptic.ec(this.curveType.name);// eslint-disable-line new-cap
this.keys=void 0;}ECDH.prototype.generateKeys=function(enc,format){this.keys=this.curve.genKeyPair();return this.getPublicKey(enc,format);};ECDH.prototype.computeSecret=function(other,inenc,enc){inenc=inenc||'utf8';if(!Buffer.isBuffer(other)){other=new Buffer(other,inenc);}var otherPub=this.curve.keyFromPublic(other).getPublic();var out=otherPub.mul(this.keys.getPrivate()).getX();return formatReturnValue(out,enc,this.curveType.byteLength);};ECDH.prototype.getPublicKey=function(enc,format){var key=this.keys.getPublic(format==='compressed',true);if(format==='hybrid'){if(key[key.length-1]%2){key[0]=7;}else{key[0]=6;}}return formatReturnValue(key,enc);};ECDH.prototype.getPrivateKey=function(enc){return formatReturnValue(this.keys.getPrivate(),enc);};ECDH.prototype.setPublicKey=function(pub,enc){enc=enc||'utf8';if(!Buffer.isBuffer(pub)){pub=new Buffer(pub,enc);}this.keys._importPublic(pub);return this;};ECDH.prototype.setPrivateKey=function(priv,enc){enc=enc||'utf8';if(!Buffer.isBuffer(priv)){priv=new Buffer(priv,enc);}var _priv=new BN(priv);_priv=_priv.toString(16);this.keys=this.curve.genKeyPair();this.keys._importPrivate(_priv);return this;};function formatReturnValue(bn,enc,len){if(!Array.isArray(bn)){bn=bn.toArray();}var buf=new Buffer(bn);if(len&&buf.length<len){var zeros=new Buffer(len-buf.length);zeros.fill(0);buf=Buffer.concat([zeros,buf]);}if(!enc){return buf;}else{return buf.toString(enc);}}}).call(this);}).call(this,require("buffer").Buffer);},{"bn.js":143,"buffer":140,"elliptic":161}],143:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments);},{"buffer":96,"dup":2}],144:[function(require,module,exports){'use strict';var inherits=require('inherits');var MD5=require('md5.js');var RIPEMD160=require('ripemd160');var sha=require('sha.js');var Base=require('cipher-base');function Hash(hash){Base.call(this,'digest');this._hash=hash;}inherits(Hash,Base);Hash.prototype._update=function(data){this._hash.update(data);};Hash.prototype._final=function(){return this._hash.digest();};module.exports=function createHash(alg){alg=alg.toLowerCase();if(alg==='md5')return new MD5();if(alg==='rmd160'||alg==='ripemd160')return new RIPEMD160();return new Hash(sha(alg));};},{"cipher-base":141,"inherits":223,"md5.js":225,"ripemd160":253,"sha.js":258}],145:[function(require,module,exports){var MD5=require('md5.js');module.exports=function(buffer){return new MD5().update(buffer).digest();};},{"md5.js":225}],146:[function(require,module,exports){'use strict';var inherits=require('inherits');var Legacy=require('./legacy');var Base=require('cipher-base');var Buffer=require('safe-buffer').Buffer;var md5=require('create-hash/md5');var RIPEMD160=require('ripemd160');var sha=require('sha.js');var ZEROS=Buffer.alloc(128);function Hmac(alg,key){Base.call(this,'digest');if(typeof key==='string'){key=Buffer.from(key);}var blocksize=alg==='sha512'||alg==='sha384'?128:64;this._alg=alg;this._key=key;if(key.length>blocksize){var hash=alg==='rmd160'?new RIPEMD160():sha(alg);key=hash.update(key).digest();}else if(key.length<blocksize){key=Buffer.concat([key,ZEROS],blocksize);}var ipad=this._ipad=Buffer.allocUnsafe(blocksize);var opad=this._opad=Buffer.allocUnsafe(blocksize);for(var i=0;i<blocksize;i++){ipad[i]=key[i]^0x36;opad[i]=key[i]^0x5C;}this._hash=alg==='rmd160'?new RIPEMD160():sha(alg);this._hash.update(ipad);}inherits(Hmac,Base);Hmac.prototype._update=function(data){this._hash.update(data);};Hmac.prototype._final=function(){var h=this._hash.digest();var hash=this._alg==='rmd160'?new RIPEMD160():sha(this._alg);return hash.update(this._opad).update(h).digest();};module.exports=function createHmac(alg,key){alg=alg.toLowerCase();if(alg==='rmd160'||alg==='ripemd160'){return new Hmac('rmd160',key);}if(alg==='md5'){return new Legacy(md5,key);}return new Hmac(alg,key);};},{"./legacy":147,"cipher-base":141,"create-hash/md5":145,"inherits":223,"ripemd160":253,"safe-buffer":254,"sha.js":258}],147:[function(require,module,exports){'use strict';var inherits=require('inherits');var Buffer=require('safe-buffer').Buffer;var Base=require('cipher-base');var ZEROS=Buffer.alloc(128);var blocksize=64;function Hmac(alg,key){Base.call(this,'digest');if(typeof key==='string'){key=Buffer.from(key);}this._alg=alg;this._key=key;if(key.length>blocksize){key=alg(key);}else if(key.length<blocksize){key=Buffer.concat([key,ZEROS],blocksize);}var ipad=this._ipad=Buffer.allocUnsafe(blocksize);var opad=this._opad=Buffer.allocUnsafe(blocksize);for(var i=0;i<blocksize;i++){ipad[i]=key[i]^0x36;opad[i]=key[i]^0x5C;}this._hash=[ipad];}inherits(Hmac,Base);Hmac.prototype._update=function(data){this._hash.push(data);};Hmac.prototype._final=function(){var h=this._alg(Buffer.concat(this._hash));return this._alg(Buffer.concat([this._opad,h]));};module.exports=Hmac;},{"cipher-base":141,"inherits":223,"safe-buffer":254}],148:[function(require,module,exports){'use strict';exports.randomBytes=exports.rng=exports.pseudoRandomBytes=exports.prng=require('randombytes');exports.createHash=exports.Hash=require('create-hash');exports.createHmac=exports.Hmac=require('create-hmac');var algos=require('browserify-sign/algos');var algoKeys=Object.keys(algos);var hashes=['sha1','sha224','sha256','sha384','sha512','md5','rmd160'].concat(algoKeys);exports.getHashes=function(){return hashes;};var p=require('pbkdf2');exports.pbkdf2=p.pbkdf2;exports.pbkdf2Sync=p.pbkdf2Sync;var aes=require('browserify-cipher');exports.Cipher=aes.Cipher;exports.createCipher=aes.createCipher;exports.Cipheriv=aes.Cipheriv;exports.createCipheriv=aes.createCipheriv;exports.Decipher=aes.Decipher;exports.createDecipher=aes.createDecipher;exports.Decipheriv=aes.Decipheriv;exports.createDecipheriv=aes.createDecipheriv;exports.getCiphers=aes.getCiphers;exports.listCiphers=aes.listCiphers;var dh=require('diffie-hellman');exports.DiffieHellmanGroup=dh.DiffieHellmanGroup;exports.createDiffieHellmanGroup=dh.createDiffieHellmanGroup;exports.getDiffieHellman=dh.getDiffieHellman;exports.createDiffieHellman=dh.createDiffieHellman;exports.DiffieHellman=dh.DiffieHellman;var sign=require('browserify-sign');exports.createSign=sign.createSign;exports.Sign=sign.Sign;exports.createVerify=sign.createVerify;exports.Verify=sign.Verify;exports.createECDH=require('create-ecdh');var publicEncrypt=require('public-encrypt');exports.publicEncrypt=publicEncrypt.publicEncrypt;exports.privateEncrypt=publicEncrypt.privateEncrypt;exports.publicDecrypt=publicEncrypt.publicDecrypt;exports.privateDecrypt=publicEncrypt.privateDecrypt;// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })
var rf=require('randomfill');exports.randomFill=rf.randomFill;exports.randomFillSync=rf.randomFillSync;exports.createCredentials=function(){throw new Error(['sorry, createCredentials is not implemented yet','we accept pull requests','https://github.com/crypto-browserify/crypto-browserify'].join('\n'));};exports.constants={'DH_CHECK_P_NOT_SAFE_PRIME':2,'DH_CHECK_P_NOT_PRIME':1,'DH_UNABLE_TO_CHECK_GENERATOR':4,'DH_NOT_SUITABLE_GENERATOR':8,'NPN_ENABLED':1,'ALPN_ENABLED':1,'RSA_PKCS1_PADDING':1,'RSA_SSLV23_PADDING':2,'RSA_NO_PADDING':3,'RSA_PKCS1_OAEP_PADDING':4,'RSA_X931_PADDING':5,'RSA_PKCS1_PSS_PADDING':6,'POINT_CONVERSION_COMPRESSED':2,'POINT_CONVERSION_UNCOMPRESSED':4,'POINT_CONVERSION_HYBRID':6};},{"browserify-cipher":114,"browserify-sign":121,"browserify-sign/algos":118,"create-ecdh":142,"create-hash":144,"create-hmac":146,"diffie-hellman":155,"pbkdf2":236,"public-encrypt":243,"randombytes":251,"randomfill":252}],149:[function(require,module,exports){'use strict';exports.utils=require('./des/utils');exports.Cipher=require('./des/cipher');exports.DES=require('./des/des');exports.CBC=require('./des/cbc');exports.EDE=require('./des/ede');},{"./des/cbc":150,"./des/cipher":151,"./des/des":152,"./des/ede":153,"./des/utils":154}],150:[function(require,module,exports){'use strict';var assert=require('minimalistic-assert');var inherits=require('inherits');var proto={};function CBCState(iv){assert.equal(iv.length,8,'Invalid IV length');this.iv=new Array(8);for(var i=0;i<this.iv.length;i++)this.iv[i]=iv[i];}function instantiate(Base){function CBC(options){Base.call(this,options);this._cbcInit();}inherits(CBC,Base);var keys=Object.keys(proto);for(var i=0;i<keys.length;i++){var key=keys[i];CBC.prototype[key]=proto[key];}CBC.create=function create(options){return new CBC(options);};return CBC;}exports.instantiate=instantiate;proto._cbcInit=function _cbcInit(){var state=new CBCState(this.options.iv);this._cbcState=state;};proto._update=function _update(inp,inOff,out,outOff){var state=this._cbcState;var superProto=this.constructor.super_.prototype;var iv=state.iv;if(this.type==='encrypt'){for(var i=0;i<this.blockSize;i++)iv[i]^=inp[inOff+i];superProto._update.call(this,iv,0,out,outOff);for(var i=0;i<this.blockSize;i++)iv[i]=out[outOff+i];}else{superProto._update.call(this,inp,inOff,out,outOff);for(var i=0;i<this.blockSize;i++)out[outOff+i]^=iv[i];for(var i=0;i<this.blockSize;i++)iv[i]=inp[inOff+i];}};},{"inherits":223,"minimalistic-assert":228}],151:[function(require,module,exports){'use strict';var assert=require('minimalistic-assert');function Cipher(options){this.options=options;this.type=this.options.type;this.blockSize=8;this._init();this.buffer=new Array(this.blockSize);this.bufferOff=0;}module.exports=Cipher;Cipher.prototype._init=function _init(){// Might be overrided
};Cipher.prototype.update=function update(data){if(data.length===0)return[];if(this.type==='decrypt')return this._updateDecrypt(data);else return this._updateEncrypt(data);};Cipher.prototype._buffer=function _buffer(data,off){// Append data to buffer
var min=Math.min(this.buffer.length-this.bufferOff,data.length-off);for(var i=0;i<min;i++)this.buffer[this.bufferOff+i]=data[off+i];this.bufferOff+=min;// Shift next
return min;};Cipher.prototype._flushBuffer=function _flushBuffer(out,off){this._update(this.buffer,0,out,off);this.bufferOff=0;return this.blockSize;};Cipher.prototype._updateEncrypt=function _updateEncrypt(data){var inputOff=0;var outputOff=0;var count=(this.bufferOff+data.length)/this.blockSize|0;var out=new Array(count*this.blockSize);if(this.bufferOff!==0){inputOff+=this._buffer(data,inputOff);if(this.bufferOff===this.buffer.length)outputOff+=this._flushBuffer(out,outputOff);}// Write blocks
var max=data.length-(data.length-inputOff)%this.blockSize;for(;inputOff<max;inputOff+=this.blockSize){this._update(data,inputOff,out,outputOff);outputOff+=this.blockSize;}// Queue rest
for(;inputOff<data.length;inputOff++,this.bufferOff++)this.buffer[this.bufferOff]=data[inputOff];return out;};Cipher.prototype._updateDecrypt=function _updateDecrypt(data){var inputOff=0;var outputOff=0;var count=Math.ceil((this.bufferOff+data.length)/this.blockSize)-1;var out=new Array(count*this.blockSize);// TODO(indutny): optimize it, this is far from optimal
for(;count>0;count--){inputOff+=this._buffer(data,inputOff);outputOff+=this._flushBuffer(out,outputOff);}// Buffer rest of the input
inputOff+=this._buffer(data,inputOff);return out;};Cipher.prototype.final=function final(buffer){var first;if(buffer)first=this.update(buffer);var last;if(this.type==='encrypt')last=this._finalEncrypt();else last=this._finalDecrypt();if(first)return first.concat(last);else return last;};Cipher.prototype._pad=function _pad(buffer,off){if(off===0)return false;while(off<buffer.length)buffer[off++]=0;return true;};Cipher.prototype._finalEncrypt=function _finalEncrypt(){if(!this._pad(this.buffer,this.bufferOff))return[];var out=new Array(this.blockSize);this._update(this.buffer,0,out,0);return out;};Cipher.prototype._unpad=function _unpad(buffer){return buffer;};Cipher.prototype._finalDecrypt=function _finalDecrypt(){assert.equal(this.bufferOff,this.blockSize,'Not enough data to decrypt');var out=new Array(this.blockSize);this._flushBuffer(out,0);return this._unpad(out);};},{"minimalistic-assert":228}],152:[function(require,module,exports){'use strict';var assert=require('minimalistic-assert');var inherits=require('inherits');var utils=require('./utils');var Cipher=require('./cipher');function DESState(){this.tmp=new Array(2);this.keys=null;}function DES(options){Cipher.call(this,options);var state=new DESState();this._desState=state;this.deriveKeys(state,options.key);}inherits(DES,Cipher);module.exports=DES;DES.create=function create(options){return new DES(options);};var shiftTable=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];DES.prototype.deriveKeys=function deriveKeys(state,key){state.keys=new Array(16*2);assert.equal(key.length,this.blockSize,'Invalid key length');var kL=utils.readUInt32BE(key,0);var kR=utils.readUInt32BE(key,4);utils.pc1(kL,kR,state.tmp,0);kL=state.tmp[0];kR=state.tmp[1];for(var i=0;i<state.keys.length;i+=2){var shift=shiftTable[i>>>1];kL=utils.r28shl(kL,shift);kR=utils.r28shl(kR,shift);utils.pc2(kL,kR,state.keys,i);}};DES.prototype._update=function _update(inp,inOff,out,outOff){var state=this._desState;var l=utils.readUInt32BE(inp,inOff);var r=utils.readUInt32BE(inp,inOff+4);// Initial Permutation
utils.ip(l,r,state.tmp,0);l=state.tmp[0];r=state.tmp[1];if(this.type==='encrypt')this._encrypt(state,l,r,state.tmp,0);else this._decrypt(state,l,r,state.tmp,0);l=state.tmp[0];r=state.tmp[1];utils.writeUInt32BE(out,l,outOff);utils.writeUInt32BE(out,r,outOff+4);};DES.prototype._pad=function _pad(buffer,off){var value=buffer.length-off;for(var i=off;i<buffer.length;i++)buffer[i]=value;return true;};DES.prototype._unpad=function _unpad(buffer){var pad=buffer[buffer.length-1];for(var i=buffer.length-pad;i<buffer.length;i++)assert.equal(buffer[i],pad);return buffer.slice(0,buffer.length-pad);};DES.prototype._encrypt=function _encrypt(state,lStart,rStart,out,off){var l=lStart;var r=rStart;// Apply f() x16 times
for(var i=0;i<state.keys.length;i+=2){var keyL=state.keys[i];var keyR=state.keys[i+1];// f(r, k)
utils.expand(r,state.tmp,0);keyL^=state.tmp[0];keyR^=state.tmp[1];var s=utils.substitute(keyL,keyR);var f=utils.permute(s);var t=r;r=(l^f)>>>0;l=t;}// Reverse Initial Permutation
utils.rip(r,l,out,off);};DES.prototype._decrypt=function _decrypt(state,lStart,rStart,out,off){var l=rStart;var r=lStart;// Apply f() x16 times
for(var i=state.keys.length-2;i>=0;i-=2){var keyL=state.keys[i];var keyR=state.keys[i+1];// f(r, k)
utils.expand(l,state.tmp,0);keyL^=state.tmp[0];keyR^=state.tmp[1];var s=utils.substitute(keyL,keyR);var f=utils.permute(s);var t=l;l=(r^f)>>>0;r=t;}// Reverse Initial Permutation
utils.rip(l,r,out,off);};},{"./cipher":151,"./utils":154,"inherits":223,"minimalistic-assert":228}],153:[function(require,module,exports){'use strict';var assert=require('minimalistic-assert');var inherits=require('inherits');var Cipher=require('./cipher');var DES=require('./des');function EDEState(type,key){assert.equal(key.length,24,'Invalid key length');var k1=key.slice(0,8);var k2=key.slice(8,16);var k3=key.slice(16,24);if(type==='encrypt'){this.ciphers=[DES.create({type:'encrypt',key:k1}),DES.create({type:'decrypt',key:k2}),DES.create({type:'encrypt',key:k3})];}else{this.ciphers=[DES.create({type:'decrypt',key:k3}),DES.create({type:'encrypt',key:k2}),DES.create({type:'decrypt',key:k1})];}}function EDE(options){Cipher.call(this,options);var state=new EDEState(this.type,this.options.key);this._edeState=state;}inherits(EDE,Cipher);module.exports=EDE;EDE.create=function create(options){return new EDE(options);};EDE.prototype._update=function _update(inp,inOff,out,outOff){var state=this._edeState;state.ciphers[0]._update(inp,inOff,out,outOff);state.ciphers[1]._update(out,outOff,out,outOff);state.ciphers[2]._update(out,outOff,out,outOff);};EDE.prototype._pad=DES.prototype._pad;EDE.prototype._unpad=DES.prototype._unpad;},{"./cipher":151,"./des":152,"inherits":223,"minimalistic-assert":228}],154:[function(require,module,exports){'use strict';exports.readUInt32BE=function readUInt32BE(bytes,off){var res=bytes[0+off]<<24|bytes[1+off]<<16|bytes[2+off]<<8|bytes[3+off];return res>>>0;};exports.writeUInt32BE=function writeUInt32BE(bytes,value,off){bytes[0+off]=value>>>24;bytes[1+off]=value>>>16&0xff;bytes[2+off]=value>>>8&0xff;bytes[3+off]=value&0xff;};exports.ip=function ip(inL,inR,out,off){var outL=0;var outR=0;for(var i=6;i>=0;i-=2){for(var j=0;j<=24;j+=8){outL<<=1;outL|=inR>>>j+i&1;}for(var j=0;j<=24;j+=8){outL<<=1;outL|=inL>>>j+i&1;}}for(var i=6;i>=0;i-=2){for(var j=1;j<=25;j+=8){outR<<=1;outR|=inR>>>j+i&1;}for(var j=1;j<=25;j+=8){outR<<=1;outR|=inL>>>j+i&1;}}out[off+0]=outL>>>0;out[off+1]=outR>>>0;};exports.rip=function rip(inL,inR,out,off){var outL=0;var outR=0;for(var i=0;i<4;i++){for(var j=24;j>=0;j-=8){outL<<=1;outL|=inR>>>j+i&1;outL<<=1;outL|=inL>>>j+i&1;}}for(var i=4;i<8;i++){for(var j=24;j>=0;j-=8){outR<<=1;outR|=inR>>>j+i&1;outR<<=1;outR|=inL>>>j+i&1;}}out[off+0]=outL>>>0;out[off+1]=outR>>>0;};exports.pc1=function pc1(inL,inR,out,off){var outL=0;var outR=0;// 7, 15, 23, 31, 39, 47, 55, 63
// 6, 14, 22, 30, 39, 47, 55, 63
// 5, 13, 21, 29, 39, 47, 55, 63
// 4, 12, 20, 28
for(var i=7;i>=5;i--){for(var j=0;j<=24;j+=8){outL<<=1;outL|=inR>>j+i&1;}for(var j=0;j<=24;j+=8){outL<<=1;outL|=inL>>j+i&1;}}for(var j=0;j<=24;j+=8){outL<<=1;outL|=inR>>j+i&1;}// 1, 9, 17, 25, 33, 41, 49, 57
// 2, 10, 18, 26, 34, 42, 50, 58
// 3, 11, 19, 27, 35, 43, 51, 59
// 36, 44, 52, 60
for(var i=1;i<=3;i++){for(var j=0;j<=24;j+=8){outR<<=1;outR|=inR>>j+i&1;}for(var j=0;j<=24;j+=8){outR<<=1;outR|=inL>>j+i&1;}}for(var j=0;j<=24;j+=8){outR<<=1;outR|=inL>>j+i&1;}out[off+0]=outL>>>0;out[off+1]=outR>>>0;};exports.r28shl=function r28shl(num,shift){return num<<shift&0xfffffff|num>>>28-shift;};var pc2table=[// inL => outL
14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,// inR => outR
15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];exports.pc2=function pc2(inL,inR,out,off){var outL=0;var outR=0;var len=pc2table.length>>>1;for(var i=0;i<len;i++){outL<<=1;outL|=inL>>>pc2table[i]&0x1;}for(var i=len;i<pc2table.length;i++){outR<<=1;outR|=inR>>>pc2table[i]&0x1;}out[off+0]=outL>>>0;out[off+1]=outR>>>0;};exports.expand=function expand(r,out,off){var outL=0;var outR=0;outL=(r&1)<<5|r>>>27;for(var i=23;i>=15;i-=4){outL<<=6;outL|=r>>>i&0x3f;}for(var i=11;i>=3;i-=4){outR|=r>>>i&0x3f;outR<<=6;}outR|=(r&0x1f)<<1|r>>>31;out[off+0]=outL>>>0;out[off+1]=outR>>>0;};var sTable=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];exports.substitute=function substitute(inL,inR){var out=0;for(var i=0;i<4;i++){var b=inL>>>18-i*6&0x3f;var sb=sTable[i*0x40+b];out<<=4;out|=sb;}for(var i=0;i<4;i++){var b=inR>>>18-i*6&0x3f;var sb=sTable[4*0x40+i*0x40+b];out<<=4;out|=sb;}return out>>>0;};var permuteTable=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];exports.permute=function permute(num){var out=0;for(var i=0;i<permuteTable.length;i++){out<<=1;out|=num>>>permuteTable[i]&0x1;}return out>>>0;};exports.padSplit=function padSplit(num,size,group){var str=num.toString(2);while(str.length<size)str='0'+str;var out=[];for(var i=0;i<size;i+=group)out.push(str.slice(i,i+group));return out.join(' ');};},{}],155:[function(require,module,exports){(function(Buffer){(function(){var generatePrime=require('./lib/generatePrime');var primes=require('./lib/primes.json');var DH=require('./lib/dh');function getDiffieHellman(mod){var prime=new Buffer(primes[mod].prime,'hex');var gen=new Buffer(primes[mod].gen,'hex');return new DH(prime,gen);}var ENCODINGS={'binary':true,'hex':true,'base64':true};function createDiffieHellman(prime,enc,generator,genc){if(Buffer.isBuffer(enc)||ENCODINGS[enc]===undefined){return createDiffieHellman(prime,'binary',enc,generator);}enc=enc||'binary';genc=genc||'binary';generator=generator||new Buffer([2]);if(!Buffer.isBuffer(generator)){generator=new Buffer(generator,genc);}if(typeof prime==='number'){return new DH(generatePrime(prime,generator),generator,true);}if(!Buffer.isBuffer(prime)){prime=new Buffer(prime,enc);}return new DH(prime,generator,true);}exports.DiffieHellmanGroup=exports.createDiffieHellmanGroup=exports.getDiffieHellman=getDiffieHellman;exports.createDiffieHellman=exports.DiffieHellman=createDiffieHellman;}).call(this);}).call(this,require("buffer").Buffer);},{"./lib/dh":156,"./lib/generatePrime":157,"./lib/primes.json":158,"buffer":140}],156:[function(require,module,exports){(function(Buffer){(function(){var BN=require('bn.js');var MillerRabin=require('miller-rabin');var millerRabin=new MillerRabin();var TWENTYFOUR=new BN(24);var ELEVEN=new BN(11);var TEN=new BN(10);var THREE=new BN(3);var SEVEN=new BN(7);var primes=require('./generatePrime');var randomBytes=require('randombytes');module.exports=DH;function setPublicKey(pub,enc){enc=enc||'utf8';if(!Buffer.isBuffer(pub)){pub=new Buffer(pub,enc);}this._pub=new BN(pub);return this;}function setPrivateKey(priv,enc){enc=enc||'utf8';if(!Buffer.isBuffer(priv)){priv=new Buffer(priv,enc);}this._priv=new BN(priv);return this;}var primeCache={};function checkPrime(prime,generator){var gen=generator.toString('hex');var hex=[gen,prime.toString(16)].join('_');if(hex in primeCache){return primeCache[hex];}var error=0;if(prime.isEven()||!primes.simpleSieve||!primes.fermatTest(prime)||!millerRabin.test(prime)){//not a prime so +1
error+=1;if(gen==='02'||gen==='05'){// we'd be able to check the generator
// it would fail so +8
error+=8;}else{//we wouldn't be able to test the generator
// so +4
error+=4;}primeCache[hex]=error;return error;}if(!millerRabin.test(prime.shrn(1))){//not a safe prime
error+=2;}var rem;switch(gen){case'02':if(prime.mod(TWENTYFOUR).cmp(ELEVEN)){// unsuidable generator
error+=8;}break;case'05':rem=prime.mod(TEN);if(rem.cmp(THREE)&&rem.cmp(SEVEN)){// prime mod 10 needs to equal 3 or 7
error+=8;}break;default:error+=4;}primeCache[hex]=error;return error;}function DH(prime,generator,malleable){this.setGenerator(generator);this.__prime=new BN(prime);this._prime=BN.mont(this.__prime);this._primeLen=prime.length;this._pub=undefined;this._priv=undefined;this._primeCode=undefined;if(malleable){this.setPublicKey=setPublicKey;this.setPrivateKey=setPrivateKey;}else{this._primeCode=8;}}Object.defineProperty(DH.prototype,'verifyError',{enumerable:true,get:function(){if(typeof this._primeCode!=='number'){this._primeCode=checkPrime(this.__prime,this.__gen);}return this._primeCode;}});DH.prototype.generateKeys=function(){if(!this._priv){this._priv=new BN(randomBytes(this._primeLen));}this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed();return this.getPublicKey();};DH.prototype.computeSecret=function(other){other=new BN(other);other=other.toRed(this._prime);var secret=other.redPow(this._priv).fromRed();var out=new Buffer(secret.toArray());var prime=this.getPrime();if(out.length<prime.length){var front=new Buffer(prime.length-out.length);front.fill(0);out=Buffer.concat([front,out]);}return out;};DH.prototype.getPublicKey=function getPublicKey(enc){return formatReturnValue(this._pub,enc);};DH.prototype.getPrivateKey=function getPrivateKey(enc){return formatReturnValue(this._priv,enc);};DH.prototype.getPrime=function(enc){return formatReturnValue(this.__prime,enc);};DH.prototype.getGenerator=function(enc){return formatReturnValue(this._gen,enc);};DH.prototype.setGenerator=function(gen,enc){enc=enc||'utf8';if(!Buffer.isBuffer(gen)){gen=new Buffer(gen,enc);}this.__gen=gen;this._gen=new BN(gen);return this;};function formatReturnValue(bn,enc){var buf=new Buffer(bn.toArray());if(!enc){return buf;}else{return buf.toString(enc);}}}).call(this);}).call(this,require("buffer").Buffer);},{"./generatePrime":157,"bn.js":159,"buffer":140,"miller-rabin":226,"randombytes":251}],157:[function(require,module,exports){var randomBytes=require('randombytes');module.exports=findPrime;findPrime.simpleSieve=simpleSieve;findPrime.fermatTest=fermatTest;var BN=require('bn.js');var TWENTYFOUR=new BN(24);var MillerRabin=require('miller-rabin');var millerRabin=new MillerRabin();var ONE=new BN(1);var TWO=new BN(2);var FIVE=new BN(5);var SIXTEEN=new BN(16);var EIGHT=new BN(8);var TEN=new BN(10);var THREE=new BN(3);var SEVEN=new BN(7);var ELEVEN=new BN(11);var FOUR=new BN(4);var TWELVE=new BN(12);var primes=null;function _getPrimes(){if(primes!==null)return primes;var limit=0x100000;var res=[];res[0]=2;for(var i=1,k=3;k<limit;k+=2){var sqrt=Math.ceil(Math.sqrt(k));for(var j=0;j<i&&res[j]<=sqrt;j++)if(k%res[j]===0)break;if(i!==j&&res[j]<=sqrt)continue;res[i++]=k;}primes=res;return res;}function simpleSieve(p){var primes=_getPrimes();for(var i=0;i<primes.length;i++)if(p.modn(primes[i])===0){if(p.cmpn(primes[i])===0){return true;}else{return false;}}return true;}function fermatTest(p){var red=BN.mont(p);return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1)===0;}function findPrime(bits,gen){if(bits<16){// this is what openssl does
if(gen===2||gen===5){return new BN([0x8c,0x7b]);}else{return new BN([0x8c,0x27]);}}gen=new BN(gen);var num,n2;while(true){num=new BN(randomBytes(Math.ceil(bits/8)));while(num.bitLength()>bits){num.ishrn(1);}if(num.isEven()){num.iadd(ONE);}if(!num.testn(1)){num.iadd(TWO);}if(!gen.cmp(TWO)){while(num.mod(TWENTYFOUR).cmp(ELEVEN)){num.iadd(FOUR);}}else if(!gen.cmp(FIVE)){while(num.mod(TEN).cmp(THREE)){num.iadd(FOUR);}}n2=num.shrn(1);if(simpleSieve(n2)&&simpleSieve(num)&&fermatTest(n2)&&fermatTest(num)&&millerRabin.test(n2)&&millerRabin.test(num)){return num;}}}},{"bn.js":159,"miller-rabin":226,"randombytes":251}],158:[function(require,module,exports){module.exports={"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}};},{}],159:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments);},{"buffer":96,"dup":2}],160:[function(require,module,exports){/*! @license DOMPurify 2.3.0 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.0/LICENSE */(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=global||self,global.DOMPurify=factory());})(this,function(){'use strict';function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var hasOwnProperty=Object.hasOwnProperty,setPrototypeOf=Object.setPrototypeOf,isFrozen=Object.isFrozen,getPrototypeOf=Object.getPrototypeOf,getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var freeze=Object.freeze,seal=Object.seal,create=Object.create;// eslint-disable-line import/no-mutable-exports
var _ref=typeof Reflect!=='undefined'&&Reflect,apply=_ref.apply,construct=_ref.construct;if(!apply){apply=function apply(fun,thisValue,args){return fun.apply(thisValue,args);};}if(!freeze){freeze=function freeze(x){return x;};}if(!seal){seal=function seal(x){return x;};}if(!construct){construct=function construct(Func,args){return new(Function.prototype.bind.apply(Func,[null].concat(_toConsumableArray(args))))();};}var arrayForEach=unapply(Array.prototype.forEach);var arrayPop=unapply(Array.prototype.pop);var arrayPush=unapply(Array.prototype.push);var stringToLowerCase=unapply(String.prototype.toLowerCase);var stringMatch=unapply(String.prototype.match);var stringReplace=unapply(String.prototype.replace);var stringIndexOf=unapply(String.prototype.indexOf);var stringTrim=unapply(String.prototype.trim);var regExpTest=unapply(RegExp.prototype.test);var typeErrorCreate=unconstruct(TypeError);function unapply(func){return function(thisArg){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}return apply(func,thisArg,args);};}function unconstruct(func){return function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return construct(func,args);};}/* Add properties to a lookup table */function addToSet(set,array){if(setPrototypeOf){// Make 'in' and truthy checks like Boolean(set.constructor)
// independent of any properties defined on Object.prototype.
// Prevent prototype setters from intercepting set as a this value.
setPrototypeOf(set,null);}var l=array.length;while(l--){var element=array[l];if(typeof element==='string'){var lcElement=stringToLowerCase(element);if(lcElement!==element){// Config presets (e.g. tags.js, attrs.js) are immutable.
if(!isFrozen(array)){array[l]=lcElement;}element=lcElement;}}set[element]=true;}return set;}/* Shallow clone an object */function clone(object){var newObject=create(null);var property=void 0;for(property in object){if(apply(hasOwnProperty,object,[property])){newObject[property]=object[property];}}return newObject;}/* IE10 doesn't support __lookupGetter__ so lets'
   * simulate it. It also automatically checks
   * if the prop is function or getter and behaves
   * accordingly. */function lookupGetter(object,prop){while(object!==null){var desc=getOwnPropertyDescriptor(object,prop);if(desc){if(desc.get){return unapply(desc.get);}if(typeof desc.value==='function'){return unapply(desc.value);}}object=getPrototypeOf(object);}function fallbackValue(element){console.warn('fallback value for',element);return null;}return fallbackValue;}var html=freeze(['a','abbr','acronym','address','area','article','aside','audio','b','bdi','bdo','big','blink','blockquote','body','br','button','canvas','caption','center','cite','code','col','colgroup','content','data','datalist','dd','decorator','del','details','dfn','dialog','dir','div','dl','dt','element','em','fieldset','figcaption','figure','font','footer','form','h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','i','img','input','ins','kbd','label','legend','li','main','map','mark','marquee','menu','menuitem','meter','nav','nobr','ol','optgroup','option','output','p','picture','pre','progress','q','rp','rt','ruby','s','samp','section','select','shadow','small','source','spacer','span','strike','strong','style','sub','summary','sup','table','tbody','td','template','textarea','tfoot','th','thead','time','tr','track','tt','u','ul','var','video','wbr']);// SVG
var svg=freeze(['svg','a','altglyph','altglyphdef','altglyphitem','animatecolor','animatemotion','animatetransform','circle','clippath','defs','desc','ellipse','filter','font','g','glyph','glyphref','hkern','image','line','lineargradient','marker','mask','metadata','mpath','path','pattern','polygon','polyline','radialgradient','rect','stop','style','switch','symbol','text','textpath','title','tref','tspan','view','vkern']);var svgFilters=freeze(['feBlend','feColorMatrix','feComponentTransfer','feComposite','feConvolveMatrix','feDiffuseLighting','feDisplacementMap','feDistantLight','feFlood','feFuncA','feFuncB','feFuncG','feFuncR','feGaussianBlur','feMerge','feMergeNode','feMorphology','feOffset','fePointLight','feSpecularLighting','feSpotLight','feTile','feTurbulence']);// List of SVG elements that are disallowed by default.
// We still need to know them so that we can do namespace
// checks properly in case one wants to add them to
// allow-list.
var svgDisallowed=freeze(['animate','color-profile','cursor','discard','fedropshadow','feimage','font-face','font-face-format','font-face-name','font-face-src','font-face-uri','foreignobject','hatch','hatchpath','mesh','meshgradient','meshpatch','meshrow','missing-glyph','script','set','solidcolor','unknown','use']);var mathMl=freeze(['math','menclose','merror','mfenced','mfrac','mglyph','mi','mlabeledtr','mmultiscripts','mn','mo','mover','mpadded','mphantom','mroot','mrow','ms','mspace','msqrt','mstyle','msub','msup','msubsup','mtable','mtd','mtext','mtr','munder','munderover']);// Similarly to SVG, we want to know all MathML elements,
// even those that we disallow by default.
var mathMlDisallowed=freeze(['maction','maligngroup','malignmark','mlongdiv','mscarries','mscarry','msgroup','mstack','msline','msrow','semantics','annotation','annotation-xml','mprescripts','none']);var text=freeze(['#text']);var html$1=freeze(['accept','action','align','alt','autocapitalize','autocomplete','autopictureinpicture','autoplay','background','bgcolor','border','capture','cellpadding','cellspacing','checked','cite','class','clear','color','cols','colspan','controls','controlslist','coords','crossorigin','datetime','decoding','default','dir','disabled','disablepictureinpicture','disableremoteplayback','download','draggable','enctype','enterkeyhint','face','for','headers','height','hidden','high','href','hreflang','id','inputmode','integrity','ismap','kind','label','lang','list','loading','loop','low','max','maxlength','media','method','min','minlength','multiple','muted','name','noshade','novalidate','nowrap','open','optimum','pattern','placeholder','playsinline','poster','preload','pubdate','radiogroup','readonly','rel','required','rev','reversed','role','rows','rowspan','spellcheck','scope','selected','shape','size','sizes','span','srclang','start','src','srcset','step','style','summary','tabindex','title','translate','type','usemap','valign','value','width','xmlns','slot']);var svg$1=freeze(['accent-height','accumulate','additive','alignment-baseline','ascent','attributename','attributetype','azimuth','basefrequency','baseline-shift','begin','bias','by','class','clip','clippathunits','clip-path','clip-rule','color','color-interpolation','color-interpolation-filters','color-profile','color-rendering','cx','cy','d','dx','dy','diffuseconstant','direction','display','divisor','dur','edgemode','elevation','end','fill','fill-opacity','fill-rule','filter','filterunits','flood-color','flood-opacity','font-family','font-size','font-size-adjust','font-stretch','font-style','font-variant','font-weight','fx','fy','g1','g2','glyph-name','glyphref','gradientunits','gradienttransform','height','href','id','image-rendering','in','in2','k','k1','k2','k3','k4','kerning','keypoints','keysplines','keytimes','lang','lengthadjust','letter-spacing','kernelmatrix','kernelunitlength','lighting-color','local','marker-end','marker-mid','marker-start','markerheight','markerunits','markerwidth','maskcontentunits','maskunits','max','mask','media','method','mode','min','name','numoctaves','offset','operator','opacity','order','orient','orientation','origin','overflow','paint-order','path','pathlength','patterncontentunits','patterntransform','patternunits','points','preservealpha','preserveaspectratio','primitiveunits','r','rx','ry','radius','refx','refy','repeatcount','repeatdur','restart','result','rotate','scale','seed','shape-rendering','specularconstant','specularexponent','spreadmethod','startoffset','stddeviation','stitchtiles','stop-color','stop-opacity','stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke','stroke-width','style','surfacescale','systemlanguage','tabindex','targetx','targety','transform','text-anchor','text-decoration','text-rendering','textlength','type','u1','u2','unicode','values','viewbox','visibility','version','vert-adv-y','vert-origin-x','vert-origin-y','width','word-spacing','wrap','writing-mode','xchannelselector','ychannelselector','x','x1','x2','xmlns','y','y1','y2','z','zoomandpan']);var mathMl$1=freeze(['accent','accentunder','align','bevelled','close','columnsalign','columnlines','columnspan','denomalign','depth','dir','display','displaystyle','encoding','fence','frame','height','href','id','largeop','length','linethickness','lspace','lquote','mathbackground','mathcolor','mathsize','mathvariant','maxsize','minsize','movablelimits','notation','numalign','open','rowalign','rowlines','rowspacing','rowspan','rspace','rquote','scriptlevel','scriptminsize','scriptsizemultiplier','selection','separator','separators','stretchy','subscriptshift','supscriptshift','symmetric','voffset','width','xmlns']);var xml=freeze(['xlink:href','xml:id','xlink:title','xml:space','xmlns:xlink']);// eslint-disable-next-line unicorn/better-regex
var MUSTACHE_EXPR=seal(/\{\{[\s\S]*|[\s\S]*\}\}/gm);// Specify template detection regex for SAFE_FOR_TEMPLATES mode
var ERB_EXPR=seal(/<%[\s\S]*|[\s\S]*%>/gm);var DATA_ATTR=seal(/^data-[\-\w.\u00B7-\uFFFF]/);// eslint-disable-line no-useless-escape
var ARIA_ATTR=seal(/^aria-[\-\w]+$/);// eslint-disable-line no-useless-escape
var IS_ALLOWED_URI=seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i// eslint-disable-line no-useless-escape
);var IS_SCRIPT_OR_DATA=seal(/^(?:\w+script|data):/i);var ATTR_WHITESPACE=seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g// eslint-disable-line no-control-regex
);var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};function _toConsumableArray$1(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var getGlobal=function getGlobal(){return typeof window==='undefined'?null:window;};/**
   * Creates a no-op policy for internal use only.
   * Don't export this function outside this module!
   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.
   * @param {Document} document The document object (to determine policy name suffix)
   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types
   * are not supported).
   */var _createTrustedTypesPolicy=function _createTrustedTypesPolicy(trustedTypes,document){if((typeof trustedTypes==='undefined'?'undefined':_typeof(trustedTypes))!=='object'||typeof trustedTypes.createPolicy!=='function'){return null;}// Allow the callers to control the unique policy name
// by adding a data-tt-policy-suffix to the script element with the DOMPurify.
// Policy creation with duplicate names throws in Trusted Types.
var suffix=null;var ATTR_NAME='data-tt-policy-suffix';if(document.currentScript&&document.currentScript.hasAttribute(ATTR_NAME)){suffix=document.currentScript.getAttribute(ATTR_NAME);}var policyName='dompurify'+(suffix?'#'+suffix:'');try{return trustedTypes.createPolicy(policyName,{createHTML:function createHTML(html$$1){return html$$1;}});}catch(_){// Policy creation failed (most likely another DOMPurify script has
// already run). Skip creating the policy, as this will only cause errors
// if TT are enforced.
console.warn('TrustedTypes policy '+policyName+' could not be created.');return null;}};function createDOMPurify(){var window=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getGlobal();var DOMPurify=function DOMPurify(root){return createDOMPurify(root);};/**
     * Version label, exposed for easier checks
     * if DOMPurify is up to date or not
     */DOMPurify.version='2.3.0';/**
     * Array of elements that DOMPurify removed during sanitation.
     * Empty if nothing was removed.
     */DOMPurify.removed=[];if(!window||!window.document||window.document.nodeType!==9){// Not running in a browser, provide a factory function
// so that you can pass your own Window
DOMPurify.isSupported=false;return DOMPurify;}var originalDocument=window.document;var document=window.document;var DocumentFragment=window.DocumentFragment,HTMLTemplateElement=window.HTMLTemplateElement,Node=window.Node,Element=window.Element,NodeFilter=window.NodeFilter,_window$NamedNodeMap=window.NamedNodeMap,NamedNodeMap=_window$NamedNodeMap===undefined?window.NamedNodeMap||window.MozNamedAttrMap:_window$NamedNodeMap,Text=window.Text,Comment=window.Comment,DOMParser=window.DOMParser,trustedTypes=window.trustedTypes;var ElementPrototype=Element.prototype;var cloneNode=lookupGetter(ElementPrototype,'cloneNode');var getNextSibling=lookupGetter(ElementPrototype,'nextSibling');var getChildNodes=lookupGetter(ElementPrototype,'childNodes');var getParentNode=lookupGetter(ElementPrototype,'parentNode');// As per issue #47, the web-components registry is inherited by a
// new document created via createHTMLDocument. As per the spec
// (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
// a new empty registry is used when creating a template contents owner
// document, so we use that as our parent document to ensure nothing
// is inherited.
if(typeof HTMLTemplateElement==='function'){var template=document.createElement('template');if(template.content&&template.content.ownerDocument){document=template.content.ownerDocument;}}var trustedTypesPolicy=_createTrustedTypesPolicy(trustedTypes,originalDocument);var emptyHTML=trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(''):'';var _document=document,implementation=_document.implementation,createNodeIterator=_document.createNodeIterator,createDocumentFragment=_document.createDocumentFragment,getElementsByTagName=_document.getElementsByTagName;var importNode=originalDocument.importNode;var documentMode={};try{documentMode=clone(document).documentMode?document.documentMode:{};}catch(_){}var hooks={};/**
     * Expose whether this browser supports running the full DOMPurify.
     */DOMPurify.isSupported=typeof getParentNode==='function'&&implementation&&typeof implementation.createHTMLDocument!=='undefined'&&documentMode!==9;var MUSTACHE_EXPR$$1=MUSTACHE_EXPR,ERB_EXPR$$1=ERB_EXPR,DATA_ATTR$$1=DATA_ATTR,ARIA_ATTR$$1=ARIA_ATTR,IS_SCRIPT_OR_DATA$$1=IS_SCRIPT_OR_DATA,ATTR_WHITESPACE$$1=ATTR_WHITESPACE;var IS_ALLOWED_URI$$1=IS_ALLOWED_URI;/**
     * We consider the elements and attributes below to be safe. Ideally
     * don't add any new ones but feel free to remove unwanted ones.
     *//* allowed element names */var ALLOWED_TAGS=null;var DEFAULT_ALLOWED_TAGS=addToSet({},[].concat(_toConsumableArray$1(html),_toConsumableArray$1(svg),_toConsumableArray$1(svgFilters),_toConsumableArray$1(mathMl),_toConsumableArray$1(text)));/* Allowed attribute names */var ALLOWED_ATTR=null;var DEFAULT_ALLOWED_ATTR=addToSet({},[].concat(_toConsumableArray$1(html$1),_toConsumableArray$1(svg$1),_toConsumableArray$1(mathMl$1),_toConsumableArray$1(xml)));/* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */var FORBID_TAGS=null;/* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */var FORBID_ATTR=null;/* Decide if ARIA attributes are okay */var ALLOW_ARIA_ATTR=true;/* Decide if custom data attributes are okay */var ALLOW_DATA_ATTR=true;/* Decide if unknown protocols are okay */var ALLOW_UNKNOWN_PROTOCOLS=false;/* Output should be safe for common template engines.
     * This means, DOMPurify removes data attributes, mustaches and ERB
     */var SAFE_FOR_TEMPLATES=false;/* Decide if document with <html>... should be returned */var WHOLE_DOCUMENT=false;/* Track whether config is already set on this instance of DOMPurify. */var SET_CONFIG=false;/* Decide if all elements (e.g. style, script) must be children of
     * document.body. By default, browsers might move them to document.head */var FORCE_BODY=false;/* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html
     * string (or a TrustedHTML object if Trusted Types are supported).
     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
     */var RETURN_DOM=false;/* Decide if a DOM `DocumentFragment` should be returned, instead of a html
     * string  (or a TrustedHTML object if Trusted Types are supported) */var RETURN_DOM_FRAGMENT=false;/* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM
     * `Node` is imported into the current `Document`. If this flag is not enabled the
     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by
     * DOMPurify.
     *
     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`
     * might cause XSS from attacks hidden in closed shadowroots in case the browser
     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/
     */var RETURN_DOM_IMPORT=true;/* Try to return a Trusted Type object instead of a string, return a string in
     * case Trusted Types are not supported  */var RETURN_TRUSTED_TYPE=false;/* Output should be free from DOM clobbering attacks? */var SANITIZE_DOM=true;/* Keep element content when removing element? */var KEEP_CONTENT=true;/* If a `Node` is passed to sanitize(), then performs sanitization in-place instead
     * of importing it into a new Document and returning a sanitized copy */var IN_PLACE=false;/* Allow usage of profiles like html, svg and mathMl */var USE_PROFILES={};/* Tags to ignore content of when KEEP_CONTENT is true */var FORBID_CONTENTS=addToSet({},['annotation-xml','audio','colgroup','desc','foreignobject','head','iframe','math','mi','mn','mo','ms','mtext','noembed','noframes','noscript','plaintext','script','style','svg','template','thead','title','video','xmp']);/* Tags that are safe for data: URIs */var DATA_URI_TAGS=null;var DEFAULT_DATA_URI_TAGS=addToSet({},['audio','video','img','source','image','track']);/* Attributes safe for values like "javascript:" */var URI_SAFE_ATTRIBUTES=null;var DEFAULT_URI_SAFE_ATTRIBUTES=addToSet({},['alt','class','for','id','label','name','pattern','placeholder','summary','title','value','style','xmlns']);var MATHML_NAMESPACE='http://www.w3.org/1998/Math/MathML';var SVG_NAMESPACE='http://www.w3.org/2000/svg';var HTML_NAMESPACE='http://www.w3.org/1999/xhtml';/* Document namespace */var NAMESPACE=HTML_NAMESPACE;var IS_EMPTY_INPUT=false;/* Keep a reference to config to pass to hooks */var CONFIG=null;/* Ideally, do not touch anything below this line *//* ______________________________________________ */var formElement=document.createElement('form');/**
     * _parseConfig
     *
     * @param  {Object} cfg optional config literal
     */// eslint-disable-next-line complexity
var _parseConfig=function _parseConfig(cfg){if(CONFIG&&CONFIG===cfg){return;}/* Shield configuration object from tampering */if(!cfg||(typeof cfg==='undefined'?'undefined':_typeof(cfg))!=='object'){cfg={};}/* Shield configuration object from prototype pollution */cfg=clone(cfg);/* Set configuration parameters */ALLOWED_TAGS='ALLOWED_TAGS'in cfg?addToSet({},cfg.ALLOWED_TAGS):DEFAULT_ALLOWED_TAGS;ALLOWED_ATTR='ALLOWED_ATTR'in cfg?addToSet({},cfg.ALLOWED_ATTR):DEFAULT_ALLOWED_ATTR;URI_SAFE_ATTRIBUTES='ADD_URI_SAFE_ATTR'in cfg?addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),cfg.ADD_URI_SAFE_ATTR):DEFAULT_URI_SAFE_ATTRIBUTES;DATA_URI_TAGS='ADD_DATA_URI_TAGS'in cfg?addToSet(clone(DEFAULT_DATA_URI_TAGS),cfg.ADD_DATA_URI_TAGS):DEFAULT_DATA_URI_TAGS;FORBID_TAGS='FORBID_TAGS'in cfg?addToSet({},cfg.FORBID_TAGS):{};FORBID_ATTR='FORBID_ATTR'in cfg?addToSet({},cfg.FORBID_ATTR):{};USE_PROFILES='USE_PROFILES'in cfg?cfg.USE_PROFILES:false;ALLOW_ARIA_ATTR=cfg.ALLOW_ARIA_ATTR!==false;// Default true
ALLOW_DATA_ATTR=cfg.ALLOW_DATA_ATTR!==false;// Default true
ALLOW_UNKNOWN_PROTOCOLS=cfg.ALLOW_UNKNOWN_PROTOCOLS||false;// Default false
SAFE_FOR_TEMPLATES=cfg.SAFE_FOR_TEMPLATES||false;// Default false
WHOLE_DOCUMENT=cfg.WHOLE_DOCUMENT||false;// Default false
RETURN_DOM=cfg.RETURN_DOM||false;// Default false
RETURN_DOM_FRAGMENT=cfg.RETURN_DOM_FRAGMENT||false;// Default false
RETURN_DOM_IMPORT=cfg.RETURN_DOM_IMPORT!==false;// Default true
RETURN_TRUSTED_TYPE=cfg.RETURN_TRUSTED_TYPE||false;// Default false
FORCE_BODY=cfg.FORCE_BODY||false;// Default false
SANITIZE_DOM=cfg.SANITIZE_DOM!==false;// Default true
KEEP_CONTENT=cfg.KEEP_CONTENT!==false;// Default true
IN_PLACE=cfg.IN_PLACE||false;// Default false
IS_ALLOWED_URI$$1=cfg.ALLOWED_URI_REGEXP||IS_ALLOWED_URI$$1;NAMESPACE=cfg.NAMESPACE||HTML_NAMESPACE;if(SAFE_FOR_TEMPLATES){ALLOW_DATA_ATTR=false;}if(RETURN_DOM_FRAGMENT){RETURN_DOM=true;}/* Parse profile info */if(USE_PROFILES){ALLOWED_TAGS=addToSet({},[].concat(_toConsumableArray$1(text)));ALLOWED_ATTR=[];if(USE_PROFILES.html===true){addToSet(ALLOWED_TAGS,html);addToSet(ALLOWED_ATTR,html$1);}if(USE_PROFILES.svg===true){addToSet(ALLOWED_TAGS,svg);addToSet(ALLOWED_ATTR,svg$1);addToSet(ALLOWED_ATTR,xml);}if(USE_PROFILES.svgFilters===true){addToSet(ALLOWED_TAGS,svgFilters);addToSet(ALLOWED_ATTR,svg$1);addToSet(ALLOWED_ATTR,xml);}if(USE_PROFILES.mathMl===true){addToSet(ALLOWED_TAGS,mathMl);addToSet(ALLOWED_ATTR,mathMl$1);addToSet(ALLOWED_ATTR,xml);}}/* Merge configuration parameters */if(cfg.ADD_TAGS){if(ALLOWED_TAGS===DEFAULT_ALLOWED_TAGS){ALLOWED_TAGS=clone(ALLOWED_TAGS);}addToSet(ALLOWED_TAGS,cfg.ADD_TAGS);}if(cfg.ADD_ATTR){if(ALLOWED_ATTR===DEFAULT_ALLOWED_ATTR){ALLOWED_ATTR=clone(ALLOWED_ATTR);}addToSet(ALLOWED_ATTR,cfg.ADD_ATTR);}if(cfg.ADD_URI_SAFE_ATTR){addToSet(URI_SAFE_ATTRIBUTES,cfg.ADD_URI_SAFE_ATTR);}/* Add #text in case KEEP_CONTENT is set to true */if(KEEP_CONTENT){ALLOWED_TAGS['#text']=true;}/* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */if(WHOLE_DOCUMENT){addToSet(ALLOWED_TAGS,['html','head','body']);}/* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */if(ALLOWED_TAGS.table){addToSet(ALLOWED_TAGS,['tbody']);delete FORBID_TAGS.tbody;}// Prevent further manipulation of configuration.
// Not available in IE8, Safari 5, etc.
if(freeze){freeze(cfg);}CONFIG=cfg;};var MATHML_TEXT_INTEGRATION_POINTS=addToSet({},['mi','mo','mn','ms','mtext']);var HTML_INTEGRATION_POINTS=addToSet({},['foreignobject','desc','title','annotation-xml']);/* Keep track of all possible SVG and MathML tags
     * so that we can perform the namespace checks
     * correctly. */var ALL_SVG_TAGS=addToSet({},svg);addToSet(ALL_SVG_TAGS,svgFilters);addToSet(ALL_SVG_TAGS,svgDisallowed);var ALL_MATHML_TAGS=addToSet({},mathMl);addToSet(ALL_MATHML_TAGS,mathMlDisallowed);/**
     *
     *
     * @param  {Element} element a DOM element whose namespace is being checked
     * @returns {boolean} Return false if the element has a
     *  namespace that a spec-compliant parser would never
     *  return. Return true otherwise.
     */var _checkValidNamespace=function _checkValidNamespace(element){var parent=getParentNode(element);// In JSDOM, if we're inside shadow DOM, then parentNode
// can be null. We just simulate parent in this case.
if(!parent||!parent.tagName){parent={namespaceURI:HTML_NAMESPACE,tagName:'template'};}var tagName=stringToLowerCase(element.tagName);var parentTagName=stringToLowerCase(parent.tagName);if(element.namespaceURI===SVG_NAMESPACE){// The only way to switch from HTML namespace to SVG
// is via <svg>. If it happens via any other tag, then
// it should be killed.
if(parent.namespaceURI===HTML_NAMESPACE){return tagName==='svg';}// The only way to switch from MathML to SVG is via
// svg if parent is either <annotation-xml> or MathML
// text integration points.
if(parent.namespaceURI===MATHML_NAMESPACE){return tagName==='svg'&&(parentTagName==='annotation-xml'||MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);}// We only allow elements that are defined in SVG
// spec. All others are disallowed in SVG namespace.
return Boolean(ALL_SVG_TAGS[tagName]);}if(element.namespaceURI===MATHML_NAMESPACE){// The only way to switch from HTML namespace to MathML
// is via <math>. If it happens via any other tag, then
// it should be killed.
if(parent.namespaceURI===HTML_NAMESPACE){return tagName==='math';}// The only way to switch from SVG to MathML is via
// <math> and HTML integration points
if(parent.namespaceURI===SVG_NAMESPACE){return tagName==='math'&&HTML_INTEGRATION_POINTS[parentTagName];}// We only allow elements that are defined in MathML
// spec. All others are disallowed in MathML namespace.
return Boolean(ALL_MATHML_TAGS[tagName]);}if(element.namespaceURI===HTML_NAMESPACE){// The only way to switch from SVG to HTML is via
// HTML integration points, and from MathML to HTML
// is via MathML text integration points
if(parent.namespaceURI===SVG_NAMESPACE&&!HTML_INTEGRATION_POINTS[parentTagName]){return false;}if(parent.namespaceURI===MATHML_NAMESPACE&&!MATHML_TEXT_INTEGRATION_POINTS[parentTagName]){return false;}// Certain elements are allowed in both SVG and HTML
// namespace. We need to specify them explicitly
// so that they don't get erronously deleted from
// HTML namespace.
var commonSvgAndHTMLElements=addToSet({},['title','style','font','a','script']);// We disallow tags that are specific for MathML
// or SVG and should never appear in HTML namespace
return!ALL_MATHML_TAGS[tagName]&&(commonSvgAndHTMLElements[tagName]||!ALL_SVG_TAGS[tagName]);}// The code should never reach this place (this means
// that the element somehow got namespace that is not
// HTML, SVG or MathML). Return false just in case.
return false;};/**
     * _forceRemove
     *
     * @param  {Node} node a DOM node
     */var _forceRemove=function _forceRemove(node){arrayPush(DOMPurify.removed,{element:node});try{// eslint-disable-next-line unicorn/prefer-dom-node-remove
node.parentNode.removeChild(node);}catch(_){try{node.outerHTML=emptyHTML;}catch(_){node.remove();}}};/**
     * _removeAttribute
     *
     * @param  {String} name an Attribute name
     * @param  {Node} node a DOM node
     */var _removeAttribute=function _removeAttribute(name,node){try{arrayPush(DOMPurify.removed,{attribute:node.getAttributeNode(name),from:node});}catch(_){arrayPush(DOMPurify.removed,{attribute:null,from:node});}node.removeAttribute(name);// We void attribute values for unremovable "is"" attributes
if(name==='is'&&!ALLOWED_ATTR[name]){if(RETURN_DOM||RETURN_DOM_FRAGMENT){try{_forceRemove(node);}catch(_){}}else{try{node.setAttribute(name,'');}catch(_){}}}};/**
     * _initDocument
     *
     * @param  {String} dirty a string of dirty markup
     * @return {Document} a DOM, filled with the dirty markup
     */var _initDocument=function _initDocument(dirty){/* Create a HTML document */var doc=void 0;var leadingWhitespace=void 0;if(FORCE_BODY){dirty='<remove></remove>'+dirty;}else{/* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */var matches=stringMatch(dirty,/^[\r\n\t ]+/);leadingWhitespace=matches&&matches[0];}var dirtyPayload=trustedTypesPolicy?trustedTypesPolicy.createHTML(dirty):dirty;/*
       * Use the DOMParser API by default, fallback later if needs be
       * DOMParser not work for svg when has multiple root element.
       */if(NAMESPACE===HTML_NAMESPACE){try{doc=new DOMParser().parseFromString(dirtyPayload,'text/html');}catch(_){}}/* Use createHTMLDocument in case DOMParser is not available */if(!doc||!doc.documentElement){doc=implementation.createDocument(NAMESPACE,'template',null);try{doc.documentElement.innerHTML=IS_EMPTY_INPUT?'':dirtyPayload;}catch(_){// Syntax error if dirtyPayload is invalid xml
}}var body=doc.body||doc.documentElement;if(dirty&&leadingWhitespace){body.insertBefore(document.createTextNode(leadingWhitespace),body.childNodes[0]||null);}/* Work on whole document or just its body */if(NAMESPACE===HTML_NAMESPACE){return getElementsByTagName.call(doc,WHOLE_DOCUMENT?'html':'body')[0];}return WHOLE_DOCUMENT?doc.documentElement:body;};/**
     * _createIterator
     *
     * @param  {Document} root document/fragment to create iterator for
     * @return {Iterator} iterator instance
     */var _createIterator=function _createIterator(root){return createNodeIterator.call(root.ownerDocument||root,root,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_COMMENT|NodeFilter.SHOW_TEXT,null,false);};/**
     * _isClobbered
     *
     * @param  {Node} elm element to check for clobbering attacks
     * @return {Boolean} true if clobbered, false if safe
     */var _isClobbered=function _isClobbered(elm){if(elm instanceof Text||elm instanceof Comment){return false;}if(typeof elm.nodeName!=='string'||typeof elm.textContent!=='string'||typeof elm.removeChild!=='function'||!(elm.attributes instanceof NamedNodeMap)||typeof elm.removeAttribute!=='function'||typeof elm.setAttribute!=='function'||typeof elm.namespaceURI!=='string'||typeof elm.insertBefore!=='function'){return true;}return false;};/**
     * _isNode
     *
     * @param  {Node} obj object to check whether it's a DOM node
     * @return {Boolean} true is object is a DOM node
     */var _isNode=function _isNode(object){return(typeof Node==='undefined'?'undefined':_typeof(Node))==='object'?object instanceof Node:object&&(typeof object==='undefined'?'undefined':_typeof(object))==='object'&&typeof object.nodeType==='number'&&typeof object.nodeName==='string';};/**
     * _executeHook
     * Execute user configurable hooks
     *
     * @param  {String} entryPoint  Name of the hook's entry point
     * @param  {Node} currentNode node to work on with the hook
     * @param  {Object} data additional hook parameters
     */var _executeHook=function _executeHook(entryPoint,currentNode,data){if(!hooks[entryPoint]){return;}arrayForEach(hooks[entryPoint],function(hook){hook.call(DOMPurify,currentNode,data,CONFIG);});};/**
     * _sanitizeElements
     *
     * @protect nodeName
     * @protect textContent
     * @protect removeChild
     *
     * @param   {Node} currentNode to check for permission to exist
     * @return  {Boolean} true if node was killed, false if left alive
     */var _sanitizeElements=function _sanitizeElements(currentNode){var content=void 0;/* Execute a hook if present */_executeHook('beforeSanitizeElements',currentNode,null);/* Check if element is clobbered or can clobber */if(_isClobbered(currentNode)){_forceRemove(currentNode);return true;}/* Check if tagname contains Unicode */if(stringMatch(currentNode.nodeName,/[\u0080-\uFFFF]/)){_forceRemove(currentNode);return true;}/* Now let's check the element's type and name */var tagName=stringToLowerCase(currentNode.nodeName);/* Execute a hook if present */_executeHook('uponSanitizeElement',currentNode,{tagName:tagName,allowedTags:ALLOWED_TAGS});/* Detect mXSS attempts abusing namespace confusion */if(!_isNode(currentNode.firstElementChild)&&(!_isNode(currentNode.content)||!_isNode(currentNode.content.firstElementChild))&&regExpTest(/<[/\w]/g,currentNode.innerHTML)&&regExpTest(/<[/\w]/g,currentNode.textContent)){_forceRemove(currentNode);return true;}/* Remove element if anything forbids its presence */if(!ALLOWED_TAGS[tagName]||FORBID_TAGS[tagName]){/* Keep content except for bad-listed elements */if(KEEP_CONTENT&&!FORBID_CONTENTS[tagName]){var parentNode=getParentNode(currentNode)||currentNode.parentNode;var childNodes=getChildNodes(currentNode)||currentNode.childNodes;if(childNodes&&parentNode){var childCount=childNodes.length;for(var i=childCount-1;i>=0;--i){parentNode.insertBefore(cloneNode(childNodes[i],true),getNextSibling(currentNode));}}}_forceRemove(currentNode);return true;}/* Check whether element has a valid namespace */if(currentNode instanceof Element&&!_checkValidNamespace(currentNode)){_forceRemove(currentNode);return true;}if((tagName==='noscript'||tagName==='noembed')&&regExpTest(/<\/no(script|embed)/i,currentNode.innerHTML)){_forceRemove(currentNode);return true;}/* Sanitize element content to be template-safe */if(SAFE_FOR_TEMPLATES&&currentNode.nodeType===3){/* Get the element's text content */content=currentNode.textContent;content=stringReplace(content,MUSTACHE_EXPR$$1,' ');content=stringReplace(content,ERB_EXPR$$1,' ');if(currentNode.textContent!==content){arrayPush(DOMPurify.removed,{element:currentNode.cloneNode()});currentNode.textContent=content;}}/* Execute a hook if present */_executeHook('afterSanitizeElements',currentNode,null);return false;};/**
     * _isValidAttribute
     *
     * @param  {string} lcTag Lowercase tag name of containing element.
     * @param  {string} lcName Lowercase attribute name.
     * @param  {string} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid, otherwise false.
     */// eslint-disable-next-line complexity
var _isValidAttribute=function _isValidAttribute(lcTag,lcName,value){/* Make sure attribute cannot clobber */if(SANITIZE_DOM&&(lcName==='id'||lcName==='name')&&(value in document||value in formElement)){return false;}/* Allow valid data-* attributes: At least one character after "-"
          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
          We don't need to check the value; it's always URI safe. */if(ALLOW_DATA_ATTR&&!FORBID_ATTR[lcName]&&regExpTest(DATA_ATTR$$1,lcName));else if(ALLOW_ARIA_ATTR&&regExpTest(ARIA_ATTR$$1,lcName));else if(!ALLOWED_ATTR[lcName]||FORBID_ATTR[lcName]){return false;/* Check value is safe. First, is attr inert? If so, is safe */}else if(URI_SAFE_ATTRIBUTES[lcName]);else if(regExpTest(IS_ALLOWED_URI$$1,stringReplace(value,ATTR_WHITESPACE$$1,'')));else if((lcName==='src'||lcName==='xlink:href'||lcName==='href')&&lcTag!=='script'&&stringIndexOf(value,'data:')===0&&DATA_URI_TAGS[lcTag]);else if(ALLOW_UNKNOWN_PROTOCOLS&&!regExpTest(IS_SCRIPT_OR_DATA$$1,stringReplace(value,ATTR_WHITESPACE$$1,'')));else if(!value);else{return false;}return true;};/**
     * _sanitizeAttributes
     *
     * @protect attributes
     * @protect nodeName
     * @protect removeAttribute
     * @protect setAttribute
     *
     * @param  {Node} currentNode to sanitize
     */var _sanitizeAttributes=function _sanitizeAttributes(currentNode){var attr=void 0;var value=void 0;var lcName=void 0;var l=void 0;/* Execute a hook if present */_executeHook('beforeSanitizeAttributes',currentNode,null);var attributes=currentNode.attributes;/* Check if we have attributes; if not we might have a text node */if(!attributes){return;}var hookEvent={attrName:'',attrValue:'',keepAttr:true,allowedAttributes:ALLOWED_ATTR};l=attributes.length;/* Go backwards over all attributes; safely remove bad ones */while(l--){attr=attributes[l];var _attr=attr,name=_attr.name,namespaceURI=_attr.namespaceURI;value=stringTrim(attr.value);lcName=stringToLowerCase(name);/* Execute a hook if present */hookEvent.attrName=lcName;hookEvent.attrValue=value;hookEvent.keepAttr=true;hookEvent.forceKeepAttr=undefined;// Allows developers to see this is a property they can set
_executeHook('uponSanitizeAttribute',currentNode,hookEvent);value=hookEvent.attrValue;/* Did the hooks approve of the attribute? */if(hookEvent.forceKeepAttr){continue;}/* Remove attribute */_removeAttribute(name,currentNode);/* Did the hooks approve of the attribute? */if(!hookEvent.keepAttr){continue;}/* Work around a security issue in jQuery 3.0 */if(regExpTest(/\/>/i,value)){_removeAttribute(name,currentNode);continue;}/* Sanitize attribute content to be template-safe */if(SAFE_FOR_TEMPLATES){value=stringReplace(value,MUSTACHE_EXPR$$1,' ');value=stringReplace(value,ERB_EXPR$$1,' ');}/* Is `value` valid for this attribute? */var lcTag=currentNode.nodeName.toLowerCase();if(!_isValidAttribute(lcTag,lcName,value)){continue;}/* Handle invalid data-* attribute set by try-catching it */try{if(namespaceURI){currentNode.setAttributeNS(namespaceURI,name,value);}else{/* Fallback to setAttribute() for browser-unrecognized namespaces e.g. "x-schema". */currentNode.setAttribute(name,value);}arrayPop(DOMPurify.removed);}catch(_){}}/* Execute a hook if present */_executeHook('afterSanitizeAttributes',currentNode,null);};/**
     * _sanitizeShadowDOM
     *
     * @param  {DocumentFragment} fragment to iterate over recursively
     */var _sanitizeShadowDOM=function _sanitizeShadowDOM(fragment){var shadowNode=void 0;var shadowIterator=_createIterator(fragment);/* Execute a hook if present */_executeHook('beforeSanitizeShadowDOM',fragment,null);while(shadowNode=shadowIterator.nextNode()){/* Execute a hook if present */_executeHook('uponSanitizeShadowNode',shadowNode,null);/* Sanitize tags and elements */if(_sanitizeElements(shadowNode)){continue;}/* Deep shadow DOM detected */if(shadowNode.content instanceof DocumentFragment){_sanitizeShadowDOM(shadowNode.content);}/* Check attributes, sanitize if necessary */_sanitizeAttributes(shadowNode);}/* Execute a hook if present */_executeHook('afterSanitizeShadowDOM',fragment,null);};/**
     * Sanitize
     * Public method providing core sanitation functionality
     *
     * @param {String|Node} dirty string or DOM node
     * @param {Object} configuration object
     */// eslint-disable-next-line complexity
DOMPurify.sanitize=function(dirty,cfg){var body=void 0;var importedNode=void 0;var currentNode=void 0;var oldNode=void 0;var returnNode=void 0;/* Make sure we have a string to sanitize.
        DO NOT return early, as this will return the wrong type if
        the user has requested a DOM object rather than a string */IS_EMPTY_INPUT=!dirty;if(IS_EMPTY_INPUT){dirty='<!-->';}/* Stringify, in case dirty is an object */if(typeof dirty!=='string'&&!_isNode(dirty)){// eslint-disable-next-line no-negated-condition
if(typeof dirty.toString!=='function'){throw typeErrorCreate('toString is not a function');}else{dirty=dirty.toString();if(typeof dirty!=='string'){throw typeErrorCreate('dirty is not a string, aborting');}}}/* Check we can run. Otherwise fall back or ignore */if(!DOMPurify.isSupported){if(_typeof(window.toStaticHTML)==='object'||typeof window.toStaticHTML==='function'){if(typeof dirty==='string'){return window.toStaticHTML(dirty);}if(_isNode(dirty)){return window.toStaticHTML(dirty.outerHTML);}}return dirty;}/* Assign config vars */if(!SET_CONFIG){_parseConfig(cfg);}/* Clean up removed elements */DOMPurify.removed=[];/* Check if dirty is correctly typed for IN_PLACE */if(typeof dirty==='string'){IN_PLACE=false;}if(IN_PLACE);else if(dirty instanceof Node){/* If dirty is a DOM element, append to an empty document to avoid
           elements being stripped by the parser */body=_initDocument('<!---->');importedNode=body.ownerDocument.importNode(dirty,true);if(importedNode.nodeType===1&&importedNode.nodeName==='BODY'){/* Node is already a body, use as is */body=importedNode;}else if(importedNode.nodeName==='HTML'){body=importedNode;}else{// eslint-disable-next-line unicorn/prefer-dom-node-append
body.appendChild(importedNode);}}else{/* Exit directly if we have nothing to do */if(!RETURN_DOM&&!SAFE_FOR_TEMPLATES&&!WHOLE_DOCUMENT&&// eslint-disable-next-line unicorn/prefer-includes
dirty.indexOf('<')===-1){return trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(dirty):dirty;}/* Initialize the document to work on */body=_initDocument(dirty);/* Check we have a DOM node from the data */if(!body){return RETURN_DOM?null:emptyHTML;}}/* Remove first element node (ours) if FORCE_BODY is set */if(body&&FORCE_BODY){_forceRemove(body.firstChild);}/* Get node iterator */var nodeIterator=_createIterator(IN_PLACE?dirty:body);/* Now start iterating over the created document */while(currentNode=nodeIterator.nextNode()){/* Fix IE's strange behavior with manipulated textNodes #89 */if(currentNode.nodeType===3&&currentNode===oldNode){continue;}/* Sanitize tags and elements */if(_sanitizeElements(currentNode)){continue;}/* Shadow DOM detected, sanitize it */if(currentNode.content instanceof DocumentFragment){_sanitizeShadowDOM(currentNode.content);}/* Check attributes, sanitize if necessary */_sanitizeAttributes(currentNode);oldNode=currentNode;}oldNode=null;/* If we sanitized `dirty` in-place, return it. */if(IN_PLACE){return dirty;}/* Return sanitized string or DOM */if(RETURN_DOM){if(RETURN_DOM_FRAGMENT){returnNode=createDocumentFragment.call(body.ownerDocument);while(body.firstChild){// eslint-disable-next-line unicorn/prefer-dom-node-append
returnNode.appendChild(body.firstChild);}}else{returnNode=body;}if(RETURN_DOM_IMPORT){/*
            AdoptNode() is not used because internal state is not reset
            (e.g. the past names map of a HTMLFormElement), this is safe
            in theory but we would rather not risk another attack vector.
            The state that is cloned by importNode() is explicitly defined
            by the specs.
          */returnNode=importNode.call(originalDocument,returnNode,true);}return returnNode;}var serializedHTML=WHOLE_DOCUMENT?body.outerHTML:body.innerHTML;/* Sanitize final string template-safe */if(SAFE_FOR_TEMPLATES){serializedHTML=stringReplace(serializedHTML,MUSTACHE_EXPR$$1,' ');serializedHTML=stringReplace(serializedHTML,ERB_EXPR$$1,' ');}return trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(serializedHTML):serializedHTML;};/**
     * Public method to set the configuration once
     * setConfig
     *
     * @param {Object} cfg configuration object
     */DOMPurify.setConfig=function(cfg){_parseConfig(cfg);SET_CONFIG=true;};/**
     * Public method to remove the configuration
     * clearConfig
     *
     */DOMPurify.clearConfig=function(){CONFIG=null;SET_CONFIG=false;};/**
     * Public method to check if an attribute value is valid.
     * Uses last set config, if any. Otherwise, uses config defaults.
     * isValidAttribute
     *
     * @param  {string} tag Tag name of containing element.
     * @param  {string} attr Attribute name.
     * @param  {string} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
     */DOMPurify.isValidAttribute=function(tag,attr,value){/* Initialize shared config vars if necessary. */if(!CONFIG){_parseConfig({});}var lcTag=stringToLowerCase(tag);var lcName=stringToLowerCase(attr);return _isValidAttribute(lcTag,lcName,value);};/**
     * AddHook
     * Public method to add DOMPurify hooks
     *
     * @param {String} entryPoint entry point for the hook to add
     * @param {Function} hookFunction function to execute
     */DOMPurify.addHook=function(entryPoint,hookFunction){if(typeof hookFunction!=='function'){return;}hooks[entryPoint]=hooks[entryPoint]||[];arrayPush(hooks[entryPoint],hookFunction);};/**
     * RemoveHook
     * Public method to remove a DOMPurify hook at a given entryPoint
     * (pops it from the stack of hooks if more are present)
     *
     * @param {String} entryPoint entry point for the hook to remove
     */DOMPurify.removeHook=function(entryPoint){if(hooks[entryPoint]){arrayPop(hooks[entryPoint]);}};/**
     * RemoveHooks
     * Public method to remove all DOMPurify hooks at a given entryPoint
     *
     * @param  {String} entryPoint entry point for the hooks to remove
     */DOMPurify.removeHooks=function(entryPoint){if(hooks[entryPoint]){hooks[entryPoint]=[];}};/**
     * RemoveAllHooks
     * Public method to remove all DOMPurify hooks
     *
     */DOMPurify.removeAllHooks=function(){hooks={};};return DOMPurify;}var purify=createDOMPurify();return purify;});},{}],161:[function(require,module,exports){'use strict';var elliptic=exports;elliptic.version=require('../package.json').version;elliptic.utils=require('./elliptic/utils');elliptic.rand=require('brorand');elliptic.curve=require('./elliptic/curve');elliptic.curves=require('./elliptic/curves');// Protocols
elliptic.ec=require('./elliptic/ec');elliptic.eddsa=require('./elliptic/eddsa');},{"../package.json":177,"./elliptic/curve":164,"./elliptic/curves":167,"./elliptic/ec":168,"./elliptic/eddsa":171,"./elliptic/utils":175,"brorand":95}],162:[function(require,module,exports){'use strict';var BN=require('bn.js');var utils=require('../utils');var getNAF=utils.getNAF;var getJSF=utils.getJSF;var assert=utils.assert;function BaseCurve(type,conf){this.type=type;this.p=new BN(conf.p,16);// Use Montgomery, when there is no fast reduction for the prime
this.red=conf.prime?BN.red(conf.prime):BN.mont(this.p);// Useful for many curves
this.zero=new BN(0).toRed(this.red);this.one=new BN(1).toRed(this.red);this.two=new BN(2).toRed(this.red);// Curve configuration, optional
this.n=conf.n&&new BN(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);// Temporary arrays
this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;// Generalized Greg Maxwell's trick
var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null;}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red);}}module.exports=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error('Not implemented');};BaseCurve.prototype.validate=function validate(){throw new Error('Not implemented');};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(p,k){assert(p.precomputed);var doubles=p._getDoubles();var naf=getNAF(k,1,this._bitLength);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;// Translate into more windowed form
var repr=[];var j;var nafW;for(j=0;j<naf.length;j+=doubles.step){nafW=0;for(var l=j+doubles.step-1;l>=j;l--)nafW=(nafW<<1)+naf[l];repr.push(nafW);}var a=this.jpoint(null,null,null);var b=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(j=0;j<repr.length;j++){nafW=repr[j];if(nafW===i)b=b.mixedAdd(doubles.points[j]);else if(nafW===-i)b=b.mixedAdd(doubles.points[j].neg());}a=a.add(b);}return a.toP();};BaseCurve.prototype._wnafMul=function _wnafMul(p,k){var w=4;// Precompute window
var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;// Get NAF form
var naf=getNAF(k,w,this._bitLength);// Add `this`*(N+1) for every w-NAF index
var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){// Count zeroes
for(var l=0;i>=0&&naf[i]===0;i--)l++;if(i>=0)l++;acc=acc.dblp(l);if(i<0)break;var z=naf[i];assert(z!==0);if(p.type==='affine'){// J +- P
if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg());}else{// J +- J
if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg());}}return p.type==='affine'?acc.toP():acc;};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;// Fill all arrays
var max=0;var i;var j;var p;for(i=0;i<len;i++){p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points;}// Comb small window NAFs
for(i=len-1;i>=1;i-=2){var a=i-1;var b=i;if(wndWidth[a]!==1||wndWidth[b]!==1){naf[a]=getNAF(coeffs[a],wndWidth[a],this._bitLength);naf[b]=getNAF(coeffs[b],wndWidth[b],this._bitLength);max=Math.max(naf[a].length,max);max=Math.max(naf[b].length,max);continue;}var comb=[points[a],/* 1 */null,/* 3 */null,/* 5 */points[b]];// Try to avoid Projective points, if possible
if(points[a].y.cmp(points[b].y)===0){comb[1]=points[a].add(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg());}else if(points[a].y.cmp(points[b].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].add(points[b].neg());}else{comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg());}var index=[-3,/* -1 -1 */-1,/* -1 0 */-5,/* -1 1 */-7,/* 0 -1 */0,/* 0 0 */7,/* 0 1 */5,/* 1 -1 */1,/* 1 0 */3];var jsf=getJSF(coeffs[a],coeffs[b]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b]=new Array(max);for(j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b][j]=0;wnd[a]=comb;}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false;}if(!zero)break;k++;i--;}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(j=0;j<len;j++){var z=tmp[j];p;if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type==='affine')acc=acc.mixedAdd(p);else acc=acc.add(p);}}// Zeroify references
for(i=0;i<len;i++)wnd[i]=null;if(jacobianResult)return acc;else return acc.toP();};function BasePoint(curve,type){this.curve=curve;this.type=type;this.precomputed=null;}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq()/*other*/{throw new Error('Not implemented');};BasePoint.prototype.validate=function validate(){return this.curve.validate(this);};BaseCurve.prototype.decodePoint=function decodePoint(bytes,enc){bytes=utils.toArray(bytes,enc);var len=this.p.byteLength();// uncompressed, hybrid-odd, hybrid-even
if((bytes[0]===0x04||bytes[0]===0x06||bytes[0]===0x07)&&bytes.length-1===2*len){if(bytes[0]===0x06)assert(bytes[bytes.length-1]%2===0);else if(bytes[0]===0x07)assert(bytes[bytes.length-1]%2===1);var res=this.point(bytes.slice(1,1+len),bytes.slice(1+len,1+2*len));return res;}else if((bytes[0]===0x02||bytes[0]===0x03)&&bytes.length-1===len){return this.pointFromX(bytes.slice(1,1+len),bytes[0]===0x03);}throw new Error('Unknown point format');};BasePoint.prototype.encodeCompressed=function encodeCompressed(enc){return this.encode(enc,true);};BasePoint.prototype._encode=function _encode(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray('be',len);if(compact)return[this.getY().isEven()?0x02:0x03].concat(x);return[0x04].concat(x,this.getY().toArray('be',len));};BasePoint.prototype.encode=function encode(enc,compact){return utils.encode(this._encode(compact),enc);};BasePoint.prototype.precompute=function precompute(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this;};BasePoint.prototype._hasDoubles=function _hasDoubles(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step);};BasePoint.prototype._getDoubles=function _getDoubles(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++)acc=acc.dbl();doubles.push(acc);}return{step:step,points:doubles};};BasePoint.prototype._getNAFPoints=function _getNAFPoints(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl=max===1?null:this.dbl();for(var i=1;i<max;i++)res[i]=res[i-1].add(dbl);return{wnd:wnd,points:res};};BasePoint.prototype._getBeta=function _getBeta(){return null;};BasePoint.prototype.dblp=function dblp(k){var r=this;for(var i=0;i<k;i++)r=r.dbl();return r;};},{"../utils":175,"bn.js":176}],163:[function(require,module,exports){'use strict';var utils=require('../utils');var BN=require('bn.js');var inherits=require('inherits');var Base=require('./base');var assert=utils.assert;function EdwardsCurve(conf){// NOTE: Important as we are creating point in Base.call()
this.twisted=(conf.a|0)!==1;this.mOneA=this.twisted&&(conf.a|0)===-1;this.extended=this.mOneA;Base.call(this,'edwards',conf);this.a=new BN(conf.a,16).umod(this.red.m);this.a=this.a.toRed(this.red);this.c=new BN(conf.c,16).toRed(this.red);this.c2=this.c.redSqr();this.d=new BN(conf.d,16).toRed(this.red);this.dd=this.d.redAdd(this.d);assert(!this.twisted||this.c.fromRed().cmpn(1)===0);this.oneC=(conf.c|0)===1;}inherits(EdwardsCurve,Base);module.exports=EdwardsCurve;EdwardsCurve.prototype._mulA=function _mulA(num){if(this.mOneA)return num.redNeg();else return this.a.redMul(num);};EdwardsCurve.prototype._mulC=function _mulC(num){if(this.oneC)return num;else return this.c.redMul(num);};// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint=function jpoint(x,y,z,t){return this.point(x,y,z,t);};EdwardsCurve.prototype.pointFromX=function pointFromX(x,odd){x=new BN(x,16);if(!x.red)x=x.toRed(this.red);var x2=x.redSqr();var rhs=this.c2.redSub(this.a.redMul(x2));var lhs=this.one.redSub(this.c2.redMul(this.d).redMul(x2));var y2=rhs.redMul(lhs.redInvm());var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error('invalid point');var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y);};EdwardsCurve.prototype.pointFromY=function pointFromY(y,odd){y=new BN(y,16);if(!y.red)y=y.toRed(this.red);// x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
var y2=y.redSqr();var lhs=y2.redSub(this.c2);var rhs=y2.redMul(this.d).redMul(this.c2).redSub(this.a);var x2=lhs.redMul(rhs.redInvm());if(x2.cmp(this.zero)===0){if(odd)throw new Error('invalid point');else return this.point(this.zero,y);}var x=x2.redSqrt();if(x.redSqr().redSub(x2).cmp(this.zero)!==0)throw new Error('invalid point');if(x.fromRed().isOdd()!==odd)x=x.redNeg();return this.point(x,y);};EdwardsCurve.prototype.validate=function validate(point){if(point.isInfinity())return true;// Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
point.normalize();var x2=point.x.redSqr();var y2=point.y.redSqr();var lhs=x2.redMul(this.a).redAdd(y2);var rhs=this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));return lhs.cmp(rhs)===0;};function Point(curve,x,y,z,t){Base.BasePoint.call(this,curve,'projective');if(x===null&&y===null&&z===null){this.x=this.curve.zero;this.y=this.curve.one;this.z=this.curve.one;this.t=this.curve.zero;this.zOne=true;}else{this.x=new BN(x,16);this.y=new BN(y,16);this.z=z?new BN(z,16):this.curve.one;this.t=t&&new BN(t,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);if(this.t&&!this.t.red)this.t=this.t.toRed(this.curve.red);this.zOne=this.z===this.curve.one;// Use extended coordinates
if(this.curve.extended&&!this.t){this.t=this.x.redMul(this.y);if(!this.zOne)this.t=this.t.redMul(this.z.redInvm());}}}inherits(Point,Base.BasePoint);EdwardsCurve.prototype.pointFromJSON=function pointFromJSON(obj){return Point.fromJSON(this,obj);};EdwardsCurve.prototype.point=function point(x,y,z,t){return new Point(this,x,y,z,t);};Point.fromJSON=function fromJSON(curve,obj){return new Point(curve,obj[0],obj[1],obj[2]);};Point.prototype.inspect=function inspect(){if(this.isInfinity())return'<EC Point Infinity>';return'<EC Point x: '+this.x.fromRed().toString(16,2)+' y: '+this.y.fromRed().toString(16,2)+' z: '+this.z.fromRed().toString(16,2)+'>';};Point.prototype.isInfinity=function isInfinity(){// XXX This code assumes that zero is always zero in red
return this.x.cmpn(0)===0&&(this.y.cmp(this.z)===0||this.zOne&&this.y.cmp(this.curve.c)===0);};Point.prototype._extDbl=function _extDbl(){// hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
//     #doubling-dbl-2008-hwcd
// 4M + 4S
// A = X1^2
var a=this.x.redSqr();// B = Y1^2
var b=this.y.redSqr();// C = 2 * Z1^2
var c=this.z.redSqr();c=c.redIAdd(c);// D = a * A
var d=this.curve._mulA(a);// E = (X1 + Y1)^2 - A - B
var e=this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);// G = D + B
var g=d.redAdd(b);// F = G - C
var f=g.redSub(c);// H = D - B
var h=d.redSub(b);// X3 = E * F
var nx=e.redMul(f);// Y3 = G * H
var ny=g.redMul(h);// T3 = E * H
var nt=e.redMul(h);// Z3 = F * G
var nz=f.redMul(g);return this.curve.point(nx,ny,nz,nt);};Point.prototype._projDbl=function _projDbl(){// hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
//     #doubling-dbl-2008-bbjlp
//     #doubling-dbl-2007-bl
// and others
// Generally 3M + 4S or 2M + 4S
// B = (X1 + Y1)^2
var b=this.x.redAdd(this.y).redSqr();// C = X1^2
var c=this.x.redSqr();// D = Y1^2
var d=this.y.redSqr();var nx;var ny;var nz;var e;var h;var j;if(this.curve.twisted){// E = a * C
e=this.curve._mulA(c);// F = E + D
var f=e.redAdd(d);if(this.zOne){// X3 = (B - C - D) * (F - 2)
nx=b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));// Y3 = F * (E - D)
ny=f.redMul(e.redSub(d));// Z3 = F^2 - 2 * F
nz=f.redSqr().redSub(f).redSub(f);}else{// H = Z1^2
h=this.z.redSqr();// J = F - 2 * H
j=f.redSub(h).redISub(h);// X3 = (B-C-D)*J
nx=b.redSub(c).redISub(d).redMul(j);// Y3 = F * (E - D)
ny=f.redMul(e.redSub(d));// Z3 = F * J
nz=f.redMul(j);}}else{// E = C + D
e=c.redAdd(d);// H = (c * Z1)^2
h=this.curve._mulC(this.z).redSqr();// J = E - 2 * H
j=e.redSub(h).redSub(h);// X3 = c * (B - E) * J
nx=this.curve._mulC(b.redISub(e)).redMul(j);// Y3 = c * E * (C - D)
ny=this.curve._mulC(e).redMul(c.redISub(d));// Z3 = E * J
nz=e.redMul(j);}return this.curve.point(nx,ny,nz);};Point.prototype.dbl=function dbl(){if(this.isInfinity())return this;// Double in extended coordinates
if(this.curve.extended)return this._extDbl();else return this._projDbl();};Point.prototype._extAdd=function _extAdd(p){// hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
//     #addition-add-2008-hwcd-3
// 8M
// A = (Y1 - X1) * (Y2 - X2)
var a=this.y.redSub(this.x).redMul(p.y.redSub(p.x));// B = (Y1 + X1) * (Y2 + X2)
var b=this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));// C = T1 * k * T2
var c=this.t.redMul(this.curve.dd).redMul(p.t);// D = Z1 * 2 * Z2
var d=this.z.redMul(p.z.redAdd(p.z));// E = B - A
var e=b.redSub(a);// F = D - C
var f=d.redSub(c);// G = D + C
var g=d.redAdd(c);// H = B + A
var h=b.redAdd(a);// X3 = E * F
var nx=e.redMul(f);// Y3 = G * H
var ny=g.redMul(h);// T3 = E * H
var nt=e.redMul(h);// Z3 = F * G
var nz=f.redMul(g);return this.curve.point(nx,ny,nz,nt);};Point.prototype._projAdd=function _projAdd(p){// hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
//     #addition-add-2008-bbjlp
//     #addition-add-2007-bl
// 10M + 1S
// A = Z1 * Z2
var a=this.z.redMul(p.z);// B = A^2
var b=a.redSqr();// C = X1 * X2
var c=this.x.redMul(p.x);// D = Y1 * Y2
var d=this.y.redMul(p.y);// E = d * C * D
var e=this.curve.d.redMul(c).redMul(d);// F = B - E
var f=b.redSub(e);// G = B + E
var g=b.redAdd(e);// X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
var tmp=this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);var nx=a.redMul(f).redMul(tmp);var ny;var nz;if(this.curve.twisted){// Y3 = A * G * (D - a * C)
ny=a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));// Z3 = F * G
nz=f.redMul(g);}else{// Y3 = A * G * (D - C)
ny=a.redMul(g).redMul(d.redSub(c));// Z3 = c * F * G
nz=this.curve._mulC(f).redMul(g);}return this.curve.point(nx,ny,nz);};Point.prototype.add=function add(p){if(this.isInfinity())return p;if(p.isInfinity())return this;if(this.curve.extended)return this._extAdd(p);else return this._projAdd(p);};Point.prototype.mul=function mul(k){if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else return this.curve._wnafMul(this,k);};Point.prototype.mulAdd=function mulAdd(k1,p,k2){return this.curve._wnafMulAdd(1,[this,p],[k1,k2],2,false);};Point.prototype.jmulAdd=function jmulAdd(k1,p,k2){return this.curve._wnafMulAdd(1,[this,p],[k1,k2],2,true);};Point.prototype.normalize=function normalize(){if(this.zOne)return this;// Normalize coordinates
var zi=this.z.redInvm();this.x=this.x.redMul(zi);this.y=this.y.redMul(zi);if(this.t)this.t=this.t.redMul(zi);this.z=this.curve.one;this.zOne=true;return this;};Point.prototype.neg=function neg(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg());};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed();};Point.prototype.getY=function getY(){this.normalize();return this.y.fromRed();};Point.prototype.eq=function eq(other){return this===other||this.getX().cmp(other.getX())===0&&this.getY().cmp(other.getY())===0;};Point.prototype.eqXToP=function eqXToP(x){var rx=x.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(this.z);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true;}};// Compatibility with BaseCurve
Point.prototype.toP=Point.prototype.normalize;Point.prototype.mixedAdd=Point.prototype.add;},{"../utils":175,"./base":162,"bn.js":176,"inherits":223}],164:[function(require,module,exports){'use strict';var curve=exports;curve.base=require('./base');curve.short=require('./short');curve.mont=require('./mont');curve.edwards=require('./edwards');},{"./base":162,"./edwards":163,"./mont":165,"./short":166}],165:[function(require,module,exports){'use strict';var BN=require('bn.js');var inherits=require('inherits');var Base=require('./base');var utils=require('../utils');function MontCurve(conf){Base.call(this,'mont',conf);this.a=new BN(conf.a,16).toRed(this.red);this.b=new BN(conf.b,16).toRed(this.red);this.i4=new BN(4).toRed(this.red).redInvm();this.two=new BN(2).toRed(this.red);this.a24=this.i4.redMul(this.a.redAdd(this.two));}inherits(MontCurve,Base);module.exports=MontCurve;MontCurve.prototype.validate=function validate(point){var x=point.normalize().x;var x2=x.redSqr();var rhs=x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);var y=rhs.redSqrt();return y.redSqr().cmp(rhs)===0;};function Point(curve,x,z){Base.BasePoint.call(this,curve,'projective');if(x===null&&z===null){this.x=this.curve.one;this.z=this.curve.zero;}else{this.x=new BN(x,16);this.z=new BN(z,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);}}inherits(Point,Base.BasePoint);MontCurve.prototype.decodePoint=function decodePoint(bytes,enc){return this.point(utils.toArray(bytes,enc),1);};MontCurve.prototype.point=function point(x,z){return new Point(this,x,z);};MontCurve.prototype.pointFromJSON=function pointFromJSON(obj){return Point.fromJSON(this,obj);};Point.prototype.precompute=function precompute(){// No-op
};Point.prototype._encode=function _encode(){return this.getX().toArray('be',this.curve.p.byteLength());};Point.fromJSON=function fromJSON(curve,obj){return new Point(curve,obj[0],obj[1]||curve.one);};Point.prototype.inspect=function inspect(){if(this.isInfinity())return'<EC Point Infinity>';return'<EC Point x: '+this.x.fromRed().toString(16,2)+' z: '+this.z.fromRed().toString(16,2)+'>';};Point.prototype.isInfinity=function isInfinity(){// XXX This code assumes that zero is always zero in red
return this.z.cmpn(0)===0;};Point.prototype.dbl=function dbl(){// http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
// 2M + 2S + 4A
// A = X1 + Z1
var a=this.x.redAdd(this.z);// AA = A^2
var aa=a.redSqr();// B = X1 - Z1
var b=this.x.redSub(this.z);// BB = B^2
var bb=b.redSqr();// C = AA - BB
var c=aa.redSub(bb);// X3 = AA * BB
var nx=aa.redMul(bb);// Z3 = C * (BB + A24 * C)
var nz=c.redMul(bb.redAdd(this.curve.a24.redMul(c)));return this.curve.point(nx,nz);};Point.prototype.add=function add(){throw new Error('Not supported on Montgomery curve');};Point.prototype.diffAdd=function diffAdd(p,diff){// http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
// 4M + 2S + 6A
// A = X2 + Z2
var a=this.x.redAdd(this.z);// B = X2 - Z2
var b=this.x.redSub(this.z);// C = X3 + Z3
var c=p.x.redAdd(p.z);// D = X3 - Z3
var d=p.x.redSub(p.z);// DA = D * A
var da=d.redMul(a);// CB = C * B
var cb=c.redMul(b);// X5 = Z1 * (DA + CB)^2
var nx=diff.z.redMul(da.redAdd(cb).redSqr());// Z5 = X1 * (DA - CB)^2
var nz=diff.x.redMul(da.redISub(cb).redSqr());return this.curve.point(nx,nz);};Point.prototype.mul=function mul(k){var t=k.clone();var a=this;// (N / 2) * Q + Q
var b=this.curve.point(null,null);// (N / 2) * Q
var c=this;// Q
for(var bits=[];t.cmpn(0)!==0;t.iushrn(1))bits.push(t.andln(1));for(var i=bits.length-1;i>=0;i--){if(bits[i]===0){// N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
a=a.diffAdd(b,c);// N * Q = 2 * ((N / 2) * Q + Q))
b=b.dbl();}else{// N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
b=a.diffAdd(b,c);// N * Q + Q = 2 * ((N / 2) * Q + Q)
a=a.dbl();}}return b;};Point.prototype.mulAdd=function mulAdd(){throw new Error('Not supported on Montgomery curve');};Point.prototype.jumlAdd=function jumlAdd(){throw new Error('Not supported on Montgomery curve');};Point.prototype.eq=function eq(other){return this.getX().cmp(other.getX())===0;};Point.prototype.normalize=function normalize(){this.x=this.x.redMul(this.z.redInvm());this.z=this.curve.one;return this;};Point.prototype.getX=function getX(){// Normalize coordinates
this.normalize();return this.x.fromRed();};},{"../utils":175,"./base":162,"bn.js":176,"inherits":223}],166:[function(require,module,exports){'use strict';var utils=require('../utils');var BN=require('bn.js');var inherits=require('inherits');var Base=require('./base');var assert=utils.assert;function ShortCurve(conf){Base.call(this,'short',conf);this.a=new BN(conf.a,16).toRed(this.red);this.b=new BN(conf.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;// If the curve is endomorphic, precalculate beta and lambda
this.endo=this._getEndomorphism(conf);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4);}inherits(ShortCurve,Base);module.exports=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism(conf){// No efficient endomorphism
if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;// Compute beta and lambda, that lambda * P = (beta * Px; Py)
var beta;var lambda;if(conf.beta){beta=new BN(conf.beta,16).toRed(this.red);}else{var betas=this._getEndoRoots(this.p);// Choose the smallest beta
beta=betas[0].cmp(betas[1])<0?betas[0]:betas[1];beta=beta.toRed(this.red);}if(conf.lambda){lambda=new BN(conf.lambda,16);}else{// Choose the lambda that is matching selected beta
var lambdas=this._getEndoRoots(this.n);if(this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))===0){lambda=lambdas[0];}else{lambda=lambdas[1];assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))===0);}}// Get basis vectors, used for balanced length-two representation
var basis;if(conf.basis){basis=conf.basis.map(function(vec){return{a:new BN(vec.a,16),b:new BN(vec.b,16)};});}else{basis=this._getEndoBasis(lambda);}return{beta:beta,lambda:lambda,basis:basis};};ShortCurve.prototype._getEndoRoots=function _getEndoRoots(num){// Find roots of for x^2 + x + 1 in F
// Root = (-1 +- Sqrt(-3)) / 2
//
var red=num===this.p?this.red:BN.mont(num);var tinv=new BN(2).toRed(red).redInvm();var ntinv=tinv.redNeg();var s=new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);var l1=ntinv.redAdd(s).fromRed();var l2=ntinv.redSub(s).fromRed();return[l1,l2];};ShortCurve.prototype._getEndoBasis=function _getEndoBasis(lambda){// aprxSqrt >= sqrt(this.n)
var aprxSqrt=this.n.ushrn(Math.floor(this.n.bitLength()/2));// 3.74
// Run EGCD, until r(L + 1) < aprxSqrt
var u=lambda;var v=this.n.clone();var x1=new BN(1);var y1=new BN(0);var x2=new BN(0);var y2=new BN(1);// NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
var a0;var b0;// First vector
var a1;var b1;// Second vector
var a2;var b2;var prevR;var i=0;var r;var x;while(u.cmpn(0)!==0){var q=v.div(u);r=v.sub(q.mul(u));x=x2.sub(q.mul(x1));var y=y2.sub(q.mul(y1));if(!a1&&r.cmp(aprxSqrt)<0){a0=prevR.neg();b0=x1;a1=r.neg();b1=x;}else if(a1&&++i===2){break;}prevR=r;v=u;u=r;x2=x1;x1=x;y2=y1;y1=y;}a2=r.neg();b2=x;var len1=a1.sqr().add(b1.sqr());var len2=a2.sqr().add(b2.sqr());if(len2.cmp(len1)>=0){a2=a0;b2=b0;}// Normalize signs
if(a1.negative){a1=a1.neg();b1=b1.neg();}if(a2.negative){a2=a2.neg();b2=b2.neg();}return[{a:a1,b:b1},{a:a2,b:b2}];};ShortCurve.prototype._endoSplit=function _endoSplit(k){var basis=this.endo.basis;var v1=basis[0];var v2=basis[1];var c1=v2.b.mul(k).divRound(this.n);var c2=v1.b.neg().mul(k).divRound(this.n);var p1=c1.mul(v1.a);var p2=c2.mul(v2.a);var q1=c1.mul(v1.b);var q2=c2.mul(v2.b);// Calculate answer
var k1=k.sub(p1).sub(p2);var k2=q1.add(q2).neg();return{k1:k1,k2:k2};};ShortCurve.prototype.pointFromX=function pointFromX(x,odd){x=new BN(x,16);if(!x.red)x=x.toRed(this.red);var y2=x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error('invalid point');// XXX Is there any way to tell if the number is odd without converting it
// to non-red form?
var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y);};ShortCurve.prototype.validate=function validate(point){if(point.inf)return true;var x=point.x;var y=point.y;var ax=this.a.redMul(x);var rhs=x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);return y.redSqr().redISub(rhs).cmpn(0)===0;};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd(points,coeffs,jacobianResult){var npoints=this._endoWnafT1;var ncoeffs=this._endoWnafT2;for(var i=0;i<points.length;i++){var split=this._endoSplit(coeffs[i]);var p=points[i];var beta=p._getBeta();if(split.k1.negative){split.k1.ineg();p=p.neg(true);}if(split.k2.negative){split.k2.ineg();beta=beta.neg(true);}npoints[i*2]=p;npoints[i*2+1]=beta;ncoeffs[i*2]=split.k1;ncoeffs[i*2+1]=split.k2;}var res=this._wnafMulAdd(1,npoints,ncoeffs,i*2,jacobianResult);// Clean-up references to points and coefficients
for(var j=0;j<i*2;j++){npoints[j]=null;ncoeffs[j]=null;}return res;};function Point(curve,x,y,isRed){Base.BasePoint.call(this,curve,'affine');if(x===null&&y===null){this.x=null;this.y=null;this.inf=true;}else{this.x=new BN(x,16);this.y=new BN(y,16);// Force redgomery representation when loading from JSON
if(isRed){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red);}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false;}}inherits(Point,Base.BasePoint);ShortCurve.prototype.point=function point(x,y,isRed){return new Point(this,x,y,isRed);};ShortCurve.prototype.pointFromJSON=function pointFromJSON(obj,red){return Point.fromJSON(this,obj,red);};Point.prototype._getBeta=function _getBeta(){if(!this.curve.endo)return;var pre=this.precomputed;if(pre&&pre.beta)return pre.beta;var beta=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(pre){var curve=this.curve;var endoMul=function(p){return curve.point(p.x.redMul(curve.endo.beta),p.y);};pre.beta=beta;beta.precomputed={beta:null,naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(endoMul)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(endoMul)}};}return beta;};Point.prototype.toJSON=function toJSON(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}];};Point.fromJSON=function fromJSON(curve,obj,red){if(typeof obj==='string')obj=JSON.parse(obj);var res=curve.point(obj[0],obj[1],red);if(!obj[2])return res;function obj2point(obj){return curve.point(obj[0],obj[1],red);}var pre=obj[2];res.precomputed={beta:null,doubles:pre.doubles&&{step:pre.doubles.step,points:[res].concat(pre.doubles.points.map(obj2point))},naf:pre.naf&&{wnd:pre.naf.wnd,points:[res].concat(pre.naf.points.map(obj2point))}};return res;};Point.prototype.inspect=function inspect(){if(this.isInfinity())return'<EC Point Infinity>';return'<EC Point x: '+this.x.fromRed().toString(16,2)+' y: '+this.y.fromRed().toString(16,2)+'>';};Point.prototype.isInfinity=function isInfinity(){return this.inf;};Point.prototype.add=function add(p){// O + P = P
if(this.inf)return p;// P + O = P
if(p.inf)return this;// P + P = 2P
if(this.eq(p))return this.dbl();// P + (-P) = O
if(this.neg().eq(p))return this.curve.point(null,null);// P + Q = O
if(this.x.cmp(p.x)===0)return this.curve.point(null,null);var c=this.y.redSub(p.y);if(c.cmpn(0)!==0)c=c.redMul(this.x.redSub(p.x).redInvm());var nx=c.redSqr().redISub(this.x).redISub(p.x);var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny);};Point.prototype.dbl=function dbl(){if(this.inf)return this;// 2P = O
var ys1=this.y.redAdd(this.y);if(ys1.cmpn(0)===0)return this.curve.point(null,null);var a=this.curve.a;var x2=this.x.redSqr();var dyinv=ys1.redInvm();var c=x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);var nx=c.redSqr().redISub(this.x.redAdd(this.x));var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny);};Point.prototype.getX=function getX(){return this.x.fromRed();};Point.prototype.getY=function getY(){return this.y.fromRed();};Point.prototype.mul=function mul(k){k=new BN(k,16);if(this.isInfinity())return this;else if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[k]);else return this.curve._wnafMul(this,k);};Point.prototype.mulAdd=function mulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs);else return this.curve._wnafMulAdd(1,points,coeffs,2);};Point.prototype.jmulAdd=function jmulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs,true);else return this.curve._wnafMulAdd(1,points,coeffs,2,true);};Point.prototype.eq=function eq(p){return this===p||this.inf===p.inf&&(this.inf||this.x.cmp(p.x)===0&&this.y.cmp(p.y)===0);};Point.prototype.neg=function neg(_precompute){if(this.inf)return this;var res=this.curve.point(this.x,this.y.redNeg());if(_precompute&&this.precomputed){var pre=this.precomputed;var negate=function(p){return p.neg();};res.precomputed={naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(negate)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(negate)}};}return res;};Point.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var res=this.curve.jpoint(this.x,this.y,this.curve.one);return res;};function JPoint(curve,x,y,z){Base.BasePoint.call(this,curve,'jacobian');if(x===null&&y===null&&z===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new BN(0);}else{this.x=new BN(x,16);this.y=new BN(y,16);this.z=new BN(z,16);}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one;}inherits(JPoint,Base.BasePoint);ShortCurve.prototype.jpoint=function jpoint(x,y,z){return new JPoint(this,x,y,z);};JPoint.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var zinv=this.z.redInvm();var zinv2=zinv.redSqr();var ax=this.x.redMul(zinv2);var ay=this.y.redMul(zinv2).redMul(zinv);return this.curve.point(ax,ay);};JPoint.prototype.neg=function neg(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z);};JPoint.prototype.add=function add(p){// O + P = P
if(this.isInfinity())return p;// P + O = P
if(p.isInfinity())return this;// 12M + 4S + 7A
var pz2=p.z.redSqr();var z2=this.z.redSqr();var u1=this.x.redMul(pz2);var u2=p.x.redMul(z2);var s1=this.y.redMul(pz2.redMul(p.z));var s2=p.y.redMul(z2.redMul(this.z));var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl();}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(p.z).redMul(h);return this.curve.jpoint(nx,ny,nz);};JPoint.prototype.mixedAdd=function mixedAdd(p){// O + P = P
if(this.isInfinity())return p.toJ();// P + O = P
if(p.isInfinity())return this;// 8M + 3S + 7A
var z2=this.z.redSqr();var u1=this.x;var u2=p.x.redMul(z2);var s1=this.y;var s2=p.y.redMul(z2).redMul(this.z);var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl();}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(h);return this.curve.jpoint(nx,ny,nz);};JPoint.prototype.dblp=function dblp(pow){if(pow===0)return this;if(this.isInfinity())return this;if(!pow)return this.dbl();var i;if(this.curve.zeroA||this.curve.threeA){var r=this;for(i=0;i<pow;i++)r=r.dbl();return r;}// 1M + 2S + 1A + N * (4S + 5M + 8A)
// N = 1 => 6M + 6S + 9A
var a=this.curve.a;var tinv=this.curve.tinv;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();// Reuse results
var jyd=jy.redAdd(jy);for(i=0;i<pow;i++){var jx2=jx.redSqr();var jyd2=jyd.redSqr();var jyd4=jyd2.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var t1=jx.redMul(jyd2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var dny=c.redMul(t2);dny=dny.redIAdd(dny).redISub(jyd4);var nz=jyd.redMul(jz);if(i+1<pow)jz4=jz4.redMul(jyd4);jx=nx;jz=nz;jyd=dny;}return this.curve.jpoint(jx,jyd.redMul(tinv),jz);};JPoint.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl();};JPoint.prototype._zeroDbl=function _zeroDbl(){var nx;var ny;var nz;// Z = 1
if(this.zOne){// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
//     #doubling-mdbl-2007-bl
// 1M + 5S + 14A
// XX = X1^2
var xx=this.x.redSqr();// YY = Y1^2
var yy=this.y.redSqr();// YYYY = YY^2
var yyyy=yy.redSqr();// S = 2 * ((X1 + YY)^2 - XX - YYYY)
var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);// M = 3 * XX + a; a = 0
var m=xx.redAdd(xx).redIAdd(xx);// T = M ^ 2 - 2*S
var t=m.redSqr().redISub(s).redISub(s);// 8 * YYYY
var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);// X3 = T
nx=t;// Y3 = M * (S - T) - 8 * YYYY
ny=m.redMul(s.redISub(t)).redISub(yyyy8);// Z3 = 2*Y1
nz=this.y.redAdd(this.y);}else{// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
//     #doubling-dbl-2009-l
// 2M + 5S + 13A
// A = X1^2
var a=this.x.redSqr();// B = Y1^2
var b=this.y.redSqr();// C = B^2
var c=b.redSqr();// D = 2 * ((X1 + B)^2 - A - C)
var d=this.x.redAdd(b).redSqr().redISub(a).redISub(c);d=d.redIAdd(d);// E = 3 * A
var e=a.redAdd(a).redIAdd(a);// F = E^2
var f=e.redSqr();// 8 * C
var c8=c.redIAdd(c);c8=c8.redIAdd(c8);c8=c8.redIAdd(c8);// X3 = F - 2 * D
nx=f.redISub(d).redISub(d);// Y3 = E * (D - X3) - 8 * C
ny=e.redMul(d.redISub(nx)).redISub(c8);// Z3 = 2 * Y1 * Z1
nz=this.y.redMul(this.z);nz=nz.redIAdd(nz);}return this.curve.jpoint(nx,ny,nz);};JPoint.prototype._threeDbl=function _threeDbl(){var nx;var ny;var nz;// Z = 1
if(this.zOne){// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
//     #doubling-mdbl-2007-bl
// 1M + 5S + 15A
// XX = X1^2
var xx=this.x.redSqr();// YY = Y1^2
var yy=this.y.redSqr();// YYYY = YY^2
var yyyy=yy.redSqr();// S = 2 * ((X1 + YY)^2 - XX - YYYY)
var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);// M = 3 * XX + a
var m=xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);// T = M^2 - 2 * S
var t=m.redSqr().redISub(s).redISub(s);// X3 = T
nx=t;// Y3 = M * (S - T) - 8 * YYYY
var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);ny=m.redMul(s.redISub(t)).redISub(yyyy8);// Z3 = 2 * Y1
nz=this.y.redAdd(this.y);}else{// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
// 3M + 5S
// delta = Z1^2
var delta=this.z.redSqr();// gamma = Y1^2
var gamma=this.y.redSqr();// beta = X1 * gamma
var beta=this.x.redMul(gamma);// alpha = 3 * (X1 - delta) * (X1 + delta)
var alpha=this.x.redSub(delta).redMul(this.x.redAdd(delta));alpha=alpha.redAdd(alpha).redIAdd(alpha);// X3 = alpha^2 - 8 * beta
var beta4=beta.redIAdd(beta);beta4=beta4.redIAdd(beta4);var beta8=beta4.redAdd(beta4);nx=alpha.redSqr().redISub(beta8);// Z3 = (Y1 + Z1)^2 - gamma - delta
nz=this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);// Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
var ggamma8=gamma.redSqr();ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ny=alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);}return this.curve.jpoint(nx,ny,nz);};JPoint.prototype._dbl=function _dbl(){var a=this.curve.a;// 4M + 6S + 10A
var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jx2=jx.redSqr();var jy2=jy.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var jxd4=jx.redAdd(jx);jxd4=jxd4.redIAdd(jxd4);var t1=jxd4.redMul(jy2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var jyd8=jy2.redSqr();jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);var ny=c.redMul(t2).redISub(jyd8);var nz=jy.redAdd(jy).redMul(jz);return this.curve.jpoint(nx,ny,nz);};JPoint.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
// 5M + 10S + ...
// XX = X1^2
var xx=this.x.redSqr();// YY = Y1^2
var yy=this.y.redSqr();// ZZ = Z1^2
var zz=this.z.redSqr();// YYYY = YY^2
var yyyy=yy.redSqr();// M = 3 * XX + a * ZZ2; a = 0
var m=xx.redAdd(xx).redIAdd(xx);// MM = M^2
var mm=m.redSqr();// E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
var e=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);e=e.redIAdd(e);e=e.redAdd(e).redIAdd(e);e=e.redISub(mm);// EE = E^2
var ee=e.redSqr();// T = 16*YYYY
var t=yyyy.redIAdd(yyyy);t=t.redIAdd(t);t=t.redIAdd(t);t=t.redIAdd(t);// U = (M + E)^2 - MM - EE - T
var u=m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);// X3 = 4 * (X1 * EE - 4 * YY * U)
var yyu4=yy.redMul(u);yyu4=yyu4.redIAdd(yyu4);yyu4=yyu4.redIAdd(yyu4);var nx=this.x.redMul(ee).redISub(yyu4);nx=nx.redIAdd(nx);nx=nx.redIAdd(nx);// Y3 = 8 * Y1 * (U * (T - U) - E * EE)
var ny=this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);// Z3 = (Z1 + E)^2 - ZZ - EE
var nz=this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);return this.curve.jpoint(nx,ny,nz);};JPoint.prototype.mul=function mul(k,kbase){k=new BN(k,kbase);return this.curve._wnafMul(this,k);};JPoint.prototype.eq=function eq(p){if(p.type==='affine')return this.eq(p.toJ());if(this===p)return true;// x1 * z2^2 == x2 * z1^2
var z2=this.z.redSqr();var pz2=p.z.redSqr();if(this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)!==0)return false;// y1 * z2^3 == y2 * z1^3
var z3=z2.redMul(this.z);var pz3=pz2.redMul(p.z);return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0)===0;};JPoint.prototype.eqXToP=function eqXToP(x){var zs=this.z.redSqr();var rx=x.toRed(this.curve.red).redMul(zs);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(zs);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true;}};JPoint.prototype.inspect=function inspect(){if(this.isInfinity())return'<EC JPoint Infinity>';return'<EC JPoint x: '+this.x.toString(16,2)+' y: '+this.y.toString(16,2)+' z: '+this.z.toString(16,2)+'>';};JPoint.prototype.isInfinity=function isInfinity(){// XXX This code assumes that zero is always zero in red
return this.z.cmpn(0)===0;};},{"../utils":175,"./base":162,"bn.js":176,"inherits":223}],167:[function(require,module,exports){'use strict';var curves=exports;var hash=require('hash.js');var curve=require('./curve');var utils=require('./utils');var assert=utils.assert;function PresetCurve(options){if(options.type==='short')this.curve=new curve.short(options);else if(options.type==='edwards')this.curve=new curve.edwards(options);else this.curve=new curve.mont(options);this.g=this.curve.g;this.n=this.curve.n;this.hash=options.hash;assert(this.g.validate(),'Invalid curve');assert(this.g.mul(this.n).isInfinity(),'Invalid curve, G*N != O');}curves.PresetCurve=PresetCurve;function defineCurve(name,options){Object.defineProperty(curves,name,{configurable:true,enumerable:true,get:function(){var curve=new PresetCurve(options);Object.defineProperty(curves,name,{configurable:true,enumerable:true,value:curve});return curve;}});}defineCurve('p192',{type:'short',prime:'p192',p:'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',a:'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',b:'64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',n:'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',hash:hash.sha256,gRed:false,g:['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012','07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']});defineCurve('p224',{type:'short',prime:'p224',p:'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',a:'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',b:'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',n:'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',hash:hash.sha256,gRed:false,g:['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21','bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']});defineCurve('p256',{type:'short',prime:null,p:'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',a:'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',b:'5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',n:'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',hash:hash.sha256,gRed:false,g:['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296','4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']});defineCurve('p384',{type:'short',prime:null,p:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '+'fffffffe ffffffff 00000000 00000000 ffffffff',a:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '+'fffffffe ffffffff 00000000 00000000 fffffffc',b:'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f '+'5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',n:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 '+'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',hash:hash.sha384,gRed:false,g:['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 '+'5502f25d bf55296c 3a545e38 72760ab7','3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 '+'0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']});defineCurve('p521',{type:'short',prime:null,p:'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff '+'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '+'ffffffff ffffffff ffffffff ffffffff ffffffff',a:'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff '+'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '+'ffffffff ffffffff ffffffff ffffffff fffffffc',b:'00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b '+'99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd '+'3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',n:'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff '+'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 '+'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',hash:hash.sha512,gRed:false,g:['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 '+'053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 '+'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66','00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 '+'579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 '+'3fad0761 353c7086 a272c240 88be9476 9fd16650']});defineCurve('curve25519',{type:'mont',prime:'p25519',p:'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',a:'76d06',b:'1',n:'1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',hash:hash.sha256,gRed:false,g:['9']});defineCurve('ed25519',{type:'edwards',prime:'p25519',p:'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',a:'-1',c:'1',// -121665 * (121666^(-1)) (mod P)
d:'52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',n:'1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',hash:hash.sha256,gRed:false,g:['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',// 4/5
'6666666666666666666666666666666666666666666666666666666666666658']});var pre;try{pre=require('./precomputed/secp256k1');}catch(e){pre=undefined;}defineCurve('secp256k1',{type:'short',prime:'k256',p:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',a:'0',b:'7',n:'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',h:'1',hash:hash.sha256,// Precomputed endomorphism
beta:'7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',lambda:'5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',basis:[{a:'3086d221a7d46bcde86c90e49284eb15',b:'-e4437ed6010e88286f547fa90abfe4c3'},{a:'114ca50f7a8e2f3f657c1108d9d44cfd8',b:'3086d221a7d46bcde86c90e49284eb15'}],gRed:false,g:['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798','483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',pre]});},{"./curve":164,"./precomputed/secp256k1":174,"./utils":175,"hash.js":209}],168:[function(require,module,exports){'use strict';var BN=require('bn.js');var HmacDRBG=require('hmac-drbg');var utils=require('../utils');var curves=require('../curves');var rand=require('brorand');var assert=utils.assert;var KeyPair=require('./key');var Signature=require('./signature');function EC(options){if(!(this instanceof EC))return new EC(options);// Shortcut `elliptic.ec(curve-name)`
if(typeof options==='string'){assert(Object.prototype.hasOwnProperty.call(curves,options),'Unknown curve '+options);options=curves[options];}// Shortcut for `elliptic.ec(elliptic.curves.curveName)`
if(options instanceof curves.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;// Point on curve
this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);// Hash for function for DRBG
this.hash=options.hash||options.curve.hash;}module.exports=EC;EC.prototype.keyPair=function keyPair(options){return new KeyPair(this,options);};EC.prototype.keyFromPrivate=function keyFromPrivate(priv,enc){return KeyPair.fromPrivate(this,priv,enc);};EC.prototype.keyFromPublic=function keyFromPublic(pub,enc){return KeyPair.fromPublic(this,pub,enc);};EC.prototype.genKeyPair=function genKeyPair(options){if(!options)options={};// Instantiate Hmac_DRBG
var drbg=new HmacDRBG({hash:this.hash,pers:options.pers,persEnc:options.persEnc||'utf8',entropy:options.entropy||rand(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||'utf8',nonce:this.n.toArray()});var bytes=this.n.byteLength();var ns2=this.n.sub(new BN(2));for(;;){var priv=new BN(drbg.generate(bytes));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv);}};EC.prototype._truncateToN=function _truncateToN(msg,truncOnly){var delta=msg.byteLength()*8-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg;};EC.prototype.sign=function sign(msg,key,enc,options){if(typeof enc==='object'){options=enc;enc=null;}if(!options)options={};key=this.keyFromPrivate(key,enc);msg=this._truncateToN(new BN(msg,16));// Zero-extend key to provide enough entropy
var bytes=this.n.byteLength();var bkey=key.getPrivate().toArray('be',bytes);// Zero-extend nonce to have the same byte size as N
var nonce=msg.toArray('be',bytes);// Instantiate Hmac_DRBG
var drbg=new HmacDRBG({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||'utf8'});// Number of bytes to generate
var ns1=this.n.sub(new BN(1));for(var iter=0;;iter++){var k=options.k?options.k(iter):new BN(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);// Use complement of `s`, if it is > `n / 2`
if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1;}return new Signature({r:r,s:s,recoveryParam:recoveryParam});}};EC.prototype.verify=function verify(msg,signature,key,enc){msg=this._truncateToN(new BN(msg,16));key=this.keyFromPublic(key,enc);signature=new Signature(signature,'hex');// Perform primitive values validation
var r=signature.r;var s=signature.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;// Validate signature
var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);var p;if(!this.curve._maxwellTrick){p=this.g.mulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0;}// NOTE: Greg Maxwell's trick, inspired by:
// https://git.io/vad3K
p=this.g.jmulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;// Compare `p.x` of Jacobian point with `r`,
// this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
// inverse of `p.z^2`
return p.eqXToP(r);};EC.prototype.recoverPubKey=function(msg,signature,j,enc){assert((3&j)===j,'The recovery param is more than two bits');signature=new Signature(signature,enc);var n=this.n;var e=new BN(msg);var r=signature.r;var s=signature.s;// A set LSB signifies that the y-coordinate is odd
var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error('Unable to find sencond key candinate');// 1.1. Let x = r + jn.
if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature.r.invm(n);var s1=n.sub(e).mul(rInv).umod(n);var s2=s.mul(rInv).umod(n);// 1.6.1 Compute Q = r^-1 (sR -  eG)
//               Q = r^-1 (sR + -eG)
return this.g.mulAdd(s1,r,s2);};EC.prototype.getKeyRecoveryParam=function(e,signature,Q,enc){signature=new Signature(signature,enc);if(signature.recoveryParam!==null)return signature.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature,i);}catch(e){continue;}if(Qprime.eq(Q))return i;}throw new Error('Unable to find valid recovery factor');};},{"../curves":167,"../utils":175,"./key":169,"./signature":170,"bn.js":176,"brorand":95,"hmac-drbg":221}],169:[function(require,module,exports){'use strict';var BN=require('bn.js');var utils=require('../utils');var assert=utils.assert;function KeyPair(ec,options){this.ec=ec;this.priv=null;this.pub=null;// KeyPair(ec, { priv: ..., pub: ... })
if(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc);}module.exports=KeyPair;KeyPair.fromPublic=function fromPublic(ec,pub,enc){if(pub instanceof KeyPair)return pub;return new KeyPair(ec,{pub:pub,pubEnc:enc});};KeyPair.fromPrivate=function fromPrivate(ec,priv,enc){if(priv instanceof KeyPair)return priv;return new KeyPair(ec,{priv:priv,privEnc:enc});};KeyPair.prototype.validate=function validate(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:'Invalid public key'};if(!pub.validate())return{result:false,reason:'Public key is not a point'};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:'Public key * N != O'};return{result:true,reason:null};};KeyPair.prototype.getPublic=function getPublic(compact,enc){// compact is optional argument
if(typeof compact==='string'){enc=compact;compact=null;}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact);};KeyPair.prototype.getPrivate=function getPrivate(enc){if(enc==='hex')return this.priv.toString(16,2);else return this.priv;};KeyPair.prototype._importPrivate=function _importPrivate(key,enc){this.priv=new BN(key,enc||16);// Ensure that the priv won't be bigger than n, otherwise we may fail
// in fixed multiplication method
this.priv=this.priv.umod(this.ec.curve.n);};KeyPair.prototype._importPublic=function _importPublic(key,enc){if(key.x||key.y){// Montgomery points only have an `x` coordinate.
// Weierstrass/Edwards points on the other hand have both `x` and
// `y` coordinates.
if(this.ec.curve.type==='mont'){assert(key.x,'Need x coordinate');}else if(this.ec.curve.type==='short'||this.ec.curve.type==='edwards'){assert(key.x&&key.y,'Need both x and y coordinate');}this.pub=this.ec.curve.point(key.x,key.y);return;}this.pub=this.ec.curve.decodePoint(key,enc);};// ECDH
KeyPair.prototype.derive=function derive(pub){if(!pub.validate()){assert(pub.validate(),'public point not validated');}return pub.mul(this.priv).getX();};// ECDSA
KeyPair.prototype.sign=function sign(msg,enc,options){return this.ec.sign(msg,this,enc,options);};KeyPair.prototype.verify=function verify(msg,signature){return this.ec.verify(msg,signature,this);};KeyPair.prototype.inspect=function inspect(){return'<Key priv: '+(this.priv&&this.priv.toString(16,2))+' pub: '+(this.pub&&this.pub.inspect())+' >';};},{"../utils":175,"bn.js":176}],170:[function(require,module,exports){'use strict';var BN=require('bn.js');var utils=require('../utils');var assert=utils.assert;function Signature(options,enc){if(options instanceof Signature)return options;if(this._importDER(options,enc))return;assert(options.r&&options.s,'Signature without r or s');this.r=new BN(options.r,16);this.s=new BN(options.s,16);if(options.recoveryParam===undefined)this.recoveryParam=null;else this.recoveryParam=options.recoveryParam;}module.exports=Signature;function Position(){this.place=0;}function getLength(buf,p){var initial=buf[p.place++];if(!(initial&0x80)){return initial;}var octetLen=initial&0xf;// Indefinite length or overflow
if(octetLen===0||octetLen>4){return false;}var val=0;for(var i=0,off=p.place;i<octetLen;i++,off++){val<<=8;val|=buf[off];val>>>=0;}// Leading zeroes
if(val<=0x7f){return false;}p.place=off;return val;}function rmPadding(buf){var i=0;var len=buf.length-1;while(!buf[i]&&!(buf[i+1]&0x80)&&i<len){i++;}if(i===0){return buf;}return buf.slice(i);}Signature.prototype._importDER=function _importDER(data,enc){data=utils.toArray(data,enc);var p=new Position();if(data[p.place++]!==0x30){return false;}var len=getLength(data,p);if(len===false){return false;}if(len+p.place!==data.length){return false;}if(data[p.place++]!==0x02){return false;}var rlen=getLength(data,p);if(rlen===false){return false;}var r=data.slice(p.place,rlen+p.place);p.place+=rlen;if(data[p.place++]!==0x02){return false;}var slen=getLength(data,p);if(slen===false){return false;}if(data.length!==slen+p.place){return false;}var s=data.slice(p.place,slen+p.place);if(r[0]===0){if(r[1]&0x80){r=r.slice(1);}else{// Leading zeroes
return false;}}if(s[0]===0){if(s[1]&0x80){s=s.slice(1);}else{// Leading zeroes
return false;}}this.r=new BN(r);this.s=new BN(s);this.recoveryParam=null;return true;};function constructLength(arr,len){if(len<0x80){arr.push(len);return;}var octets=1+(Math.log(len)/Math.LN2>>>3);arr.push(octets|0x80);while(--octets){arr.push(len>>>(octets<<3)&0xff);}arr.push(len);}Signature.prototype.toDER=function toDER(enc){var r=this.r.toArray();var s=this.s.toArray();// Pad values
if(r[0]&0x80)r=[0].concat(r);// Pad values
if(s[0]&0x80)s=[0].concat(s);r=rmPadding(r);s=rmPadding(s);while(!s[0]&&!(s[1]&0x80)){s=s.slice(1);}var arr=[0x02];constructLength(arr,r.length);arr=arr.concat(r);arr.push(0x02);constructLength(arr,s.length);var backHalf=arr.concat(s);var res=[0x30];constructLength(res,backHalf.length);res=res.concat(backHalf);return utils.encode(res,enc);};},{"../utils":175,"bn.js":176}],171:[function(require,module,exports){'use strict';var hash=require('hash.js');var curves=require('../curves');var utils=require('../utils');var assert=utils.assert;var parseBytes=utils.parseBytes;var KeyPair=require('./key');var Signature=require('./signature');function EDDSA(curve){assert(curve==='ed25519','only tested with ed25519 so far');if(!(this instanceof EDDSA))return new EDDSA(curve);curve=curves[curve].curve;this.curve=curve;this.g=curve.g;this.g.precompute(curve.n.bitLength()+1);this.pointClass=curve.point().constructor;this.encodingLength=Math.ceil(curve.n.bitLength()/8);this.hash=hash.sha512;}module.exports=EDDSA;/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/EDDSA.prototype.sign=function sign(message,secret){message=parseBytes(message);var key=this.keyFromSecret(secret);var r=this.hashInt(key.messagePrefix(),message);var R=this.g.mul(r);var Rencoded=this.encodePoint(R);var s_=this.hashInt(Rencoded,key.pubBytes(),message).mul(key.priv());var S=r.add(s_).umod(this.curve.n);return this.makeSignature({R:R,S:S,Rencoded:Rencoded});};/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/EDDSA.prototype.verify=function verify(message,sig,pub){message=parseBytes(message);sig=this.makeSignature(sig);var key=this.keyFromPublic(pub);var h=this.hashInt(sig.Rencoded(),key.pubBytes(),message);var SG=this.g.mul(sig.S());var RplusAh=sig.R().add(key.pub().mul(h));return RplusAh.eq(SG);};EDDSA.prototype.hashInt=function hashInt(){var hash=this.hash();for(var i=0;i<arguments.length;i++)hash.update(arguments[i]);return utils.intFromLE(hash.digest()).umod(this.curve.n);};EDDSA.prototype.keyFromPublic=function keyFromPublic(pub){return KeyPair.fromPublic(this,pub);};EDDSA.prototype.keyFromSecret=function keyFromSecret(secret){return KeyPair.fromSecret(this,secret);};EDDSA.prototype.makeSignature=function makeSignature(sig){if(sig instanceof Signature)return sig;return new Signature(this,sig);};/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/EDDSA.prototype.encodePoint=function encodePoint(point){var enc=point.getY().toArray('le',this.encodingLength);enc[this.encodingLength-1]|=point.getX().isOdd()?0x80:0;return enc;};EDDSA.prototype.decodePoint=function decodePoint(bytes){bytes=utils.parseBytes(bytes);var lastIx=bytes.length-1;var normed=bytes.slice(0,lastIx).concat(bytes[lastIx]&~0x80);var xIsOdd=(bytes[lastIx]&0x80)!==0;var y=utils.intFromLE(normed);return this.curve.pointFromY(y,xIsOdd);};EDDSA.prototype.encodeInt=function encodeInt(num){return num.toArray('le',this.encodingLength);};EDDSA.prototype.decodeInt=function decodeInt(bytes){return utils.intFromLE(bytes);};EDDSA.prototype.isPoint=function isPoint(val){return val instanceof this.pointClass;};},{"../curves":167,"../utils":175,"./key":172,"./signature":173,"hash.js":209}],172:[function(require,module,exports){'use strict';var utils=require('../utils');var assert=utils.assert;var parseBytes=utils.parseBytes;var cachedProperty=utils.cachedProperty;/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/function KeyPair(eddsa,params){this.eddsa=eddsa;this._secret=parseBytes(params.secret);if(eddsa.isPoint(params.pub))this._pub=params.pub;else this._pubBytes=parseBytes(params.pub);}KeyPair.fromPublic=function fromPublic(eddsa,pub){if(pub instanceof KeyPair)return pub;return new KeyPair(eddsa,{pub:pub});};KeyPair.fromSecret=function fromSecret(eddsa,secret){if(secret instanceof KeyPair)return secret;return new KeyPair(eddsa,{secret:secret});};KeyPair.prototype.secret=function secret(){return this._secret;};cachedProperty(KeyPair,'pubBytes',function pubBytes(){return this.eddsa.encodePoint(this.pub());});cachedProperty(KeyPair,'pub',function pub(){if(this._pubBytes)return this.eddsa.decodePoint(this._pubBytes);return this.eddsa.g.mul(this.priv());});cachedProperty(KeyPair,'privBytes',function privBytes(){var eddsa=this.eddsa;var hash=this.hash();var lastIx=eddsa.encodingLength-1;var a=hash.slice(0,eddsa.encodingLength);a[0]&=248;a[lastIx]&=127;a[lastIx]|=64;return a;});cachedProperty(KeyPair,'priv',function priv(){return this.eddsa.decodeInt(this.privBytes());});cachedProperty(KeyPair,'hash',function hash(){return this.eddsa.hash().update(this.secret()).digest();});cachedProperty(KeyPair,'messagePrefix',function messagePrefix(){return this.hash().slice(this.eddsa.encodingLength);});KeyPair.prototype.sign=function sign(message){assert(this._secret,'KeyPair can only verify');return this.eddsa.sign(message,this);};KeyPair.prototype.verify=function verify(message,sig){return this.eddsa.verify(message,sig,this);};KeyPair.prototype.getSecret=function getSecret(enc){assert(this._secret,'KeyPair is public only');return utils.encode(this.secret(),enc);};KeyPair.prototype.getPublic=function getPublic(enc){return utils.encode(this.pubBytes(),enc);};module.exports=KeyPair;},{"../utils":175}],173:[function(require,module,exports){'use strict';var BN=require('bn.js');var utils=require('../utils');var assert=utils.assert;var cachedProperty=utils.cachedProperty;var parseBytes=utils.parseBytes;/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/function Signature(eddsa,sig){this.eddsa=eddsa;if(typeof sig!=='object')sig=parseBytes(sig);if(Array.isArray(sig)){sig={R:sig.slice(0,eddsa.encodingLength),S:sig.slice(eddsa.encodingLength)};}assert(sig.R&&sig.S,'Signature without R or S');if(eddsa.isPoint(sig.R))this._R=sig.R;if(sig.S instanceof BN)this._S=sig.S;this._Rencoded=Array.isArray(sig.R)?sig.R:sig.Rencoded;this._Sencoded=Array.isArray(sig.S)?sig.S:sig.Sencoded;}cachedProperty(Signature,'S',function S(){return this.eddsa.decodeInt(this.Sencoded());});cachedProperty(Signature,'R',function R(){return this.eddsa.decodePoint(this.Rencoded());});cachedProperty(Signature,'Rencoded',function Rencoded(){return this.eddsa.encodePoint(this.R());});cachedProperty(Signature,'Sencoded',function Sencoded(){return this.eddsa.encodeInt(this.S());});Signature.prototype.toBytes=function toBytes(){return this.Rencoded().concat(this.Sencoded());};Signature.prototype.toHex=function toHex(){return utils.encode(this.toBytes(),'hex').toUpperCase();};module.exports=Signature;},{"../utils":175,"bn.js":176}],174:[function(require,module,exports){module.exports={doubles:{step:4,points:[['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a','f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'],['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508','11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'],['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739','d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'],['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640','4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'],['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c','4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'],['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda','96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'],['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa','5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'],['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0','cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'],['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d','9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'],['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d','e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'],['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1','9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'],['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0','5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'],['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047','10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'],['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862','283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'],['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7','7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'],['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd','56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'],['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83','7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'],['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a','53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'],['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8','bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'],['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d','4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'],['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725','7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'],['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754','4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'],['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c','17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'],['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6','6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'],['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39','c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'],['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891','893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'],['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b','febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'],['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03','2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'],['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d','eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'],['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070','7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'],['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4','e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'],['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da','662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'],['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11','1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'],['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e','efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'],['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41','2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'],['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef','67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'],['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8','db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'],['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d','648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'],['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96','35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'],['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd','ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'],['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5','9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'],['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266','40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'],['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71','34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'],['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac','c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'],['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751','1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'],['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e','493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'],['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241','c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'],['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3','be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'],['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f','4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'],['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19','aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'],['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be','b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'],['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9','6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'],['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2','8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'],['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13','7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'],['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c','ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'],['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba','2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'],['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151','e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'],['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073','d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'],['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458','38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'],['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b','69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'],['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366','d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'],['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa','40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'],['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0','620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'],['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787','7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'],['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e','ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]},naf:{wnd:7,points:[['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9','388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'],['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4','d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'],['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc','6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'],['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe','cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'],['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb','d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'],['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8','ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'],['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e','581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'],['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34','4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'],['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c','85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'],['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5','321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'],['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f','2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'],['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714','73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'],['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729','a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'],['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db','2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'],['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4','e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'],['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5','b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'],['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479','2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'],['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d','80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'],['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f','1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'],['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb','d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'],['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9','eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'],['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963','758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'],['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74','958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'],['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530','e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'],['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b','5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'],['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247','cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'],['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1','cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'],['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120','4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'],['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435','91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'],['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18','673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'],['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8','59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'],['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb','3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'],['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f','55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'],['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143','efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'],['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba','e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'],['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45','f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'],['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a','744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'],['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e','c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'],['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8','e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'],['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c','30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'],['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519','e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'],['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab','100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'],['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca','ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'],['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf','8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'],['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610','68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'],['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4','f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'],['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c','d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'],['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940','edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'],['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980','a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'],['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3','66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'],['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf','9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'],['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63','4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'],['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448','fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'],['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf','5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'],['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5','8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'],['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6','8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'],['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5','5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'],['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99','f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'],['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51','f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'],['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5','42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'],['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5','204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'],['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997','4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'],['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881','73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'],['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5','39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'],['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66','d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'],['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726','ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'],['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede','6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'],['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94','60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'],['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31','3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'],['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51','b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'],['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252','ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'],['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5','cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'],['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b','6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'],['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4','322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'],['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f','6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'],['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889','2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'],['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246','b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'],['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984','998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'],['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a','b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'],['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030','bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'],['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197','6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'],['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593','c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'],['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef','21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'],['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38','60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'],['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a','49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'],['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111','5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'],['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502','7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'],['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea','be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'],['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26','8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'],['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986','39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'],['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e','62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'],['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4','25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'],['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda','ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'],['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859','cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'],['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f','f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'],['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c','6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'],['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942','fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'],['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a','1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'],['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80','5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'],['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d','438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'],['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1','cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'],['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63','c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'],['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352','6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'],['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193','ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'],['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00','9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'],['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58','ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'],['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7','d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'],['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8','c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'],['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e','67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'],['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d','cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'],['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b','299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'],['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f','f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'],['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6','462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'],['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297','62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'],['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a','7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'],['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c','ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'],['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52','4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'],['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb','bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'],['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065','bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'],['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917','603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'],['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9','cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'],['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3','553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'],['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57','712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'],['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66','ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'],['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8','9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'],['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721','9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'],['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180','4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]}};},{}],175:[function(require,module,exports){'use strict';var utils=exports;var BN=require('bn.js');var minAssert=require('minimalistic-assert');var minUtils=require('minimalistic-crypto-utils');utils.assert=minAssert;utils.toArray=minUtils.toArray;utils.zero2=minUtils.zero2;utils.toHex=minUtils.toHex;utils.encode=minUtils.encode;// Represent num in a w-NAF form
function getNAF(num,w,bits){var naf=new Array(Math.max(num.bitLength(),bits)+1);naf.fill(0);var ws=1<<w+1;var k=num.clone();for(var i=0;i<naf.length;i++){var z;var mod=k.andln(ws-1);if(k.isOdd()){if(mod>(ws>>1)-1)z=(ws>>1)-mod;else z=mod;k.isubn(z);}else{z=0;}naf[i]=z;k.iushrn(1);}return naf;}utils.getNAF=getNAF;// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1,k2){var jsf=[[],[]];k1=k1.clone();k2=k2.clone();var d1=0;var d2=0;var m8;while(k1.cmpn(-d1)>0||k2.cmpn(-d2)>0){// First phase
var m14=k1.andln(3)+d1&3;var m24=k2.andln(3)+d2&3;if(m14===3)m14=-1;if(m24===3)m24=-1;var u1;if((m14&1)===0){u1=0;}else{m8=k1.andln(7)+d1&7;if((m8===3||m8===5)&&m24===2)u1=-m14;else u1=m14;}jsf[0].push(u1);var u2;if((m24&1)===0){u2=0;}else{m8=k2.andln(7)+d2&7;if((m8===3||m8===5)&&m14===2)u2=-m24;else u2=m24;}jsf[1].push(u2);// Second phase
if(2*d1===u1+1)d1=1-d1;if(2*d2===u2+1)d2=1-d2;k1.iushrn(1);k2.iushrn(1);}return jsf;}utils.getJSF=getJSF;function cachedProperty(obj,name,computer){var key='_'+name;obj.prototype[name]=function cachedProperty(){return this[key]!==undefined?this[key]:this[key]=computer.call(this);};}utils.cachedProperty=cachedProperty;function parseBytes(bytes){return typeof bytes==='string'?utils.toArray(bytes,'hex'):bytes;}utils.parseBytes=parseBytes;function intFromLE(bytes){return new BN(bytes,'hex','le');}utils.intFromLE=intFromLE;},{"bn.js":176,"minimalistic-assert":228,"minimalistic-crypto-utils":229}],176:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments);},{"buffer":96,"dup":2}],177:[function(require,module,exports){module.exports={"name":"elliptic","version":"6.5.4","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}};},{}],178:[function(require,module,exports){/**
 * EOSIO Signing Request v2.2.2
 * https://github.com/greymass/eosio-signing-request
 *
 * @license
 * Copyright © 2021 Greymass Inc.
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the “Software”), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR
 * INTENDED FOR USE IN THE DESIGN, CONSTRUCTION, OPERATION OR
 * MAINTENANCE OF ANY MILITARY FACILITY.
 */'use strict';Object.defineProperty(exports,'__esModule',{value:true});var tslib=require('tslib');var eosio=require('@greymass/eosio');/**
 * Base64u - URL-Safe Base64 variant no padding.
 * Based on https://gist.github.com/jonleighton/958841
 */const baseCharset='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';const lookup=new Uint8Array(256);for(let i=0;i<62;i++){lookup[baseCharset.charCodeAt(i)]=i;}// support both urlsafe and standard base64
lookup[43]=lookup[45]=62;lookup[47]=lookup[95]=63;function encode(data,urlSafe=true){const byteLength=data.byteLength;const byteRemainder=byteLength%3;const mainLength=byteLength-byteRemainder;const charset=baseCharset+(urlSafe?'-_':'+/');const parts=[];let a;let b;let c;let d;let chunk;// Main loop deals with bytes in chunks of 3
for(let i=0;i<mainLength;i+=3){// Combine the three bytes into a single integer
chunk=data[i]<<16|data[i+1]<<8|data[i+2];// Use bitmasks to extract 6-bit segments from the triplet
a=(chunk&16515072)>>18;// 16515072 = (2^6 - 1) << 18
b=(chunk&258048)>>12;// 258048   = (2^6 - 1) << 12
c=(chunk&4032)>>6;// 4032     = (2^6 - 1) << 6
d=chunk&63;// 63       =  2^6 - 1
// Convert the raw binary segments to the appropriate ASCII encoding
parts.push(charset[a]+charset[b]+charset[c]+charset[d]);}// Deal with the remaining bytes
if(byteRemainder===1){chunk=data[mainLength];a=(chunk&252)>>2;// 252 = (2^6 - 1) << 2
// Set the 4 least significant bits to zero
b=(chunk&3)<<4;// 3   = 2^2 - 1
parts.push(charset[a]+charset[b]);}else if(byteRemainder===2){chunk=data[mainLength]<<8|data[mainLength+1];a=(chunk&64512)>>10;// 64512 = (2^6 - 1) << 10
b=(chunk&1008)>>4;// 1008  = (2^6 - 1) << 4
// Set the 2 least significant bits to zero
c=(chunk&15)<<2;// 15    = 2^4 - 1
parts.push(charset[a]+charset[b]+charset[c]);}return parts.join('');}function decode(input){const byteLength=input.length*0.75;const data=new Uint8Array(byteLength);let a;let b;let c;let d;let p=0;for(let i=0;i<input.length;i+=4){a=lookup[input.charCodeAt(i)];b=lookup[input.charCodeAt(i+1)];c=lookup[input.charCodeAt(i+2)];d=lookup[input.charCodeAt(i+3)];data[p++]=a<<2|b>>4;data[p++]=(b&15)<<4|c>>2;data[p++]=(c&3)<<6|d&63;}return data;}var base64u=/*#__PURE__*/Object.freeze({__proto__:null,encode:encode,decode:decode});/** Chain ID aliases. */exports.ChainName=void 0;(function(ChainName){ChainName[ChainName["UNKNOWN"]=0]="UNKNOWN";ChainName[ChainName["EOS"]=1]="EOS";ChainName[ChainName["TELOS"]=2]="TELOS";ChainName[ChainName["JUNGLE"]=3]="JUNGLE";ChainName[ChainName["KYLIN"]=4]="KYLIN";ChainName[ChainName["WORBLI"]=5]="WORBLI";ChainName[ChainName["BOS"]=6]="BOS";ChainName[ChainName["MEETONE"]=7]="MEETONE";ChainName[ChainName["INSIGHTS"]=8]="INSIGHTS";ChainName[ChainName["BEOS"]=9]="BEOS";ChainName[ChainName["WAX"]=10]="WAX";ChainName[ChainName["PROTON"]=11]="PROTON";ChainName[ChainName["FIO"]=12]="FIO";})(exports.ChainName||(exports.ChainName={}));exports.ChainId=class ChainId extends eosio.Checksum256{static from(value){if(eosio.isInstanceOf(value,this)){return value;}if(typeof value==='number'){value=ChainIdLookup.get(value);if(!value){throw new Error('Unknown chain id alias');}}return super.from(value);}get chainVariant(){const name=this.chainName;if(name!==exports.ChainName.UNKNOWN){return exports.ChainIdVariant.from(['chain_alias',name]);}return exports.ChainIdVariant.from(this);}get chainName(){const cid=this.hexString;for(const[n,id]of ChainIdLookup){if(id===cid){return n;}}return exports.ChainName.UNKNOWN;}};exports.ChainId=tslib.__decorate([eosio.TypeAlias('chain_id')],exports.ChainId);exports.ChainAlias=class ChainAlias extends eosio.UInt8{};exports.ChainAlias=tslib.__decorate([eosio.TypeAlias('chain_alias')],exports.ChainAlias);exports.ChainIdVariant=class ChainIdVariant extends eosio.Variant{get chainId(){if(eosio.isInstanceOf(this.value,exports.ChainId)){return this.value;}return exports.ChainId.from(Number(this.value.value));}};exports.ChainIdVariant=tslib.__decorate([eosio.Variant.type('variant_id',[exports.ChainAlias,exports.ChainId])],exports.ChainIdVariant);const ChainIdLookup=new Map([[exports.ChainName.EOS,'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'],[exports.ChainName.TELOS,'4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11'],[exports.ChainName.JUNGLE,'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'],[exports.ChainName.KYLIN,'5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'],[exports.ChainName.WORBLI,'73647cde120091e0a4b85bced2f3cfdb3041e266cbbe95cee59b73235a1b3b6f'],[exports.ChainName.BOS,'d5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86'],[exports.ChainName.MEETONE,'cfe6486a83bad4962f232d48003b1824ab5665c36778141034d75e57b956e422'],[exports.ChainName.INSIGHTS,'b042025541e25a472bffde2d62edd457b7e70cee943412b1ea0f044f88591664'],[exports.ChainName.BEOS,'b912d19a6abd2b1b05611ae5be473355d64d95aeff0c09bedc8c166cd6468fe4'],[exports.ChainName.WAX,'1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4'],[exports.ChainName.PROTON,'384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0'],[exports.ChainName.FIO,'21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c']]);/** SigningRequest ABI and typedefs. */var RequestFlags_1;exports.AccountName=class AccountName extends eosio.Name{};exports.AccountName=tslib.__decorate([eosio.TypeAlias('account_name')],exports.AccountName);exports.PermissionName=class PermissionName extends eosio.Name{};exports.PermissionName=tslib.__decorate([eosio.TypeAlias('permission_name')],exports.PermissionName);exports.IdentityV2=class IdentityV2 extends eosio.Struct{};tslib.__decorate([eosio.Struct.field(eosio.PermissionLevel,{optional:true})],exports.IdentityV2.prototype,"permission",void 0);exports.IdentityV2=tslib.__decorate([eosio.Struct.type('identity')],exports.IdentityV2);exports.IdentityV3=class IdentityV3 extends eosio.Struct{};tslib.__decorate([eosio.Struct.field('name')],exports.IdentityV3.prototype,"scope",void 0);tslib.__decorate([eosio.Struct.field(eosio.PermissionLevel,{optional:true})],exports.IdentityV3.prototype,"permission",void 0);exports.IdentityV3=tslib.__decorate([eosio.Struct.type('identity')],exports.IdentityV3);exports.RequestVariantV2=class RequestVariantV2 extends eosio.Variant{};exports.RequestVariantV2=tslib.__decorate([eosio.Variant.type('variant_req',[eosio.Action,{type:eosio.Action,array:true},eosio.Transaction,exports.IdentityV2])],exports.RequestVariantV2);exports.RequestVariantV3=class RequestVariantV3 extends eosio.Variant{};exports.RequestVariantV3=tslib.__decorate([eosio.Variant.type('variant_req',[eosio.Action,{type:eosio.Action,array:true},eosio.Transaction,exports.IdentityV3])],exports.RequestVariantV3);exports.RequestFlags=RequestFlags_1=class RequestFlags extends eosio.UInt8{get broadcast(){return(Number(this)&RequestFlags_1.broadcast)!==0;}set broadcast(enabled){this.setFlag(RequestFlags_1.broadcast,enabled);}get background(){return(Number(this)&RequestFlags_1.background)!==0;}set background(enabled){this.setFlag(RequestFlags_1.background,enabled);}setFlag(flag,enabled){if(enabled){// TODO: implement bitwise operators in core, bn.js setbit does not work
this.value=eosio.UInt8.from(Number(this)|flag).value;}else{this.value.imaskn(flag);}}};exports.RequestFlags.broadcast=1<<0;exports.RequestFlags.background=1<<1;exports.RequestFlags=RequestFlags_1=tslib.__decorate([eosio.TypeAlias('request_flags')],exports.RequestFlags);exports.InfoPair=class InfoPair extends eosio.Struct{};tslib.__decorate([eosio.Struct.field('string')],exports.InfoPair.prototype,"key",void 0);tslib.__decorate([eosio.Struct.field('bytes')],exports.InfoPair.prototype,"value",void 0);exports.InfoPair=tslib.__decorate([eosio.Struct.type('info_pair')],exports.InfoPair);exports.RequestDataV2=class RequestDataV2 extends eosio.Struct{};tslib.__decorate([eosio.Struct.field(exports.ChainIdVariant)],exports.RequestDataV2.prototype,"chain_id",void 0);tslib.__decorate([eosio.Struct.field(exports.RequestVariantV2)],exports.RequestDataV2.prototype,"req",void 0);tslib.__decorate([eosio.Struct.field(exports.RequestFlags)],exports.RequestDataV2.prototype,"flags",void 0);tslib.__decorate([eosio.Struct.field('string')],exports.RequestDataV2.prototype,"callback",void 0);tslib.__decorate([eosio.Struct.field(exports.InfoPair,{array:true})],exports.RequestDataV2.prototype,"info",void 0);exports.RequestDataV2=tslib.__decorate([eosio.Struct.type('signing_request')],exports.RequestDataV2);exports.RequestDataV3=class RequestDataV3 extends eosio.Struct{};tslib.__decorate([eosio.Struct.field(exports.ChainIdVariant)],exports.RequestDataV3.prototype,"chain_id",void 0);tslib.__decorate([eosio.Struct.field(exports.RequestVariantV3)],exports.RequestDataV3.prototype,"req",void 0);tslib.__decorate([eosio.Struct.field(exports.RequestFlags)],exports.RequestDataV3.prototype,"flags",void 0);tslib.__decorate([eosio.Struct.field('string')],exports.RequestDataV3.prototype,"callback",void 0);tslib.__decorate([eosio.Struct.field(exports.InfoPair,{array:true})],exports.RequestDataV3.prototype,"info",void 0);exports.RequestDataV3=tslib.__decorate([eosio.Struct.type('signing_request')],exports.RequestDataV3);exports.RequestSignature=class RequestSignature extends eosio.Struct{};tslib.__decorate([eosio.Struct.field('name')],exports.RequestSignature.prototype,"signer",void 0);tslib.__decorate([eosio.Struct.field('signature')],exports.RequestSignature.prototype,"signature",void 0);exports.RequestSignature=tslib.__decorate([eosio.Struct.type('request_signature')],exports.RequestSignature);var IdentityProof_1;exports.IdentityProof=IdentityProof_1=class IdentityProof extends eosio.Struct{static from(value){if(eosio.isInstanceOf(value,IdentityProof_1)){return value;}else if(typeof value==='string'){return IdentityProof_1.fromString(value);}else{return super.from(value);}}/**
     * Create a new instance from an EOSIO authorization header string.
     * "EOSIO <base64payload>"
     */static fromString(string){const parts=string.split(' ');if(parts.length!==2||parts[0]!=='EOSIO'){throw new Error('Invalid IdentityProof string');}const data=decode(parts[1]);return eosio.Serializer.decode({data,type:IdentityProof_1});}/** Create a new instance from a callback payload. */static fromPayload(payload,options={}){const request=SigningRequest.from(payload.req,options);if(!(request.version>=3&&request.isIdentity())){throw new Error('Not an identity request');}return this.from({chainId:payload.cid||request.getChainId(),scope:request.getIdentityScope(),expiration:payload.ex,signer:{actor:payload.sa,permission:payload.sp},signature:payload.sig});}/**
     * Transaction this proof resolves to.
     * @internal
     */get transaction(){const action=eosio.Action.from({account:'',name:'identity',authorization:[this.signer],data:exports.IdentityV3.from({scope:this.scope,permission:this.signer})});return eosio.Transaction.from({ref_block_num:0,ref_block_prefix:0,expiration:this.expiration,actions:[action]});}/**
     * Recover the public key that signed this proof.
     */recover(){return this.signature.recoverDigest(this.transaction.signingDigest(this.chainId));}/**
     * Verify that given authority signed this proof.
     * @param auth The accounts signing authority.
     * @param currentTime Time to verify expiry against, if unset will use system time.
     */verify(auth,currentTime){const now=eosio.TimePointSec.from(currentTime||new Date()).toMilliseconds();return now<this.expiration.toMilliseconds()&&eosio.Authority.from(auth).hasPermission(this.recover());}/**
     * Encode the proof to an `EOSIO` auth header string.
     */toString(){const data=eosio.Serializer.encode({object:this});return`EOSIO ${encode(data.array,false)}`;}};tslib.__decorate([eosio.Struct.field(exports.ChainId)],exports.IdentityProof.prototype,"chainId",void 0);tslib.__decorate([eosio.Struct.field(eosio.Name)],exports.IdentityProof.prototype,"scope",void 0);tslib.__decorate([eosio.Struct.field(eosio.TimePointSec)],exports.IdentityProof.prototype,"expiration",void 0);tslib.__decorate([eosio.Struct.field(eosio.PermissionLevel)],exports.IdentityProof.prototype,"signer",void 0);tslib.__decorate([eosio.Struct.field(eosio.Signature)],exports.IdentityProof.prototype,"signature",void 0);exports.IdentityProof=IdentityProof_1=tslib.__decorate([eosio.Struct.type('identity_proof')],exports.IdentityProof);/**
 * EOSIO Signing Request (ESR).
 *//** Current supported protocol version, backwards compatible with version 2. */const ProtocolVersion=3;/**
 * The placeholder name: `............1` aka `uint64(1)`.
 * If used in action data will be resolved to current signer.
 * If used in as an authorization permission will be resolved to
 * the signers permission level.
 *
 * Example action:
 * ```
 * { account: "eosio.token",
 *   name: "transfer",
 *   authorization: [{actor: "............1", permission: "............1"}],
 *   data: {
 *     from: "............1",
 *     to: "bar",
 *     quantity: "42.0000 EOS",
 *     memo: "Don't panic" }}
 * ```
 * When signed by `foo@active` would resolve to:
 * ```
 * { account: "eosio.token",
 *   name: "transfer",
 *   authorization: [{actor: "foo", permission: "active"}],
 *   data: {
 *     from: "foo",
 *     to: "bar",
 *     quantity: "42.0000 EOS",
 *     memo: "Don't panic" }}
 * ```
 */const PlaceholderName=eosio.Name.from('............1');// aka uint64(1)
/** Placeholder that will resolve to signer permission name. */const PlaceholderPermission=eosio.Name.from('............2');// aka uint64(2)
const PlaceholderAuth=eosio.PermissionLevel.from({actor:PlaceholderName,permission:PlaceholderPermission});class SigningRequest{/**
     * Create a new signing request.
     * Normally not used directly, see the `create` and `from` class methods.
     */constructor(version,data,zlib,abiProvider,signature){if(data.flags.broadcast&&data.req.variantName==='identity'){throw new Error('Invalid request (identity request cannot be broadcast)');}this.version=version;this.data=data;this.zlib=zlib;this.abiProvider=abiProvider;this.signature=signature;}/** Return the identity ABI for given version. */static identityAbi(version){const abi=eosio.Serializer.synthesize(this.identityType(version));abi.actions=[{name:'identity',type:'identity',ricardian_contract:''}];return abi;}/** Return the ABISerializableType identity type for given version. */static identityType(version){return version===2?exports.IdentityV2:exports.IdentityV3;}/** Return the ABISerializableType storage type for given version. */static storageType(version){return version===2?exports.RequestDataV2:exports.RequestDataV3;}/** Create a new signing request. */static create(args,options={}){return tslib.__awaiter(this,void 0,void 0,function*(){let actions;if(args.action){actions=[args.action];}else if(args.actions){actions=args.actions;}else if(args.transaction){actions=args.transaction.actions||[];}else{actions=[];}const requiredAbis=actions.filter(action=>!eosio.Bytes.isBytes(action.data)&&action.data.constructor.abiName===undefined).map(action=>eosio.Name.from(action.account));const abis={};if(requiredAbis.length>0){const provider=options.abiProvider;if(!provider){throw new Error('Missing abi provider');}const accountAbis=yield Promise.all(requiredAbis.map(account=>provider.getAbi(account)));for(const[idx,abi]of accountAbis.entries()){abis[requiredAbis[idx].toString()]=abi;}}return this.createSync(args,options,abis);});}/**
     * Synchronously create a new signing request.
     * @throws If an un-encoded action with no abi def is encountered.
     */static createSync(args,options={},abis={}){let version=2;const data={};const encode=action=>encodeAction(action,abis);// multi-chain requests requires version 3
if(args.chainId===null){version=3;}// set the request data
if(args.identity!==undefined){if(args.identity.scope){version=3;}data.req=['identity',this.identityType(version).from(args.identity)];}else if(args.action&&!args.actions&&!args.transaction){data.req=['action',encode(args.action)];}else if(args.actions&&!args.action&&!args.transaction){if(args.actions.length===1){data.req=['action',encode(args.actions[0])];}else{data.req=['action[]',args.actions.map(encode)];}}else if(args.transaction&&!args.action&&!args.actions){const tx=args.transaction;// set default values if missing
if(tx.expiration===undefined){tx.expiration='1970-01-01T00:00:00.000';}if(tx.ref_block_num===undefined){tx.ref_block_num=0;}if(tx.ref_block_prefix===undefined){tx.ref_block_prefix=0;}if(tx.context_free_actions===undefined){tx.context_free_actions=[];}if(tx.transaction_extensions===undefined){tx.transaction_extensions=[];}if(tx.delay_sec===undefined){tx.delay_sec=0;}if(tx.max_cpu_usage_ms===undefined){tx.max_cpu_usage_ms=0;}if(tx.max_net_usage_words===undefined){tx.max_net_usage_words=0;}if(tx.actions===undefined){tx.actions=[];}if(tx.context_free_actions===undefined){tx.context_free_actions=[];}// encode actions if needed
tx.actions=tx.actions.map(encode);data.req=['transaction',tx];}else{throw new TypeError('Invalid arguments: Must have exactly one of action, actions or transaction');}// set the chain id
if(args.chainId===null){data.chain_id=exports.ChainIdVariant.from(['chain_alias',0]);}else{data.chain_id=exports.ChainId.from(args.chainId||exports.ChainName.EOS).chainVariant;}// request flags and callback
const flags=exports.RequestFlags.from(0);let callback='';flags.broadcast=args.broadcast!==undefined?args.broadcast:data.req[0]!=='identity';if(typeof args.callback==='string'){callback=args.callback;}else if(typeof args.callback==='object'){callback=args.callback.url;flags.background=args.callback.background||false;}data.flags=flags;data.callback=callback;// info pairs
data.info=[];if(typeof args.info==='object'){for(const key in args.info){const isOwn=Object.prototype.hasOwnProperty.call(args.info,key);if(isOwn){let value=args.info[key];if(typeof value==='string'){value=eosio.Bytes.from(value,'utf8');}else if(!(value instanceof eosio.Bytes)){value=eosio.Serializer.encode({object:value});}data.info.push({key,value});}}}if(args.chainIds&&args.chainId===null){const ids=args.chainIds.map(id=>exports.ChainId.from(id).chainVariant);data.info.push({key:'chain_ids',value:eosio.Serializer.encode({object:ids,type:{type:exports.ChainIdVariant,array:true}})});}const req=new SigningRequest(version,this.storageType(version).from(data),options.zlib,options.abiProvider);// sign the request if given a signature provider
if(options.signatureProvider){req.sign(options.signatureProvider);}return req;}/** Creates an identity request. */static identity(args,options={}){let permission={actor:args.account||PlaceholderName,permission:args.permission||PlaceholderPermission};if(permission.actor===PlaceholderName&&permission.permission===PlaceholderPermission){permission=undefined;}return this.createSync(Object.assign(Object.assign({},args),{identity:{permission,scope:args.scope},broadcast:false}),options);}/**
     * Create a request from a chain id and serialized transaction.
     * @param chainId The chain id where the transaction is valid.
     * @param serializedTransaction The serialized transaction.
     * @param options Creation options.
     */static fromTransaction(chainId,serializedTransaction,options={}){const id=exports.ChainId.from(chainId);serializedTransaction=eosio.Bytes.from(serializedTransaction);const encoder=new eosio.ABIEncoder();encoder.writeByte(2);// header
encoder.writeArray(eosio.Serializer.encode({object:id.chainVariant}).array);encoder.writeByte(2);// transaction variant
encoder.writeArray(eosio.Bytes.from(serializedTransaction).array);encoder.writeByte(exports.RequestFlags.broadcast);encoder.writeByte(0);// callback
encoder.writeByte(0);// info
return SigningRequest.fromData(encoder.getData(),options);}/** Creates a signing request from encoded `esr:` uri string. */static from(uri,options={}){if(typeof uri!=='string'){throw new Error('Invalid request uri');}const[scheme,path]=uri.split(':');if(scheme!=='esr'&&scheme!=='web+esr'){throw new Error('Invalid scheme');}const data=decode(path.startsWith('//')?path.slice(2):path);return SigningRequest.fromData(data,options);}static fromData(data,options={}){data=eosio.Bytes.from(data);const header=data.array[0];const version=header&~(1<<7);if(version!==2&&version!==3){throw new Error('Unsupported protocol version');}let payload=data.droppingFirst(1);if((header&1<<7)!==0){if(!options.zlib){throw new Error('Compressed URI needs zlib');}payload=eosio.Bytes.from(options.zlib.inflateRaw(payload.array));}const decoder=new eosio.ABIDecoder(payload.array);const req=eosio.Serializer.decode({data:decoder,type:this.storageType(version)});let sig;if(decoder.canRead()){sig=eosio.Serializer.decode({data:decoder,type:exports.RequestSignature});}return new SigningRequest(version,req,options.zlib,options.abiProvider,sig);}/**
     * Sign the request, mutating.
     * @param signatureProvider The signature provider that provides a signature for the signer.
     */sign(signatureProvider){const message=this.getSignatureDigest();this.signature=exports.RequestSignature.from(signatureProvider.sign(message));}/**
     * Get the signature digest for this request.
     */getSignatureDigest(){// protocol version + utf8 "request"
const prefix=[this.version,0x72,0x65,0x71,0x75,0x65,0x73,0x74];return eosio.Checksum256.hash(eosio.Bytes.from(prefix).appending(this.getData()));}/**
     * Set the signature data for this request, mutating.
     * @param signer Account name of signer.
     * @param signature The signature string.
     */setSignature(signer,signature){this.signature=exports.RequestSignature.from({signer,signature});}/**
     * Set the request callback, mutating.
     * @param url Where the callback should be sent.
     * @param background Whether the callback should be sent in the background.
     */setCallback(url,background){this.data.callback=url;this.data.flags.background=background;}/**
     * Set broadcast flag.
     * @param broadcast Whether the transaction should be broadcast by receiver.
     */setBroadcast(broadcast){this.data.flags.broadcast=broadcast;}/**
     * Encode this request into an `esr:` uri.
     * @argument compress Whether to compress the request data using zlib,
     *                    defaults to true if omitted and zlib is present;
     *                    otherwise false.
     * @argument slashes Whether add slashes after the protocol scheme, i.e. `esr://`.
     *                   Defaults to true.
     * @returns An esr uri string.
     */encode(compress,slashes){const shouldCompress=compress!==undefined?compress:this.zlib!==undefined;if(shouldCompress&&this.zlib===undefined){throw new Error('Need zlib to compress');}let header=this.version;const data=this.getData();const sigData=this.getSignatureData();let array=new Uint8Array(data.byteLength+sigData.byteLength);array.set(data,0);array.set(sigData,data.byteLength);if(shouldCompress){const deflated=this.zlib.deflateRaw(array);if(array.byteLength>deflated.byteLength){header|=1<<7;array=deflated;}}const out=new Uint8Array(1+array.byteLength);out[0]=header;out.set(array,1);let scheme='esr:';if(slashes!==false){scheme+='//';}return scheme+encode(out);}/** Get the request data without header or signature. */getData(){return eosio.Serializer.encode({object:this.data}).array;}/** Get signature data, returns an empty array if request is not signed. */getSignatureData(){if(!this.signature){return new Uint8Array(0);}return eosio.Serializer.encode({object:this.signature}).array;}/** ABI definitions required to resolve request. */getRequiredAbis(){return this.getRawActions().filter(action=>!isIdentity(action)).map(action=>action.account).filter((value,index,self)=>self.indexOf(value)===index);}/** Whether TaPoS values are required to resolve request. */requiresTapos(){const tx=this.getRawTransaction();return!this.isIdentity()&&!hasTapos(tx);}/** Resolve required ABI definitions. */fetchAbis(abiProvider){return tslib.__awaiter(this,void 0,void 0,function*(){const required=this.getRequiredAbis();if(required.length>0){const provider=abiProvider||this.abiProvider;if(!provider){throw new Error('Missing ABI provider');}const abis=new Map();yield Promise.all(required.map(account=>tslib.__awaiter(this,void 0,void 0,function*(){abis.set(account.toString(),eosio.ABI.from((yield provider.getAbi(account))));})));return abis;}else{return new Map();}});}/**
     * Decode raw actions actions to object representations.
     * @param abis ABI defenitions required to decode all actions.
     * @param signer Placeholders in actions will be resolved to signer if set.
     */resolveActions(abis,signer){return this.getRawActions().map(rawAction=>{let abi;if(isIdentity(rawAction)){abi=this.constructor.identityAbi(this.version);}else{const rawAbi=abis.get(rawAction.account.toString());if(!rawAbi){throw new Error(`Missing ABI definition for ${rawAction.account}`);}abi=eosio.ABI.from(rawAbi);}const type=abi.getActionType(rawAction.name);if(!type){throw new Error(`Missing type for action ${rawAction.account}:${rawAction.name} in ABI`);}let data=rawAction.decodeData(abi);let authorization=rawAction.authorization;if(signer){const signerPerm=eosio.PermissionLevel.from(signer);const resolve=value=>{if(value instanceof eosio.Name){if(value.equals(PlaceholderName)){return signerPerm.actor;}else if(value.equals(PlaceholderPermission)){return signerPerm.permission;}else{return value;}}else if(Array.isArray(value)){return value.map(resolve);}else if(typeof value==='object'&&value!==null){for(const key of Object.keys(value)){value[key]=resolve(value[key]);}return value;}else{return value;}};data=resolve(data);authorization=authorization.map(auth=>{let{actor,permission}=auth;if(actor.equals(PlaceholderName)){actor=signerPerm.actor;}if(permission.equals(PlaceholderPermission)){permission=signerPerm.permission;}// backwards compatibility, actor placeholder will also resolve to permission when used in auth
if(permission.equals(PlaceholderName)){permission=signerPerm.permission;}return eosio.PermissionLevel.from({actor,permission});});}return Object.assign(Object.assign({},rawAction),{authorization,data});});}resolveTransaction(abis,signer,ctx={}){const tx=this.getRawTransaction();if(!this.isIdentity()&&!hasTapos(tx)){if(ctx.expiration!==undefined&&ctx.ref_block_num!==undefined&&ctx.ref_block_prefix!==undefined){tx.expiration=eosio.TimePointSec.from(ctx.expiration);tx.ref_block_num=eosio.UInt16.from(ctx.ref_block_num);tx.ref_block_prefix=eosio.UInt32.from(ctx.ref_block_prefix);}else if(ctx.block_num!==undefined&&ctx.ref_block_prefix!==undefined&&ctx.timestamp!==undefined){tx.expiration=expirationTime(ctx.timestamp,ctx.expire_seconds);tx.ref_block_num=eosio.UInt16.from(ctx.block_num);tx.ref_block_prefix=eosio.UInt32.from(ctx.ref_block_prefix);}else{throw new Error('Invalid transaction context, need either a reference block or explicit TaPoS values');}}else if(this.isIdentity()&&this.version>2){// From ESR version 3 all identity requests have expiration
tx.expiration=ctx.expiration?eosio.TimePointSec.from(ctx.expiration):expirationTime(ctx.timestamp,ctx.expire_seconds);}const actions=this.resolveActions(abis,signer);// TODO: resolve context free actions
const context_free_actions=tx.context_free_actions;return Object.assign(Object.assign({},tx),{context_free_actions,actions});}resolve(abis,signer,ctx={}){const tx=this.resolveTransaction(abis,signer,ctx);const actions=tx.actions.map(action=>{let abi;if(isIdentity(action)){abi=this.constructor.identityAbi(this.version);}else{abi=abis.get(action.account.toString());}if(!abi){throw new Error(`Missing ABI definition for ${action.account}`);}const type=abi.getActionType(action.name);const data=eosio.Serializer.encode({object:action.data,type,abi});return eosio.Action.from(Object.assign(Object.assign({},action),{data}));});const transaction=eosio.Transaction.from(Object.assign(Object.assign({},tx),{actions}));let chainId;if(this.isMultiChain()){if(!ctx.chainId){throw new Error('Missing chosen chain ID for multi-chain request');}chainId=exports.ChainId.from(ctx.chainId);const ids=this.getChainIds();if(ids&&!ids.some(id=>chainId.equals(id))){throw new Error('Trying to resolve for chain ID not defined in request');}}else{chainId=this.getChainId();}return new ResolvedSigningRequest(this,eosio.PermissionLevel.from(signer),transaction,tx,chainId);}/**
     * Get the id of the chain where this request is valid.
     * @returns The 32-byte chain id as hex encoded string.
     */getChainId(){return this.data.chain_id.chainId;}/**
     * Chain IDs this request is valid for, only valid for multi chain requests. Value of `null` when `isMultiChain` is true denotes any chain.
     */getChainIds(){if(!this.isMultiChain()){return null;}const ids=this.getInfoKey('chain_ids',{type:exports.ChainIdVariant,array:true});if(ids){return ids.map(id=>id.chainId);}return null;}/**
     * Set chain IDs this request is valid for, only considered for multi chain requests.
     */setChainIds(ids){const value=ids.map(id=>exports.ChainId.from(id).chainVariant);this.setInfoKey('chain_ids',value,{type:exports.ChainIdVariant,array:true});}/**
     * True if chainId is set to chain alias `0` which indicates that the request is valid for any chain.
     */isMultiChain(){return this.data.chain_id.variantIdx===0&&this.data.chain_id.value.equals(exports.ChainName.UNKNOWN);}/** Return the actions in this request with action data encoded. */getRawActions(){const req=this.data.req;switch(req.variantName){case'action':return[req.value];case'action[]':return req.value;case'identity':{if(this.version===2){const id=req.value;let data='0101000000000000000200000000000000';// placeholder permission
let authorization=[PlaceholderAuth];if(id.permission){data=eosio.Serializer.encode({object:id});authorization=[id.permission];}return[eosio.Action.from({account:'',name:'identity',authorization,data})];}else{// eslint-disable-next-line prefer-const
let{scope,permission}=req.value;if(!permission){permission=PlaceholderAuth;}const data=eosio.Serializer.encode({object:{scope,permission},type:exports.IdentityV3});return[eosio.Action.from({account:'',name:'identity',authorization:[permission],data})];}}case'transaction':return req.value.actions;default:throw new Error('Invalid signing request data');}}/** Unresolved transaction. */getRawTransaction(){const req=this.data.req;switch(req.variantName){case'transaction':return eosio.Transaction.from(Object.assign({},req.value));case'action':case'action[]':case'identity':return eosio.Transaction.from({actions:this.getRawActions(),context_free_actions:[],transaction_extensions:[],expiration:'1970-01-01T00:00:00.000',ref_block_num:0,ref_block_prefix:0,max_cpu_usage_ms:0,max_net_usage_words:0,delay_sec:0});default:throw new Error('Invalid signing request data');}}/** Whether the request is an identity request. */isIdentity(){return this.data.req.variantName==='identity';}/** Whether the request should be broadcast by signer. */shouldBroadcast(){if(this.isIdentity()){return false;}return this.data.flags.broadcast;}/**
     * Present if the request is an identity request and requests a specific account.
     * @note This returns `nil` unless a specific identity has been requested,
     *       use `isIdentity` to check id requests.
     */getIdentity(){if(!this.isIdentity()){return null;}const id=this.data.req.value;if(id.permission&&!id.permission.actor.equals(PlaceholderName)){return id.permission.actor;}return null;}/**
     * Present if the request is an identity request and requests a specific permission.
     * @note This returns `nil` unless a specific permission has been requested,
     *       use `isIdentity` to check id requests.
     */getIdentityPermission(){if(!this.isIdentity()){return null;}const id=this.data.req.value;if(id.permission&&!id.permission.permission.equals(PlaceholderPermission)){return id.permission.permission;}return null;}/**
     * Present if the request is an identity request and requests a specific permission.
     * @note This returns `nil` unless a specific permission has been requested,
     *       use `isIdentity` to check id requests.
     */getIdentityScope(){if(!this.isIdentity()||this.version<=2){return null;}const id=this.data.req.value;return id.scope;}/** Get raw info dict */getRawInfo(){const rv={};for(const{key,value}of this.data.info){rv[key]=value;}return rv;}getRawInfoKey(key){const pair=this.data.info.find(pair=>pair.key===key);if(pair){return pair.value;}}setRawInfoKey(key,value){let pair=this.data.info.find(pair=>pair.key===key);if(!pair){pair=exports.InfoPair.from({key,value});this.data.info.push(pair);}else{pair.value=eosio.Bytes.from(value);}}/** Set a metadata key. */setInfoKey(key,object,type){let data;if(typeof object==='string'&&!type){// match old behavior where strings encode to raw utf8 as opposed to
// eosio-abi encoded strings (varuint32 length prefix + utf8 bytes)
data=eosio.Bytes.from(object,'utf8');}else{data=eosio.Serializer.encode({object,type});}this.setRawInfoKey(key,data);}getInfoKey(key,type){const data=this.getRawInfoKey(key);if(data){if(type){return eosio.Serializer.decode({data,type});}else{// assume utf8 string if no type is given
return data.utf8String;}}}/** Return a deep copy of this request. */clone(){let signature;if(this.signature){signature=exports.RequestSignature.from(JSON.parse(JSON.stringify(this.signature)));}const RequestData=this.constructor.storageType(this.version);const data=RequestData.from(JSON.parse(JSON.stringify(this.data)));return new SigningRequest(this.version,data,this.zlib,this.abiProvider,signature);}// Convenience methods.
toString(){return this.encode();}toJSON(){return this.encode();}}class ResolvedSigningRequest{constructor(request,signer,transaction,resolvedTransaction,chainId){this.request=request;this.signer=signer;this.transaction=transaction;this.resolvedTransaction=resolvedTransaction;this.chainId=chainId;}/** Recreate a resolved request from a callback payload. */static fromPayload(payload,options={}){return tslib.__awaiter(this,void 0,void 0,function*(){const request=SigningRequest.from(payload.req,options);const abis=yield request.fetchAbis();return request.resolve(abis,{actor:payload.sa,permission:payload.sp},{ref_block_num:payload.rbn,ref_block_prefix:payload.rid,expiration:payload.ex,chainId:payload.cid||request.getChainId()});});}get serializedTransaction(){return eosio.Serializer.encode({object:this.transaction}).array;}get signingDigest(){return this.transaction.signingDigest(this.chainId);}getCallback(signatures,blockNum){const{callback,flags}=this.request.data;if(!callback||callback.length===0){return null;}if(!signatures||signatures.length===0){throw new Error('Must have at least one signature to resolve callback');}const sigs=signatures.map(sig=>eosio.Signature.from(sig));const payload={sig:String(sigs[0]),tx:String(this.transaction.id),rbn:String(this.transaction.ref_block_num),rid:String(this.transaction.ref_block_prefix),ex:String(this.transaction.expiration),req:this.request.encode(),sa:String(this.signer.actor),sp:String(this.signer.permission),cid:String(this.chainId)};for(const[n,sig]of sigs.slice(1).entries()){payload[`sig${n}`]=String(sig);}if(blockNum){payload.bn=String(eosio.UInt32.from(blockNum));}const url=callback.replace(/({{([a-z0-9]+)}})/g,(_1,_2,m)=>{return payload[m]||'';});return{background:flags.background,payload,url};}getIdentityProof(signature){if(!this.request.isIdentity()){throw new Error('Not a identity request');}return exports.IdentityProof.from({chainId:this.chainId,scope:this.request.getIdentityScope(),expiration:this.transaction.expiration,signer:this.signer,signature});}}function encodeAction(action,abis){if(eosio.Bytes.isBytes(action.data)||action.data.constructor.abiName!==undefined){return eosio.Action.from(action);}const abi=abis[String(eosio.Name.from(action.account))];if(!abi){throw new Error(`Missing ABI for ${action.account}`);}return eosio.Action.from(action,abi);}function isIdentity(action){const account=eosio.Name.from(action.account);const name=eosio.Name.from(action.name);return account.rawValue.equals(0)&&name.equals('identity');}function hasTapos(tx){return!(tx.expiration.equals(0)&&tx.ref_block_num.equals(0)&&tx.ref_block_prefix.equals(0));}function expirationTime(timestamp,expireSeconds=60){const ts=eosio.TimePointSec.from(timestamp||new Date());const exp=eosio.UInt32.from(expireSeconds);return eosio.TimePointSec.fromInteger(ts.value.adding(exp));}exports.Base64u=base64u;exports.PlaceholderAuth=PlaceholderAuth;exports.PlaceholderName=PlaceholderName;exports.PlaceholderPermission=PlaceholderPermission;exports.ProtocolVersion=ProtocolVersion;exports.ResolvedSigningRequest=ResolvedSigningRequest;exports.SigningRequest=SigningRequest;},{"@greymass/eosio":1,"tslib":281}],179:[function(require,module,exports){"use strict";// copyright defined in eosjs/LICENSE.txt
Object.defineProperty(exports,"__esModule",{value:true});},{}],180:[function(require,module,exports){"use strict";/**
 * @module API
 */// copyright defined in eosjs/LICENSE.txt
var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}return t;};return __assign.apply(this,arguments);};var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value);}).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=this&&this.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)if(e.indexOf(p[i])<0)t[p[i]]=s[p[i]];return t;};var __read=this&&this.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done)ar.push(r.value);}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;};var __spread=this&&this.__spread||function(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar;};var __values=this&&this.__values||function(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};};Object.defineProperty(exports,"__esModule",{value:true});var ser=require("./eosjs-serialize");var abiAbi=require('../src/abi.abi.json');var transactionAbi=require('../src/transaction.abi.json');var Api=/** @class */function(){/**
     * @param args
     *    * `rpc`: Issues RPC calls
     *    * `authorityProvider`: Get public keys needed to meet authorities in a transaction
     *    * `abiProvider`: Supplies ABIs in raw form (binary)
     *    * `signatureProvider`: Signs transactions
     *    * `chainId`: Identifies chain
     *    * `textEncoder`: `TextEncoder` instance to use. Pass in `null` if running in a browser
     *    * `textDecoder`: `TextDecoder` instance to use. Pass in `null` if running in a browser
     */function Api(args){/** Holds information needed to serialize contract actions */this.contracts=new Map();/** Fetched abis */this.cachedAbis=new Map();this.rpc=args.rpc;this.authorityProvider=args.authorityProvider||args.rpc;this.abiProvider=args.abiProvider||args.rpc;this.signatureProvider=args.signatureProvider;this.chainId=args.chainId;this.textEncoder=args.textEncoder;this.textDecoder=args.textDecoder;this.abiTypes=ser.getTypesFromAbi(ser.createInitialTypes(),abiAbi);this.transactionTypes=ser.getTypesFromAbi(ser.createInitialTypes(),transactionAbi);}/** Decodes an abi as Uint8Array into json. */Api.prototype.rawAbiToJson=function(rawAbi){var buffer=new ser.SerialBuffer({textEncoder:this.textEncoder,textDecoder:this.textDecoder,array:rawAbi});if(!ser.supportedAbiVersion(buffer.getString())){throw new Error('Unsupported abi version');}buffer.restartRead();return this.abiTypes.get('abi_def').deserialize(buffer);};/** Get abi in both binary and structured forms. Fetch when needed. */Api.prototype.getCachedAbi=function(accountName,reload){if(reload===void 0){reload=false;}return __awaiter(this,void 0,void 0,function(){var cachedAbi,rawAbi,abi,e_1;return __generator(this,function(_a){switch(_a.label){case 0:if(!reload&&this.cachedAbis.get(accountName)){return[2/*return*/,this.cachedAbis.get(accountName)];}_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4/*yield*/,this.abiProvider.getRawAbi(accountName)];case 2:rawAbi=_a.sent().abi;abi=this.rawAbiToJson(rawAbi);cachedAbi={rawAbi:rawAbi,abi:abi};return[3/*break*/,4];case 3:e_1=_a.sent();e_1.message="fetching abi for "+accountName+": "+e_1.message;throw e_1;case 4:if(!cachedAbi){throw new Error("Missing abi for "+accountName);}this.cachedAbis.set(accountName,cachedAbi);return[2/*return*/,cachedAbi];}});});};/** Get abi in structured form. Fetch when needed. */Api.prototype.getAbi=function(accountName,reload){if(reload===void 0){reload=false;}return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.getCachedAbi(accountName,reload)];case 1:return[2/*return*/,_a.sent().abi];}});});};/** Get abis needed by a transaction */Api.prototype.getTransactionAbis=function(transaction,reload){if(reload===void 0){reload=false;}return __awaiter(this,void 0,void 0,function(){var accounts,uniqueAccounts,actionPromises;var _this=this;return __generator(this,function(_a){accounts=transaction.actions.map(function(action){return action.account;});uniqueAccounts=new Set(accounts);actionPromises=__spread(uniqueAccounts).map(function(account){return __awaiter(_this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:_a={accountName:account};return[4/*yield*/,this.getCachedAbi(account,reload)];case 1:return[2/*return*/,(_a.abi=_b.sent().rawAbi,_a)];}});});});return[2/*return*/,Promise.all(actionPromises)];});});};/** Get data needed to serialize actions in a contract */Api.prototype.getContract=function(accountName,reload){if(reload===void 0){reload=false;}return __awaiter(this,void 0,void 0,function(){var e_2,_a,abi,types,actions,_b,_c,_d,name_1,type,result;return __generator(this,function(_e){switch(_e.label){case 0:if(!reload&&this.contracts.get(accountName)){return[2/*return*/,this.contracts.get(accountName)];}return[4/*yield*/,this.getAbi(accountName,reload)];case 1:abi=_e.sent();types=ser.getTypesFromAbi(ser.createInitialTypes(),abi);actions=new Map();try{for(_b=__values(abi.actions),_c=_b.next();!_c.done;_c=_b.next()){_d=_c.value,name_1=_d.name,type=_d.type;actions.set(name_1,ser.getType(types,type));}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}result={types:types,actions:actions};this.contracts.set(accountName,result);return[2/*return*/,result];}});});};/** Convert `value` to binary form. `type` must be a built-in abi type or in `transaction.abi.json`. */Api.prototype.serialize=function(buffer,type,value){this.transactionTypes.get(type).serialize(buffer,value);};/** Convert data in `buffer` to structured form. `type` must be a built-in abi type or in `transaction.abi.json`. */Api.prototype.deserialize=function(buffer,type){return this.transactionTypes.get(type).deserialize(buffer);};/** Convert a transaction to binary */Api.prototype.serializeTransaction=function(transaction){var buffer=new ser.SerialBuffer({textEncoder:this.textEncoder,textDecoder:this.textDecoder});this.serialize(buffer,'transaction',__assign({max_net_usage_words:0,max_cpu_usage_ms:0,delay_sec:0,context_free_actions:[],actions:[],transaction_extensions:[]},transaction));return buffer.asUint8Array();};/** Convert a transaction from binary. Leaves actions in hex. */Api.prototype.deserializeTransaction=function(transaction){var buffer=new ser.SerialBuffer({textEncoder:this.textEncoder,textDecoder:this.textDecoder});buffer.pushArray(transaction);return this.deserialize(buffer,'transaction');};/** Convert actions to hex */Api.prototype.serializeActions=function(actions){return __awaiter(this,void 0,void 0,function(){var _this=this;return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,Promise.all(actions.map(function(_a){var account=_a.account,name=_a.name,authorization=_a.authorization,data=_a.data;return __awaiter(_this,void 0,void 0,function(){var contract;return __generator(this,function(_b){switch(_b.label){case 0:return[4/*yield*/,this.getContract(account)];case 1:contract=_b.sent();return[2/*return*/,ser.serializeAction(contract,account,name,authorization,data,this.textEncoder,this.textDecoder)];}});});}))];case 1:return[2/*return*/,_a.sent()];}});});};/** Convert actions from hex */Api.prototype.deserializeActions=function(actions){return __awaiter(this,void 0,void 0,function(){var _this=this;return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,Promise.all(actions.map(function(_a){var account=_a.account,name=_a.name,authorization=_a.authorization,data=_a.data;return __awaiter(_this,void 0,void 0,function(){var contract;return __generator(this,function(_b){switch(_b.label){case 0:return[4/*yield*/,this.getContract(account)];case 1:contract=_b.sent();return[2/*return*/,ser.deserializeAction(contract,account,name,authorization,data,this.textEncoder,this.textDecoder)];}});});}))];case 1:return[2/*return*/,_a.sent()];}});});};/** Convert a transaction from binary. Also deserializes actions. */Api.prototype.deserializeTransactionWithActions=function(transaction){return __awaiter(this,void 0,void 0,function(){var deserializedTransaction,deserializedActions;return __generator(this,function(_a){switch(_a.label){case 0:if(typeof transaction==='string'){transaction=ser.hexToUint8Array(transaction);}deserializedTransaction=this.deserializeTransaction(transaction);return[4/*yield*/,this.deserializeActions(deserializedTransaction.actions)];case 1:deserializedActions=_a.sent();return[2/*return*/,__assign({},deserializedTransaction,{actions:deserializedActions})];}});});};/**
     * Create and optionally broadcast a transaction.
     *
     * Named Parameters:
     *    * `broadcast`: broadcast this transaction?
     *    * `sign`: sign this transaction?
     *    * If both `blocksBehind` and `expireSeconds` are present,
     *      then fetch the block which is `blocksBehind` behind head block,
     *      use it as a reference for TAPoS, and expire the transaction `expireSeconds` after that block's time.
     * @returns node response if `broadcast`, `{signatures, serializedTransaction}` if `!broadcast`
     */Api.prototype.transact=function(transaction,_a){var _b=_a===void 0?{}:_a,_c=_b.broadcast,broadcast=_c===void 0?true:_c,_d=_b.sign,sign=_d===void 0?true:_d,blocksBehind=_b.blocksBehind,expireSeconds=_b.expireSeconds;return __awaiter(this,void 0,void 0,function(){var info,refBlock,abis,_e,_f,serializedTransaction,pushTransactionArgs,availableKeys,requiredKeys;return __generator(this,function(_g){switch(_g.label){case 0:if(!!this.chainId)return[3/*break*/,2];return[4/*yield*/,this.rpc.get_info()];case 1:info=_g.sent();this.chainId=info.chain_id;_g.label=2;case 2:if(!(typeof blocksBehind==='number'&&expireSeconds))return[3/*break*/,6];if(!!info)return[3/*break*/,4];return[4/*yield*/,this.rpc.get_info()];case 3:info=_g.sent();_g.label=4;case 4:return[4/*yield*/,this.rpc.get_block(info.head_block_num-blocksBehind)];case 5:refBlock=_g.sent();transaction=__assign({},ser.transactionHeader(refBlock,expireSeconds),transaction);_g.label=6;case 6:if(!this.hasRequiredTaposFields(transaction)){throw new Error('Required configuration or TAPOS fields are not present');}return[4/*yield*/,this.getTransactionAbis(transaction)];case 7:abis=_g.sent();_e=[{},transaction];_f={};return[4/*yield*/,this.serializeActions(transaction.actions)];case 8:transaction=__assign.apply(void 0,_e.concat([(_f.actions=_g.sent(),_f)]));serializedTransaction=this.serializeTransaction(transaction);pushTransactionArgs={serializedTransaction:serializedTransaction,signatures:[]};if(!sign)return[3/*break*/,12];return[4/*yield*/,this.signatureProvider.getAvailableKeys()];case 9:availableKeys=_g.sent();return[4/*yield*/,this.authorityProvider.getRequiredKeys({transaction:transaction,availableKeys:availableKeys})];case 10:requiredKeys=_g.sent();return[4/*yield*/,this.signatureProvider.sign({chainId:this.chainId,requiredKeys:requiredKeys,serializedTransaction:serializedTransaction,abis:abis})];case 11:pushTransactionArgs=_g.sent();_g.label=12;case 12:if(broadcast){return[2/*return*/,this.pushSignedTransaction(pushTransactionArgs)];}return[2/*return*/,pushTransactionArgs];}});});};/** Broadcast a signed transaction */Api.prototype.pushSignedTransaction=function(_a){var signatures=_a.signatures,serializedTransaction=_a.serializedTransaction;return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_b){return[2/*return*/,this.rpc.push_transaction({signatures:signatures,serializedTransaction:serializedTransaction})];});});};// eventually break out into TransactionValidator class
Api.prototype.hasRequiredTaposFields=function(_a){var expiration=_a.expiration,ref_block_num=_a.ref_block_num,ref_block_prefix=_a.ref_block_prefix,transaction=__rest(_a,["expiration","ref_block_num","ref_block_prefix"]);return!!(expiration&&ref_block_num&&ref_block_prefix);};return Api;}();// Api
exports.Api=Api;},{"../src/abi.abi.json":188,"../src/transaction.abi.json":189,"./eosjs-serialize":185}],181:[function(require,module,exports){(function(global){(function(){"use strict";/**
 * @module JSON-RPC
 */// copyright defined in eosjs/LICENSE.txt
var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value);}).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=this&&this.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};var __values=this&&this.__values||function(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};};Object.defineProperty(exports,"__esModule",{value:true});var eosjs_numeric_1=require("./eosjs-numeric");var eosjs_rpcerror_1=require("./eosjs-rpcerror");function arrayToHex(data){var e_1,_a;var result='';try{for(var data_1=__values(data),data_1_1=data_1.next();!data_1_1.done;data_1_1=data_1.next()){var x=data_1_1.value;result+=('00'+x.toString(16)).slice(-2);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(data_1_1&&!data_1_1.done&&(_a=data_1.return))_a.call(data_1);}finally{if(e_1)throw e_1.error;}}return result;}/** Make RPC calls */var JsonRpc=/** @class */function(){/**
     * @param args
     *    * `fetch`:
     *    * browsers: leave `null` or `undefined`
     *    * node: provide an implementation
     */function JsonRpc(endpoint,args){if(args===void 0){args={};}this.endpoint=endpoint;if(args.fetch){this.fetchBuiltin=args.fetch;}else{this.fetchBuiltin=global.fetch;}}/** Post `body` to `endpoint + path`. Throws detailed error information in `RpcError` when available. */JsonRpc.prototype.fetch=function(path,body){return __awaiter(this,void 0,void 0,function(){var response,json,f,e_2;return __generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,3,,4]);f=this.fetchBuiltin;return[4/*yield*/,f(this.endpoint+path,{body:JSON.stringify(body),method:'POST'})];case 1:response=_a.sent();return[4/*yield*/,response.json()];case 2:json=_a.sent();if(json.processed&&json.processed.except){throw new eosjs_rpcerror_1.RpcError(json);}return[3/*break*/,4];case 3:e_2=_a.sent();e_2.isFetchError=true;throw e_2;case 4:if(!response.ok){throw new eosjs_rpcerror_1.RpcError(json);}return[2/*return*/,json];}});});};/** Raw call to `/v1/chain/get_abi` */JsonRpc.prototype.get_abi=function(accountName){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_abi',{account_name:accountName})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_account` */JsonRpc.prototype.get_account=function(accountName){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_account',{account_name:accountName})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_block_header_state` */JsonRpc.prototype.get_block_header_state=function(blockNumOrId){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_block_header_state',{block_num_or_id:blockNumOrId})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_block` */JsonRpc.prototype.get_block=function(blockNumOrId){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_block',{block_num_or_id:blockNumOrId})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_code` */JsonRpc.prototype.get_code=function(accountName){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_code',{account_name:accountName})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_currency_balance` */JsonRpc.prototype.get_currency_balance=function(code,account,symbol){if(symbol===void 0){symbol=null;}return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_currency_balance',{code:code,account:account,symbol:symbol})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_currency_stats` */JsonRpc.prototype.get_currency_stats=function(code,symbol){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_currency_stats',{code:code,symbol:symbol})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_info` */JsonRpc.prototype.get_info=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_info',{})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_producer_schedule` */JsonRpc.prototype.get_producer_schedule=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_producer_schedule',{})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_producers` */JsonRpc.prototype.get_producers=function(json,lowerBound,limit){if(json===void 0){json=true;}if(lowerBound===void 0){lowerBound='';}if(limit===void 0){limit=50;}return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_producers',{json:json,lower_bound:lowerBound,limit:limit})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/chain/get_raw_code_and_abi` */JsonRpc.prototype.get_raw_code_and_abi=function(accountName){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_raw_code_and_abi',{account_name:accountName})];case 1:return[2/*return*/,_a.sent()];}});});};/** calls `/v1/chain/get_raw_code_and_abi` and pulls out unneeded raw wasm code */// TODO: use `/v1/chain/get_raw_abi` directly when it becomes available
JsonRpc.prototype.getRawAbi=function(accountName){return __awaiter(this,void 0,void 0,function(){var rawCodeAndAbi,abi;return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.get_raw_code_and_abi(accountName)];case 1:rawCodeAndAbi=_a.sent();abi=eosjs_numeric_1.base64ToBinary(rawCodeAndAbi.abi);return[2/*return*/,{accountName:rawCodeAndAbi.account_name,abi:abi}];}});});};/** Raw call to `/v1/chain/get_table_rows` */JsonRpc.prototype.get_table_rows=function(_a){var _b=_a.json,json=_b===void 0?true:_b,code=_a.code,scope=_a.scope,table=_a.table,_c=_a.table_key,table_key=_c===void 0?'':_c,_d=_a.lower_bound,lower_bound=_d===void 0?'':_d,_e=_a.upper_bound,upper_bound=_e===void 0?'':_e,_f=_a.index_position,index_position=_f===void 0?1:_f,_g=_a.key_type,key_type=_g===void 0?'':_g,_h=_a.limit,limit=_h===void 0?10:_h,_j=_a.reverse,reverse=_j===void 0?false:_j,_k=_a.show_payer,show_payer=_k===void 0?false:_k;return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_l){switch(_l.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_table_rows',{json:json,code:code,scope:scope,table:table,table_key:table_key,lower_bound:lower_bound,upper_bound:upper_bound,index_position:index_position,key_type:key_type,limit:limit,reverse:reverse,show_payer:show_payer})];case 1:return[2/*return*/,_l.sent()];}});});};/** Raw call to `/v1/chain/get_table_by_scope` */JsonRpc.prototype.get_table_by_scope=function(_a){var code=_a.code,table=_a.table,_b=_a.lower_bound,lower_bound=_b===void 0?'':_b,_c=_a.upper_bound,upper_bound=_c===void 0?'':_c,_d=_a.limit,limit=_d===void 0?10:_d;return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_e){switch(_e.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/get_table_by_scope',{code:code,table:table,lower_bound:lower_bound,upper_bound:upper_bound,limit:limit})];case 1:return[2/*return*/,_e.sent()];}});});};/** Get subset of `availableKeys` needed to meet authorities in `transaction`. Implements `AuthorityProvider` */JsonRpc.prototype.getRequiredKeys=function(args){return __awaiter(this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:_a=eosjs_numeric_1.convertLegacyPublicKeys;return[4/*yield*/,this.fetch('/v1/chain/get_required_keys',{transaction:args.transaction,available_keys:args.availableKeys})];case 1:return[2/*return*/,_a.apply(void 0,[_b.sent().required_keys])];}});});};/** Push a serialized transaction */JsonRpc.prototype.push_transaction=function(_a){var signatures=_a.signatures,serializedTransaction=_a.serializedTransaction;return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_b){switch(_b.label){case 0:return[4/*yield*/,this.fetch('/v1/chain/push_transaction',{signatures:signatures,compression:0,packed_context_free_data:'',packed_trx:arrayToHex(serializedTransaction)})];case 1:return[2/*return*/,_b.sent()];}});});};/** Raw call to `/v1/db_size/get` */JsonRpc.prototype.db_size_get=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/db_size/get',{})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/history/get_actions` */JsonRpc.prototype.history_get_actions=function(accountName,pos,offset){if(pos===void 0){pos=null;}if(offset===void 0){offset=null;}return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/history/get_actions',{account_name:accountName,pos:pos,offset:offset})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/history/get_transaction` */JsonRpc.prototype.history_get_transaction=function(id,blockNumHint){if(blockNumHint===void 0){blockNumHint=null;}return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/history/get_transaction',{id:id,block_num_hint:blockNumHint})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/history/get_key_accounts` */JsonRpc.prototype.history_get_key_accounts=function(publicKey){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/history/get_key_accounts',{public_key:publicKey})];case 1:return[2/*return*/,_a.sent()];}});});};/** Raw call to `/v1/history/get_controlled_accounts` */JsonRpc.prototype.history_get_controlled_accounts=function(controllingAccount){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,this.fetch('/v1/history/get_controlled_accounts',{controlling_account:controllingAccount})];case 1:return[2/*return*/,_a.sent()];}});});};return JsonRpc;}();// JsonRpc
exports.JsonRpc=JsonRpc;}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"./eosjs-numeric":182,"./eosjs-rpcerror":184}],182:[function(require,module,exports){"use strict";/**
 * @module Numeric
 */// copyright defined in eosjs/LICENSE.txt
var __read=this&&this.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done)ar.push(r.value);}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;};var __spread=this&&this.__spread||function(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar;};var __values=this&&this.__values||function(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};};Object.defineProperty(exports,"__esModule",{value:true});var ripemd160=require('./ripemd').RIPEMD160.hash;var base58Chars='123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';var base64Chars='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';function create_base58_map(){var base58M=Array(256).fill(-1);for(var i=0;i<base58Chars.length;++i){base58M[base58Chars.charCodeAt(i)]=i;}return base58M;}var base58Map=create_base58_map();function create_base64_map(){var base64M=Array(256).fill(-1);for(var i=0;i<base64Chars.length;++i){base64M[base64Chars.charCodeAt(i)]=i;}base64M['='.charCodeAt(0)]=0;return base64M;}var base64Map=create_base64_map();/** Is `bignum` a negative number? */function isNegative(bignum){return(bignum[bignum.length-1]&0x80)!==0;}exports.isNegative=isNegative;/** Negate `bignum` */function negate(bignum){var carry=1;for(var i=0;i<bignum.length;++i){var x=(~bignum[i]&0xff)+carry;bignum[i]=x;carry=x>>8;}}exports.negate=negate;/**
 * Convert an unsigned decimal number in `s` to a bignum
 * @param size bignum size (bytes)
 */function decimalToBinary(size,s){var result=new Uint8Array(size);for(var i=0;i<s.length;++i){var srcDigit=s.charCodeAt(i);if(srcDigit<'0'.charCodeAt(0)||srcDigit>'9'.charCodeAt(0)){throw new Error('invalid number');}var carry=srcDigit-'0'.charCodeAt(0);for(var j=0;j<size;++j){var x=result[j]*10+carry;result[j]=x;carry=x>>8;}if(carry){throw new Error('number is out of range');}}return result;}exports.decimalToBinary=decimalToBinary;/**
 * Convert a signed decimal number in `s` to a bignum
 * @param size bignum size (bytes)
 */function signedDecimalToBinary(size,s){var negative=s[0]==='-';if(negative){s=s.substr(1);}var result=decimalToBinary(size,s);if(negative){negate(result);if(!isNegative(result)){throw new Error('number is out of range');}}else if(isNegative(result)){throw new Error('number is out of range');}return result;}exports.signedDecimalToBinary=signedDecimalToBinary;/**
 * Convert `bignum` to an unsigned decimal number
 * @param minDigits 0-pad result to this many digits
 */function binaryToDecimal(bignum,minDigits){if(minDigits===void 0){minDigits=1;}var result=Array(minDigits).fill('0'.charCodeAt(0));for(var i=bignum.length-1;i>=0;--i){var carry=bignum[i];for(var j=0;j<result.length;++j){var x=(result[j]-'0'.charCodeAt(0)<<8)+carry;result[j]='0'.charCodeAt(0)+x%10;carry=x/10|0;}while(carry){result.push('0'.charCodeAt(0)+carry%10);carry=carry/10|0;}}result.reverse();return String.fromCharCode.apply(String,__spread(result));}exports.binaryToDecimal=binaryToDecimal;/**
 * Convert `bignum` to a signed decimal number
 * @param minDigits 0-pad result to this many digits
 */function signedBinaryToDecimal(bignum,minDigits){if(minDigits===void 0){minDigits=1;}if(isNegative(bignum)){var x=bignum.slice();negate(x);return'-'+binaryToDecimal(x,minDigits);}return binaryToDecimal(bignum,minDigits);}exports.signedBinaryToDecimal=signedBinaryToDecimal;/**
 * Convert an unsigned base-58 number in `s` to a bignum
 * @param size bignum size (bytes)
 */function base58ToBinary(size,s){var result=new Uint8Array(size);for(var i=0;i<s.length;++i){var carry=base58Map[s.charCodeAt(i)];if(carry<0){throw new Error('invalid base-58 value');}for(var j=0;j<size;++j){var x=result[j]*58+carry;result[j]=x;carry=x>>8;}if(carry){throw new Error('base-58 value is out of range');}}result.reverse();return result;}exports.base58ToBinary=base58ToBinary;/**
 * Convert `bignum` to a base-58 number
 * @param minDigits 0-pad result to this many digits
 */function binaryToBase58(bignum,minDigits){if(minDigits===void 0){minDigits=1;}var e_1,_a,e_2,_b;var result=[];try{for(var bignum_1=__values(bignum),bignum_1_1=bignum_1.next();!bignum_1_1.done;bignum_1_1=bignum_1.next()){var byte=bignum_1_1.value;var carry=byte;for(var j=0;j<result.length;++j){var x=(base58Map[result[j]]<<8)+carry;result[j]=base58Chars.charCodeAt(x%58);carry=x/58|0;}while(carry){result.push(base58Chars.charCodeAt(carry%58));carry=carry/58|0;}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(bignum_1_1&&!bignum_1_1.done&&(_a=bignum_1.return))_a.call(bignum_1);}finally{if(e_1)throw e_1.error;}}try{for(var bignum_2=__values(bignum),bignum_2_1=bignum_2.next();!bignum_2_1.done;bignum_2_1=bignum_2.next()){var byte=bignum_2_1.value;if(byte){break;}else{result.push('1'.charCodeAt(0));}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(bignum_2_1&&!bignum_2_1.done&&(_b=bignum_2.return))_b.call(bignum_2);}finally{if(e_2)throw e_2.error;}}result.reverse();return String.fromCharCode.apply(String,__spread(result));}exports.binaryToBase58=binaryToBase58;/** Convert an unsigned base-64 number in `s` to a bignum */function base64ToBinary(s){var len=s.length;if((len&3)===1&&s[len-1]==='='){len-=1;}// fc appends an extra '='
if((len&3)!==0){throw new Error('base-64 value is not padded correctly');}var groups=len>>2;var bytes=groups*3;if(len>0&&s[len-1]==='='){if(s[len-2]==='='){bytes-=2;}else{bytes-=1;}}var result=new Uint8Array(bytes);for(var group=0;group<groups;++group){var digit0=base64Map[s.charCodeAt(group*4+0)];var digit1=base64Map[s.charCodeAt(group*4+1)];var digit2=base64Map[s.charCodeAt(group*4+2)];var digit3=base64Map[s.charCodeAt(group*4+3)];result[group*3+0]=digit0<<2|digit1>>4;if(group*3+1<bytes){result[group*3+1]=(digit1&15)<<4|digit2>>2;}if(group*3+2<bytes){result[group*3+2]=(digit2&3)<<6|digit3;}}return result;}exports.base64ToBinary=base64ToBinary;/** Key types this library supports */var KeyType;(function(KeyType){KeyType[KeyType["k1"]=0]="k1";KeyType[KeyType["r1"]=1]="r1";})(KeyType=exports.KeyType||(exports.KeyType={}));/** Public key data size, excluding type field */exports.publicKeyDataSize=33;/** Private key data size, excluding type field */exports.privateKeyDataSize=32;/** Signature data size, excluding type field */exports.signatureDataSize=65;function digestSuffixRipemd160(data,suffix){var d=new Uint8Array(data.length+suffix.length);for(var i=0;i<data.length;++i){d[i]=data[i];}for(var i=0;i<suffix.length;++i){d[data.length+i]=suffix.charCodeAt(i);}return ripemd160(d);}function stringToKey(s,type,size,suffix){var whole=base58ToBinary(size+4,s);var result={type:type,data:new Uint8Array(whole.buffer,0,size)};var digest=new Uint8Array(digestSuffixRipemd160(result.data,suffix));if(digest[0]!==whole[size+0]||digest[1]!==whole[size+1]||digest[2]!==whole[size+2]||digest[3]!==whole[size+3]){throw new Error('checksum doesn\'t match');}return result;}function keyToString(key,suffix,prefix){var digest=new Uint8Array(digestSuffixRipemd160(key.data,suffix));var whole=new Uint8Array(key.data.length+4);for(var i=0;i<key.data.length;++i){whole[i]=key.data[i];}for(var i=0;i<4;++i){whole[i+key.data.length]=digest[i];}return prefix+binaryToBase58(whole);}/** Convert key in `s` to binary form */function stringToPublicKey(s){if(typeof s!=='string'){throw new Error('expected string containing public key');}if(s.substr(0,3)==='EOS'){var whole=base58ToBinary(exports.publicKeyDataSize+4,s.substr(3));var key={type:KeyType.k1,data:new Uint8Array(exports.publicKeyDataSize)};for(var i=0;i<exports.publicKeyDataSize;++i){key.data[i]=whole[i];}var digest=new Uint8Array(ripemd160(key.data));if(digest[0]!==whole[exports.publicKeyDataSize]||digest[1]!==whole[34]||digest[2]!==whole[35]||digest[3]!==whole[36]){throw new Error('checksum doesn\'t match');}return key;}else if(s.substr(0,7)==='PUB_K1_'){return stringToKey(s.substr(7),KeyType.k1,exports.publicKeyDataSize,'K1');}else if(s.substr(0,7)==='PUB_R1_'){return stringToKey(s.substr(7),KeyType.r1,exports.publicKeyDataSize,'R1');}else{throw new Error('unrecognized public key format');}}exports.stringToPublicKey=stringToPublicKey;/** Convert `key` to string (base-58) form */function publicKeyToString(key){if(key.type===KeyType.k1&&key.data.length===exports.publicKeyDataSize){return keyToString(key,'K1','PUB_K1_');}else if(key.type===KeyType.r1&&key.data.length===exports.publicKeyDataSize){return keyToString(key,'R1','PUB_R1_');}else{throw new Error('unrecognized public key format');}}exports.publicKeyToString=publicKeyToString;/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).
 * Leaves other formats untouched
 */function convertLegacyPublicKey(s){if(s.substr(0,3)==='EOS'){return publicKeyToString(stringToPublicKey(s));}return s;}exports.convertLegacyPublicKey=convertLegacyPublicKey;/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).
 * Leaves other formats untouched
 */function convertLegacyPublicKeys(keys){return keys.map(convertLegacyPublicKey);}exports.convertLegacyPublicKeys=convertLegacyPublicKeys;/** Convert key in `s` to binary form */function stringToPrivateKey(s){if(typeof s!=='string'){throw new Error('expected string containing private key');}if(s.substr(0,7)==='PVT_R1_'){return stringToKey(s.substr(7),KeyType.r1,exports.privateKeyDataSize,'R1');}else{throw new Error('unrecognized private key format');}}exports.stringToPrivateKey=stringToPrivateKey;/** Convert `key` to string (base-58) form */function privateKeyToString(key){if(key.type===KeyType.r1){return keyToString(key,'R1','PVT_R1_');}else{throw new Error('unrecognized private key format');}}exports.privateKeyToString=privateKeyToString;/** Convert key in `s` to binary form */function stringToSignature(s){if(typeof s!=='string'){throw new Error('expected string containing signature');}if(s.substr(0,7)==='SIG_K1_'){return stringToKey(s.substr(7),KeyType.k1,exports.signatureDataSize,'K1');}else if(s.substr(0,7)==='SIG_R1_'){return stringToKey(s.substr(7),KeyType.r1,exports.signatureDataSize,'R1');}else{throw new Error('unrecognized signature format');}}exports.stringToSignature=stringToSignature;/** Convert `signature` to string (base-58) form */function signatureToString(signature){if(signature.type===KeyType.k1){return keyToString(signature,'K1','SIG_K1_');}else if(signature.type===KeyType.r1){return keyToString(signature,'R1','SIG_R1_');}else{throw new Error('unrecognized signature format');}}exports.signatureToString=signatureToString;},{"./ripemd":187}],183:[function(require,module,exports){"use strict";// copyright defined in eosjs/LICENSE.txt
Object.defineProperty(exports,"__esModule",{value:true});},{}],184:[function(require,module,exports){"use strict";/**
 * @module RPC-Error
 */// copyright defined in eosjs/LICENSE.txt
var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});/** Holds detailed error information */var RpcError=/** @class */function(_super){__extends(RpcError,_super);function RpcError(json){var _this=this;if(json.error&&json.error.details&&json.error.details.length&&json.error.details[0].message){_this=_super.call(this,json.error.details[0].message)||this;}else if(json.processed&&json.processed.except&&json.processed.except.message){_this=_super.call(this,json.processed.except.message)||this;}else{_this=_super.call(this,json.message)||this;}Object.setPrototypeOf(_this,RpcError.prototype);_this.json=json;return _this;}return RpcError;}(Error);exports.RpcError=RpcError;},{}],185:[function(require,module,exports){"use strict";/**
 * @module Serialize
 */// copyright defined in eosjs/LICENSE.txt
var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}return t;};return __assign.apply(this,arguments);};var __read=this&&this.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done)ar.push(r.value);}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;};var __spread=this&&this.__spread||function(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar;};var __values=this&&this.__values||function(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};};Object.defineProperty(exports,"__esModule",{value:true});var numeric=require("./eosjs-numeric");/** State for serialize() and deserialize() */var SerializerState=/** @class */function(){function SerializerState(options){if(options===void 0){options={};}/** Have any binary extensions been skipped? */this.skippedBinaryExtension=false;this.options=options;}return SerializerState;}();exports.SerializerState=SerializerState;/** Serialize and deserialize data */var SerialBuffer=/** @class */function(){/**
     * @param __namedParameters
     *    * `array`: `null` if serializing, or binary data to deserialize
     *    * `textEncoder`: `TextEncoder` instance to use. Pass in `null` if running in a browser
     *    * `textDecoder`: `TextDecider` instance to use. Pass in `null` if running in a browser
     */function SerialBuffer(_a){var _b=_a===void 0?{}:_a,textEncoder=_b.textEncoder,textDecoder=_b.textDecoder,array=_b.array;/** Current position while reading (deserializing) */this.readPos=0;this.array=array||new Uint8Array(1024);this.length=array?array.length:0;this.textEncoder=textEncoder||new TextEncoder();this.textDecoder=textDecoder||new TextDecoder('utf-8',{fatal:true});}/** Resize `array` if needed to have at least `size` bytes free */SerialBuffer.prototype.reserve=function(size){if(this.length+size<=this.array.length){return;}var l=this.array.length;while(this.length+size>l){l=Math.ceil(l*1.5);}var newArray=new Uint8Array(l);newArray.set(this.array);this.array=newArray;};/** Is there data available to read? */SerialBuffer.prototype.haveReadData=function(){return this.readPos<this.length;};/** Restart reading from the beginning */SerialBuffer.prototype.restartRead=function(){this.readPos=0;};/** Return data with excess storage trimmed away */SerialBuffer.prototype.asUint8Array=function(){return new Uint8Array(this.array.buffer,this.array.byteOffset,this.length);};/** Append bytes */SerialBuffer.prototype.pushArray=function(v){this.reserve(v.length);this.array.set(v,this.length);this.length+=v.length;};/** Append bytes */SerialBuffer.prototype.push=function(){var v=[];for(var _i=0;_i<arguments.length;_i++){v[_i]=arguments[_i];}this.pushArray(v);};/** Get a single byte */SerialBuffer.prototype.get=function(){if(this.readPos<this.length){return this.array[this.readPos++];}throw new Error('Read past end of buffer');};/** Append bytes in `v`. Throws if `len` doesn't match `v.length` */SerialBuffer.prototype.pushUint8ArrayChecked=function(v,len){if(v.length!==len){throw new Error('Binary data has incorrect size');}this.pushArray(v);};/** Get `len` bytes */SerialBuffer.prototype.getUint8Array=function(len){if(this.readPos+len>this.length){throw new Error('Read past end of buffer');}var result=new Uint8Array(this.array.buffer,this.array.byteOffset+this.readPos,len);this.readPos+=len;return result;};/** Append a `uint16` */SerialBuffer.prototype.pushUint16=function(v){this.push(v>>0&0xff,v>>8&0xff);};/** Get a `uint16` */SerialBuffer.prototype.getUint16=function(){var v=0;v|=this.get()<<0;v|=this.get()<<8;return v;};/** Append a `uint32` */SerialBuffer.prototype.pushUint32=function(v){this.push(v>>0&0xff,v>>8&0xff,v>>16&0xff,v>>24&0xff);};/** Get a `uint32` */SerialBuffer.prototype.getUint32=function(){var v=0;v|=this.get()<<0;v|=this.get()<<8;v|=this.get()<<16;v|=this.get()<<24;return v>>>0;};/** Append a `uint64`. *Caution*: `number` only has 53 bits of precision */SerialBuffer.prototype.pushNumberAsUint64=function(v){this.pushUint32(v>>>0);this.pushUint32(Math.floor(v/4294967296)>>>0);};/**
     * Get a `uint64` as a `number`. *Caution*: `number` only has 53 bits of precision; some values will change.
     * `numeric.binaryToDecimal(serialBuffer.getUint8Array(8))` recommended instead
     */SerialBuffer.prototype.getUint64AsNumber=function(){var low=this.getUint32();var high=this.getUint32();return(high>>>0)*4294967296+(low>>>0);};/** Append a `varuint32` */SerialBuffer.prototype.pushVaruint32=function(v){while(true){if(v>>>7){this.push(0x80|v&0x7f);v=v>>>7;}else{this.push(v);break;}}};/** Get a `varuint32` */SerialBuffer.prototype.getVaruint32=function(){var v=0;var bit=0;while(true){var b=this.get();v|=(b&0x7f)<<bit;bit+=7;if(!(b&0x80)){break;}}return v>>>0;};/** Append a `varint32` */SerialBuffer.prototype.pushVarint32=function(v){this.pushVaruint32(v<<1^v>>31);};/** Get a `varint32` */SerialBuffer.prototype.getVarint32=function(){var v=this.getVaruint32();if(v&1){return~v>>1|2147483648;}else{return v>>>1;}};/** Append a `float32` */SerialBuffer.prototype.pushFloat32=function(v){this.pushArray(new Uint8Array(new Float32Array([v]).buffer));};/** Get a `float32` */SerialBuffer.prototype.getFloat32=function(){return new Float32Array(this.getUint8Array(4).slice().buffer)[0];};/** Append a `float64` */SerialBuffer.prototype.pushFloat64=function(v){this.pushArray(new Uint8Array(new Float64Array([v]).buffer));};/** Get a `float64` */SerialBuffer.prototype.getFloat64=function(){return new Float64Array(this.getUint8Array(8).slice().buffer)[0];};/** Append a `name` */SerialBuffer.prototype.pushName=function(s){if(typeof s!=='string'){throw new Error('Expected string containing name');}function charToSymbol(c){if(c>='a'.charCodeAt(0)&&c<='z'.charCodeAt(0)){return c-'a'.charCodeAt(0)+6;}if(c>='1'.charCodeAt(0)&&c<='5'.charCodeAt(0)){return c-'1'.charCodeAt(0)+1;}return 0;}var a=new Uint8Array(8);var bit=63;for(var i=0;i<s.length;++i){var c=charToSymbol(s.charCodeAt(i));if(bit<5){c=c<<1;}for(var j=4;j>=0;--j){if(bit>=0){a[Math.floor(bit/8)]|=(c>>j&1)<<bit%8;--bit;}}}this.pushArray(a);};/** Get a `name` */SerialBuffer.prototype.getName=function(){var a=this.getUint8Array(8);var result='';for(var bit=63;bit>=0;){var c=0;for(var i=0;i<5;++i){if(bit>=0){c=c<<1|a[Math.floor(bit/8)]>>bit%8&1;--bit;}}if(c>=6){result+=String.fromCharCode(c+'a'.charCodeAt(0)-6);}else if(c>=1){result+=String.fromCharCode(c+'1'.charCodeAt(0)-1);}else{result+='.';}}while(result.endsWith('.')){result=result.substr(0,result.length-1);}return result;};/** Append length-prefixed binary data */SerialBuffer.prototype.pushBytes=function(v){this.pushVaruint32(v.length);this.pushArray(v);};/** Get length-prefixed binary data */SerialBuffer.prototype.getBytes=function(){return this.getUint8Array(this.getVaruint32());};/** Append a string */SerialBuffer.prototype.pushString=function(v){this.pushBytes(this.textEncoder.encode(v));};/** Get a string */SerialBuffer.prototype.getString=function(){return this.textDecoder.decode(this.getBytes());};/** Append a `symbol_code`. Unlike `symbol`, `symbol_code` doesn't include a precision. */SerialBuffer.prototype.pushSymbolCode=function(name){if(typeof name!=='string'){throw new Error('Expected string containing symbol_code');}var a=[];a.push.apply(a,__spread(this.textEncoder.encode(name)));while(a.length<8){a.push(0);}this.pushArray(a.slice(0,8));};/** Get a `symbol_code`. Unlike `symbol`, `symbol_code` doesn't include a precision. */SerialBuffer.prototype.getSymbolCode=function(){var a=this.getUint8Array(8);var len;for(len=0;len<a.length;++len){if(!a[len]){break;}}var name=this.textDecoder.decode(new Uint8Array(a.buffer,a.byteOffset,len));return name;};/** Append a `symbol` */SerialBuffer.prototype.pushSymbol=function(_a){var name=_a.name,precision=_a.precision;var a=[precision&0xff];a.push.apply(a,__spread(this.textEncoder.encode(name)));while(a.length<8){a.push(0);}this.pushArray(a.slice(0,8));};/** Get a `symbol` */SerialBuffer.prototype.getSymbol=function(){var precision=this.get();var a=this.getUint8Array(7);var len;for(len=0;len<a.length;++len){if(!a[len]){break;}}var name=this.textDecoder.decode(new Uint8Array(a.buffer,a.byteOffset,len));return{name:name,precision:precision};};/** Append an asset */SerialBuffer.prototype.pushAsset=function(s){if(typeof s!=='string'){throw new Error('Expected string containing asset');}s=s.trim();var pos=0;var amount='';var precision=0;if(s[pos]==='-'){amount+='-';++pos;}var foundDigit=false;while(pos<s.length&&s.charCodeAt(pos)>='0'.charCodeAt(0)&&s.charCodeAt(pos)<='9'.charCodeAt(0)){foundDigit=true;amount+=s[pos];++pos;}if(!foundDigit){throw new Error('Asset must begin with a number');}if(s[pos]==='.'){++pos;while(pos<s.length&&s.charCodeAt(pos)>='0'.charCodeAt(0)&&s.charCodeAt(pos)<='9'.charCodeAt(0)){amount+=s[pos];++precision;++pos;}}var name=s.substr(pos).trim();this.pushArray(numeric.signedDecimalToBinary(8,amount));this.pushSymbol({name:name,precision:precision});};/** Get an asset */SerialBuffer.prototype.getAsset=function(){var amount=this.getUint8Array(8);var _a=this.getSymbol(),name=_a.name,precision=_a.precision;var s=numeric.signedBinaryToDecimal(amount,precision+1);if(precision){s=s.substr(0,s.length-precision)+'.'+s.substr(s.length-precision);}return s+' '+name;};/** Append a public key */SerialBuffer.prototype.pushPublicKey=function(s){var key=numeric.stringToPublicKey(s);this.push(key.type);this.pushArray(key.data);};/** Get a public key */SerialBuffer.prototype.getPublicKey=function(){var type=this.get();var data=this.getUint8Array(numeric.publicKeyDataSize);return numeric.publicKeyToString({type:type,data:data});};/** Append a private key */SerialBuffer.prototype.pushPrivateKey=function(s){var key=numeric.stringToPrivateKey(s);this.push(key.type);this.pushArray(key.data);};/** Get a private key */SerialBuffer.prototype.getPrivateKey=function(){var type=this.get();var data=this.getUint8Array(numeric.privateKeyDataSize);return numeric.privateKeyToString({type:type,data:data});};/** Append a signature */SerialBuffer.prototype.pushSignature=function(s){var key=numeric.stringToSignature(s);this.push(key.type);this.pushArray(key.data);};/** Get a signature */SerialBuffer.prototype.getSignature=function(){var type=this.get();var data=this.getUint8Array(numeric.signatureDataSize);return numeric.signatureToString({type:type,data:data});};return SerialBuffer;}();// SerialBuffer
exports.SerialBuffer=SerialBuffer;/** Is this a supported ABI version? */function supportedAbiVersion(version){return version.startsWith('eosio::abi/1.');}exports.supportedAbiVersion=supportedAbiVersion;function checkDateParse(date){var result=Date.parse(date);if(Number.isNaN(result)){throw new Error('Invalid time format');}return result;}/** Convert date in ISO format to `time_point` (miliseconds since epoch) */function dateToTimePoint(date){return Math.round(checkDateParse(date+'Z')*1000);}exports.dateToTimePoint=dateToTimePoint;/** Convert `time_point` (miliseconds since epoch) to date in ISO format */function timePointToDate(us){var s=new Date(us/1000).toISOString();return s.substr(0,s.length-1);}exports.timePointToDate=timePointToDate;/** Convert date in ISO format to `time_point_sec` (seconds since epoch) */function dateToTimePointSec(date){return Math.round(checkDateParse(date+'Z')/1000);}exports.dateToTimePointSec=dateToTimePointSec;/** Convert `time_point_sec` (seconds since epoch) to to date in ISO format */function timePointSecToDate(sec){var s=new Date(sec*1000).toISOString();return s.substr(0,s.length-1);}exports.timePointSecToDate=timePointSecToDate;/** Convert date in ISO format to `block_timestamp_type` (half-seconds since a different epoch) */function dateToBlockTimestamp(date){return Math.round((checkDateParse(date+'Z')-946684800000)/500);}exports.dateToBlockTimestamp=dateToBlockTimestamp;/** Convert `block_timestamp_type` (half-seconds since a different epoch) to to date in ISO format */function blockTimestampToDate(slot){var s=new Date(slot*500+946684800000).toISOString();return s.substr(0,s.length-1);}exports.blockTimestampToDate=blockTimestampToDate;/** Convert `string` to `Symbol`. format: `precision,NAME`. */function stringToSymbol(s){if(typeof s!=='string'){throw new Error('Expected string containing symbol');}var m=s.match(/^([0-9]+),([A-Z]+)$/);if(!m){throw new Error('Invalid symbol');}return{name:m[2],precision:+m[1]};}exports.stringToSymbol=stringToSymbol;/** Convert `Symbol` to `string`. format: `precision,NAME`. */function symbolToString(_a){var name=_a.name,precision=_a.precision;return precision+','+name;}exports.symbolToString=symbolToString;/** Convert binary data to hex */function arrayToHex(data){var e_1,_a;var result='';try{for(var data_1=__values(data),data_1_1=data_1.next();!data_1_1.done;data_1_1=data_1.next()){var x=data_1_1.value;result+=('00'+x.toString(16)).slice(-2);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(data_1_1&&!data_1_1.done&&(_a=data_1.return))_a.call(data_1);}finally{if(e_1)throw e_1.error;}}return result.toUpperCase();}exports.arrayToHex=arrayToHex;/** Convert hex to binary data */function hexToUint8Array(hex){if(typeof hex!=='string'){throw new Error('Expected string containing hex digits');}if(hex.length%2){throw new Error('Odd number of hex digits');}var l=hex.length/2;var result=new Uint8Array(l);for(var i=0;i<l;++i){var x=parseInt(hex.substr(i*2,2),16);if(Number.isNaN(x)){throw new Error('Expected hex string');}result[i]=x;}return result;}exports.hexToUint8Array=hexToUint8Array;function serializeUnknown(buffer,data){throw new Error('Don\'t know how to serialize '+this.name);}function deserializeUnknown(buffer){throw new Error('Don\'t know how to deserialize '+this.name);}function serializeStruct(buffer,data,state,allowExtensions){if(state===void 0){state=new SerializerState();}if(allowExtensions===void 0){allowExtensions=true;}var e_2,_a;if(typeof data!=='object'){throw new Error('expected object containing data: '+JSON.stringify(data));}if(this.base){this.base.serialize(buffer,data,state,allowExtensions);}try{for(var _b=__values(this.fields),_c=_b.next();!_c.done;_c=_b.next()){var field=_c.value;if(field.name in data){if(state.skippedBinaryExtension){throw new Error('unexpected '+this.name+'.'+field.name);}field.type.serialize(buffer,data[field.name],state,allowExtensions&&field===this.fields[this.fields.length-1]);}else{if(allowExtensions&&field.type.extensionOf){state.skippedBinaryExtension=true;}else{throw new Error('missing '+this.name+'.'+field.name+' (type='+field.type.name+')');}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}}function deserializeStruct(buffer,state,allowExtensions){if(state===void 0){state=new SerializerState();}if(allowExtensions===void 0){allowExtensions=true;}var e_3,_a;var result;if(this.base){result=this.base.deserialize(buffer,state,allowExtensions);}else{result={};}try{for(var _b=__values(this.fields),_c=_b.next();!_c.done;_c=_b.next()){var field=_c.value;if(allowExtensions&&field.type.extensionOf&&!buffer.haveReadData()){state.skippedBinaryExtension=true;}else{result[field.name]=field.type.deserialize(buffer,state,allowExtensions);}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}return result;}function serializeVariant(buffer,data,state,allowExtensions){if(!Array.isArray(data)||data.length!==2||typeof data[0]!=='string'){throw new Error('expected variant: ["type", value]');}var i=this.fields.findIndex(function(field){return field.name===data[0];});if(i<0){throw new Error("type \""+data[0]+"\" is not valid for variant");}buffer.pushVaruint32(i);this.fields[i].type.serialize(buffer,data[1],state,allowExtensions);}function deserializeVariant(buffer,state,allowExtensions){var i=buffer.getVaruint32();if(i>=this.fields.length){throw new Error("type index "+i+" is not valid for variant");}var field=this.fields[i];return[field.name,field.type.deserialize(buffer,state,allowExtensions)];}function serializeArray(buffer,data,state,allowExtensions){var e_4,_a;buffer.pushVaruint32(data.length);try{for(var data_2=__values(data),data_2_1=data_2.next();!data_2_1.done;data_2_1=data_2.next()){var item=data_2_1.value;this.arrayOf.serialize(buffer,item,state,false);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(data_2_1&&!data_2_1.done&&(_a=data_2.return))_a.call(data_2);}finally{if(e_4)throw e_4.error;}}}function deserializeArray(buffer,state,allowExtensions){var len=buffer.getVaruint32();var result=[];for(var i=0;i<len;++i){result.push(this.arrayOf.deserialize(buffer,state,false));}return result;}function serializeOptional(buffer,data,state,allowExtensions){if(data===null||data===undefined){buffer.push(0);}else{buffer.push(1);this.optionalOf.serialize(buffer,data,state,allowExtensions);}}function deserializeOptional(buffer,state,allowExtensions){if(buffer.get()){return this.optionalOf.deserialize(buffer,state,allowExtensions);}else{return null;}}function serializeExtension(buffer,data,state,allowExtensions){this.extensionOf.serialize(buffer,data,state,allowExtensions);}function deserializeExtension(buffer,state,allowExtensions){return this.extensionOf.deserialize(buffer,state,allowExtensions);}function createType(attrs){return __assign({name:'<missing name>',aliasOfName:'',arrayOf:null,optionalOf:null,extensionOf:null,baseName:'',base:null,fields:[],serialize:serializeUnknown,deserialize:deserializeUnknown},attrs);}function checkRange(orig,converted){if(Number.isNaN(+orig)||Number.isNaN(+converted)||typeof orig!=='number'&&typeof orig!=='string'){throw new Error('Expected number');}if(+orig!==+converted){throw new Error('Number is out of range');}return+orig;}/** Create the set of types built-in to the abi format */function createInitialTypes(){var result=new Map(Object.entries({bool:createType({name:'bool',serialize:function(buffer,data){if(typeof data!=='boolean'){throw new Error('Expected true or false');}buffer.push(data?1:0);},deserialize:function(buffer){return!!buffer.get();}}),uint8:createType({name:'uint8',serialize:function(buffer,data){buffer.push(checkRange(data,data&0xff));},deserialize:function(buffer){return buffer.get();}}),int8:createType({name:'int8',serialize:function(buffer,data){buffer.push(checkRange(data,data<<24>>24));},deserialize:function(buffer){return buffer.get()<<24>>24;}}),uint16:createType({name:'uint16',serialize:function(buffer,data){buffer.pushUint16(checkRange(data,data&0xffff));},deserialize:function(buffer){return buffer.getUint16();}}),int16:createType({name:'int16',serialize:function(buffer,data){buffer.pushUint16(checkRange(data,data<<16>>16));},deserialize:function(buffer){return buffer.getUint16()<<16>>16;}}),uint32:createType({name:'uint32',serialize:function(buffer,data){buffer.pushUint32(checkRange(data,data>>>0));},deserialize:function(buffer){return buffer.getUint32();}}),uint64:createType({name:'uint64',serialize:function(buffer,data){buffer.pushArray(numeric.decimalToBinary(8,''+data));},deserialize:function(buffer){return numeric.binaryToDecimal(buffer.getUint8Array(8));}}),int64:createType({name:'int64',serialize:function(buffer,data){buffer.pushArray(numeric.signedDecimalToBinary(8,''+data));},deserialize:function(buffer){return numeric.signedBinaryToDecimal(buffer.getUint8Array(8));}}),int32:createType({name:'int32',serialize:function(buffer,data){buffer.pushUint32(checkRange(data,data|0));},deserialize:function(buffer){return buffer.getUint32()|0;}}),varuint32:createType({name:'varuint32',serialize:function(buffer,data){buffer.pushVaruint32(checkRange(data,data>>>0));},deserialize:function(buffer){return buffer.getVaruint32();}}),varint32:createType({name:'varint32',serialize:function(buffer,data){buffer.pushVarint32(checkRange(data,data|0));},deserialize:function(buffer){return buffer.getVarint32();}}),uint128:createType({name:'uint128',serialize:function(buffer,data){buffer.pushArray(numeric.decimalToBinary(16,''+data));},deserialize:function(buffer){return numeric.binaryToDecimal(buffer.getUint8Array(16));}}),int128:createType({name:'int128',serialize:function(buffer,data){buffer.pushArray(numeric.signedDecimalToBinary(16,''+data));},deserialize:function(buffer){return numeric.signedBinaryToDecimal(buffer.getUint8Array(16));}}),float32:createType({name:'float32',serialize:function(buffer,data){buffer.pushFloat32(data);},deserialize:function(buffer){return buffer.getFloat32();}}),float64:createType({name:'float64',serialize:function(buffer,data){buffer.pushFloat64(data);},deserialize:function(buffer){return buffer.getFloat64();}}),float128:createType({name:'float128',serialize:function(buffer,data){buffer.pushUint8ArrayChecked(hexToUint8Array(data),16);},deserialize:function(buffer){return arrayToHex(buffer.getUint8Array(16));}}),bytes:createType({name:'bytes',serialize:function(buffer,data){if(data instanceof Uint8Array||Array.isArray(data)){buffer.pushBytes(data);}else{buffer.pushBytes(hexToUint8Array(data));}},deserialize:function(buffer,state){if(state&&state.options.bytesAsUint8Array){return buffer.getBytes();}else{return arrayToHex(buffer.getBytes());}}}),string:createType({name:'string',serialize:function(buffer,data){buffer.pushString(data);},deserialize:function(buffer){return buffer.getString();}}),name:createType({name:'name',serialize:function(buffer,data){buffer.pushName(data);},deserialize:function(buffer){return buffer.getName();}}),time_point:createType({name:'time_point',serialize:function(buffer,data){buffer.pushNumberAsUint64(dateToTimePoint(data));},deserialize:function(buffer){return timePointToDate(buffer.getUint64AsNumber());}}),time_point_sec:createType({name:'time_point_sec',serialize:function(buffer,data){buffer.pushUint32(dateToTimePointSec(data));},deserialize:function(buffer){return timePointSecToDate(buffer.getUint32());}}),block_timestamp_type:createType({name:'block_timestamp_type',serialize:function(buffer,data){buffer.pushUint32(dateToBlockTimestamp(data));},deserialize:function(buffer){return blockTimestampToDate(buffer.getUint32());}}),symbol_code:createType({name:'symbol_code',serialize:function(buffer,data){buffer.pushSymbolCode(data);},deserialize:function(buffer){return buffer.getSymbolCode();}}),symbol:createType({name:'symbol',serialize:function(buffer,data){buffer.pushSymbol(stringToSymbol(data));},deserialize:function(buffer){return symbolToString(buffer.getSymbol());}}),asset:createType({name:'asset',serialize:function(buffer,data){buffer.pushAsset(data);},deserialize:function(buffer){return buffer.getAsset();}}),checksum160:createType({name:'checksum160',serialize:function(buffer,data){buffer.pushUint8ArrayChecked(hexToUint8Array(data),20);},deserialize:function(buffer){return arrayToHex(buffer.getUint8Array(20));}}),checksum256:createType({name:'checksum256',serialize:function(buffer,data){buffer.pushUint8ArrayChecked(hexToUint8Array(data),32);},deserialize:function(buffer){return arrayToHex(buffer.getUint8Array(32));}}),checksum512:createType({name:'checksum512',serialize:function(buffer,data){buffer.pushUint8ArrayChecked(hexToUint8Array(data),64);},deserialize:function(buffer){return arrayToHex(buffer.getUint8Array(64));}}),public_key:createType({name:'public_key',serialize:function(buffer,data){buffer.pushPublicKey(data);},deserialize:function(buffer){return buffer.getPublicKey();}}),private_key:createType({name:'private_key',serialize:function(buffer,data){buffer.pushPrivateKey(data);},deserialize:function(buffer){return buffer.getPrivateKey();}}),signature:createType({name:'signature',serialize:function(buffer,data){buffer.pushSignature(data);},deserialize:function(buffer){return buffer.getSignature();}})}));result.set('extended_asset',createType({name:'extended_asset',baseName:'',fields:[{name:'quantity',typeName:'asset',type:result.get('asset')},{name:'contract',typeName:'name',type:result.get('name')}],serialize:serializeStruct,deserialize:deserializeStruct}));return result;}// createInitialTypes()
exports.createInitialTypes=createInitialTypes;/** Get type from `types` */function getType(types,name){var type=types.get(name);if(type&&type.aliasOfName){return getType(types,type.aliasOfName);}if(type){return type;}if(name.endsWith('[]')){return createType({name:name,arrayOf:getType(types,name.substr(0,name.length-2)),serialize:serializeArray,deserialize:deserializeArray});}if(name.endsWith('?')){return createType({name:name,optionalOf:getType(types,name.substr(0,name.length-1)),serialize:serializeOptional,deserialize:deserializeOptional});}if(name.endsWith('$')){return createType({name:name,extensionOf:getType(types,name.substr(0,name.length-1)),serialize:serializeExtension,deserialize:deserializeExtension});}throw new Error('Unknown type: '+name);}exports.getType=getType;/**
 * Get types from abi
 * @param initialTypes Set of types to build on.
 *     In most cases, it's best to fill this from a fresh call to `getTypesFromAbi()`.
 */function getTypesFromAbi(initialTypes,abi){var e_5,_a,e_6,_b,e_7,_c,e_8,_d,e_9,_e;var types=new Map(initialTypes);if(abi.types){try{for(var _f=__values(abi.types),_g=_f.next();!_g.done;_g=_f.next()){var _h=_g.value,new_type_name=_h.new_type_name,type=_h.type;types.set(new_type_name,createType({name:new_type_name,aliasOfName:type}));}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_g&&!_g.done&&(_a=_f.return))_a.call(_f);}finally{if(e_5)throw e_5.error;}}}if(abi.structs){try{for(var _j=__values(abi.structs),_k=_j.next();!_k.done;_k=_j.next()){var _l=_k.value,name_1=_l.name,base=_l.base,fields=_l.fields;types.set(name_1,createType({name:name_1,baseName:base,fields:fields.map(function(_a){var n=_a.name,type=_a.type;return{name:n,typeName:type,type:null};}),serialize:serializeStruct,deserialize:deserializeStruct}));}}catch(e_6_1){e_6={error:e_6_1};}finally{try{if(_k&&!_k.done&&(_b=_j.return))_b.call(_j);}finally{if(e_6)throw e_6.error;}}}if(abi.variants){try{for(var _m=__values(abi.variants),_o=_m.next();!_o.done;_o=_m.next()){var _p=_o.value,name_2=_p.name,t=_p.types;types.set(name_2,createType({name:name_2,fields:t.map(function(s){return{name:s,typeName:s,type:null};}),serialize:serializeVariant,deserialize:deserializeVariant}));}}catch(e_7_1){e_7={error:e_7_1};}finally{try{if(_o&&!_o.done&&(_c=_m.return))_c.call(_m);}finally{if(e_7)throw e_7.error;}}}try{for(var types_1=__values(types),types_1_1=types_1.next();!types_1_1.done;types_1_1=types_1.next()){var _q=__read(types_1_1.value,2),name_3=_q[0],type=_q[1];if(type.baseName){type.base=getType(types,type.baseName);}try{for(var _r=__values(type.fields),_s=_r.next();!_s.done;_s=_r.next()){var field=_s.value;field.type=getType(types,field.typeName);}}catch(e_9_1){e_9={error:e_9_1};}finally{try{if(_s&&!_s.done&&(_e=_r.return))_e.call(_r);}finally{if(e_9)throw e_9.error;}}}}catch(e_8_1){e_8={error:e_8_1};}finally{try{if(types_1_1&&!types_1_1.done&&(_d=types_1.return))_d.call(types_1);}finally{if(e_8)throw e_8.error;}}return types;}// getTypesFromAbi
exports.getTypesFromAbi=getTypesFromAbi;/** TAPoS: Return transaction fields which reference `refBlock` and expire `expireSeconds` after `refBlock.timestamp` */function transactionHeader(refBlock,expireSeconds){return{expiration:timePointSecToDate(dateToTimePointSec(refBlock.timestamp)+expireSeconds),ref_block_num:refBlock.block_num&0xffff,ref_block_prefix:refBlock.ref_block_prefix};}exports.transactionHeader=transactionHeader;/** Convert action data to serialized form (hex) */function serializeActionData(contract,account,name,data,textEncoder,textDecoder){var action=contract.actions.get(name);if(!action){throw new Error("Unknown action "+name+" in contract "+account);}var buffer=new SerialBuffer({textEncoder:textEncoder,textDecoder:textDecoder});action.serialize(buffer,data);return arrayToHex(buffer.asUint8Array());}exports.serializeActionData=serializeActionData;/** Return action in serialized form */function serializeAction(contract,account,name,authorization,data,textEncoder,textDecoder){return{account:account,name:name,authorization:authorization,data:serializeActionData(contract,account,name,data,textEncoder,textDecoder)};}exports.serializeAction=serializeAction;/** Deserialize action data. If `data` is a `string`, then it's assumed to be in hex. */function deserializeActionData(contract,account,name,data,textEncoder,textDecoder){var action=contract.actions.get(name);if(typeof data==='string'){data=hexToUint8Array(data);}if(!action){throw new Error("Unknown action "+name+" in contract "+account);}var buffer=new SerialBuffer({textDecoder:textDecoder,textEncoder:textEncoder});buffer.pushArray(data);return action.deserialize(buffer);}exports.deserializeActionData=deserializeActionData;/** Deserialize action. If `data` is a `string`, then it's assumed to be in hex. */function deserializeAction(contract,account,name,authorization,data,textEncoder,textDecoder){return{account:account,name:name,authorization:authorization,data:deserializeActionData(contract,account,name,data,textEncoder,textDecoder)};}exports.deserializeAction=deserializeAction;},{"./eosjs-numeric":182}],186:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var eosjs_api_1=require("./eosjs-api");exports.Api=eosjs_api_1.Api;var ApiInterfaces=require("./eosjs-api-interfaces");exports.ApiInterfaces=ApiInterfaces;var eosjs_jsonrpc_1=require("./eosjs-jsonrpc");exports.JsonRpc=eosjs_jsonrpc_1.JsonRpc;var Numeric=require("./eosjs-numeric");exports.Numeric=Numeric;var RpcInterfaces=require("./eosjs-rpc-interfaces");exports.RpcInterfaces=RpcInterfaces;var eosjs_rpcerror_1=require("./eosjs-rpcerror");exports.RpcError=eosjs_rpcerror_1.RpcError;var Serialize=require("./eosjs-serialize");exports.Serialize=Serialize;},{"./eosjs-api":180,"./eosjs-api-interfaces":179,"./eosjs-jsonrpc":181,"./eosjs-numeric":182,"./eosjs-rpc-interfaces":183,"./eosjs-rpcerror":184,"./eosjs-serialize":185}],187:[function(require,module,exports){// https://gist.githubusercontent.com/wlzla000/bac83df6d3c51916c4dd0bc947e46947/raw/7ee3462b095ab22580ddaf191f44a590da6fe33b/RIPEMD-160.js
/*
	RIPEMD-160.js

		developed
			by K. (https://github.com/wlzla000)
			on December 27-29, 2017,

		licensed under


		the MIT license

		Copyright (c) 2017 K.

		 Permission is hereby granted, free of charge, to any person
		obtaining a copy of this software and associated documentation
		files (the "Software"), to deal in the Software without
		restriction, including without limitation the rights to use,
		copy, modify, merge, publish, distribute, sublicense, and/or
		sell copies of the Software, and to permit persons to whom the
		Software is furnished to do so, subject to the following
		conditions:

		 The above copyright notice and this permission notice shall be
		included in all copies or substantial portions of the Software.

		 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
		EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
		OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
		NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
		HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
		WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
		FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
		OTHER DEALINGS IN THE SOFTWARE.
*/"use strict";var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var RIPEMD160=function(){function RIPEMD160(){// https://webcache.googleusercontent.com/search?q=cache:CnLOgolTHYEJ:https://www.cosic.esat.kuleuven.be/publications/article-317.pdf
// http://shodhganga.inflibnet.ac.in/bitstream/10603/22978/13/13_appendix.pdf
_classCallCheck(this,RIPEMD160);}_createClass(RIPEMD160,null,[{key:"get_n_pad_bytes",value:function get_n_pad_bytes(message_size/* in bytes, 1 byte is 8 bits. */){//  Obtain the number of bytes needed to pad the message.
// It does not contain the size of the message size information.
/*
   	https://webcache.googleusercontent.com/search?q=cache:CnLOgolTHYEJ:https://www.cosic.esat.kuleuven.be/publications/article-317.pdf
   		The Cryptographic Hash Function RIPEMD-160
   		written by
   		Bart Preneel,
   		Hans Dobbertin,
   		Antoon Bosselaers
   	in
   		1997.
   		--------------------------------------------------
   		§5     Description of RIPEMD-160
   		......
   		 In order to guarantee that the total input size is a
   	multiple of 512 bits, the input is padded in the same
   	way as for all the members of the MD4-family: one
   	appends a single 1 followed by a string of 0s (the
   	number of 0s lies between 0 and 511); the last 64 bits
   	of the extended input contain the binary representation
   	of the input size in bits, least significant byte first.
   *//*
   	https://tools.ietf.org/rfc/rfc1186.txt
   		RFC 1186: MD4 Message Digest Algorithm.
   		written by
   		Ronald Linn Rivest
   	in
   		October 1990.
   		--------------------------------------------------
   		§3     MD4 Algorithm Description
   		......
   		Step 1. Append padding bits
   		 The message is "padded" (extended) so that its length
   	(in bits) is congruent to 448, modulo 512. That is, the
   	message is extended so that it is just 64 bits shy of
   	being a multiple of 512 bits long. Padding is always
   	performed, even if the length of the message is already
   	congruent to 448, modulo 512 (in which case 512 bits of
   	padding are added).
   		 Padding is performed as follows: a single "1" bit is
   	appended to the message, and then enough zero bits are
   	appended so that the length in bits of the padded
   	message becomes congruent to 448, modulo 512.
   		Step 2. Append length
   		 A 64-bit representation of b (the length of the message
   	before the padding bits were added) is appended to the
   	result of the previous step. In the unlikely event that
   	b is greater than 2^64, then only the low-order 64 bits
   	of b are used. (These bits are appended as two 32-bit
   	words and appended low-order word first in accordance
   	with the previous conventions.)
   		 At this point the resulting message (after padding with
   	bits and with b) has a length that is an exact multiple
   	of 512 bits. Equivalently, this message has a length
   	that is an exact multiple of 16 (32-bit) words. Let
   	M[0 ... N-1] denote the words of the resulting message,
   	where N is a multiple of 16.
   */// https://crypto.stackexchange.com/a/32407/54568
/*
   	Example case  # 1
   		[0 bit: message.]
   		[1 bit: 1.]
   		[447 bits: 0.]
   		[64 bits: message size information.]
   		Example case  # 2
   		[512-bits: message]
   		[1 bit: 1.]
   		[447 bits: 0.]
   		[64 bits: message size information.]
   		Example case  # 3
   		[(512 - 64 = 448) bits: message.]
   		[1 bit: 1.]
   		[511 bits: 0.]
   		[64 bits: message size information.]
   		Example case  # 4
   		[(512 - 65 = 447) bits: message.]
   		[1 bit: 1.]
   		[0 bit: 0.]
   		[64 bits: message size information.]
   */// The number of padding zero bits:
//      511 - [{(message size in bits) + 64} (mod 512)]
return 64-(message_size+8&63/* 63 */);}},{key:"pad",value:function pad(message/* An ArrayBuffer. */){var message_size=message.byteLength;var n_pad=RIPEMD160.get_n_pad_bytes(message_size);//  `Number.MAX_SAFE_INTEGER` is ((2 ** 53) - 1) and
// bitwise operation in Javascript is done on 32-bits operands.
var divmod=function divmod(dividend,divisor){return[Math.floor(dividend/divisor),dividend%divisor];};/*
   To shift
     00000000 000????? ???????? ???????? ???????? ???????? ???????? ????????
                                      t o
    00000000 ???????? ???????? ???????? ???????? ???????? ???????? ?????000
   --------------------------------------------------------------------------------
   Method #1
      00000000 000????? ???????? ????????  ???????? ???????? ???????? ????????
    [00000000 000AAAAA AAAAAAAA AAAAAAAA] (<A> captured)
    [00000000 AAAAAAAA AAAAAAAA AAAAA000] (<A> shifted)
                          (<B> captured) [BBBBBBBB BBBBBBBB BBBBBBBB BBBBBBBB]
                      (<B> shifted) [BBB][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]
    [00000000 AAAAAAAA AAAAAAAA AAAAABBB] (<A> & <B_2> merged)
    [00000000 AAAAAAAA AAAAAAAA AAAAABBB][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]
     00000000 ???????? ???????? ????????  ???????? ???????? ???????? ?????000
   	const uint32_max_plus_1 = 0x100000000; // (2 ** 32)
   const [
   	msg_byte_size_most, // Value range [0, (2 ** 21) - 1].
   	msg_byte_size_least // Value range [0, (2 ** 32) - 1].
   ] = divmod(message_size, uint32_max_plus_1);
   const [
   	carry, // Value range [0, 7].
   	msg_bit_size_least // Value range [0, (2 ** 32) - 8].
   ] = divmod(message_byte_size_least * 8, uint32_max_plus_1);
   const message_bit_size_most = message_byte_size_most * 8
   	+ carry; // Value range [0, (2 ** 24) - 1].
   --------------------------------------------------------------------------------
   Method #2
     00000000 000????? ???????? ????????  ???????? ???????? ???????? ????????
       [00000 000AAAAA AAAAAAAA AAAAAAAA  AAA] (<A> captured)
                          (<B> captured) [000BBBBB BBBBBBBB BBBBBBBB BBBBBBBB]
                           (<B> shifted) [BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]
    [00000000 AAAAAAAA AAAAAAAA AAAAAAAA][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]
     00000000 ???????? ???????? ????????  ???????? ???????? ???????? ?????000
   	*/var _divmod$map=divmod(message_size,536870912/* (2 ** 29) */).map(function(x,index){return index?x*8:x;}),_divmod$map2=_slicedToArray(_divmod$map,2),msg_bit_size_most=_divmod$map2[0],msg_bit_size_least=_divmod$map2[1];// `ArrayBuffer.transfer()` is not supported.
var padded=new Uint8Array(message_size+n_pad+8);padded.set(new Uint8Array(message),0);var data_view=new DataView(padded.buffer);data_view.setUint8(message_size,128);data_view.setUint32(message_size+n_pad,msg_bit_size_least,true// Little-endian
);data_view.setUint32(message_size+n_pad+4,msg_bit_size_most,true// Little-endian
);return padded.buffer;}},{key:"f",value:function f(j,x,y,z){if(0<=j&&j<=15){// Exclusive-OR
return x^y^z;}if(16<=j&&j<=31){// Multiplexing (muxing)
return x&y|~x&z;}if(32<=j&&j<=47){return(x|~y)^z;}if(48<=j&&j<=63){// Multiplexing (muxing)
return x&z|y&~z;}if(64<=j&&j<=79){return x^(y|~z);}}},{key:"K",value:function K(j){if(0<=j&&j<=15){return 0x00000000;}if(16<=j&&j<=31){// Math.floor((2 ** 30) * Math.SQRT2)
return 0x5A827999;}if(32<=j&&j<=47){// Math.floor((2 ** 30) * Math.sqrt(3))
return 0x6ED9EBA1;}if(48<=j&&j<=63){// Math.floor((2 ** 30) * Math.sqrt(5))
return 0x8F1BBCDC;}if(64<=j&&j<=79){// Math.floor((2 ** 30) * Math.sqrt(7))
return 0xA953FD4E;}}},{key:"KP",value:function KP(j)// K'
{if(0<=j&&j<=15){// Math.floor((2 ** 30) * Math.cbrt(2))
return 0x50A28BE6;}if(16<=j&&j<=31){// Math.floor((2 ** 30) * Math.cbrt(3))
return 0x5C4DD124;}if(32<=j&&j<=47){// Math.floor((2 ** 30) * Math.cbrt(5))
return 0x6D703EF3;}if(48<=j&&j<=63){// Math.floor((2 ** 30) * Math.cbrt(7))
return 0x7A6D76E9;}if(64<=j&&j<=79){return 0x00000000;}}},{key:"add_modulo32",value:function add_modulo32()/* ...... */{// 1.  Modulo addition (addition modulo) is associative.
//    https://proofwiki.org/wiki/Modulo_Addition_is_Associative
// 2.  Bitwise operation in Javascript
//    is done on 32-bits operands
//    and results in a 32-bits value.
return Array.from(arguments).reduce(function(a,b){return a+b;},0)|0;}},{key:"rol32",value:function rol32(value,count){// Cyclic left shift (rotate) on 32-bits value.
return value<<count|value>>>32-count;}},{key:"hash",value:function hash(message/* An ArrayBuffer. */){//////////       Padding       //////////
// The padded message.
var padded=RIPEMD160.pad(message);//////////     Compression     //////////
// Message word selectors.
var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var rP=[// r'
5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];// Amounts for 'rotate left' operation.
var s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var sP=[// s'
8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];// The size, in bytes, of a word.
var word_size=4;// The size, in bytes, of a 16-words block.
var block_size=64;// The number of the 16-words blocks.
var t=padded.byteLength/block_size;//  The message after padding consists of t 16-word blocks that
// are denoted with X_i[j], with 0≤i≤(t − 1) and 0≤j≤15.
var X=new Array(t).fill(undefined).map(function(_,i){return function(j){return new DataView(padded,i*block_size,block_size).getUint32(j*word_size,true// Little-endian
);};});//  The result of RIPEMD-160 is contained in five 32-bit words,
// which form the internal state of the algorithm. The final
// content of these five 32-bit words is converted to a 160-bit
// string, again using the little-endian convention.
var h=[0x67452301,// h_0
0xEFCDAB89,// h_1
0x98BADCFE,// h_2
0x10325476,// h_3
0xC3D2E1F0// h_4
];for(var i=0;i<t;++i){var A=h[0],B=h[1],C=h[2],D=h[3],E=h[4];var AP=A,BP=B,CP=C,DP=D,EP=E;for(var j=0;j<80;++j){// Left rounds
var _T=RIPEMD160.add_modulo32(RIPEMD160.rol32(RIPEMD160.add_modulo32(A,RIPEMD160.f(j,B,C,D),X[i](r[j]),RIPEMD160.K(j)),s[j]),E);A=E;E=D;D=RIPEMD160.rol32(C,10);C=B;B=_T;// Right rounds
_T=RIPEMD160.add_modulo32(RIPEMD160.rol32(RIPEMD160.add_modulo32(AP,RIPEMD160.f(79-j,BP,CP,DP),X[i](rP[j]),RIPEMD160.KP(j)),sP[j]),EP);AP=EP;EP=DP;DP=RIPEMD160.rol32(CP,10);CP=BP;BP=_T;}var T=RIPEMD160.add_modulo32(h[1],C,DP);h[1]=RIPEMD160.add_modulo32(h[2],D,EP);h[2]=RIPEMD160.add_modulo32(h[3],E,AP);h[3]=RIPEMD160.add_modulo32(h[4],A,BP);h[4]=RIPEMD160.add_modulo32(h[0],B,CP);h[0]=T;}//  The final output string then consists of the concatenatation
// of h_0, h_1, h_2, h_3, and h_4 after converting each h_i to a
// 4-byte string using the little-endian convention.
var result=new ArrayBuffer(20);var data_view=new DataView(result);h.forEach(function(h_i,i){return data_view.setUint32(i*4,h_i,true);});return result;}}]);return RIPEMD160;}();module.exports={RIPEMD160:RIPEMD160};},{}],188:[function(require,module,exports){module.exports={"version":"eosio::abi/1.1","structs":[{"name":"extensions_entry","base":"","fields":[{"name":"tag","type":"uint16"},{"name":"value","type":"bytes"}]},{"name":"type_def","base":"","fields":[{"name":"new_type_name","type":"string"},{"name":"type","type":"string"}]},{"name":"field_def","base":"","fields":[{"name":"name","type":"string"},{"name":"type","type":"string"}]},{"name":"struct_def","base":"","fields":[{"name":"name","type":"string"},{"name":"base","type":"string"},{"name":"fields","type":"field_def[]"}]},{"name":"action_def","base":"","fields":[{"name":"name","type":"name"},{"name":"type","type":"string"},{"name":"ricardian_contract","type":"string"}]},{"name":"table_def","base":"","fields":[{"name":"name","type":"name"},{"name":"index_type","type":"string"},{"name":"key_names","type":"string[]"},{"name":"key_types","type":"string[]"},{"name":"type","type":"string"}]},{"name":"clause_pair","base":"","fields":[{"name":"id","type":"string"},{"name":"body","type":"string"}]},{"name":"error_message","base":"","fields":[{"name":"error_code","type":"uint64"},{"name":"error_msg","type":"string"}]},{"name":"variant_def","base":"","fields":[{"name":"name","type":"string"},{"name":"types","type":"string[]"}]},{"name":"abi_def","base":"","fields":[{"name":"version","type":"string"},{"name":"types","type":"type_def[]"},{"name":"structs","type":"struct_def[]"},{"name":"actions","type":"action_def[]"},{"name":"tables","type":"table_def[]"},{"name":"ricardian_clauses","type":"clause_pair[]"},{"name":"error_messages","type":"error_message[]"},{"name":"abi_extensions","type":"extensions_entry[]"},{"name":"variants","type":"variant_def[]$"}]}]};},{}],189:[function(require,module,exports){module.exports={"version":"eosio::abi/1.0","types":[{"new_type_name":"account_name","type":"name"},{"new_type_name":"action_name","type":"name"},{"new_type_name":"permission_name","type":"name"}],"structs":[{"name":"permission_level","base":"","fields":[{"name":"actor","type":"account_name"},{"name":"permission","type":"permission_name"}]},{"name":"action","base":"","fields":[{"name":"account","type":"account_name"},{"name":"name","type":"action_name"},{"name":"authorization","type":"permission_level[]"},{"name":"data","type":"bytes"}]},{"name":"extension","base":"","fields":[{"name":"type","type":"uint16"},{"name":"data","type":"bytes"}]},{"name":"transaction_header","base":"","fields":[{"name":"expiration","type":"time_point_sec"},{"name":"ref_block_num","type":"uint16"},{"name":"ref_block_prefix","type":"uint32"},{"name":"max_net_usage_words","type":"varuint32"},{"name":"max_cpu_usage_ms","type":"uint8"},{"name":"delay_sec","type":"varuint32"}]},{"name":"transaction","base":"transaction_header","fields":[{"name":"context_free_actions","type":"action[]"},{"name":"actions","type":"action[]"},{"name":"transaction_extensions","type":"extension[]"}]}]};},{}],190:[function(require,module,exports){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';var R=typeof Reflect==='object'?Reflect:null;var ReflectApply=R&&typeof R.apply==='function'?R.apply:function ReflectApply(target,receiver,args){return Function.prototype.apply.call(target,receiver,args);};var ReflectOwnKeys;if(R&&typeof R.ownKeys==='function'){ReflectOwnKeys=R.ownKeys;}else if(Object.getOwnPropertySymbols){ReflectOwnKeys=function ReflectOwnKeys(target){return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));};}else{ReflectOwnKeys=function ReflectOwnKeys(target){return Object.getOwnPropertyNames(target);};}function ProcessEmitWarning(warning){if(console&&console.warn)console.warn(warning);}var NumberIsNaN=Number.isNaN||function NumberIsNaN(value){return value!==value;};function EventEmitter(){EventEmitter.init.call(this);}module.exports=EventEmitter;module.exports.once=once;// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._eventsCount=0;EventEmitter.prototype._maxListeners=undefined;// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners=10;function checkListener(listener){if(typeof listener!=='function'){throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener);}}Object.defineProperty(EventEmitter,'defaultMaxListeners',{enumerable:true,get:function(){return defaultMaxListeners;},set:function(arg){if(typeof arg!=='number'||arg<0||NumberIsNaN(arg)){throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+arg+'.');}defaultMaxListeners=arg;}});EventEmitter.init=function(){if(this._events===undefined||this._events===Object.getPrototypeOf(this)._events){this._events=Object.create(null);this._eventsCount=0;}this._maxListeners=this._maxListeners||undefined;};// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners=function setMaxListeners(n){if(typeof n!=='number'||n<0||NumberIsNaN(n)){throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+n+'.');}this._maxListeners=n;return this;};function _getMaxListeners(that){if(that._maxListeners===undefined)return EventEmitter.defaultMaxListeners;return that._maxListeners;}EventEmitter.prototype.getMaxListeners=function getMaxListeners(){return _getMaxListeners(this);};EventEmitter.prototype.emit=function emit(type){var args=[];for(var i=1;i<arguments.length;i++)args.push(arguments[i]);var doError=type==='error';var events=this._events;if(events!==undefined)doError=doError&&events.error===undefined;else if(!doError)return false;// If there is no 'error' event listener then throw.
if(doError){var er;if(args.length>0)er=args[0];if(er instanceof Error){// Note: The comments on the `throw` lines are intentional, they show
// up in Node's output if this results in an unhandled exception.
throw er;// Unhandled 'error' event
}// At least give some kind of context to the user
var err=new Error('Unhandled error.'+(er?' ('+er.message+')':''));err.context=er;throw err;// Unhandled 'error' event
}var handler=events[type];if(handler===undefined)return false;if(typeof handler==='function'){ReflectApply(handler,this,args);}else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i)ReflectApply(listeners[i],this,args);}return true;};function _addListener(target,type,listener,prepend){var m;var events;var existing;checkListener(listener);events=target._events;if(events===undefined){events=target._events=Object.create(null);target._eventsCount=0;}else{// To avoid recursion in the case that type === "newListener"! Before
// adding it to the listeners, first emit "newListener".
if(events.newListener!==undefined){target.emit('newListener',type,listener.listener?listener.listener:listener);// Re-assign `events` because a newListener handler could have caused the
// this._events to be assigned to a new object
events=target._events;}existing=events[type];}if(existing===undefined){// Optimize the case of one listener. Don't need the extra array object.
existing=events[type]=listener;++target._eventsCount;}else{if(typeof existing==='function'){// Adding the second element, need to change to array.
existing=events[type]=prepend?[listener,existing]:[existing,listener];// If we've already got an array, just append.
}else if(prepend){existing.unshift(listener);}else{existing.push(listener);}// Check for listener leak
m=_getMaxListeners(target);if(m>0&&existing.length>m&&!existing.warned){existing.warned=true;// No error code for this since it is a Warning
// eslint-disable-next-line no-restricted-syntax
var w=new Error('Possible EventEmitter memory leak detected. '+existing.length+' '+String(type)+' listeners '+'added. Use emitter.setMaxListeners() to '+'increase limit');w.name='MaxListenersExceededWarning';w.emitter=target;w.type=type;w.count=existing.length;ProcessEmitWarning(w);}}return target;}EventEmitter.prototype.addListener=function addListener(type,listener){return _addListener(this,type,listener,false);};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.prependListener=function prependListener(type,listener){return _addListener(this,type,listener,true);};function onceWrapper(){if(!this.fired){this.target.removeListener(this.type,this.wrapFn);this.fired=true;if(arguments.length===0)return this.listener.call(this.target);return this.listener.apply(this.target,arguments);}}function _onceWrap(target,type,listener){var state={fired:false,wrapFn:undefined,target:target,type:type,listener:listener};var wrapped=onceWrapper.bind(state);wrapped.listener=listener;state.wrapFn=wrapped;return wrapped;}EventEmitter.prototype.once=function once(type,listener){checkListener(listener);this.on(type,_onceWrap(this,type,listener));return this;};EventEmitter.prototype.prependOnceListener=function prependOnceListener(type,listener){checkListener(listener);this.prependListener(type,_onceWrap(this,type,listener));return this;};// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener=function removeListener(type,listener){var list,events,position,i,originalListener;checkListener(listener);events=this._events;if(events===undefined)return this;list=events[type];if(list===undefined)return this;if(list===listener||list.listener===listener){if(--this._eventsCount===0)this._events=Object.create(null);else{delete events[type];if(events.removeListener)this.emit('removeListener',type,list.listener||listener);}}else if(typeof list!=='function'){position=-1;for(i=list.length-1;i>=0;i--){if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener;position=i;break;}}if(position<0)return this;if(position===0)list.shift();else{spliceOne(list,position);}if(list.length===1)events[type]=list[0];if(events.removeListener!==undefined)this.emit('removeListener',type,originalListener||listener);}return this;};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.removeAllListeners=function removeAllListeners(type){var listeners,events,i;events=this._events;if(events===undefined)return this;// not listening for removeListener, no need to emit
if(events.removeListener===undefined){if(arguments.length===0){this._events=Object.create(null);this._eventsCount=0;}else if(events[type]!==undefined){if(--this._eventsCount===0)this._events=Object.create(null);else delete events[type];}return this;}// emit removeListener for all listeners on all events
if(arguments.length===0){var keys=Object.keys(events);var key;for(i=0;i<keys.length;++i){key=keys[i];if(key==='removeListener')continue;this.removeAllListeners(key);}this.removeAllListeners('removeListener');this._events=Object.create(null);this._eventsCount=0;return this;}listeners=events[type];if(typeof listeners==='function'){this.removeListener(type,listeners);}else if(listeners!==undefined){// LIFO order
for(i=listeners.length-1;i>=0;i--){this.removeListener(type,listeners[i]);}}return this;};function _listeners(target,type,unwrap){var events=target._events;if(events===undefined)return[];var evlistener=events[type];if(evlistener===undefined)return[];if(typeof evlistener==='function')return unwrap?[evlistener.listener||evlistener]:[evlistener];return unwrap?unwrapListeners(evlistener):arrayClone(evlistener,evlistener.length);}EventEmitter.prototype.listeners=function listeners(type){return _listeners(this,type,true);};EventEmitter.prototype.rawListeners=function rawListeners(type){return _listeners(this,type,false);};EventEmitter.listenerCount=function(emitter,type){if(typeof emitter.listenerCount==='function'){return emitter.listenerCount(type);}else{return listenerCount.call(emitter,type);}};EventEmitter.prototype.listenerCount=listenerCount;function listenerCount(type){var events=this._events;if(events!==undefined){var evlistener=events[type];if(typeof evlistener==='function'){return 1;}else if(evlistener!==undefined){return evlistener.length;}}return 0;}EventEmitter.prototype.eventNames=function eventNames(){return this._eventsCount>0?ReflectOwnKeys(this._events):[];};function arrayClone(arr,n){var copy=new Array(n);for(var i=0;i<n;++i)copy[i]=arr[i];return copy;}function spliceOne(list,index){for(;index+1<list.length;index++)list[index]=list[index+1];list.pop();}function unwrapListeners(arr){var ret=new Array(arr.length);for(var i=0;i<ret.length;++i){ret[i]=arr[i].listener||arr[i];}return ret;}function once(emitter,name){return new Promise(function(resolve,reject){function errorListener(err){emitter.removeListener(name,resolver);reject(err);}function resolver(){if(typeof emitter.removeListener==='function'){emitter.removeListener('error',errorListener);}resolve([].slice.call(arguments));};eventTargetAgnosticAddListener(emitter,name,resolver,{once:true});if(name!=='error'){addErrorHandlerIfEventEmitter(emitter,errorListener,{once:true});}});}function addErrorHandlerIfEventEmitter(emitter,handler,flags){if(typeof emitter.on==='function'){eventTargetAgnosticAddListener(emitter,'error',handler,flags);}}function eventTargetAgnosticAddListener(emitter,name,listener,flags){if(typeof emitter.on==='function'){if(flags.once){emitter.once(name,listener);}else{emitter.on(name,listener);}}else if(typeof emitter.addEventListener==='function'){// EventTarget does not have `error` event semantics like Node
// EventEmitters, we do not listen for `error` events here.
emitter.addEventListener(name,function wrapListener(arg){// IE does not have builtin `{ once: true }` support so we
// have to do it manually.
if(flags.once){emitter.removeEventListener(name,wrapListener);}listener(arg);});}else{throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof emitter);}}},{}],191:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;var MD5=require('md5.js');/* eslint-disable camelcase */function EVP_BytesToKey(password,salt,keyBits,ivLen){if(!Buffer.isBuffer(password))password=Buffer.from(password,'binary');if(salt){if(!Buffer.isBuffer(salt))salt=Buffer.from(salt,'binary');if(salt.length!==8)throw new RangeError('salt should be Buffer with 8 byte length');}var keyLen=keyBits/8;var key=Buffer.alloc(keyLen);var iv=Buffer.alloc(ivLen||0);var tmp=Buffer.alloc(0);while(keyLen>0||ivLen>0){var hash=new MD5();hash.update(tmp);hash.update(password);if(salt)hash.update(salt);tmp=hash.digest();var used=0;if(keyLen>0){var keyStart=key.length-keyLen;used=Math.min(keyLen,tmp.length);tmp.copy(key,keyStart,0,used);keyLen-=used;}if(used<tmp.length&&ivLen>0){var ivStart=iv.length-ivLen;var length=Math.min(ivLen,tmp.length-used);tmp.copy(iv,ivStart,used,used+length);ivLen-=length;}}tmp.fill(0);return{key:key,iv:iv};}module.exports=EVP_BytesToKey;},{"md5.js":225,"safe-buffer":254}],192:[function(require,module,exports){(function(global){(function(){(function(global){'use strict';function fetchPonyfill(options){var Promise=options&&options.Promise||global.Promise;var XMLHttpRequest=options&&options.XMLHttpRequest||global.XMLHttpRequest;return function(){var globalThis=Object.create(global,{fetch:{value:undefined,writable:true}});(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):factory(global.WHATWGFetch={});})(this,function(exports){'use strict';var global=typeof globalThis!=='undefined'&&globalThis||typeof self!=='undefined'&&self||typeof global!=='undefined'&&global;var support={searchParams:'URLSearchParams'in global,iterable:'Symbol'in global&&'iterator'in Symbol,blob:'FileReader'in global&&'Blob'in global&&function(){try{new Blob();return true;}catch(e){return false;}}(),formData:'FormData'in global,arrayBuffer:'ArrayBuffer'in global};function isDataView(obj){return obj&&DataView.prototype.isPrototypeOf(obj);}if(support.arrayBuffer){var viewClasses=['[object Int8Array]','[object Uint8Array]','[object Uint8ClampedArray]','[object Int16Array]','[object Uint16Array]','[object Int32Array]','[object Uint32Array]','[object Float32Array]','[object Float64Array]'];var isArrayBufferView=ArrayBuffer.isView||function(obj){return obj&&viewClasses.indexOf(Object.prototype.toString.call(obj))>-1;};}function normalizeName(name){if(typeof name!=='string'){name=String(name);}if(/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name)||name===''){throw new TypeError('Invalid character in header field name');}return name.toLowerCase();}function normalizeValue(value){if(typeof value!=='string'){value=String(value);}return value;}// Build a destructive iterator for the value list
function iteratorFor(items){var iterator={next:function(){var value=items.shift();return{done:value===undefined,value:value};}};if(support.iterable){iterator[Symbol.iterator]=function(){return iterator;};}return iterator;}function Headers(headers){this.map={};if(headers instanceof Headers){headers.forEach(function(value,name){this.append(name,value);},this);}else if(Array.isArray(headers)){headers.forEach(function(header){this.append(header[0],header[1]);},this);}else if(headers){Object.getOwnPropertyNames(headers).forEach(function(name){this.append(name,headers[name]);},this);}}Headers.prototype.append=function(name,value){name=normalizeName(name);value=normalizeValue(value);var oldValue=this.map[name];this.map[name]=oldValue?oldValue+', '+value:value;};Headers.prototype['delete']=function(name){delete this.map[normalizeName(name)];};Headers.prototype.get=function(name){name=normalizeName(name);return this.has(name)?this.map[name]:null;};Headers.prototype.has=function(name){return this.map.hasOwnProperty(normalizeName(name));};Headers.prototype.set=function(name,value){this.map[normalizeName(name)]=normalizeValue(value);};Headers.prototype.forEach=function(callback,thisArg){for(var name in this.map){if(this.map.hasOwnProperty(name)){callback.call(thisArg,this.map[name],name,this);}}};Headers.prototype.keys=function(){var items=[];this.forEach(function(value,name){items.push(name);});return iteratorFor(items);};Headers.prototype.values=function(){var items=[];this.forEach(function(value){items.push(value);});return iteratorFor(items);};Headers.prototype.entries=function(){var items=[];this.forEach(function(value,name){items.push([name,value]);});return iteratorFor(items);};if(support.iterable){Headers.prototype[Symbol.iterator]=Headers.prototype.entries;}function consumed(body){if(body.bodyUsed){return Promise.reject(new TypeError('Already read'));}body.bodyUsed=true;}function fileReaderReady(reader){return new Promise(function(resolve,reject){reader.onload=function(){resolve(reader.result);};reader.onerror=function(){reject(reader.error);};});}function readBlobAsArrayBuffer(blob){var reader=new FileReader();var promise=fileReaderReady(reader);reader.readAsArrayBuffer(blob);return promise;}function readBlobAsText(blob){var reader=new FileReader();var promise=fileReaderReady(reader);reader.readAsText(blob);return promise;}function readArrayBufferAsText(buf){var view=new Uint8Array(buf);var chars=new Array(view.length);for(var i=0;i<view.length;i++){chars[i]=String.fromCharCode(view[i]);}return chars.join('');}function bufferClone(buf){if(buf.slice){return buf.slice(0);}else{var view=new Uint8Array(buf.byteLength);view.set(new Uint8Array(buf));return view.buffer;}}function Body(){this.bodyUsed=false;this._initBody=function(body){/*
              fetch-mock wraps the Response object in an ES6 Proxy to
              provide useful test harness features such as flush. However, on
              ES5 browsers without fetch or Proxy support pollyfills must be used;
              the proxy-pollyfill is unable to proxy an attribute unless it exists
              on the object before the Proxy is created. This change ensures
              Response.bodyUsed exists on the instance, while maintaining the
              semantic of setting Request.bodyUsed in the constructor before
              _initBody is called.
            */this.bodyUsed=this.bodyUsed;this._bodyInit=body;if(!body){this._bodyText='';}else if(typeof body==='string'){this._bodyText=body;}else if(support.blob&&Blob.prototype.isPrototypeOf(body)){this._bodyBlob=body;}else if(support.formData&&FormData.prototype.isPrototypeOf(body)){this._bodyFormData=body;}else if(support.searchParams&&URLSearchParams.prototype.isPrototypeOf(body)){this._bodyText=body.toString();}else if(support.arrayBuffer&&support.blob&&isDataView(body)){this._bodyArrayBuffer=bufferClone(body.buffer);// IE 10-11 can't handle a DataView body.
this._bodyInit=new Blob([this._bodyArrayBuffer]);}else if(support.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(body)||isArrayBufferView(body))){this._bodyArrayBuffer=bufferClone(body);}else{this._bodyText=body=Object.prototype.toString.call(body);}if(!this.headers.get('content-type')){if(typeof body==='string'){this.headers.set('content-type','text/plain;charset=UTF-8');}else if(this._bodyBlob&&this._bodyBlob.type){this.headers.set('content-type',this._bodyBlob.type);}else if(support.searchParams&&URLSearchParams.prototype.isPrototypeOf(body)){this.headers.set('content-type','application/x-www-form-urlencoded;charset=UTF-8');}}};if(support.blob){this.blob=function(){var rejected=consumed(this);if(rejected){return rejected;}if(this._bodyBlob){return Promise.resolve(this._bodyBlob);}else if(this._bodyArrayBuffer){return Promise.resolve(new Blob([this._bodyArrayBuffer]));}else if(this._bodyFormData){throw new Error('could not read FormData body as blob');}else{return Promise.resolve(new Blob([this._bodyText]));}};this.arrayBuffer=function(){if(this._bodyArrayBuffer){var isConsumed=consumed(this);if(isConsumed){return isConsumed;}if(ArrayBuffer.isView(this._bodyArrayBuffer)){return Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength));}else{return Promise.resolve(this._bodyArrayBuffer);}}else{return this.blob().then(readBlobAsArrayBuffer);}};}this.text=function(){var rejected=consumed(this);if(rejected){return rejected;}if(this._bodyBlob){return readBlobAsText(this._bodyBlob);}else if(this._bodyArrayBuffer){return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));}else if(this._bodyFormData){throw new Error('could not read FormData body as text');}else{return Promise.resolve(this._bodyText);}};if(support.formData){this.formData=function(){return this.text().then(decode);};}this.json=function(){return this.text().then(JSON.parse);};return this;}// HTTP methods whose capitalization should be normalized
var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];function normalizeMethod(method){var upcased=method.toUpperCase();return methods.indexOf(upcased)>-1?upcased:method;}function Request(input,options){if(!(this instanceof Request)){throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');}options=options||{};var body=options.body;if(input instanceof Request){if(input.bodyUsed){throw new TypeError('Already read');}this.url=input.url;this.credentials=input.credentials;if(!options.headers){this.headers=new Headers(input.headers);}this.method=input.method;this.mode=input.mode;this.signal=input.signal;if(!body&&input._bodyInit!=null){body=input._bodyInit;input.bodyUsed=true;}}else{this.url=String(input);}this.credentials=options.credentials||this.credentials||'same-origin';if(options.headers||!this.headers){this.headers=new Headers(options.headers);}this.method=normalizeMethod(options.method||this.method||'GET');this.mode=options.mode||this.mode||null;this.signal=options.signal||this.signal;this.referrer=null;if((this.method==='GET'||this.method==='HEAD')&&body){throw new TypeError('Body not allowed for GET or HEAD requests');}this._initBody(body);if(this.method==='GET'||this.method==='HEAD'){if(options.cache==='no-store'||options.cache==='no-cache'){// Search for a '_' parameter in the query string
var reParamSearch=/([?&])_=[^&]*/;if(reParamSearch.test(this.url)){// If it already exists then set the value with the current time
this.url=this.url.replace(reParamSearch,'$1_='+new Date().getTime());}else{// Otherwise add a new '_' parameter to the end with the current time
var reQueryString=/\?/;this.url+=(reQueryString.test(this.url)?'&':'?')+'_='+new Date().getTime();}}}}Request.prototype.clone=function(){return new Request(this,{body:this._bodyInit});};function decode(body){var form=new FormData();body.trim().split('&').forEach(function(bytes){if(bytes){var split=bytes.split('=');var name=split.shift().replace(/\+/g,' ');var value=split.join('=').replace(/\+/g,' ');form.append(decodeURIComponent(name),decodeURIComponent(value));}});return form;}function parseHeaders(rawHeaders){var headers=new Headers();// Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
// https://tools.ietf.org/html/rfc7230#section-3.2
var preProcessedHeaders=rawHeaders.replace(/\r?\n[\t ]+/g,' ');// Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
// https://github.com/github/fetch/issues/748
// https://github.com/zloirock/core-js/issues/751
preProcessedHeaders.split('\r').map(function(header){return header.indexOf('\n')===0?header.substr(1,header.length):header;}).forEach(function(line){var parts=line.split(':');var key=parts.shift().trim();if(key){var value=parts.join(':').trim();headers.append(key,value);}});return headers;}Body.call(Request.prototype);function Response(bodyInit,options){if(!(this instanceof Response)){throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');}if(!options){options={};}this.type='default';this.status=options.status===undefined?200:options.status;this.ok=this.status>=200&&this.status<300;this.statusText='statusText'in options?options.statusText:'';this.headers=new Headers(options.headers);this.url=options.url||'';this._initBody(bodyInit);}Body.call(Response.prototype);Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url});};Response.error=function(){var response=new Response(null,{status:0,statusText:''});response.type='error';return response;};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(url,status){if(redirectStatuses.indexOf(status)===-1){throw new RangeError('Invalid status code');}return new Response(null,{status:status,headers:{location:url}});};exports.DOMException=global.DOMException;try{new exports.DOMException();}catch(err){exports.DOMException=function(message,name){this.message=message;this.name=name;var error=Error(message);this.stack=error.stack;};exports.DOMException.prototype=Object.create(Error.prototype);exports.DOMException.prototype.constructor=exports.DOMException;}function fetch(input,init){return new Promise(function(resolve,reject){var request=new Request(input,init);if(request.signal&&request.signal.aborted){return reject(new exports.DOMException('Aborted','AbortError'));}var xhr=new XMLHttpRequest();function abortXhr(){xhr.abort();}xhr.onload=function(){var options={status:xhr.status,statusText:xhr.statusText,headers:parseHeaders(xhr.getAllResponseHeaders()||'')};options.url='responseURL'in xhr?xhr.responseURL:options.headers.get('X-Request-URL');var body='response'in xhr?xhr.response:xhr.responseText;setTimeout(function(){resolve(new Response(body,options));},0);};xhr.onerror=function(){setTimeout(function(){reject(new TypeError('Network request failed'));},0);};xhr.ontimeout=function(){setTimeout(function(){reject(new TypeError('Network request failed'));},0);};xhr.onabort=function(){setTimeout(function(){reject(new exports.DOMException('Aborted','AbortError'));},0);};function fixUrl(url){try{return url===''&&global.location.href?global.location.href:url;}catch(e){return url;}}xhr.open(request.method,fixUrl(request.url),true);if(request.credentials==='include'){xhr.withCredentials=true;}else if(request.credentials==='omit'){xhr.withCredentials=false;}if('responseType'in xhr){if(support.blob){xhr.responseType='blob';}else if(support.arrayBuffer&&request.headers.get('Content-Type')&&request.headers.get('Content-Type').indexOf('application/octet-stream')!==-1){xhr.responseType='arraybuffer';}}if(init&&typeof init.headers==='object'&&!(init.headers instanceof Headers)){Object.getOwnPropertyNames(init.headers).forEach(function(name){xhr.setRequestHeader(name,normalizeValue(init.headers[name]));});}else{request.headers.forEach(function(value,name){xhr.setRequestHeader(name,value);});}if(request.signal){request.signal.addEventListener('abort',abortXhr);xhr.onreadystatechange=function(){// DONE (success or failure)
if(xhr.readyState===4){request.signal.removeEventListener('abort',abortXhr);}};}xhr.send(typeof request._bodyInit==='undefined'?null:request._bodyInit);});}fetch.polyfill=true;if(!global.fetch){global.fetch=fetch;global.Headers=Headers;global.Request=Request;global.Response=Response;}exports.Headers=Headers;exports.Request=Request;exports.Response=Response;exports.fetch=fetch;Object.defineProperty(exports,'__esModule',{value:true});});return{fetch:globalThis.fetch,Headers:globalThis.Headers,Request:globalThis.Request,Response:globalThis.Response,DOMException:globalThis.DOMException};}();}if(typeof define==='function'&&define.amd){define(function(){return fetchPonyfill;});}else if(typeof exports==='object'){module.exports=fetchPonyfill;}else{global.fetchPonyfill=fetchPonyfill;}})(typeof globalThis!=='undefined'?globalThis:typeof self!=='undefined'?self:typeof global!=='undefined'?global:this);}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],193:[function(require,module,exports){'use strict';var Buffer=require('safe-buffer').Buffer;var Transform=require('readable-stream').Transform;var inherits=require('inherits');function throwIfNotStringOrBuffer(val,prefix){if(!Buffer.isBuffer(val)&&typeof val!=='string'){throw new TypeError(prefix+' must be a string or a buffer');}}function HashBase(blockSize){Transform.call(this);this._block=Buffer.allocUnsafe(blockSize);this._blockSize=blockSize;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false;}inherits(HashBase,Transform);HashBase.prototype._transform=function(chunk,encoding,callback){var error=null;try{this.update(chunk,encoding);}catch(err){error=err;}callback(error);};HashBase.prototype._flush=function(callback){var error=null;try{this.push(this.digest());}catch(err){error=err;}callback(error);};HashBase.prototype.update=function(data,encoding){throwIfNotStringOrBuffer(data,'Data');if(this._finalized)throw new Error('Digest already called');if(!Buffer.isBuffer(data))data=Buffer.from(data,encoding);// consume data
var block=this._block;var offset=0;while(this._blockOffset+data.length-offset>=this._blockSize){for(var i=this._blockOffset;i<this._blockSize;)block[i++]=data[offset++];this._update();this._blockOffset=0;}while(offset<data.length)block[this._blockOffset++]=data[offset++];// update length
for(var j=0,carry=data.length*8;carry>0;++j){this._length[j]+=carry;carry=this._length[j]/0x0100000000|0;if(carry>0)this._length[j]-=0x0100000000*carry;}return this;};HashBase.prototype._update=function(){throw new Error('_update is not implemented');};HashBase.prototype.digest=function(encoding){if(this._finalized)throw new Error('Digest already called');this._finalized=true;var digest=this._digest();if(encoding!==undefined)digest=digest.toString(encoding);// reset state
this._block.fill(0);this._blockOffset=0;for(var i=0;i<4;++i)this._length[i]=0;return digest;};HashBase.prototype._digest=function(){throw new Error('_digest is not implemented');};module.exports=HashBase;},{"inherits":223,"readable-stream":208,"safe-buffer":254}],194:[function(require,module,exports){arguments[4][124][0].apply(exports,arguments);},{"dup":124}],195:[function(require,module,exports){arguments[4][125][0].apply(exports,arguments);},{"./_stream_readable":197,"./_stream_writable":199,"_process":242,"dup":125,"inherits":223}],196:[function(require,module,exports){arguments[4][126][0].apply(exports,arguments);},{"./_stream_transform":198,"dup":126,"inherits":223}],197:[function(require,module,exports){arguments[4][127][0].apply(exports,arguments);},{"../errors":194,"./_stream_duplex":195,"./internal/streams/async_iterator":200,"./internal/streams/buffer_list":201,"./internal/streams/destroy":202,"./internal/streams/from":204,"./internal/streams/state":206,"./internal/streams/stream":207,"_process":242,"buffer":140,"dup":127,"events":190,"inherits":223,"string_decoder/":280,"util":96}],198:[function(require,module,exports){arguments[4][128][0].apply(exports,arguments);},{"../errors":194,"./_stream_duplex":195,"dup":128,"inherits":223}],199:[function(require,module,exports){arguments[4][129][0].apply(exports,arguments);},{"../errors":194,"./_stream_duplex":195,"./internal/streams/destroy":202,"./internal/streams/state":206,"./internal/streams/stream":207,"_process":242,"buffer":140,"dup":129,"inherits":223,"util-deprecate":282}],200:[function(require,module,exports){arguments[4][130][0].apply(exports,arguments);},{"./end-of-stream":203,"_process":242,"dup":130}],201:[function(require,module,exports){arguments[4][131][0].apply(exports,arguments);},{"buffer":140,"dup":131,"util":96}],202:[function(require,module,exports){arguments[4][132][0].apply(exports,arguments);},{"_process":242,"dup":132}],203:[function(require,module,exports){arguments[4][133][0].apply(exports,arguments);},{"../../../errors":194,"dup":133}],204:[function(require,module,exports){arguments[4][134][0].apply(exports,arguments);},{"dup":134}],205:[function(require,module,exports){arguments[4][135][0].apply(exports,arguments);},{"../../../errors":194,"./end-of-stream":203,"dup":135}],206:[function(require,module,exports){arguments[4][136][0].apply(exports,arguments);},{"../../../errors":194,"dup":136}],207:[function(require,module,exports){arguments[4][137][0].apply(exports,arguments);},{"dup":137,"events":190}],208:[function(require,module,exports){arguments[4][138][0].apply(exports,arguments);},{"./lib/_stream_duplex.js":195,"./lib/_stream_passthrough.js":196,"./lib/_stream_readable.js":197,"./lib/_stream_transform.js":198,"./lib/_stream_writable.js":199,"./lib/internal/streams/end-of-stream.js":203,"./lib/internal/streams/pipeline.js":205,"dup":138}],209:[function(require,module,exports){var hash=exports;hash.utils=require('./hash/utils');hash.common=require('./hash/common');hash.sha=require('./hash/sha');hash.ripemd=require('./hash/ripemd');hash.hmac=require('./hash/hmac');// Proxy hash functions to the main object
hash.sha1=hash.sha.sha1;hash.sha256=hash.sha.sha256;hash.sha224=hash.sha.sha224;hash.sha384=hash.sha.sha384;hash.sha512=hash.sha.sha512;hash.ripemd160=hash.ripemd.ripemd160;},{"./hash/common":210,"./hash/hmac":211,"./hash/ripemd":212,"./hash/sha":213,"./hash/utils":220}],210:[function(require,module,exports){'use strict';var utils=require('./utils');var assert=require('minimalistic-assert');function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian='big';this._delta8=this.blockSize/8;this._delta32=this.blockSize/32;}exports.BlockHash=BlockHash;BlockHash.prototype.update=function update(msg,enc){// Convert message to array, pad it, and join into 32bit blocks
msg=utils.toArray(msg,enc);if(!this.pending)this.pending=msg;else this.pending=this.pending.concat(msg);this.pendingTotal+=msg.length;// Enough data, try updating
if(this.pending.length>=this._delta8){msg=this.pending;// Process pending data in blocks
var r=msg.length%this._delta8;this.pending=msg.slice(msg.length-r,msg.length);if(this.pending.length===0)this.pending=null;msg=utils.join32(msg,0,msg.length-r,this.endian);for(var i=0;i<msg.length;i+=this._delta32)this._update(msg,i,i+this._delta32);}return this;};BlockHash.prototype.digest=function digest(enc){this.update(this._pad());assert(this.pending===null);return this._digest(enc);};BlockHash.prototype._pad=function pad(){var len=this.pendingTotal;var bytes=this._delta8;var k=bytes-(len+this.padLength)%bytes;var res=new Array(k+this.padLength);res[0]=0x80;for(var i=1;i<k;i++)res[i]=0;// Append length
len<<=3;if(this.endian==='big'){for(var t=8;t<this.padLength;t++)res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=len>>>24&0xff;res[i++]=len>>>16&0xff;res[i++]=len>>>8&0xff;res[i++]=len&0xff;}else{res[i++]=len&0xff;res[i++]=len>>>8&0xff;res[i++]=len>>>16&0xff;res[i++]=len>>>24&0xff;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;for(t=8;t<this.padLength;t++)res[i++]=0;}return res;};},{"./utils":220,"minimalistic-assert":228}],211:[function(require,module,exports){'use strict';var utils=require('./utils');var assert=require('minimalistic-assert');function Hmac(hash,key,enc){if(!(this instanceof Hmac))return new Hmac(hash,key,enc);this.Hash=hash;this.blockSize=hash.blockSize/8;this.outSize=hash.outSize/8;this.inner=null;this.outer=null;this._init(utils.toArray(key,enc));}module.exports=Hmac;Hmac.prototype._init=function init(key){// Shorten key, if needed
if(key.length>this.blockSize)key=new this.Hash().update(key).digest();assert(key.length<=this.blockSize);// Add padding to key
for(var i=key.length;i<this.blockSize;i++)key.push(0);for(i=0;i<key.length;i++)key[i]^=0x36;this.inner=new this.Hash().update(key);// 0x36 ^ 0x5c = 0x6a
for(i=0;i<key.length;i++)key[i]^=0x6a;this.outer=new this.Hash().update(key);};Hmac.prototype.update=function update(msg,enc){this.inner.update(msg,enc);return this;};Hmac.prototype.digest=function digest(enc){this.outer.update(this.inner.digest());return this.outer.digest(enc);};},{"./utils":220,"minimalistic-assert":228}],212:[function(require,module,exports){'use strict';var utils=require('./utils');var common=require('./common');var rotl32=utils.rotl32;var sum32=utils.sum32;var sum32_3=utils.sum32_3;var sum32_4=utils.sum32_4;var BlockHash=common.BlockHash;function RIPEMD160(){if(!(this instanceof RIPEMD160))return new RIPEMD160();BlockHash.call(this);this.h=[0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0];this.endian='little';}utils.inherits(RIPEMD160,BlockHash);exports.ripemd160=RIPEMD160;RIPEMD160.blockSize=512;RIPEMD160.outSize=160;RIPEMD160.hmacStrength=192;RIPEMD160.padLength=64;RIPEMD160.prototype._update=function update(msg,start){var A=this.h[0];var B=this.h[1];var C=this.h[2];var D=this.h[3];var E=this.h[4];var Ah=A;var Bh=B;var Ch=C;var Dh=D;var Eh=E;for(var j=0;j<80;j++){var T=sum32(rotl32(sum32_4(A,f(j,B,C,D),msg[r[j]+start],K(j)),s[j]),E);A=E;E=D;D=rotl32(C,10);C=B;B=T;T=sum32(rotl32(sum32_4(Ah,f(79-j,Bh,Ch,Dh),msg[rh[j]+start],Kh(j)),sh[j]),Eh);Ah=Eh;Eh=Dh;Dh=rotl32(Ch,10);Ch=Bh;Bh=T;}T=sum32_3(this.h[1],C,Dh);this.h[1]=sum32_3(this.h[2],D,Eh);this.h[2]=sum32_3(this.h[3],E,Ah);this.h[3]=sum32_3(this.h[4],A,Bh);this.h[4]=sum32_3(this.h[0],B,Ch);this.h[0]=T;};RIPEMD160.prototype._digest=function digest(enc){if(enc==='hex')return utils.toHex32(this.h,'little');else return utils.split32(this.h,'little');};function f(j,x,y,z){if(j<=15)return x^y^z;else if(j<=31)return x&y|~x&z;else if(j<=47)return(x|~y)^z;else if(j<=63)return x&z|y&~z;else return x^(y|~z);}function K(j){if(j<=15)return 0x00000000;else if(j<=31)return 0x5a827999;else if(j<=47)return 0x6ed9eba1;else if(j<=63)return 0x8f1bbcdc;else return 0xa953fd4e;}function Kh(j){if(j<=15)return 0x50a28be6;else if(j<=31)return 0x5c4dd124;else if(j<=47)return 0x6d703ef3;else if(j<=63)return 0x7a6d76e9;else return 0x00000000;}var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var rh=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var sh=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];},{"./common":210,"./utils":220}],213:[function(require,module,exports){'use strict';exports.sha1=require('./sha/1');exports.sha224=require('./sha/224');exports.sha256=require('./sha/256');exports.sha384=require('./sha/384');exports.sha512=require('./sha/512');},{"./sha/1":214,"./sha/224":215,"./sha/256":216,"./sha/384":217,"./sha/512":218}],214:[function(require,module,exports){'use strict';var utils=require('../utils');var common=require('../common');var shaCommon=require('./common');var rotl32=utils.rotl32;var sum32=utils.sum32;var sum32_5=utils.sum32_5;var ft_1=shaCommon.ft_1;var BlockHash=common.BlockHash;var sha1_K=[0x5A827999,0x6ED9EBA1,0x8F1BBCDC,0xCA62C1D6];function SHA1(){if(!(this instanceof SHA1))return new SHA1();BlockHash.call(this);this.h=[0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0];this.W=new Array(80);}utils.inherits(SHA1,BlockHash);module.exports=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=rotl32(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];for(i=0;i<W.length;i++){var s=~~(i/20);var t=sum32_5(rotl32(a,5),ft_1(s,b,c,d),e,W[i],sha1_K[s]);e=d;d=c;c=rotl32(b,30);b=a;a=t;}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e);};SHA1.prototype._digest=function digest(enc){if(enc==='hex')return utils.toHex32(this.h,'big');else return utils.split32(this.h,'big');};},{"../common":210,"../utils":220,"./common":219}],215:[function(require,module,exports){'use strict';var utils=require('../utils');var SHA256=require('./256');function SHA224(){if(!(this instanceof SHA224))return new SHA224();SHA256.call(this);this.h=[0xc1059ed8,0x367cd507,0x3070dd17,0xf70e5939,0xffc00b31,0x68581511,0x64f98fa7,0xbefa4fa4];}utils.inherits(SHA224,SHA256);module.exports=SHA224;SHA224.blockSize=512;SHA224.outSize=224;SHA224.hmacStrength=192;SHA224.padLength=64;SHA224.prototype._digest=function digest(enc){// Just truncate output
if(enc==='hex')return utils.toHex32(this.h.slice(0,7),'big');else return utils.split32(this.h.slice(0,7),'big');};},{"../utils":220,"./256":216}],216:[function(require,module,exports){'use strict';var utils=require('../utils');var common=require('../common');var shaCommon=require('./common');var assert=require('minimalistic-assert');var sum32=utils.sum32;var sum32_4=utils.sum32_4;var sum32_5=utils.sum32_5;var ch32=shaCommon.ch32;var maj32=shaCommon.maj32;var s0_256=shaCommon.s0_256;var s1_256=shaCommon.s1_256;var g0_256=shaCommon.g0_256;var g1_256=shaCommon.g1_256;var BlockHash=common.BlockHash;var sha256_K=[0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2];function SHA256(){if(!(this instanceof SHA256))return new SHA256();BlockHash.call(this);this.h=[0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19];this.k=sha256_K;this.W=new Array(64);}utils.inherits(SHA256,BlockHash);module.exports=SHA256;SHA256.blockSize=512;SHA256.outSize=256;SHA256.hmacStrength=192;SHA256.padLength=64;SHA256.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=sum32_4(g1_256(W[i-2]),W[i-7],g0_256(W[i-15]),W[i-16]);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];var f=this.h[5];var g=this.h[6];var h=this.h[7];assert(this.k.length===W.length);for(i=0;i<W.length;i++){var T1=sum32_5(h,s1_256(e),ch32(e,f,g),this.k[i],W[i]);var T2=sum32(s0_256(a),maj32(a,b,c));h=g;g=f;f=e;e=sum32(d,T1);d=c;c=b;b=a;a=sum32(T1,T2);}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e);this.h[5]=sum32(this.h[5],f);this.h[6]=sum32(this.h[6],g);this.h[7]=sum32(this.h[7],h);};SHA256.prototype._digest=function digest(enc){if(enc==='hex')return utils.toHex32(this.h,'big');else return utils.split32(this.h,'big');};},{"../common":210,"../utils":220,"./common":219,"minimalistic-assert":228}],217:[function(require,module,exports){'use strict';var utils=require('../utils');var SHA512=require('./512');function SHA384(){if(!(this instanceof SHA384))return new SHA384();SHA512.call(this);this.h=[0xcbbb9d5d,0xc1059ed8,0x629a292a,0x367cd507,0x9159015a,0x3070dd17,0x152fecd8,0xf70e5939,0x67332667,0xffc00b31,0x8eb44a87,0x68581511,0xdb0c2e0d,0x64f98fa7,0x47b5481d,0xbefa4fa4];}utils.inherits(SHA384,SHA512);module.exports=SHA384;SHA384.blockSize=1024;SHA384.outSize=384;SHA384.hmacStrength=192;SHA384.padLength=128;SHA384.prototype._digest=function digest(enc){if(enc==='hex')return utils.toHex32(this.h.slice(0,12),'big');else return utils.split32(this.h.slice(0,12),'big');};},{"../utils":220,"./512":218}],218:[function(require,module,exports){'use strict';var utils=require('../utils');var common=require('../common');var assert=require('minimalistic-assert');var rotr64_hi=utils.rotr64_hi;var rotr64_lo=utils.rotr64_lo;var shr64_hi=utils.shr64_hi;var shr64_lo=utils.shr64_lo;var sum64=utils.sum64;var sum64_hi=utils.sum64_hi;var sum64_lo=utils.sum64_lo;var sum64_4_hi=utils.sum64_4_hi;var sum64_4_lo=utils.sum64_4_lo;var sum64_5_hi=utils.sum64_5_hi;var sum64_5_lo=utils.sum64_5_lo;var BlockHash=common.BlockHash;var sha512_K=[0x428a2f98,0xd728ae22,0x71374491,0x23ef65cd,0xb5c0fbcf,0xec4d3b2f,0xe9b5dba5,0x8189dbbc,0x3956c25b,0xf348b538,0x59f111f1,0xb605d019,0x923f82a4,0xaf194f9b,0xab1c5ed5,0xda6d8118,0xd807aa98,0xa3030242,0x12835b01,0x45706fbe,0x243185be,0x4ee4b28c,0x550c7dc3,0xd5ffb4e2,0x72be5d74,0xf27b896f,0x80deb1fe,0x3b1696b1,0x9bdc06a7,0x25c71235,0xc19bf174,0xcf692694,0xe49b69c1,0x9ef14ad2,0xefbe4786,0x384f25e3,0x0fc19dc6,0x8b8cd5b5,0x240ca1cc,0x77ac9c65,0x2de92c6f,0x592b0275,0x4a7484aa,0x6ea6e483,0x5cb0a9dc,0xbd41fbd4,0x76f988da,0x831153b5,0x983e5152,0xee66dfab,0xa831c66d,0x2db43210,0xb00327c8,0x98fb213f,0xbf597fc7,0xbeef0ee4,0xc6e00bf3,0x3da88fc2,0xd5a79147,0x930aa725,0x06ca6351,0xe003826f,0x14292967,0x0a0e6e70,0x27b70a85,0x46d22ffc,0x2e1b2138,0x5c26c926,0x4d2c6dfc,0x5ac42aed,0x53380d13,0x9d95b3df,0x650a7354,0x8baf63de,0x766a0abb,0x3c77b2a8,0x81c2c92e,0x47edaee6,0x92722c85,0x1482353b,0xa2bfe8a1,0x4cf10364,0xa81a664b,0xbc423001,0xc24b8b70,0xd0f89791,0xc76c51a3,0x0654be30,0xd192e819,0xd6ef5218,0xd6990624,0x5565a910,0xf40e3585,0x5771202a,0x106aa070,0x32bbd1b8,0x19a4c116,0xb8d2d0c8,0x1e376c08,0x5141ab53,0x2748774c,0xdf8eeb99,0x34b0bcb5,0xe19b48a8,0x391c0cb3,0xc5c95a63,0x4ed8aa4a,0xe3418acb,0x5b9cca4f,0x7763e373,0x682e6ff3,0xd6b2b8a3,0x748f82ee,0x5defb2fc,0x78a5636f,0x43172f60,0x84c87814,0xa1f0ab72,0x8cc70208,0x1a6439ec,0x90befffa,0x23631e28,0xa4506ceb,0xde82bde9,0xbef9a3f7,0xb2c67915,0xc67178f2,0xe372532b,0xca273ece,0xea26619c,0xd186b8c7,0x21c0c207,0xeada7dd6,0xcde0eb1e,0xf57d4f7f,0xee6ed178,0x06f067aa,0x72176fba,0x0a637dc5,0xa2c898a6,0x113f9804,0xbef90dae,0x1b710b35,0x131c471b,0x28db77f5,0x23047d84,0x32caab7b,0x40c72493,0x3c9ebe0a,0x15c9bebc,0x431d67c4,0x9c100d4c,0x4cc5d4be,0xcb3e42b6,0x597f299c,0xfc657e2a,0x5fcb6fab,0x3ad6faec,0x6c44198c,0x4a475817];function SHA512(){if(!(this instanceof SHA512))return new SHA512();BlockHash.call(this);this.h=[0x6a09e667,0xf3bcc908,0xbb67ae85,0x84caa73b,0x3c6ef372,0xfe94f82b,0xa54ff53a,0x5f1d36f1,0x510e527f,0xade682d1,0x9b05688c,0x2b3e6c1f,0x1f83d9ab,0xfb41bd6b,0x5be0cd19,0x137e2179];this.k=sha512_K;this.W=new Array(160);}utils.inherits(SHA512,BlockHash);module.exports=SHA512;SHA512.blockSize=1024;SHA512.outSize=512;SHA512.hmacStrength=192;SHA512.padLength=128;SHA512.prototype._prepareBlock=function _prepareBlock(msg,start){var W=this.W;// 32 x 32bit words
for(var i=0;i<32;i++)W[i]=msg[start+i];for(;i<W.length;i+=2){var c0_hi=g1_512_hi(W[i-4],W[i-3]);// i - 2
var c0_lo=g1_512_lo(W[i-4],W[i-3]);var c1_hi=W[i-14];// i - 7
var c1_lo=W[i-13];var c2_hi=g0_512_hi(W[i-30],W[i-29]);// i - 15
var c2_lo=g0_512_lo(W[i-30],W[i-29]);var c3_hi=W[i-32];// i - 16
var c3_lo=W[i-31];W[i]=sum64_4_hi(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo);W[i+1]=sum64_4_lo(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo);}};SHA512.prototype._update=function _update(msg,start){this._prepareBlock(msg,start);var W=this.W;var ah=this.h[0];var al=this.h[1];var bh=this.h[2];var bl=this.h[3];var ch=this.h[4];var cl=this.h[5];var dh=this.h[6];var dl=this.h[7];var eh=this.h[8];var el=this.h[9];var fh=this.h[10];var fl=this.h[11];var gh=this.h[12];var gl=this.h[13];var hh=this.h[14];var hl=this.h[15];assert(this.k.length===W.length);for(var i=0;i<W.length;i+=2){var c0_hi=hh;var c0_lo=hl;var c1_hi=s1_512_hi(eh,el);var c1_lo=s1_512_lo(eh,el);var c2_hi=ch64_hi(eh,el,fh,fl,gh,gl);var c2_lo=ch64_lo(eh,el,fh,fl,gh,gl);var c3_hi=this.k[i];var c3_lo=this.k[i+1];var c4_hi=W[i];var c4_lo=W[i+1];var T1_hi=sum64_5_hi(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);var T1_lo=sum64_5_lo(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);c0_hi=s0_512_hi(ah,al);c0_lo=s0_512_lo(ah,al);c1_hi=maj64_hi(ah,al,bh,bl,ch,cl);c1_lo=maj64_lo(ah,al,bh,bl,ch,cl);var T2_hi=sum64_hi(c0_hi,c0_lo,c1_hi,c1_lo);var T2_lo=sum64_lo(c0_hi,c0_lo,c1_hi,c1_lo);hh=gh;hl=gl;gh=fh;gl=fl;fh=eh;fl=el;eh=sum64_hi(dh,dl,T1_hi,T1_lo);el=sum64_lo(dl,dl,T1_hi,T1_lo);dh=ch;dl=cl;ch=bh;cl=bl;bh=ah;bl=al;ah=sum64_hi(T1_hi,T1_lo,T2_hi,T2_lo);al=sum64_lo(T1_hi,T1_lo,T2_hi,T2_lo);}sum64(this.h,0,ah,al);sum64(this.h,2,bh,bl);sum64(this.h,4,ch,cl);sum64(this.h,6,dh,dl);sum64(this.h,8,eh,el);sum64(this.h,10,fh,fl);sum64(this.h,12,gh,gl);sum64(this.h,14,hh,hl);};SHA512.prototype._digest=function digest(enc){if(enc==='hex')return utils.toHex32(this.h,'big');else return utils.split32(this.h,'big');};function ch64_hi(xh,xl,yh,yl,zh){var r=xh&yh^~xh&zh;if(r<0)r+=0x100000000;return r;}function ch64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^~xl&zl;if(r<0)r+=0x100000000;return r;}function maj64_hi(xh,xl,yh,yl,zh){var r=xh&yh^xh&zh^yh&zh;if(r<0)r+=0x100000000;return r;}function maj64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^xl&zl^yl&zl;if(r<0)r+=0x100000000;return r;}function s0_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,28);var c1_hi=rotr64_hi(xl,xh,2);// 34
var c2_hi=rotr64_hi(xl,xh,7);// 39
var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=0x100000000;return r;}function s0_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,28);var c1_lo=rotr64_lo(xl,xh,2);// 34
var c2_lo=rotr64_lo(xl,xh,7);// 39
var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=0x100000000;return r;}function s1_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,14);var c1_hi=rotr64_hi(xh,xl,18);var c2_hi=rotr64_hi(xl,xh,9);// 41
var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=0x100000000;return r;}function s1_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,14);var c1_lo=rotr64_lo(xh,xl,18);var c2_lo=rotr64_lo(xl,xh,9);// 41
var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=0x100000000;return r;}function g0_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,1);var c1_hi=rotr64_hi(xh,xl,8);var c2_hi=shr64_hi(xh,xl,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=0x100000000;return r;}function g0_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,1);var c1_lo=rotr64_lo(xh,xl,8);var c2_lo=shr64_lo(xh,xl,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=0x100000000;return r;}function g1_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,19);var c1_hi=rotr64_hi(xl,xh,29);// 61
var c2_hi=shr64_hi(xh,xl,6);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=0x100000000;return r;}function g1_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,19);var c1_lo=rotr64_lo(xl,xh,29);// 61
var c2_lo=shr64_lo(xh,xl,6);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=0x100000000;return r;}},{"../common":210,"../utils":220,"minimalistic-assert":228}],219:[function(require,module,exports){'use strict';var utils=require('../utils');var rotr32=utils.rotr32;function ft_1(s,x,y,z){if(s===0)return ch32(x,y,z);if(s===1||s===3)return p32(x,y,z);if(s===2)return maj32(x,y,z);}exports.ft_1=ft_1;function ch32(x,y,z){return x&y^~x&z;}exports.ch32=ch32;function maj32(x,y,z){return x&y^x&z^y&z;}exports.maj32=maj32;function p32(x,y,z){return x^y^z;}exports.p32=p32;function s0_256(x){return rotr32(x,2)^rotr32(x,13)^rotr32(x,22);}exports.s0_256=s0_256;function s1_256(x){return rotr32(x,6)^rotr32(x,11)^rotr32(x,25);}exports.s1_256=s1_256;function g0_256(x){return rotr32(x,7)^rotr32(x,18)^x>>>3;}exports.g0_256=g0_256;function g1_256(x){return rotr32(x,17)^rotr32(x,19)^x>>>10;}exports.g1_256=g1_256;},{"../utils":220}],220:[function(require,module,exports){'use strict';var assert=require('minimalistic-assert');var inherits=require('inherits');exports.inherits=inherits;function isSurrogatePair(msg,i){if((msg.charCodeAt(i)&0xFC00)!==0xD800){return false;}if(i<0||i+1>=msg.length){return false;}return(msg.charCodeAt(i+1)&0xFC00)===0xDC00;}function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg==='string'){if(!enc){// Inspired by stringToUtf8ByteArray() in closure-library by Google
// https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
// Apache License 2.0
// https://github.com/google/closure-library/blob/master/LICENSE
var p=0;for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);if(c<128){res[p++]=c;}else if(c<2048){res[p++]=c>>6|192;res[p++]=c&63|128;}else if(isSurrogatePair(msg,i)){c=0x10000+((c&0x03FF)<<10)+(msg.charCodeAt(++i)&0x03FF);res[p++]=c>>18|240;res[p++]=c>>12&63|128;res[p++]=c>>6&63|128;res[p++]=c&63|128;}else{res[p++]=c>>12|224;res[p++]=c>>6&63|128;res[p++]=c&63|128;}}}else if(enc==='hex'){msg=msg.replace(/[^a-z0-9]+/ig,'');if(msg.length%2!==0)msg='0'+msg;for(i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16));}}else{for(i=0;i<msg.length;i++)res[i]=msg[i]|0;}return res;}exports.toArray=toArray;function toHex(msg){var res='';for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res;}exports.toHex=toHex;function htonl(w){var res=w>>>24|w>>>8&0xff00|w<<8&0xff0000|(w&0xff)<<24;return res>>>0;}exports.htonl=htonl;function toHex32(msg,endian){var res='';for(var i=0;i<msg.length;i++){var w=msg[i];if(endian==='little')w=htonl(w);res+=zero8(w.toString(16));}return res;}exports.toHex32=toHex32;function zero2(word){if(word.length===1)return'0'+word;else return word;}exports.zero2=zero2;function zero8(word){if(word.length===7)return'0'+word;else if(word.length===6)return'00'+word;else if(word.length===5)return'000'+word;else if(word.length===4)return'0000'+word;else if(word.length===3)return'00000'+word;else if(word.length===2)return'000000'+word;else if(word.length===1)return'0000000'+word;else return word;}exports.zero8=zero8;function join32(msg,start,end,endian){var len=end-start;assert(len%4===0);var res=new Array(len/4);for(var i=0,k=start;i<res.length;i++,k+=4){var w;if(endian==='big')w=msg[k]<<24|msg[k+1]<<16|msg[k+2]<<8|msg[k+3];else w=msg[k+3]<<24|msg[k+2]<<16|msg[k+1]<<8|msg[k];res[i]=w>>>0;}return res;}exports.join32=join32;function split32(msg,endian){var res=new Array(msg.length*4);for(var i=0,k=0;i<msg.length;i++,k+=4){var m=msg[i];if(endian==='big'){res[k]=m>>>24;res[k+1]=m>>>16&0xff;res[k+2]=m>>>8&0xff;res[k+3]=m&0xff;}else{res[k+3]=m>>>24;res[k+2]=m>>>16&0xff;res[k+1]=m>>>8&0xff;res[k]=m&0xff;}}return res;}exports.split32=split32;function rotr32(w,b){return w>>>b|w<<32-b;}exports.rotr32=rotr32;function rotl32(w,b){return w<<b|w>>>32-b;}exports.rotl32=rotl32;function sum32(a,b){return a+b>>>0;}exports.sum32=sum32;function sum32_3(a,b,c){return a+b+c>>>0;}exports.sum32_3=sum32_3;function sum32_4(a,b,c,d){return a+b+c+d>>>0;}exports.sum32_4=sum32_4;function sum32_5(a,b,c,d,e){return a+b+c+d+e>>>0;}exports.sum32_5=sum32_5;function sum64(buf,pos,ah,al){var bh=buf[pos];var bl=buf[pos+1];var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;buf[pos]=hi>>>0;buf[pos+1]=lo;}exports.sum64=sum64;function sum64_hi(ah,al,bh,bl){var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;return hi>>>0;}exports.sum64_hi=sum64_hi;function sum64_lo(ah,al,bh,bl){var lo=al+bl;return lo>>>0;}exports.sum64_lo=sum64_lo;function sum64_4_hi(ah,al,bh,bl,ch,cl,dh,dl){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;var hi=ah+bh+ch+dh+carry;return hi>>>0;}exports.sum64_4_hi=sum64_4_hi;function sum64_4_lo(ah,al,bh,bl,ch,cl,dh,dl){var lo=al+bl+cl+dl;return lo>>>0;}exports.sum64_4_lo=sum64_4_lo;function sum64_5_hi(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;lo=lo+el>>>0;carry+=lo<el?1:0;var hi=ah+bh+ch+dh+eh+carry;return hi>>>0;}exports.sum64_5_hi=sum64_5_hi;function sum64_5_lo(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var lo=al+bl+cl+dl+el;return lo>>>0;}exports.sum64_5_lo=sum64_5_lo;function rotr64_hi(ah,al,num){var r=al<<32-num|ah>>>num;return r>>>0;}exports.rotr64_hi=rotr64_hi;function rotr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0;}exports.rotr64_lo=rotr64_lo;function shr64_hi(ah,al,num){return ah>>>num;}exports.shr64_hi=shr64_hi;function shr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0;}exports.shr64_lo=shr64_lo;},{"inherits":223,"minimalistic-assert":228}],221:[function(require,module,exports){'use strict';var hash=require('hash.js');var utils=require('minimalistic-crypto-utils');var assert=require('minimalistic-assert');function HmacDRBG(options){if(!(this instanceof HmacDRBG))return new HmacDRBG(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils.toArray(options.entropy,options.entropyEnc||'hex');var nonce=utils.toArray(options.nonce,options.nonceEnc||'hex');var pers=utils.toArray(options.pers,options.persEnc||'hex');assert(entropy.length>=this.minEntropy/8,'Not enough entropy. Minimum is: '+this.minEntropy+' bits');this._init(entropy,nonce,pers);}module.exports=HmacDRBG;HmacDRBG.prototype._init=function init(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0x00;this.V[i]=0x01;}this._update(seed);this._reseed=1;this.reseedInterval=0x1000000000000;// 2^48
};HmacDRBG.prototype._hmac=function hmac(){return new hash.hmac(this.hash,this.K);};HmacDRBG.prototype._update=function update(seed){var kmac=this._hmac().update(this.V).update([0x00]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([0x01]).update(seed).digest();this.V=this._hmac().update(this.V).digest();};HmacDRBG.prototype.reseed=function reseed(entropy,entropyEnc,add,addEnc){// Optional entropy enc
if(typeof entropyEnc!=='string'){addEnc=add;add=entropyEnc;entropyEnc=null;}entropy=utils.toArray(entropy,entropyEnc);add=utils.toArray(add,addEnc);assert(entropy.length>=this.minEntropy/8,'Not enough entropy. Minimum is: '+this.minEntropy+' bits');this._update(entropy.concat(add||[]));this._reseed=1;};HmacDRBG.prototype.generate=function generate(len,enc,add,addEnc){if(this._reseed>this.reseedInterval)throw new Error('Reseed is required');// Optional encoding
if(typeof enc!=='string'){addEnc=add;add=enc;enc=null;}// Optional additional data
if(add){add=utils.toArray(add,addEnc||'hex');this._update(add);}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V);}var res=temp.slice(0,len);this._update(add);this._reseed++;return utils.encode(res,enc);};},{"hash.js":209,"minimalistic-assert":228,"minimalistic-crypto-utils":229}],222:[function(require,module,exports){/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);};exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;};},{}],223:[function(require,module,exports){if(typeof Object.create==='function'){// implementation from standard node.js 'util' module
module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});}};}else{// old school shim for old browsers
module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;}};}},{}],224:[function(require,module,exports){(function(global){(function(){// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js
var ws=null;if(typeof WebSocket!=='undefined'){ws=WebSocket;}else if(typeof MozWebSocket!=='undefined'){ws=MozWebSocket;}else if(typeof global!=='undefined'){ws=global.WebSocket||global.MozWebSocket;}else if(typeof window!=='undefined'){ws=window.WebSocket||window.MozWebSocket;}else if(typeof self!=='undefined'){ws=self.WebSocket||self.MozWebSocket;}module.exports=ws;}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],225:[function(require,module,exports){'use strict';var inherits=require('inherits');var HashBase=require('hash-base');var Buffer=require('safe-buffer').Buffer;var ARRAY16=new Array(16);function MD5(){HashBase.call(this,64);// state
this._a=0x67452301;this._b=0xefcdab89;this._c=0x98badcfe;this._d=0x10325476;}inherits(MD5,HashBase);MD5.prototype._update=function(){var M=ARRAY16;for(var i=0;i<16;++i)M[i]=this._block.readInt32LE(i*4);var a=this._a;var b=this._b;var c=this._c;var d=this._d;a=fnF(a,b,c,d,M[0],0xd76aa478,7);d=fnF(d,a,b,c,M[1],0xe8c7b756,12);c=fnF(c,d,a,b,M[2],0x242070db,17);b=fnF(b,c,d,a,M[3],0xc1bdceee,22);a=fnF(a,b,c,d,M[4],0xf57c0faf,7);d=fnF(d,a,b,c,M[5],0x4787c62a,12);c=fnF(c,d,a,b,M[6],0xa8304613,17);b=fnF(b,c,d,a,M[7],0xfd469501,22);a=fnF(a,b,c,d,M[8],0x698098d8,7);d=fnF(d,a,b,c,M[9],0x8b44f7af,12);c=fnF(c,d,a,b,M[10],0xffff5bb1,17);b=fnF(b,c,d,a,M[11],0x895cd7be,22);a=fnF(a,b,c,d,M[12],0x6b901122,7);d=fnF(d,a,b,c,M[13],0xfd987193,12);c=fnF(c,d,a,b,M[14],0xa679438e,17);b=fnF(b,c,d,a,M[15],0x49b40821,22);a=fnG(a,b,c,d,M[1],0xf61e2562,5);d=fnG(d,a,b,c,M[6],0xc040b340,9);c=fnG(c,d,a,b,M[11],0x265e5a51,14);b=fnG(b,c,d,a,M[0],0xe9b6c7aa,20);a=fnG(a,b,c,d,M[5],0xd62f105d,5);d=fnG(d,a,b,c,M[10],0x02441453,9);c=fnG(c,d,a,b,M[15],0xd8a1e681,14);b=fnG(b,c,d,a,M[4],0xe7d3fbc8,20);a=fnG(a,b,c,d,M[9],0x21e1cde6,5);d=fnG(d,a,b,c,M[14],0xc33707d6,9);c=fnG(c,d,a,b,M[3],0xf4d50d87,14);b=fnG(b,c,d,a,M[8],0x455a14ed,20);a=fnG(a,b,c,d,M[13],0xa9e3e905,5);d=fnG(d,a,b,c,M[2],0xfcefa3f8,9);c=fnG(c,d,a,b,M[7],0x676f02d9,14);b=fnG(b,c,d,a,M[12],0x8d2a4c8a,20);a=fnH(a,b,c,d,M[5],0xfffa3942,4);d=fnH(d,a,b,c,M[8],0x8771f681,11);c=fnH(c,d,a,b,M[11],0x6d9d6122,16);b=fnH(b,c,d,a,M[14],0xfde5380c,23);a=fnH(a,b,c,d,M[1],0xa4beea44,4);d=fnH(d,a,b,c,M[4],0x4bdecfa9,11);c=fnH(c,d,a,b,M[7],0xf6bb4b60,16);b=fnH(b,c,d,a,M[10],0xbebfbc70,23);a=fnH(a,b,c,d,M[13],0x289b7ec6,4);d=fnH(d,a,b,c,M[0],0xeaa127fa,11);c=fnH(c,d,a,b,M[3],0xd4ef3085,16);b=fnH(b,c,d,a,M[6],0x04881d05,23);a=fnH(a,b,c,d,M[9],0xd9d4d039,4);d=fnH(d,a,b,c,M[12],0xe6db99e5,11);c=fnH(c,d,a,b,M[15],0x1fa27cf8,16);b=fnH(b,c,d,a,M[2],0xc4ac5665,23);a=fnI(a,b,c,d,M[0],0xf4292244,6);d=fnI(d,a,b,c,M[7],0x432aff97,10);c=fnI(c,d,a,b,M[14],0xab9423a7,15);b=fnI(b,c,d,a,M[5],0xfc93a039,21);a=fnI(a,b,c,d,M[12],0x655b59c3,6);d=fnI(d,a,b,c,M[3],0x8f0ccc92,10);c=fnI(c,d,a,b,M[10],0xffeff47d,15);b=fnI(b,c,d,a,M[1],0x85845dd1,21);a=fnI(a,b,c,d,M[8],0x6fa87e4f,6);d=fnI(d,a,b,c,M[15],0xfe2ce6e0,10);c=fnI(c,d,a,b,M[6],0xa3014314,15);b=fnI(b,c,d,a,M[13],0x4e0811a1,21);a=fnI(a,b,c,d,M[4],0xf7537e82,6);d=fnI(d,a,b,c,M[11],0xbd3af235,10);c=fnI(c,d,a,b,M[2],0x2ad7d2bb,15);b=fnI(b,c,d,a,M[9],0xeb86d391,21);this._a=this._a+a|0;this._b=this._b+b|0;this._c=this._c+c|0;this._d=this._d+d|0;};MD5.prototype._digest=function(){// create padding and handle blocks
this._block[this._blockOffset++]=0x80;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0;}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();// produce result
var buffer=Buffer.allocUnsafe(16);buffer.writeInt32LE(this._a,0);buffer.writeInt32LE(this._b,4);buffer.writeInt32LE(this._c,8);buffer.writeInt32LE(this._d,12);return buffer;};function rotl(x,n){return x<<n|x>>>32-n;}function fnF(a,b,c,d,m,k,s){return rotl(a+(b&c|~b&d)+m+k|0,s)+b|0;}function fnG(a,b,c,d,m,k,s){return rotl(a+(b&d|c&~d)+m+k|0,s)+b|0;}function fnH(a,b,c,d,m,k,s){return rotl(a+(b^c^d)+m+k|0,s)+b|0;}function fnI(a,b,c,d,m,k,s){return rotl(a+(c^(b|~d))+m+k|0,s)+b|0;}module.exports=MD5;},{"hash-base":193,"inherits":223,"safe-buffer":254}],226:[function(require,module,exports){var bn=require('bn.js');var brorand=require('brorand');function MillerRabin(rand){this.rand=rand||new brorand.Rand();}module.exports=MillerRabin;MillerRabin.create=function create(rand){return new MillerRabin(rand);};MillerRabin.prototype._randbelow=function _randbelow(n){var len=n.bitLength();var min_bytes=Math.ceil(len/8);// Generage random bytes until a number less than n is found.
// This ensures that 0..n-1 have an equal probability of being selected.
do var a=new bn(this.rand.generate(min_bytes));while(a.cmp(n)>=0);return a;};MillerRabin.prototype._randrange=function _randrange(start,stop){// Generate a random number greater than or equal to start and less than stop.
var size=stop.sub(start);return start.add(this._randbelow(size));};MillerRabin.prototype.test=function test(n,k,cb){var len=n.bitLength();var red=bn.mont(n);var rone=new bn(1).toRed(red);if(!k)k=Math.max(1,len/48|0);// Find d and s, (n - 1) = (2 ^ s) * d;
var n1=n.subn(1);for(var s=0;!n1.testn(s);s++){}var d=n.shrn(s);var rn1=n1.toRed(red);var prime=true;for(;k>0;k--){var a=this._randrange(new bn(2),n1);if(cb)cb(a);var x=a.toRed(red).redPow(d);if(x.cmp(rone)===0||x.cmp(rn1)===0)continue;for(var i=1;i<s;i++){x=x.redSqr();if(x.cmp(rone)===0)return false;if(x.cmp(rn1)===0)break;}if(i===s)return false;}return prime;};MillerRabin.prototype.getDivisor=function getDivisor(n,k){var len=n.bitLength();var red=bn.mont(n);var rone=new bn(1).toRed(red);if(!k)k=Math.max(1,len/48|0);// Find d and s, (n - 1) = (2 ^ s) * d;
var n1=n.subn(1);for(var s=0;!n1.testn(s);s++){}var d=n.shrn(s);var rn1=n1.toRed(red);for(;k>0;k--){var a=this._randrange(new bn(2),n1);var g=n.gcd(a);if(g.cmpn(1)!==0)return g;var x=a.toRed(red).redPow(d);if(x.cmp(rone)===0||x.cmp(rn1)===0)continue;for(var i=1;i<s;i++){x=x.redSqr();if(x.cmp(rone)===0)return x.fromRed().subn(1).gcd(n);if(x.cmp(rn1)===0)break;}if(i===s){x=x.redSqr();return x.fromRed().subn(1).gcd(n);}}return false;};},{"bn.js":227,"brorand":95}],227:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments);},{"buffer":96,"dup":2}],228:[function(require,module,exports){module.exports=assert;function assert(val,msg){if(!val)throw new Error(msg||'Assertion failed');}assert.equal=function assertEqual(l,r,msg){if(l!=r)throw new Error(msg||'Assertion failed: '+l+' != '+r);};},{}],229:[function(require,module,exports){'use strict';var utils=exports;function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg!=='string'){for(var i=0;i<msg.length;i++)res[i]=msg[i]|0;return res;}if(enc==='hex'){msg=msg.replace(/[^a-z0-9]+/ig,'');if(msg.length%2!==0)msg='0'+msg;for(var i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16));}else{for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&0xff;if(hi)res.push(hi,lo);else res.push(lo);}}return res;}utils.toArray=toArray;function zero2(word){if(word.length===1)return'0'+word;else return word;}utils.zero2=zero2;function toHex(msg){var res='';for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res;}utils.toHex=toHex;utils.encode=function encode(arr,enc){if(enc==='hex')return toHex(arr);else return arr;};},{}],230:[function(require,module,exports){(function(global){(function(){"use strict";// ref: https://github.com/tc39/proposal-global
var getGlobal=function(){// the only reliable means to get the global object is
// `Function('return this')()`
// However, this causes CSP violations in Chrome apps.
if(typeof self!=='undefined'){return self;}if(typeof window!=='undefined'){return window;}if(typeof global!=='undefined'){return global;}throw new Error('unable to locate global object');};var global=getGlobal();module.exports=exports=global.fetch;// Needed for TypeScript and Webpack.
if(global.fetch){exports.default=global.fetch.bind(global);}exports.Headers=global.Headers;exports.Request=global.Request;exports.Response=global.Response;}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],231:[function(require,module,exports){module.exports={"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"};},{}],232:[function(require,module,exports){// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict';var asn1=require('asn1.js');exports.certificate=require('./certificate');var RSAPrivateKey=asn1.define('RSAPrivateKey',function(){this.seq().obj(this.key('version').int(),this.key('modulus').int(),this.key('publicExponent').int(),this.key('privateExponent').int(),this.key('prime1').int(),this.key('prime2').int(),this.key('exponent1').int(),this.key('exponent2').int(),this.key('coefficient').int());});exports.RSAPrivateKey=RSAPrivateKey;var RSAPublicKey=asn1.define('RSAPublicKey',function(){this.seq().obj(this.key('modulus').int(),this.key('publicExponent').int());});exports.RSAPublicKey=RSAPublicKey;var PublicKey=asn1.define('SubjectPublicKeyInfo',function(){this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier),this.key('subjectPublicKey').bitstr());});exports.PublicKey=PublicKey;var AlgorithmIdentifier=asn1.define('AlgorithmIdentifier',function(){this.seq().obj(this.key('algorithm').objid(),this.key('none').null_().optional(),this.key('curve').objid().optional(),this.key('params').seq().obj(this.key('p').int(),this.key('q').int(),this.key('g').int()).optional());});var PrivateKeyInfo=asn1.define('PrivateKeyInfo',function(){this.seq().obj(this.key('version').int(),this.key('algorithm').use(AlgorithmIdentifier),this.key('subjectPrivateKey').octstr());});exports.PrivateKey=PrivateKeyInfo;var EncryptedPrivateKeyInfo=asn1.define('EncryptedPrivateKeyInfo',function(){this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(),this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(),this.key('kdeparams').seq().obj(this.key('salt').octstr(),this.key('iters').int())),this.key('cipher').seq().obj(this.key('algo').objid(),this.key('iv').octstr()))),this.key('subjectPrivateKey').octstr());});exports.EncryptedPrivateKey=EncryptedPrivateKeyInfo;var DSAPrivateKey=asn1.define('DSAPrivateKey',function(){this.seq().obj(this.key('version').int(),this.key('p').int(),this.key('q').int(),this.key('g').int(),this.key('pub_key').int(),this.key('priv_key').int());});exports.DSAPrivateKey=DSAPrivateKey;exports.DSAparam=asn1.define('DSAparam',function(){this.int();});var ECPrivateKey=asn1.define('ECPrivateKey',function(){this.seq().obj(this.key('version').int(),this.key('privateKey').octstr(),this.key('parameters').optional().explicit(0).use(ECParameters),this.key('publicKey').optional().explicit(1).bitstr());});exports.ECPrivateKey=ECPrivateKey;var ECParameters=asn1.define('ECParameters',function(){this.choice({namedCurve:this.objid()});});exports.signature=asn1.define('signature',function(){this.seq().obj(this.key('r').int(),this.key('s').int());});},{"./certificate":233,"asn1.js":40}],233:[function(require,module,exports){// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen
'use strict';var asn=require('asn1.js');var Time=asn.define('Time',function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()});});var AttributeTypeValue=asn.define('AttributeTypeValue',function(){this.seq().obj(this.key('type').objid(),this.key('value').any());});var AlgorithmIdentifier=asn.define('AlgorithmIdentifier',function(){this.seq().obj(this.key('algorithm').objid(),this.key('parameters').optional(),this.key('curve').objid().optional());});var SubjectPublicKeyInfo=asn.define('SubjectPublicKeyInfo',function(){this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier),this.key('subjectPublicKey').bitstr());});var RelativeDistinguishedName=asn.define('RelativeDistinguishedName',function(){this.setof(AttributeTypeValue);});var RDNSequence=asn.define('RDNSequence',function(){this.seqof(RelativeDistinguishedName);});var Name=asn.define('Name',function(){this.choice({rdnSequence:this.use(RDNSequence)});});var Validity=asn.define('Validity',function(){this.seq().obj(this.key('notBefore').use(Time),this.key('notAfter').use(Time));});var Extension=asn.define('Extension',function(){this.seq().obj(this.key('extnID').objid(),this.key('critical').bool().def(false),this.key('extnValue').octstr());});var TBSCertificate=asn.define('TBSCertificate',function(){this.seq().obj(this.key('version').explicit(0).int().optional(),this.key('serialNumber').int(),this.key('signature').use(AlgorithmIdentifier),this.key('issuer').use(Name),this.key('validity').use(Validity),this.key('subject').use(Name),this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),this.key('issuerUniqueID').implicit(1).bitstr().optional(),this.key('subjectUniqueID').implicit(2).bitstr().optional(),this.key('extensions').explicit(3).seqof(Extension).optional());});var X509Certificate=asn.define('X509Certificate',function(){this.seq().obj(this.key('tbsCertificate').use(TBSCertificate),this.key('signatureAlgorithm').use(AlgorithmIdentifier),this.key('signatureValue').bitstr());});module.exports=X509Certificate;},{"asn1.js":40}],234:[function(require,module,exports){// adapted from https://github.com/apatil/pemstrip
var findProc=/Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m;var startRegex=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;var fullRegex=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m;var evp=require('evp_bytestokey');var ciphers=require('browserify-aes');var Buffer=require('safe-buffer').Buffer;module.exports=function(okey,password){var key=okey.toString();var match=key.match(findProc);var decrypted;if(!match){var match2=key.match(fullRegex);decrypted=Buffer.from(match2[2].replace(/[\r\n]/g,''),'base64');}else{var suite='aes'+match[1];var iv=Buffer.from(match[2],'hex');var cipherText=Buffer.from(match[3].replace(/[\r\n]/g,''),'base64');var cipherKey=evp(password,iv.slice(0,8),parseInt(match[1],10)).key;var out=[];var cipher=ciphers.createDecipheriv(suite,cipherKey,iv);out.push(cipher.update(cipherText));out.push(cipher.final());decrypted=Buffer.concat(out);}var tag=key.match(startRegex)[1];return{tag:tag,data:decrypted};};},{"browserify-aes":99,"evp_bytestokey":191,"safe-buffer":254}],235:[function(require,module,exports){var asn1=require('./asn1');var aesid=require('./aesid.json');var fixProc=require('./fixProc');var ciphers=require('browserify-aes');var compat=require('pbkdf2');var Buffer=require('safe-buffer').Buffer;module.exports=parseKeys;function parseKeys(buffer){var password;if(typeof buffer==='object'&&!Buffer.isBuffer(buffer)){password=buffer.passphrase;buffer=buffer.key;}if(typeof buffer==='string'){buffer=Buffer.from(buffer);}var stripped=fixProc(buffer,password);var type=stripped.tag;var data=stripped.data;var subtype,ndata;switch(type){case'CERTIFICATE':ndata=asn1.certificate.decode(data,'der').tbsCertificate.subjectPublicKeyInfo;// falls through
case'PUBLIC KEY':if(!ndata){ndata=asn1.PublicKey.decode(data,'der');}subtype=ndata.algorithm.algorithm.join('.');switch(subtype){case'1.2.840.113549.1.1.1':return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data,'der');case'1.2.840.10045.2.1':ndata.subjectPrivateKey=ndata.subjectPublicKey;return{type:'ec',data:ndata};case'1.2.840.10040.4.1':ndata.algorithm.params.pub_key=asn1.DSAparam.decode(ndata.subjectPublicKey.data,'der');return{type:'dsa',data:ndata.algorithm.params};default:throw new Error('unknown key id '+subtype);}// throw new Error('unknown key type ' + type)
case'ENCRYPTED PRIVATE KEY':data=asn1.EncryptedPrivateKey.decode(data,'der');data=decrypt(data,password);// falls through
case'PRIVATE KEY':ndata=asn1.PrivateKey.decode(data,'der');subtype=ndata.algorithm.algorithm.join('.');switch(subtype){case'1.2.840.113549.1.1.1':return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey,'der');case'1.2.840.10045.2.1':return{curve:ndata.algorithm.curve,privateKey:asn1.ECPrivateKey.decode(ndata.subjectPrivateKey,'der').privateKey};case'1.2.840.10040.4.1':ndata.algorithm.params.priv_key=asn1.DSAparam.decode(ndata.subjectPrivateKey,'der');return{type:'dsa',params:ndata.algorithm.params};default:throw new Error('unknown key id '+subtype);}// throw new Error('unknown key type ' + type)
case'RSA PUBLIC KEY':return asn1.RSAPublicKey.decode(data,'der');case'RSA PRIVATE KEY':return asn1.RSAPrivateKey.decode(data,'der');case'DSA PRIVATE KEY':return{type:'dsa',params:asn1.DSAPrivateKey.decode(data,'der')};case'EC PRIVATE KEY':data=asn1.ECPrivateKey.decode(data,'der');return{curve:data.parameters.value,privateKey:data.privateKey};default:throw new Error('unknown key type '+type);}}parseKeys.signature=asn1.signature;function decrypt(data,password){var salt=data.algorithm.decrypt.kde.kdeparams.salt;var iters=parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(),10);var algo=aesid[data.algorithm.decrypt.cipher.algo.join('.')];var iv=data.algorithm.decrypt.cipher.iv;var cipherText=data.subjectPrivateKey;var keylen=parseInt(algo.split('-')[1],10)/8;var key=compat.pbkdf2Sync(password,salt,iters,keylen,'sha1');var cipher=ciphers.createDecipheriv(algo,key,iv);var out=[];out.push(cipher.update(cipherText));out.push(cipher.final());return Buffer.concat(out);}},{"./aesid.json":231,"./asn1":232,"./fixProc":234,"browserify-aes":99,"pbkdf2":236,"safe-buffer":254}],236:[function(require,module,exports){exports.pbkdf2=require('./lib/async');exports.pbkdf2Sync=require('./lib/sync');},{"./lib/async":237,"./lib/sync":240}],237:[function(require,module,exports){(function(global){(function(){var Buffer=require('safe-buffer').Buffer;var checkParameters=require('./precondition');var defaultEncoding=require('./default-encoding');var sync=require('./sync');var toBuffer=require('./to-buffer');var ZERO_BUF;var subtle=global.crypto&&global.crypto.subtle;var toBrowser={sha:'SHA-1','sha-1':'SHA-1',sha1:'SHA-1',sha256:'SHA-256','sha-256':'SHA-256',sha384:'SHA-384','sha-384':'SHA-384','sha-512':'SHA-512',sha512:'SHA-512'};var checks=[];function checkNative(algo){if(global.process&&!global.process.browser){return Promise.resolve(false);}if(!subtle||!subtle.importKey||!subtle.deriveBits){return Promise.resolve(false);}if(checks[algo]!==undefined){return checks[algo];}ZERO_BUF=ZERO_BUF||Buffer.alloc(8);var prom=browserPbkdf2(ZERO_BUF,ZERO_BUF,10,128,algo).then(function(){return true;}).catch(function(){return false;});checks[algo]=prom;return prom;}var nextTick;function getNextTick(){if(nextTick){return nextTick;}if(global.process&&global.process.nextTick){nextTick=global.process.nextTick;}else if(global.queueMicrotask){nextTick=global.queueMicrotask;}else if(global.setImmediate){nextTick=global.setImmediate;}else{nextTick=global.setTimeout;}return nextTick;}function browserPbkdf2(password,salt,iterations,length,algo){return subtle.importKey('raw',password,{name:'PBKDF2'},false,['deriveBits']).then(function(key){return subtle.deriveBits({name:'PBKDF2',salt:salt,iterations:iterations,hash:{name:algo}},key,length<<3);}).then(function(res){return Buffer.from(res);});}function resolvePromise(promise,callback){promise.then(function(out){getNextTick()(function(){callback(null,out);});},function(e){getNextTick()(function(){callback(e);});});}module.exports=function(password,salt,iterations,keylen,digest,callback){if(typeof digest==='function'){callback=digest;digest=undefined;}digest=digest||'sha1';var algo=toBrowser[digest.toLowerCase()];if(!algo||typeof global.Promise!=='function'){getNextTick()(function(){var out;try{out=sync(password,salt,iterations,keylen,digest);}catch(e){return callback(e);}callback(null,out);});return;}checkParameters(iterations,keylen);password=toBuffer(password,defaultEncoding,'Password');salt=toBuffer(salt,defaultEncoding,'Salt');if(typeof callback!=='function')throw new Error('No callback provided to pbkdf2');resolvePromise(checkNative(algo).then(function(resp){if(resp)return browserPbkdf2(password,salt,iterations,keylen,algo);return sync(password,salt,iterations,keylen,digest);}),callback);};}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"./default-encoding":238,"./precondition":239,"./sync":240,"./to-buffer":241,"safe-buffer":254}],238:[function(require,module,exports){(function(process,global){(function(){var defaultEncoding;/* istanbul ignore next */if(global.process&&global.process.browser){defaultEncoding='utf-8';}else if(global.process&&global.process.version){var pVersionMajor=parseInt(process.version.split('.')[0].slice(1),10);defaultEncoding=pVersionMajor>=6?'utf-8':'binary';}else{defaultEncoding='utf-8';}module.exports=defaultEncoding;}).call(this);}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"_process":242}],239:[function(require,module,exports){var MAX_ALLOC=Math.pow(2,30)-1;// default in iojs
module.exports=function(iterations,keylen){if(typeof iterations!=='number'){throw new TypeError('Iterations not a number');}if(iterations<0){throw new TypeError('Bad iterations');}if(typeof keylen!=='number'){throw new TypeError('Key length not a number');}if(keylen<0||keylen>MAX_ALLOC||keylen!==keylen){/* eslint no-self-compare: 0 */throw new TypeError('Bad key length');}};},{}],240:[function(require,module,exports){var md5=require('create-hash/md5');var RIPEMD160=require('ripemd160');var sha=require('sha.js');var Buffer=require('safe-buffer').Buffer;var checkParameters=require('./precondition');var defaultEncoding=require('./default-encoding');var toBuffer=require('./to-buffer');var ZEROS=Buffer.alloc(128);var sizes={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function Hmac(alg,key,saltLen){var hash=getDigest(alg);var blocksize=alg==='sha512'||alg==='sha384'?128:64;if(key.length>blocksize){key=hash(key);}else if(key.length<blocksize){key=Buffer.concat([key,ZEROS],blocksize);}var ipad=Buffer.allocUnsafe(blocksize+sizes[alg]);var opad=Buffer.allocUnsafe(blocksize+sizes[alg]);for(var i=0;i<blocksize;i++){ipad[i]=key[i]^0x36;opad[i]=key[i]^0x5C;}var ipad1=Buffer.allocUnsafe(blocksize+saltLen+4);ipad.copy(ipad1,0,0,blocksize);this.ipad1=ipad1;this.ipad2=ipad;this.opad=opad;this.alg=alg;this.blocksize=blocksize;this.hash=hash;this.size=sizes[alg];}Hmac.prototype.run=function(data,ipad){data.copy(ipad,this.blocksize);var h=this.hash(ipad);h.copy(this.opad,this.blocksize);return this.hash(this.opad);};function getDigest(alg){function shaFunc(data){return sha(alg).update(data).digest();}function rmd160Func(data){return new RIPEMD160().update(data).digest();}if(alg==='rmd160'||alg==='ripemd160')return rmd160Func;if(alg==='md5')return md5;return shaFunc;}function pbkdf2(password,salt,iterations,keylen,digest){checkParameters(iterations,keylen);password=toBuffer(password,defaultEncoding,'Password');salt=toBuffer(salt,defaultEncoding,'Salt');digest=digest||'sha1';var hmac=new Hmac(digest,password,salt.length);var DK=Buffer.allocUnsafe(keylen);var block1=Buffer.allocUnsafe(salt.length+4);salt.copy(block1,0,0,salt.length);var destPos=0;var hLen=sizes[digest];var l=Math.ceil(keylen/hLen);for(var i=1;i<=l;i++){block1.writeUInt32BE(i,salt.length);var T=hmac.run(block1,hmac.ipad1);var U=T;for(var j=1;j<iterations;j++){U=hmac.run(U,hmac.ipad2);for(var k=0;k<hLen;k++)T[k]^=U[k];}T.copy(DK,destPos);destPos+=hLen;}return DK;}module.exports=pbkdf2;},{"./default-encoding":238,"./precondition":239,"./to-buffer":241,"create-hash/md5":145,"ripemd160":253,"safe-buffer":254,"sha.js":258}],241:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;module.exports=function(thing,encoding,name){if(Buffer.isBuffer(thing)){return thing;}else if(typeof thing==='string'){return Buffer.from(thing,encoding);}else if(ArrayBuffer.isView(thing)){return Buffer.from(thing.buffer);}else{throw new TypeError(name+' must be a string, a Buffer, a typed array or a DataView');}};},{"safe-buffer":254}],242:[function(require,module,exports){// shim for using process in browser
var process=module.exports={};// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations
return setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined
if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations
return clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined
if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects
function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues
process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return'/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};},{}],243:[function(require,module,exports){exports.publicEncrypt=require('./publicEncrypt');exports.privateDecrypt=require('./privateDecrypt');exports.privateEncrypt=function privateEncrypt(key,buf){return exports.publicEncrypt(key,buf,true);};exports.publicDecrypt=function publicDecrypt(key,buf){return exports.privateDecrypt(key,buf,true);};},{"./privateDecrypt":246,"./publicEncrypt":247}],244:[function(require,module,exports){var createHash=require('create-hash');var Buffer=require('safe-buffer').Buffer;module.exports=function(seed,len){var t=Buffer.alloc(0);var i=0;var c;while(t.length<len){c=i2ops(i++);t=Buffer.concat([t,createHash('sha1').update(seed).update(c).digest()]);}return t.slice(0,len);};function i2ops(c){var out=Buffer.allocUnsafe(4);out.writeUInt32BE(c,0);return out;}},{"create-hash":144,"safe-buffer":254}],245:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments);},{"buffer":96,"dup":2}],246:[function(require,module,exports){var parseKeys=require('parse-asn1');var mgf=require('./mgf');var xor=require('./xor');var BN=require('bn.js');var crt=require('browserify-rsa');var createHash=require('create-hash');var withPublic=require('./withPublic');var Buffer=require('safe-buffer').Buffer;module.exports=function privateDecrypt(privateKey,enc,reverse){var padding;if(privateKey.padding){padding=privateKey.padding;}else if(reverse){padding=1;}else{padding=4;}var key=parseKeys(privateKey);var k=key.modulus.byteLength();if(enc.length>k||new BN(enc).cmp(key.modulus)>=0){throw new Error('decryption error');}var msg;if(reverse){msg=withPublic(new BN(enc),key);}else{msg=crt(enc,key);}var zBuffer=Buffer.alloc(k-msg.length);msg=Buffer.concat([zBuffer,msg],k);if(padding===4){return oaep(key,msg);}else if(padding===1){return pkcs1(key,msg,reverse);}else if(padding===3){return msg;}else{throw new Error('unknown padding');}};function oaep(key,msg){var k=key.modulus.byteLength();var iHash=createHash('sha1').update(Buffer.alloc(0)).digest();var hLen=iHash.length;if(msg[0]!==0){throw new Error('decryption error');}var maskedSeed=msg.slice(1,hLen+1);var maskedDb=msg.slice(hLen+1);var seed=xor(maskedSeed,mgf(maskedDb,hLen));var db=xor(maskedDb,mgf(seed,k-hLen-1));if(compare(iHash,db.slice(0,hLen))){throw new Error('decryption error');}var i=hLen;while(db[i]===0){i++;}if(db[i++]!==1){throw new Error('decryption error');}return db.slice(i);}function pkcs1(key,msg,reverse){var p1=msg.slice(0,2);var i=2;var status=0;while(msg[i++]!==0){if(i>=msg.length){status++;break;}}var ps=msg.slice(2,i-1);if(p1.toString('hex')!=='0002'&&!reverse||p1.toString('hex')!=='0001'&&reverse){status++;}if(ps.length<8){status++;}if(status){throw new Error('decryption error');}return msg.slice(i);}function compare(a,b){a=Buffer.from(a);b=Buffer.from(b);var dif=0;var len=a.length;if(a.length!==b.length){dif++;len=Math.min(a.length,b.length);}var i=-1;while(++i<len){dif+=a[i]^b[i];}return dif;}},{"./mgf":244,"./withPublic":248,"./xor":249,"bn.js":245,"browserify-rsa":117,"create-hash":144,"parse-asn1":235,"safe-buffer":254}],247:[function(require,module,exports){var parseKeys=require('parse-asn1');var randomBytes=require('randombytes');var createHash=require('create-hash');var mgf=require('./mgf');var xor=require('./xor');var BN=require('bn.js');var withPublic=require('./withPublic');var crt=require('browserify-rsa');var Buffer=require('safe-buffer').Buffer;module.exports=function publicEncrypt(publicKey,msg,reverse){var padding;if(publicKey.padding){padding=publicKey.padding;}else if(reverse){padding=1;}else{padding=4;}var key=parseKeys(publicKey);var paddedMsg;if(padding===4){paddedMsg=oaep(key,msg);}else if(padding===1){paddedMsg=pkcs1(key,msg,reverse);}else if(padding===3){paddedMsg=new BN(msg);if(paddedMsg.cmp(key.modulus)>=0){throw new Error('data too long for modulus');}}else{throw new Error('unknown padding');}if(reverse){return crt(paddedMsg,key);}else{return withPublic(paddedMsg,key);}};function oaep(key,msg){var k=key.modulus.byteLength();var mLen=msg.length;var iHash=createHash('sha1').update(Buffer.alloc(0)).digest();var hLen=iHash.length;var hLen2=2*hLen;if(mLen>k-hLen2-2){throw new Error('message too long');}var ps=Buffer.alloc(k-mLen-hLen2-2);var dblen=k-hLen-1;var seed=randomBytes(hLen);var maskedDb=xor(Buffer.concat([iHash,ps,Buffer.alloc(1,1),msg],dblen),mgf(seed,dblen));var maskedSeed=xor(seed,mgf(maskedDb,hLen));return new BN(Buffer.concat([Buffer.alloc(1),maskedSeed,maskedDb],k));}function pkcs1(key,msg,reverse){var mLen=msg.length;var k=key.modulus.byteLength();if(mLen>k-11){throw new Error('message too long');}var ps;if(reverse){ps=Buffer.alloc(k-mLen-3,0xff);}else{ps=nonZero(k-mLen-3);}return new BN(Buffer.concat([Buffer.from([0,reverse?1:2]),ps,Buffer.alloc(1),msg],k));}function nonZero(len){var out=Buffer.allocUnsafe(len);var i=0;var cache=randomBytes(len*2);var cur=0;var num;while(i<len){if(cur===cache.length){cache=randomBytes(len*2);cur=0;}num=cache[cur++];if(num){out[i++]=num;}}return out;}},{"./mgf":244,"./withPublic":248,"./xor":249,"bn.js":245,"browserify-rsa":117,"create-hash":144,"parse-asn1":235,"randombytes":251,"safe-buffer":254}],248:[function(require,module,exports){var BN=require('bn.js');var Buffer=require('safe-buffer').Buffer;function withPublic(paddedMsg,key){return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());}module.exports=withPublic;},{"bn.js":245,"safe-buffer":254}],249:[function(require,module,exports){module.exports=function xor(a,b){var len=a.length;var i=-1;while(++i<len){a[i]^=b[i];}return a;};},{}],250:[function(require,module,exports){!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).PureCache=t();}(this,function(){"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function");}function t(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}}function i(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e;}function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e;}function r(e){return e=e||Object.create(null),{on:function(t,i){(e[t]||(e[t]=[])).push(i);},off:function(t,i){e[t]&&e[t].splice(e[t].indexOf(i)>>>0,1);},emit:function(t,i){(e[t]||[]).slice().map(function(e){e(i);}),(e["*"]||[]).slice().map(function(e){e(t,i);});}};}var s="expiry",o="add",a="get",u="remove",c="clear",h=function(e){if(e)throw new Error("Cannot use disposed instance.");},d={expiryCheckInterval:100},f=function(){function t(){var i=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e(this,t),n(this,"expire",function(){h(i.disposed);for(var e=Date.now(),t=e;t>=i.lastExpiredTime;t-=1){var n=i.queue[t];n&&(delete i.queue[t],n.forEach(function(e){var t=e.key;return(0,e.onExpire)(t);}));}i.lastExpiredTime=e;}),this.config=Object.assign({},d,r),this.queue={},this.disposed=!1,this.lastExpiredTime=Date.now()-1;var s=this.config.expiryCheckInterval;this.timer=setInterval(this.expire,s);}return i(t,[{key:"add",value:function(e,t,i){return h(this.disposed),this.queue[e]||(this.queue[e]=[]),this.queue[e].push({key:t,onExpire:i}),!0;}},{key:"remove",value:function(e,t){h(this.disposed);var i=this.queue[e];if(i){var n=i.filter(function(e){return e.key!==t;});return n.length?this.queue[e]=n:delete this.queue[e],!0;}return!1;}},{key:"dispose",value:function(){return h(this.disposed),clearInterval(this.timer),this.timer=null,this.queue={},this.disposed=!0,!0;}}]),t;}(),l={defaultCacheExpiryIn:6e4,expiryCheckInterval:100};return function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;e(this,t),this.config=Object.assign({},l,i);var s=r(),o=s.on,a=s.off,u=s.emit,c=[o,a,u];this.on=c[0],this.off=c[1],this.emit=c[2],this.cacheStore={},this.disposed=!1;var h=this.config.expiryCheckInterval;this.cacheExpirer=new n({expiryCheckInterval:h});}return i(t,[{key:"put",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.config.defaultCacheExpiryIn;h(this.disposed),this.cacheStore[t]&&this.remove(t);var r=Date.now(),a=n?r+n:null,u={value:i,addedAt:r,expiryAt:a};if(this.cacheStore[t]=u,a){var c=function(){e.remove(t),e.emit(s,{key:t,data:e.cacheStore[t]});};this.cacheExpirer.add(a,t,c);}return this.emit(o,{key:t,data:u}),u;}},{key:"get",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";h(this.disposed);var t=this.cacheStore[e];return t?(this.emit(a,{key:e,data:t}),t):null;}},{key:"remove",value:function(e){h(this.disposed);var t=this.cacheStore[e];if(t){delete this.cacheStore[e];var i=t.expiryAt;return this.cacheExpirer.remove(i,e),this.emit(u,{key:e,data:t}),!0;}return!1;}},{key:"dispose",value:function(){var e=this;return h(this.disposed),Object.keys(this.cacheStore).forEach(function(t){return e.remove(t);}),this.emit(c,{}),this.cacheExpirer.dispose(),this.disposed=!0,!0;}}]),t;}();});},{}],251:[function(require,module,exports){(function(process,global){(function(){'use strict';// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES=65536;// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32=4294967295;function oldBrowser(){throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11');}var Buffer=require('safe-buffer').Buffer;var crypto=global.crypto||global.msCrypto;if(crypto&&crypto.getRandomValues){module.exports=randomBytes;}else{module.exports=oldBrowser;}function randomBytes(size,cb){// phantomjs needs to throw
if(size>MAX_UINT32)throw new RangeError('requested too many random bytes');var bytes=Buffer.allocUnsafe(size);if(size>0){// getRandomValues fails on IE if size == 0
if(size>MAX_BYTES){// this is the max bytes crypto.getRandomValues
// can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
for(var generated=0;generated<size;generated+=MAX_BYTES){// buffer.slice automatically checks if the end is past the end of
// the buffer so we don't have to here
crypto.getRandomValues(bytes.slice(generated,generated+MAX_BYTES));}}else{crypto.getRandomValues(bytes);}}if(typeof cb==='function'){return process.nextTick(function(){cb(null,bytes);});}return bytes;}}).call(this);}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"_process":242,"safe-buffer":254}],252:[function(require,module,exports){(function(process,global){(function(){'use strict';function oldBrowser(){throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11');}var safeBuffer=require('safe-buffer');var randombytes=require('randombytes');var Buffer=safeBuffer.Buffer;var kBufferMaxLength=safeBuffer.kMaxLength;var crypto=global.crypto||global.msCrypto;var kMaxUint32=Math.pow(2,32)-1;function assertOffset(offset,length){if(typeof offset!=='number'||offset!==offset){// eslint-disable-line no-self-compare
throw new TypeError('offset must be a number');}if(offset>kMaxUint32||offset<0){throw new TypeError('offset must be a uint32');}if(offset>kBufferMaxLength||offset>length){throw new RangeError('offset out of range');}}function assertSize(size,offset,length){if(typeof size!=='number'||size!==size){// eslint-disable-line no-self-compare
throw new TypeError('size must be a number');}if(size>kMaxUint32||size<0){throw new TypeError('size must be a uint32');}if(size+offset>length||size>kBufferMaxLength){throw new RangeError('buffer too small');}}if(crypto&&crypto.getRandomValues||!process.browser){exports.randomFill=randomFill;exports.randomFillSync=randomFillSync;}else{exports.randomFill=oldBrowser;exports.randomFillSync=oldBrowser;}function randomFill(buf,offset,size,cb){if(!Buffer.isBuffer(buf)&&!(buf instanceof global.Uint8Array)){throw new TypeError('"buf" argument must be a Buffer or Uint8Array');}if(typeof offset==='function'){cb=offset;offset=0;size=buf.length;}else if(typeof size==='function'){cb=size;size=buf.length-offset;}else if(typeof cb!=='function'){throw new TypeError('"cb" argument must be a function');}assertOffset(offset,buf.length);assertSize(size,offset,buf.length);return actualFill(buf,offset,size,cb);}function actualFill(buf,offset,size,cb){if(process.browser){var ourBuf=buf.buffer;var uint=new Uint8Array(ourBuf,offset,size);crypto.getRandomValues(uint);if(cb){process.nextTick(function(){cb(null,buf);});return;}return buf;}if(cb){randombytes(size,function(err,bytes){if(err){return cb(err);}bytes.copy(buf,offset);cb(null,buf);});return;}var bytes=randombytes(size);bytes.copy(buf,offset);return buf;}function randomFillSync(buf,offset,size){if(typeof offset==='undefined'){offset=0;}if(!Buffer.isBuffer(buf)&&!(buf instanceof global.Uint8Array)){throw new TypeError('"buf" argument must be a Buffer or Uint8Array');}assertOffset(offset,buf.length);if(size===undefined)size=buf.length-offset;assertSize(size,offset,buf.length);return actualFill(buf,offset,size);}}).call(this);}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"_process":242,"randombytes":251,"safe-buffer":254}],253:[function(require,module,exports){'use strict';var Buffer=require('buffer').Buffer;var inherits=require('inherits');var HashBase=require('hash-base');var ARRAY16=new Array(16);var zl=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var zr=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var sl=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var sr=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];var hl=[0x00000000,0x5a827999,0x6ed9eba1,0x8f1bbcdc,0xa953fd4e];var hr=[0x50a28be6,0x5c4dd124,0x6d703ef3,0x7a6d76e9,0x00000000];function RIPEMD160(){HashBase.call(this,64);// state
this._a=0x67452301;this._b=0xefcdab89;this._c=0x98badcfe;this._d=0x10325476;this._e=0xc3d2e1f0;}inherits(RIPEMD160,HashBase);RIPEMD160.prototype._update=function(){var words=ARRAY16;for(var j=0;j<16;++j)words[j]=this._block.readInt32LE(j*4);var al=this._a|0;var bl=this._b|0;var cl=this._c|0;var dl=this._d|0;var el=this._e|0;var ar=this._a|0;var br=this._b|0;var cr=this._c|0;var dr=this._d|0;var er=this._e|0;// computation
for(var i=0;i<80;i+=1){var tl;var tr;if(i<16){tl=fn1(al,bl,cl,dl,el,words[zl[i]],hl[0],sl[i]);tr=fn5(ar,br,cr,dr,er,words[zr[i]],hr[0],sr[i]);}else if(i<32){tl=fn2(al,bl,cl,dl,el,words[zl[i]],hl[1],sl[i]);tr=fn4(ar,br,cr,dr,er,words[zr[i]],hr[1],sr[i]);}else if(i<48){tl=fn3(al,bl,cl,dl,el,words[zl[i]],hl[2],sl[i]);tr=fn3(ar,br,cr,dr,er,words[zr[i]],hr[2],sr[i]);}else if(i<64){tl=fn4(al,bl,cl,dl,el,words[zl[i]],hl[3],sl[i]);tr=fn2(ar,br,cr,dr,er,words[zr[i]],hr[3],sr[i]);}else{// if (i<80) {
tl=fn5(al,bl,cl,dl,el,words[zl[i]],hl[4],sl[i]);tr=fn1(ar,br,cr,dr,er,words[zr[i]],hr[4],sr[i]);}al=el;el=dl;dl=rotl(cl,10);cl=bl;bl=tl;ar=er;er=dr;dr=rotl(cr,10);cr=br;br=tr;}// update state
var t=this._b+cl+dr|0;this._b=this._c+dl+er|0;this._c=this._d+el+ar|0;this._d=this._e+al+br|0;this._e=this._a+bl+cr|0;this._a=t;};RIPEMD160.prototype._digest=function(){// create padding and handle blocks
this._block[this._blockOffset++]=0x80;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0;}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();// produce result
var buffer=Buffer.alloc?Buffer.alloc(20):new Buffer(20);buffer.writeInt32LE(this._a,0);buffer.writeInt32LE(this._b,4);buffer.writeInt32LE(this._c,8);buffer.writeInt32LE(this._d,12);buffer.writeInt32LE(this._e,16);return buffer;};function rotl(x,n){return x<<n|x>>>32-n;}function fn1(a,b,c,d,e,m,k,s){return rotl(a+(b^c^d)+m+k|0,s)+e|0;}function fn2(a,b,c,d,e,m,k,s){return rotl(a+(b&c|~b&d)+m+k|0,s)+e|0;}function fn3(a,b,c,d,e,m,k,s){return rotl(a+((b|~c)^d)+m+k|0,s)+e|0;}function fn4(a,b,c,d,e,m,k,s){return rotl(a+(b&d|c&~d)+m+k|0,s)+e|0;}function fn5(a,b,c,d,e,m,k,s){return rotl(a+(b^(c|~d))+m+k|0,s)+e|0;}module.exports=RIPEMD160;},{"buffer":140,"hash-base":193,"inherits":223}],254:[function(require,module,exports){/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *//* eslint-disable node/no-deprecated-api */var buffer=require('buffer');var Buffer=buffer.Buffer;// alternative to using Object.keys for old browsers
function copyProps(src,dst){for(var key in src){dst[key]=src[key];}}if(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){module.exports=buffer;}else{// Copy properties from require('buffer')
copyProps(buffer,exports);exports.Buffer=SafeBuffer;}function SafeBuffer(arg,encodingOrOffset,length){return Buffer(arg,encodingOrOffset,length);}SafeBuffer.prototype=Object.create(Buffer.prototype);// Copy static methods from Buffer
copyProps(Buffer,SafeBuffer);SafeBuffer.from=function(arg,encodingOrOffset,length){if(typeof arg==='number'){throw new TypeError('Argument must not be a number');}return Buffer(arg,encodingOrOffset,length);};SafeBuffer.alloc=function(size,fill,encoding){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}var buf=Buffer(size);if(fill!==undefined){if(typeof encoding==='string'){buf.fill(fill,encoding);}else{buf.fill(fill);}}else{buf.fill(0);}return buf;};SafeBuffer.allocUnsafe=function(size){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}return Buffer(size);};SafeBuffer.allocUnsafeSlow=function(size){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}return buffer.SlowBuffer(size);};},{"buffer":140}],255:[function(require,module,exports){(function(process){(function(){/* eslint-disable node/no-deprecated-api */'use strict';var buffer=require('buffer');var Buffer=buffer.Buffer;var safer={};var key;for(key in buffer){if(!buffer.hasOwnProperty(key))continue;if(key==='SlowBuffer'||key==='Buffer')continue;safer[key]=buffer[key];}var Safer=safer.Buffer={};for(key in Buffer){if(!Buffer.hasOwnProperty(key))continue;if(key==='allocUnsafe'||key==='allocUnsafeSlow')continue;Safer[key]=Buffer[key];}safer.Buffer.prototype=Buffer.prototype;if(!Safer.from||Safer.from===Uint8Array.from){Safer.from=function(value,encodingOrOffset,length){if(typeof value==='number'){throw new TypeError('The "value" argument must not be of type number. Received type '+typeof value);}if(value&&typeof value.length==='undefined'){throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type '+typeof value);}return Buffer(value,encodingOrOffset,length);};}if(!Safer.alloc){Safer.alloc=function(size,fill,encoding){if(typeof size!=='number'){throw new TypeError('The "size" argument must be of type number. Received type '+typeof size);}if(size<0||size>=2*(1<<30)){throw new RangeError('The value "'+size+'" is invalid for option "size"');}var buf=Buffer(size);if(!fill||fill.length===0){buf.fill(0);}else if(typeof encoding==='string'){buf.fill(fill,encoding);}else{buf.fill(fill);}return buf;};}if(!safer.kStringMaxLength){try{safer.kStringMaxLength=process.binding('buffer').kStringMaxLength;}catch(e){// we can't determine kStringMaxLength in environments where process.binding
// is unsupported, so let's not set it
}}if(!safer.constants){safer.constants={MAX_LENGTH:safer.kMaxLength};if(safer.kStringMaxLength){safer.constants.MAX_STRING_LENGTH=safer.kStringMaxLength;}}module.exports=safer;}).call(this);}).call(this,require('_process'));},{"_process":242,"buffer":140}],256:[function(require,module,exports){(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==='object'&&typeof module==='object')module.exports=factory();else if(typeof define==='function'&&define.amd)define("SecureLS",[],factory);else if(typeof exports==='object')exports["SecureLS"]=factory();else root["SecureLS"]=factory();})(this,function(){return(/******/function(modules){// webpackBootstrap
/******/// The module cache
/******/var installedModules={};/******//******/// The require function
/******/function __webpack_require__(moduleId){/******//******/// Check if module is in cache
/******/if(installedModules[moduleId])/******/return installedModules[moduleId].exports;/******//******/// Create a new module (and put it into the cache)
/******/var module=installedModules[moduleId]={/******/exports:{},/******/id:moduleId,/******/loaded:false/******/};/******//******/// Execute the module function
/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******//******/// Flag the module as loaded
/******/module.loaded=true;/******//******/// Return the exports of the module
/******/return module.exports;/******/}/******//******//******/// expose the modules object (__webpack_modules__)
/******/__webpack_require__.m=modules;/******//******/// expose the module cache
/******/__webpack_require__.c=installedModules;/******//******/// __webpack_public_path__
/******/__webpack_require__.p="";/******//******/// Load entry module and return exports
/******/return __webpack_require__(0);/******/}(/************************************************************************//******/[/* 0 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _utils=__webpack_require__(1);var _utils2=_interopRequireDefault(_utils);var _constants=__webpack_require__(2);var _constants2=_interopRequireDefault(_constants);var _encUtf=__webpack_require__(8);var _encUtf2=_interopRequireDefault(_encUtf);var _Base=__webpack_require__(9);var _Base2=_interopRequireDefault(_Base);var _lzString=__webpack_require__(10);var _lzString2=_interopRequireDefault(_lzString);var _aes=__webpack_require__(11);var _aes2=_interopRequireDefault(_aes);var _tripledes=__webpack_require__(16);var _tripledes2=_interopRequireDefault(_tripledes);var _rabbit=__webpack_require__(17);var _rabbit2=_interopRequireDefault(_rabbit);var _rc=__webpack_require__(18);var _rc2=_interopRequireDefault(_rc);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var SecureLS=function(){function SecureLS(config){_classCallCheck(this,SecureLS);config=config||{};this._name='secure-ls';this.utils=_utils2.default;this.constants=_constants2.default;this.Base64=_Base2.default;this.LZString=_lzString2.default;this.AES=_aes2.default;this.DES=_tripledes2.default;this.RABBIT=_rabbit2.default;this.RC4=_rc2.default;this.enc=_encUtf2.default;this.config={isCompression:true,encodingType:_constants2.default.EncrytionTypes.BASE64,encryptionSecret:config.encryptionSecret,encryptionNamespace:config.encryptionNamespace};this.config.isCompression=typeof config.isCompression!=='undefined'?config.isCompression:true;this.config.encodingType=typeof config.encodingType!=='undefined'||config.encodingType===''?config.encodingType.toLowerCase():_constants2.default.EncrytionTypes.BASE64;this.ls=localStorage;this.init();}_createClass(SecureLS,[{key:'init',value:function init(){var metaData=this.getMetaData();this.WarningEnum=this.constants.WarningEnum;this.WarningTypes=this.constants.WarningTypes;this.EncrytionTypes=this.constants.EncrytionTypes;this._isBase64=this._isBase64EncryptionType();this._isAES=this._isAESEncryptionType();this._isDES=this._isDESEncryptionType();this._isRabbit=this._isRabbitEncryptionType();this._isRC4=this._isRC4EncryptionType();this._isCompression=this._isDataCompressionEnabled();// fill the already present keys to the list of keys being used by secure-ls
this.utils.allKeys=metaData.keys||this.resetAllKeys();}},{key:'_isBase64EncryptionType',value:function _isBase64EncryptionType(){return _Base2.default&&(typeof this.config.encodingType==='undefined'||this.config.encodingType===this.constants.EncrytionTypes.BASE64);}},{key:'_isAESEncryptionType',value:function _isAESEncryptionType(){return _aes2.default&&this.config.encodingType===this.constants.EncrytionTypes.AES;}},{key:'_isDESEncryptionType',value:function _isDESEncryptionType(){return _tripledes2.default&&this.config.encodingType===this.constants.EncrytionTypes.DES;}},{key:'_isRabbitEncryptionType',value:function _isRabbitEncryptionType(){return _rabbit2.default&&this.config.encodingType===this.constants.EncrytionTypes.RABBIT;}},{key:'_isRC4EncryptionType',value:function _isRC4EncryptionType(){return _rc2.default&&this.config.encodingType===this.constants.EncrytionTypes.RC4;}},{key:'_isDataCompressionEnabled',value:function _isDataCompressionEnabled(){return this.config.isCompression;}},{key:'getEncryptionSecret',value:function getEncryptionSecret(key){var metaData=this.getMetaData();var obj=this.utils.getObjectFromKey(metaData.keys,key);if(!obj){return;}if(this._isAES||this._isDES||this._isRabbit||this._isRC4){if(typeof this.config.encryptionSecret==='undefined'){this.utils.encryptionSecret=obj.s;if(!this.utils.encryptionSecret){this.utils.encryptionSecret=this.utils.generateSecretKey();this.setMetaData();}}else{this.utils.encryptionSecret=this.config.encryptionSecret||obj.s||'';}}}},{key:'get',value:function get(key,isAllKeysData){var decodedData='',jsonData='',deCompressedData=void 0,bytes=void 0,data=void 0;if(!this.utils.is(key)){this.utils.warn(this.WarningEnum.KEY_NOT_PROVIDED);return jsonData;}data=this.getDataFromLocalStorage(key);if(!data){return jsonData;}deCompressedData=data;// saves else
if(this._isCompression||isAllKeysData){// meta data always compressed
deCompressedData=_lzString2.default.decompressFromUTF16(data);}decodedData=deCompressedData;// saves else
if(this._isBase64||isAllKeysData){// meta data always Base64
decodedData=_Base2.default.decode(deCompressedData);}else{this.getEncryptionSecret(key);if(this._isAES){bytes=_aes2.default.decrypt(deCompressedData.toString(),this.utils.encryptionSecret);}else if(this._isDES){bytes=_tripledes2.default.decrypt(deCompressedData.toString(),this.utils.encryptionSecret);}else if(this._isRabbit){bytes=_rabbit2.default.decrypt(deCompressedData.toString(),this.utils.encryptionSecret);}else if(this._isRC4){bytes=_rc2.default.decrypt(deCompressedData.toString(),this.utils.encryptionSecret);}if(bytes){decodedData=bytes.toString(_encUtf2.default._Utf8);}}try{jsonData=JSON.parse(decodedData);}catch(e){throw new Error('Could not parse JSON');}return jsonData;}},{key:'getDataFromLocalStorage',value:function getDataFromLocalStorage(key){return this.ls.getItem(key,true);}},{key:'getAllKeys',value:function getAllKeys(){var data=this.getMetaData();return this.utils.extractKeyNames(data)||[];}},{key:'set',value:function set(key,data){var dataToStore='';if(!this.utils.is(key)){this.utils.warn(this.WarningEnum.KEY_NOT_PROVIDED);return;}this.getEncryptionSecret(key);// add key(s) to Array if not already added, only for keys other than meta key
if(!(String(key)===String(this.utils.metaKey))){if(!this.utils.isKeyPresent(key)){this.utils.addToKeysList(key);this.setMetaData();}}dataToStore=this.processData(data);// Store the data to localStorage
this.setDataToLocalStorage(key,dataToStore);}},{key:'setDataToLocalStorage',value:function setDataToLocalStorage(key,data){this.ls.setItem(key,data);}},{key:'remove',value:function remove(key){if(!this.utils.is(key)){this.utils.warn(this.WarningEnum.KEY_NOT_PROVIDED);return;}if(key===this.utils.metaKey&&this.getAllKeys().length){this.utils.warn(this.WarningEnum.META_KEY_REMOVE);return;}if(this.utils.isKeyPresent(key)){this.utils.removeFromKeysList(key);this.setMetaData();}this.ls.removeItem(key);}},{key:'removeAll',value:function removeAll(){var keys=void 0,i=void 0;keys=this.getAllKeys();for(i=0;i<keys.length;i++){this.ls.removeItem(keys[i]);}this.ls.removeItem(this.utils.metaKey);this.resetAllKeys();}},{key:'clear',value:function clear(){this.ls.clear();this.resetAllKeys();}},{key:'resetAllKeys',value:function resetAllKeys(){this.utils.allKeys=[];return[];}},{key:'processData',value:function processData(data,isAllKeysData){if(data===null||data===undefined||data===''){return'';}var jsonData=void 0,encodedData=void 0,compressedData=void 0;try{jsonData=JSON.stringify(data);}catch(e){throw new Error('Could not stringify data.');}// Encode Based on encoding type
// If not set, default to Base64 for securing data
encodedData=jsonData;if(this._isBase64||isAllKeysData){encodedData=_Base2.default.encode(jsonData);}else{if(this._isAES){encodedData=_aes2.default.encrypt(jsonData,this.utils.encryptionSecret);}else if(this._isDES){encodedData=_tripledes2.default.encrypt(jsonData,this.utils.encryptionSecret);}else if(this._isRabbit){encodedData=_rabbit2.default.encrypt(jsonData,this.utils.encryptionSecret);}else if(this._isRC4){encodedData=_rc2.default.encrypt(jsonData,this.utils.encryptionSecret);}encodedData=encodedData&&encodedData.toString();}// Compress data if set to true
compressedData=encodedData;if(this._isCompression||isAllKeysData){compressedData=_lzString2.default.compressToUTF16(encodedData);}return compressedData;}},{key:'setMetaData',value:function setMetaData(){var dataToStore=this.processData({keys:this.utils.allKeys},true);// Store the data to localStorage
this.setDataToLocalStorage(this.getMetaKey(),dataToStore);}},{key:'getMetaData',value:function getMetaData(){return this.get(this.getMetaKey(),true)||{};}},{key:'getMetaKey',value:function getMetaKey(){return this.utils.metaKey+(this.config.encryptionNamespace?'__'+this.config.encryptionNamespace:'');}}]);return SecureLS;}();exports.default=SecureLS;;module.exports=exports['default'];/***/},/* 1 *//***/function(module,exports,__webpack_require__){'use strict';var _constants=__webpack_require__(2);var _constants2=_interopRequireDefault(_constants);var _WordArray=__webpack_require__(3);var _WordArray2=_interopRequireDefault(_WordArray);var _pbkdf=__webpack_require__(4);var _pbkdf2=_interopRequireDefault(_pbkdf);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var utils={metaKey:'_secure__ls__metadata',encryptionSecret:'',secretPhrase:'s3cr3t$#@135^&*246',allKeys:[],is:function is(key){if(key){return true;}return false;},warn:function warn(reason){reason=reason?reason:_constants2.default.WarningEnum.DEFAULT_TEXT;console.warn(_constants2.default.WarningTypes[reason]);},generateSecretKey:function generateSecretKey(){var salt=_WordArray2.default.random(128/8);var key128Bits=(0,_pbkdf2.default)(this.secretPhrase,salt,{keySize:128/32});return key128Bits&&key128Bits.toString();},getObjectFromKey:function getObjectFromKey(data,key){if(!data||!data.length){return{};}var i=void 0,obj={};for(i=0;i<data.length;i++){if(data[i].k===key){obj=data[i];break;}}return obj;},extractKeyNames:function extractKeyNames(data){if(!data||!data.keys||!data.keys.length){return[];}return data.keys.map(function(keyData){return keyData.k;});},getAllKeys:function getAllKeys(){return this.allKeys;},isKeyPresent:function isKeyPresent(key){var isKeyAlreadyPresent=false;for(var i=0;i<this.allKeys.length;i++){if(String(this.allKeys[i].k)===String(key)){isKeyAlreadyPresent=true;// found
break;}}return isKeyAlreadyPresent;},addToKeysList:function addToKeysList(key){this.allKeys.push({k:key,s:this.encryptionSecret});},removeFromKeysList:function removeFromKeysList(key){var i=void 0,index=-1;for(i=0;i<this.allKeys.length;i++){if(this.allKeys[i].k===key){index=i;break;}}if(index!==-1){this.allKeys.splice(index,1);}return index;}};module.exports=utils;/***/},/* 2 *//***/function(module,exports){'use strict';var WarningEnum={KEY_NOT_PROVIDED:'keyNotProvided',META_KEY_REMOVE:'metaKeyRemove',DEFAULT_TEXT:'defaultText'};var WarningTypes={};WarningTypes[WarningEnum.KEY_NOT_PROVIDED]='Secure LS: Key not provided. Aborting operation!';WarningTypes[WarningEnum.META_KEY_REMOVE]='Secure LS: Meta key can not be removed\nunless all keys created by Secure LS are removed!';WarningTypes[WarningEnum.DEFAULT_TEXT]='Unexpected output';var constants={WarningEnum:WarningEnum,WarningTypes:WarningTypes,EncrytionTypes:{BASE64:'base64',AES:'aes',DES:'des',RABBIT:'rabbit',RC4:'rc4'}};module.exports=constants;/***/},/* 3 *//***/function(module,exports){"use strict";/*
	 ES6 compatible port of CryptoJS - WordArray for PBKDF2 password key generation
	
	 Source: https://github.com/brix/crypto-js
	 LICENSE: MIT
	 */var CryptoJSWordArray={};CryptoJSWordArray.random=function(nBytes){var words=[];var r=function r(mw){var mz=0x3ade68b1;var mask=0xffffffff;return function(){mz=0x9069*(mz&0xFFFF)+(mz>>0x10)&mask;mw=0x4650*(mw&0xFFFF)+(mw>>0x10)&mask;var result=(mz<<0x10)+mw&mask;result/=0x100000000;result+=0.5;return result*(Math.random()>0.5?1:-1);};};for(var i=0,rcache;i<nBytes;i+=4){var _r=r((rcache||Math.random())*0x100000000);rcache=_r()*0x3ade67b7;words.push(_r()*0x100000000|0);}return new this.Set(words,nBytes);};CryptoJSWordArray.Set=function(words,sigBytes){words=this.words=words||[];if(sigBytes!==undefined){this.sigBytes=sigBytes;}else{this.sigBytes=words.length*8;}};module.exports=CryptoJSWordArray;/***/},/* 4 *//***/function(module,exports,__webpack_require__){;(function(root,factory,undef){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5),__webpack_require__(6),__webpack_require__(7));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core","./sha1","./hmac"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var Base=C_lib.Base;var WordArray=C_lib.WordArray;var C_algo=C.algo;var SHA1=C_algo.SHA1;var HMAC=C_algo.HMAC;/**
		     * Password-Based Key Derivation Function 2 algorithm.
		     */var PBKDF2=C_algo.PBKDF2=Base.extend({/**
		         * Configuration options.
		         *
		         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
		         * @property {Hasher} hasher The hasher to use. Default: SHA1
		         * @property {number} iterations The number of iterations to perform. Default: 1
		         */cfg:Base.extend({keySize:128/32,hasher:SHA1,iterations:1}),/**
		         * Initializes a newly created key derivation function.
		         *
		         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
		         *
		         * @example
		         *
		         *     var kdf = CryptoJS.algo.PBKDF2.create();
		         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
		         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
		         */init:function(cfg){this.cfg=this.cfg.extend(cfg);},/**
		         * Computes the Password-Based Key Derivation Function 2.
		         *
		         * @param {WordArray|string} password The password.
		         * @param {WordArray|string} salt A salt.
		         *
		         * @return {WordArray} The derived key.
		         *
		         * @example
		         *
		         *     var key = kdf.compute(password, salt);
		         */compute:function(password,salt){// Shortcut
var cfg=this.cfg;// Init HMAC
var hmac=HMAC.create(cfg.hasher,password);// Initial values
var derivedKey=WordArray.create();var blockIndex=WordArray.create([0x00000001]);// Shortcuts
var derivedKeyWords=derivedKey.words;var blockIndexWords=blockIndex.words;var keySize=cfg.keySize;var iterations=cfg.iterations;// Generate key
while(derivedKeyWords.length<keySize){var block=hmac.update(salt).finalize(blockIndex);hmac.reset();// Shortcuts
var blockWords=block.words;var blockWordsLength=blockWords.length;// Iterations
var intermediate=block;for(var i=1;i<iterations;i++){intermediate=hmac.finalize(intermediate);hmac.reset();// Shortcut
var intermediateWords=intermediate.words;// XOR intermediate with block
for(var j=0;j<blockWordsLength;j++){blockWords[j]^=intermediateWords[j];}}derivedKey.concat(block);blockIndexWords[0]++;}derivedKey.sigBytes=keySize*4;return derivedKey;}});/**
		     * Computes the Password-Based Key Derivation Function 2.
		     *
		     * @param {WordArray|string} password The password.
		     * @param {WordArray|string} salt A salt.
		     * @param {Object} cfg (Optional) The configuration options to use for this computation.
		     *
		     * @return {WordArray} The derived key.
		     *
		     * @static
		     *
		     * @example
		     *
		     *     var key = CryptoJS.PBKDF2(password, salt);
		     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
		     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
		     */C.PBKDF2=function(password,salt,cfg){return PBKDF2.create(cfg).compute(password,salt);};})();return CryptoJS.PBKDF2;});/***/},/* 5 *//***/function(module,exports,__webpack_require__){;(function(root,factory){if(true){// CommonJS
module.exports=exports=factory();}else if(typeof define==="function"&&define.amd){// AMD
define([],factory);}else{// Global (browser)
root.CryptoJS=factory();}})(this,function(){/**
		 * CryptoJS core components.
		 */var CryptoJS=CryptoJS||function(Math,undefined){/*
		     * Local polyfil of Object.create
		     */var create=Object.create||function(){function F(){};return function(obj){var subtype;F.prototype=obj;subtype=new F();F.prototype=null;return subtype;};}();/**
		     * CryptoJS namespace.
		     */var C={};/**
		     * Library namespace.
		     */var C_lib=C.lib={};/**
		     * Base object for prototypal inheritance.
		     */var Base=C_lib.Base=function(){return{/**
		             * Creates a new object that inherits from this object.
		             *
		             * @param {Object} overrides Properties to copy into the new object.
		             *
		             * @return {Object} The new object.
		             *
		             * @static
		             *
		             * @example
		             *
		             *     var MyType = CryptoJS.lib.Base.extend({
		             *         field: 'value',
		             *
		             *         method: function () {
		             *         }
		             *     });
		             */extend:function(overrides){// Spawn
var subtype=create(this);// Augment
if(overrides){subtype.mixIn(overrides);}// Create default initializer
if(!subtype.hasOwnProperty('init')||this.init===subtype.init){subtype.init=function(){subtype.$super.init.apply(this,arguments);};}// Initializer's prototype is the subtype object
subtype.init.prototype=subtype;// Reference supertype
subtype.$super=this;return subtype;},/**
		             * Extends this object and runs the init method.
		             * Arguments to create() will be passed to init().
		             *
		             * @return {Object} The new object.
		             *
		             * @static
		             *
		             * @example
		             *
		             *     var instance = MyType.create();
		             */create:function(){var instance=this.extend();instance.init.apply(instance,arguments);return instance;},/**
		             * Initializes a newly created object.
		             * Override this method to add some logic when your objects are created.
		             *
		             * @example
		             *
		             *     var MyType = CryptoJS.lib.Base.extend({
		             *         init: function () {
		             *             // ...
		             *         }
		             *     });
		             */init:function(){},/**
		             * Copies properties into this object.
		             *
		             * @param {Object} properties The properties to mix in.
		             *
		             * @example
		             *
		             *     MyType.mixIn({
		             *         field: 'value'
		             *     });
		             */mixIn:function(properties){for(var propertyName in properties){if(properties.hasOwnProperty(propertyName)){this[propertyName]=properties[propertyName];}}// IE won't copy toString using the loop above
if(properties.hasOwnProperty('toString')){this.toString=properties.toString;}},/**
		             * Creates a copy of this object.
		             *
		             * @return {Object} The clone.
		             *
		             * @example
		             *
		             *     var clone = instance.clone();
		             */clone:function(){return this.init.prototype.extend(this);}};}();/**
		     * An array of 32-bit words.
		     *
		     * @property {Array} words The array of 32-bit words.
		     * @property {number} sigBytes The number of significant bytes in this word array.
		     */var WordArray=C_lib.WordArray=Base.extend({/**
		         * Initializes a newly created word array.
		         *
		         * @param {Array} words (Optional) An array of 32-bit words.
		         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
		         *
		         * @example
		         *
		         *     var wordArray = CryptoJS.lib.WordArray.create();
		         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
		         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
		         */init:function(words,sigBytes){words=this.words=words||[];if(sigBytes!=undefined){this.sigBytes=sigBytes;}else{this.sigBytes=words.length*4;}},/**
		         * Converts this word array to a string.
		         *
		         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
		         *
		         * @return {string} The stringified word array.
		         *
		         * @example
		         *
		         *     var string = wordArray + '';
		         *     var string = wordArray.toString();
		         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
		         */toString:function(encoder){return(encoder||Hex).stringify(this);},/**
		         * Concatenates a word array to this word array.
		         *
		         * @param {WordArray} wordArray The word array to append.
		         *
		         * @return {WordArray} This word array.
		         *
		         * @example
		         *
		         *     wordArray1.concat(wordArray2);
		         */concat:function(wordArray){// Shortcuts
var thisWords=this.words;var thatWords=wordArray.words;var thisSigBytes=this.sigBytes;var thatSigBytes=wordArray.sigBytes;// Clamp excess bits
this.clamp();// Concat
if(thisSigBytes%4){// Copy one byte at a time
for(var i=0;i<thatSigBytes;i++){var thatByte=thatWords[i>>>2]>>>24-i%4*8&0xff;thisWords[thisSigBytes+i>>>2]|=thatByte<<24-(thisSigBytes+i)%4*8;}}else{// Copy one word at a time
for(var i=0;i<thatSigBytes;i+=4){thisWords[thisSigBytes+i>>>2]=thatWords[i>>>2];}}this.sigBytes+=thatSigBytes;// Chainable
return this;},/**
		         * Removes insignificant bits.
		         *
		         * @example
		         *
		         *     wordArray.clamp();
		         */clamp:function(){// Shortcuts
var words=this.words;var sigBytes=this.sigBytes;// Clamp
words[sigBytes>>>2]&=0xffffffff<<32-sigBytes%4*8;words.length=Math.ceil(sigBytes/4);},/**
		         * Creates a copy of this word array.
		         *
		         * @return {WordArray} The clone.
		         *
		         * @example
		         *
		         *     var clone = wordArray.clone();
		         */clone:function(){var clone=Base.clone.call(this);clone.words=this.words.slice(0);return clone;},/**
		         * Creates a word array filled with random bytes.
		         *
		         * @param {number} nBytes The number of random bytes to generate.
		         *
		         * @return {WordArray} The random word array.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var wordArray = CryptoJS.lib.WordArray.random(16);
		         */random:function(nBytes){var words=[];var r=function(m_w){var m_w=m_w;var m_z=0x3ade68b1;var mask=0xffffffff;return function(){m_z=0x9069*(m_z&0xFFFF)+(m_z>>0x10)&mask;m_w=0x4650*(m_w&0xFFFF)+(m_w>>0x10)&mask;var result=(m_z<<0x10)+m_w&mask;result/=0x100000000;result+=0.5;return result*(Math.random()>.5?1:-1);};};for(var i=0,rcache;i<nBytes;i+=4){var _r=r((rcache||Math.random())*0x100000000);rcache=_r()*0x3ade67b7;words.push(_r()*0x100000000|0);}return new WordArray.init(words,nBytes);}});/**
		     * Encoder namespace.
		     */var C_enc=C.enc={};/**
		     * Hex encoding strategy.
		     */var Hex=C_enc.Hex={/**
		         * Converts a word array to a hex string.
		         *
		         * @param {WordArray} wordArray The word array.
		         *
		         * @return {string} The hex string.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
		         */stringify:function(wordArray){// Shortcuts
var words=wordArray.words;var sigBytes=wordArray.sigBytes;// Convert
var hexChars=[];for(var i=0;i<sigBytes;i++){var bite=words[i>>>2]>>>24-i%4*8&0xff;hexChars.push((bite>>>4).toString(16));hexChars.push((bite&0x0f).toString(16));}return hexChars.join('');},/**
		         * Converts a hex string to a word array.
		         *
		         * @param {string} hexStr The hex string.
		         *
		         * @return {WordArray} The word array.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
		         */parse:function(hexStr){// Shortcut
var hexStrLength=hexStr.length;// Convert
var words=[];for(var i=0;i<hexStrLength;i+=2){words[i>>>3]|=parseInt(hexStr.substr(i,2),16)<<24-i%8*4;}return new WordArray.init(words,hexStrLength/2);}};/**
		     * Latin1 encoding strategy.
		     */var Latin1=C_enc.Latin1={/**
		         * Converts a word array to a Latin1 string.
		         *
		         * @param {WordArray} wordArray The word array.
		         *
		         * @return {string} The Latin1 string.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
		         */stringify:function(wordArray){// Shortcuts
var words=wordArray.words;var sigBytes=wordArray.sigBytes;// Convert
var latin1Chars=[];for(var i=0;i<sigBytes;i++){var bite=words[i>>>2]>>>24-i%4*8&0xff;latin1Chars.push(String.fromCharCode(bite));}return latin1Chars.join('');},/**
		         * Converts a Latin1 string to a word array.
		         *
		         * @param {string} latin1Str The Latin1 string.
		         *
		         * @return {WordArray} The word array.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
		         */parse:function(latin1Str){// Shortcut
var latin1StrLength=latin1Str.length;// Convert
var words=[];for(var i=0;i<latin1StrLength;i++){words[i>>>2]|=(latin1Str.charCodeAt(i)&0xff)<<24-i%4*8;}return new WordArray.init(words,latin1StrLength);}};/**
		     * UTF-8 encoding strategy.
		     */var Utf8=C_enc.Utf8={/**
		         * Converts a word array to a UTF-8 string.
		         *
		         * @param {WordArray} wordArray The word array.
		         *
		         * @return {string} The UTF-8 string.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
		         */stringify:function(wordArray){try{return decodeURIComponent(escape(Latin1.stringify(wordArray)));}catch(e){throw new Error('Malformed UTF-8 data');}},/**
		         * Converts a UTF-8 string to a word array.
		         *
		         * @param {string} utf8Str The UTF-8 string.
		         *
		         * @return {WordArray} The word array.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
		         */parse:function(utf8Str){return Latin1.parse(unescape(encodeURIComponent(utf8Str)));}};/**
		     * Abstract buffered block algorithm template.
		     *
		     * The property blockSize must be implemented in a concrete subtype.
		     *
		     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
		     */var BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm=Base.extend({/**
		         * Resets this block algorithm's data buffer to its initial state.
		         *
		         * @example
		         *
		         *     bufferedBlockAlgorithm.reset();
		         */reset:function(){// Initial values
this._data=new WordArray.init();this._nDataBytes=0;},/**
		         * Adds new data to this block algorithm's buffer.
		         *
		         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
		         *
		         * @example
		         *
		         *     bufferedBlockAlgorithm._append('data');
		         *     bufferedBlockAlgorithm._append(wordArray);
		         */_append:function(data){// Convert string to WordArray, else assume WordArray already
if(typeof data=='string'){data=Utf8.parse(data);}// Append
this._data.concat(data);this._nDataBytes+=data.sigBytes;},/**
		         * Processes available data blocks.
		         *
		         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
		         *
		         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
		         *
		         * @return {WordArray} The processed data.
		         *
		         * @example
		         *
		         *     var processedData = bufferedBlockAlgorithm._process();
		         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
		         */_process:function(doFlush){// Shortcuts
var data=this._data;var dataWords=data.words;var dataSigBytes=data.sigBytes;var blockSize=this.blockSize;var blockSizeBytes=blockSize*4;// Count blocks ready
var nBlocksReady=dataSigBytes/blockSizeBytes;if(doFlush){// Round up to include partial blocks
nBlocksReady=Math.ceil(nBlocksReady);}else{// Round down to include only full blocks,
// less the number of blocks that must remain in the buffer
nBlocksReady=Math.max((nBlocksReady|0)-this._minBufferSize,0);}// Count words ready
var nWordsReady=nBlocksReady*blockSize;// Count bytes ready
var nBytesReady=Math.min(nWordsReady*4,dataSigBytes);// Process blocks
if(nWordsReady){for(var offset=0;offset<nWordsReady;offset+=blockSize){// Perform concrete-algorithm logic
this._doProcessBlock(dataWords,offset);}// Remove processed words
var processedWords=dataWords.splice(0,nWordsReady);data.sigBytes-=nBytesReady;}// Return processed words
return new WordArray.init(processedWords,nBytesReady);},/**
		         * Creates a copy of this object.
		         *
		         * @return {Object} The clone.
		         *
		         * @example
		         *
		         *     var clone = bufferedBlockAlgorithm.clone();
		         */clone:function(){var clone=Base.clone.call(this);clone._data=this._data.clone();return clone;},_minBufferSize:0});/**
		     * Abstract hasher template.
		     *
		     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
		     */var Hasher=C_lib.Hasher=BufferedBlockAlgorithm.extend({/**
		         * Configuration options.
		         */cfg:Base.extend(),/**
		         * Initializes a newly created hasher.
		         *
		         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
		         *
		         * @example
		         *
		         *     var hasher = CryptoJS.algo.SHA256.create();
		         */init:function(cfg){// Apply config defaults
this.cfg=this.cfg.extend(cfg);// Set initial values
this.reset();},/**
		         * Resets this hasher to its initial state.
		         *
		         * @example
		         *
		         *     hasher.reset();
		         */reset:function(){// Reset data buffer
BufferedBlockAlgorithm.reset.call(this);// Perform concrete-hasher logic
this._doReset();},/**
		         * Updates this hasher with a message.
		         *
		         * @param {WordArray|string} messageUpdate The message to append.
		         *
		         * @return {Hasher} This hasher.
		         *
		         * @example
		         *
		         *     hasher.update('message');
		         *     hasher.update(wordArray);
		         */update:function(messageUpdate){// Append
this._append(messageUpdate);// Update the hash
this._process();// Chainable
return this;},/**
		         * Finalizes the hash computation.
		         * Note that the finalize operation is effectively a destructive, read-once operation.
		         *
		         * @param {WordArray|string} messageUpdate (Optional) A final message update.
		         *
		         * @return {WordArray} The hash.
		         *
		         * @example
		         *
		         *     var hash = hasher.finalize();
		         *     var hash = hasher.finalize('message');
		         *     var hash = hasher.finalize(wordArray);
		         */finalize:function(messageUpdate){// Final message update
if(messageUpdate){this._append(messageUpdate);}// Perform concrete-hasher logic
var hash=this._doFinalize();return hash;},blockSize:512/32,/**
		         * Creates a shortcut function to a hasher's object interface.
		         *
		         * @param {Hasher} hasher The hasher to create a helper for.
		         *
		         * @return {Function} The shortcut function.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
		         */_createHelper:function(hasher){return function(message,cfg){return new hasher.init(cfg).finalize(message);};},/**
		         * Creates a shortcut function to the HMAC's object interface.
		         *
		         * @param {Hasher} hasher The hasher to use in this HMAC helper.
		         *
		         * @return {Function} The shortcut function.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
		         */_createHmacHelper:function(hasher){return function(message,key){return new C_algo.HMAC.init(hasher,key).finalize(message);};}});/**
		     * Algorithm namespace.
		     */var C_algo=C.algo={};return C;}(Math);return CryptoJS;});/***/},/* 6 *//***/function(module,exports,__webpack_require__){;(function(root,factory){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var WordArray=C_lib.WordArray;var Hasher=C_lib.Hasher;var C_algo=C.algo;// Reusable object
var W=[];/**
		     * SHA-1 hash algorithm.
		     */var SHA1=C_algo.SHA1=Hasher.extend({_doReset:function(){this._hash=new WordArray.init([0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0]);},_doProcessBlock:function(M,offset){// Shortcut
var H=this._hash.words;// Working variables
var a=H[0];var b=H[1];var c=H[2];var d=H[3];var e=H[4];// Computation
for(var i=0;i<80;i++){if(i<16){W[i]=M[offset+i]|0;}else{var n=W[i-3]^W[i-8]^W[i-14]^W[i-16];W[i]=n<<1|n>>>31;}var t=(a<<5|a>>>27)+e+W[i];if(i<20){t+=(b&c|~b&d)+0x5a827999;}else if(i<40){t+=(b^c^d)+0x6ed9eba1;}else if(i<60){t+=(b&c|b&d|c&d)-0x70e44324;}else/* if (i < 80) */{t+=(b^c^d)-0x359d3e2a;}e=d;d=c;c=b<<30|b>>>2;b=a;a=t;}// Intermediate hash value
H[0]=H[0]+a|0;H[1]=H[1]+b|0;H[2]=H[2]+c|0;H[3]=H[3]+d|0;H[4]=H[4]+e|0;},_doFinalize:function(){// Shortcuts
var data=this._data;var dataWords=data.words;var nBitsTotal=this._nDataBytes*8;var nBitsLeft=data.sigBytes*8;// Add padding
dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;dataWords[(nBitsLeft+64>>>9<<4)+14]=Math.floor(nBitsTotal/0x100000000);dataWords[(nBitsLeft+64>>>9<<4)+15]=nBitsTotal;data.sigBytes=dataWords.length*4;// Hash final blocks
this._process();// Return final computed hash
return this._hash;},clone:function(){var clone=Hasher.clone.call(this);clone._hash=this._hash.clone();return clone;}});/**
		     * Shortcut function to the hasher's object interface.
		     *
		     * @param {WordArray|string} message The message to hash.
		     *
		     * @return {WordArray} The hash.
		     *
		     * @static
		     *
		     * @example
		     *
		     *     var hash = CryptoJS.SHA1('message');
		     *     var hash = CryptoJS.SHA1(wordArray);
		     */C.SHA1=Hasher._createHelper(SHA1);/**
		     * Shortcut function to the HMAC's object interface.
		     *
		     * @param {WordArray|string} message The message to hash.
		     * @param {WordArray|string} key The secret key.
		     *
		     * @return {WordArray} The HMAC.
		     *
		     * @static
		     *
		     * @example
		     *
		     *     var hmac = CryptoJS.HmacSHA1(message, key);
		     */C.HmacSHA1=Hasher._createHmacHelper(SHA1);})();return CryptoJS.SHA1;});/***/},/* 7 *//***/function(module,exports,__webpack_require__){;(function(root,factory){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var Base=C_lib.Base;var C_enc=C.enc;var Utf8=C_enc.Utf8;var C_algo=C.algo;/**
		     * HMAC algorithm.
		     */var HMAC=C_algo.HMAC=Base.extend({/**
		         * Initializes a newly created HMAC.
		         *
		         * @param {Hasher} hasher The hash algorithm to use.
		         * @param {WordArray|string} key The secret key.
		         *
		         * @example
		         *
		         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
		         */init:function(hasher,key){// Init hasher
hasher=this._hasher=new hasher.init();// Convert string to WordArray, else assume WordArray already
if(typeof key=='string'){key=Utf8.parse(key);}// Shortcuts
var hasherBlockSize=hasher.blockSize;var hasherBlockSizeBytes=hasherBlockSize*4;// Allow arbitrary length keys
if(key.sigBytes>hasherBlockSizeBytes){key=hasher.finalize(key);}// Clamp excess bits
key.clamp();// Clone key for inner and outer pads
var oKey=this._oKey=key.clone();var iKey=this._iKey=key.clone();// Shortcuts
var oKeyWords=oKey.words;var iKeyWords=iKey.words;// XOR keys with pad constants
for(var i=0;i<hasherBlockSize;i++){oKeyWords[i]^=0x5c5c5c5c;iKeyWords[i]^=0x36363636;}oKey.sigBytes=iKey.sigBytes=hasherBlockSizeBytes;// Set initial values
this.reset();},/**
		         * Resets this HMAC to its initial state.
		         *
		         * @example
		         *
		         *     hmacHasher.reset();
		         */reset:function(){// Shortcut
var hasher=this._hasher;// Reset
hasher.reset();hasher.update(this._iKey);},/**
		         * Updates this HMAC with a message.
		         *
		         * @param {WordArray|string} messageUpdate The message to append.
		         *
		         * @return {HMAC} This HMAC instance.
		         *
		         * @example
		         *
		         *     hmacHasher.update('message');
		         *     hmacHasher.update(wordArray);
		         */update:function(messageUpdate){this._hasher.update(messageUpdate);// Chainable
return this;},/**
		         * Finalizes the HMAC computation.
		         * Note that the finalize operation is effectively a destructive, read-once operation.
		         *
		         * @param {WordArray|string} messageUpdate (Optional) A final message update.
		         *
		         * @return {WordArray} The HMAC.
		         *
		         * @example
		         *
		         *     var hmac = hmacHasher.finalize();
		         *     var hmac = hmacHasher.finalize('message');
		         *     var hmac = hmacHasher.finalize(wordArray);
		         */finalize:function(messageUpdate){// Shortcut
var hasher=this._hasher;// Compute HMAC
var innerHash=hasher.finalize(messageUpdate);hasher.reset();var hmac=hasher.finalize(this._oKey.clone().concat(innerHash));return hmac;}});})();});/***/},/* 8 *//***/function(module,exports){'use strict';/*
	 ES6 compatible port of CryptoJS - encoding
	
	 Source: https://github.com/brix/crypto-js
	 LICENSE: MIT
	 */var enc={};enc.Latin1={stringify:function stringify(wordArray){// Shortcuts
var words=wordArray.words;var sigBytes=wordArray.sigBytes;var latin1Chars=[],i=void 0,bite=void 0;// Convert
for(i=0;i<sigBytes;i++){bite=words[i>>>2]>>>24-i%4*8&0xff;latin1Chars.push(String.fromCharCode(bite));}return latin1Chars.join('');}};enc._Utf8={stringify:function stringify(wordArray){try{return decodeURIComponent(escape(enc.Latin1.stringify(wordArray)));}catch(e){throw new Error('Malformed UTF-8 data');}}};module.exports=enc;/***/},/* 9 *//***/function(module,exports){'use strict';var Base64={_keyStr:'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',encode:function encode(e){var t='';var n=void 0,r=void 0,i=void 0,s=void 0,o=void 0,u=void 0,a=void 0;var f=0;e=Base64._utf8Encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64;}else if(isNaN(i)){a=64;}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a);}return t;},decode:function decode(e){var t='';var n=void 0,r=void 0,i=void 0;var s=void 0,o=void 0,u=void 0,a=void 0;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,'');while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!==64){t=t+String.fromCharCode(r);}if(a!==64){t=t+String.fromCharCode(i);}}t=Base64._utf8Decode(t);return t;},_utf8Encode:function _utf8Encode(e){e=e.replace(/\r\n/g,'\n');var t='';for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128);}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128);}}return t;},_utf8Decode:function _utf8Decode(e){var t='';var n=0;var r=void 0,c2=void 0,c3=void 0;r=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++;}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2;}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3;}}return t;}};module.exports=Base64;/***/},/* 10 *//***/function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
// This work is free. You can redistribute it and/or modify it
// under the terms of the WTFPL, Version 2
// For more information see LICENSE.txt or http://www.wtfpl.net/
//
// For more information, the home page:
// http://pieroxy.net/blog/pages/lz-string/testing.html
//
// LZ-based compression algorithm, version 1.4.4
var LZString=function(){// private property
var f=String.fromCharCode;var keyStrBase64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var keyStrUriSafe="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";var baseReverseDic={};function getBaseValue(alphabet,character){if(!baseReverseDic[alphabet]){baseReverseDic[alphabet]={};for(var i=0;i<alphabet.length;i++){baseReverseDic[alphabet][alphabet.charAt(i)]=i;}}return baseReverseDic[alphabet][character];}var LZString={compressToBase64:function(input){if(input==null)return"";var res=LZString._compress(input,6,function(a){return keyStrBase64.charAt(a);});switch(res.length%4){// To produce valid Base64
default:// When could this happen ?
case 0:return res;case 1:return res+"===";case 2:return res+"==";case 3:return res+"=";}},decompressFromBase64:function(input){if(input==null)return"";if(input=="")return null;return LZString._decompress(input.length,32,function(index){return getBaseValue(keyStrBase64,input.charAt(index));});},compressToUTF16:function(input){if(input==null)return"";return LZString._compress(input,15,function(a){return f(a+32);})+" ";},decompressFromUTF16:function(compressed){if(compressed==null)return"";if(compressed=="")return null;return LZString._decompress(compressed.length,16384,function(index){return compressed.charCodeAt(index)-32;});},//compress into uint8array (UCS-2 big endian format)
compressToUint8Array:function(uncompressed){var compressed=LZString.compress(uncompressed);var buf=new Uint8Array(compressed.length*2);// 2 bytes per character
for(var i=0,TotalLen=compressed.length;i<TotalLen;i++){var current_value=compressed.charCodeAt(i);buf[i*2]=current_value>>>8;buf[i*2+1]=current_value%256;}return buf;},//decompress from uint8array (UCS-2 big endian format)
decompressFromUint8Array:function(compressed){if(compressed===null||compressed===undefined){return LZString.decompress(compressed);}else{var buf=new Array(compressed.length/2);// 2 bytes per character
for(var i=0,TotalLen=buf.length;i<TotalLen;i++){buf[i]=compressed[i*2]*256+compressed[i*2+1];}var result=[];buf.forEach(function(c){result.push(f(c));});return LZString.decompress(result.join(''));}},//compress into a string that is already URI encoded
compressToEncodedURIComponent:function(input){if(input==null)return"";return LZString._compress(input,6,function(a){return keyStrUriSafe.charAt(a);});},//decompress from an output of compressToEncodedURIComponent
decompressFromEncodedURIComponent:function(input){if(input==null)return"";if(input=="")return null;input=input.replace(/ /g,"+");return LZString._decompress(input.length,32,function(index){return getBaseValue(keyStrUriSafe,input.charAt(index));});},compress:function(uncompressed){return LZString._compress(uncompressed,16,function(a){return f(a);});},_compress:function(uncompressed,bitsPerChar,getCharFromInt){if(uncompressed==null)return"";var i,value,context_dictionary={},context_dictionaryToCreate={},context_c="",context_wc="",context_w="",context_enlargeIn=2,// Compensate for the first entry which should not count
context_dictSize=3,context_numBits=2,context_data=[],context_data_val=0,context_data_position=0,ii;for(ii=0;ii<uncompressed.length;ii+=1){context_c=uncompressed.charAt(ii);if(!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)){context_dictionary[context_c]=context_dictSize++;context_dictionaryToCreate[context_c]=true;}context_wc=context_w+context_c;if(Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)){context_w=context_wc;}else{if(Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)){if(context_w.charCodeAt(0)<256){for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}}value=context_w.charCodeAt(0);for(i=0;i<8;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}}else{value=1;for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1|value;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=0;}value=context_w.charCodeAt(0);for(i=0;i<16;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}}context_enlargeIn--;if(context_enlargeIn==0){context_enlargeIn=Math.pow(2,context_numBits);context_numBits++;}delete context_dictionaryToCreate[context_w];}else{value=context_dictionary[context_w];for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}}context_enlargeIn--;if(context_enlargeIn==0){context_enlargeIn=Math.pow(2,context_numBits);context_numBits++;}// Add wc to the dictionary.
context_dictionary[context_wc]=context_dictSize++;context_w=String(context_c);}}// Output the code for w.
if(context_w!==""){if(Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)){if(context_w.charCodeAt(0)<256){for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}}value=context_w.charCodeAt(0);for(i=0;i<8;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}}else{value=1;for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1|value;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=0;}value=context_w.charCodeAt(0);for(i=0;i<16;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}}context_enlargeIn--;if(context_enlargeIn==0){context_enlargeIn=Math.pow(2,context_numBits);context_numBits++;}delete context_dictionaryToCreate[context_w];}else{value=context_dictionary[context_w];for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}}context_enlargeIn--;if(context_enlargeIn==0){context_enlargeIn=Math.pow(2,context_numBits);context_numBits++;}}// Mark the end of the stream
value=2;for(i=0;i<context_numBits;i++){context_data_val=context_data_val<<1|value&1;if(context_data_position==bitsPerChar-1){context_data_position=0;context_data.push(getCharFromInt(context_data_val));context_data_val=0;}else{context_data_position++;}value=value>>1;}// Flush the last char
while(true){context_data_val=context_data_val<<1;if(context_data_position==bitsPerChar-1){context_data.push(getCharFromInt(context_data_val));break;}else context_data_position++;}return context_data.join('');},decompress:function(compressed){if(compressed==null)return"";if(compressed=="")return null;return LZString._decompress(compressed.length,32768,function(index){return compressed.charCodeAt(index);});},_decompress:function(length,resetValue,getNextValue){var dictionary=[],next,enlargeIn=4,dictSize=4,numBits=3,entry="",result=[],i,w,bits,resb,maxpower,power,c,data={val:getNextValue(0),position:resetValue,index:1};for(i=0;i<3;i+=1){dictionary[i]=i;}bits=0;maxpower=Math.pow(2,2);power=1;while(power!=maxpower){resb=data.val&data.position;data.position>>=1;if(data.position==0){data.position=resetValue;data.val=getNextValue(data.index++);}bits|=(resb>0?1:0)*power;power<<=1;}switch(next=bits){case 0:bits=0;maxpower=Math.pow(2,8);power=1;while(power!=maxpower){resb=data.val&data.position;data.position>>=1;if(data.position==0){data.position=resetValue;data.val=getNextValue(data.index++);}bits|=(resb>0?1:0)*power;power<<=1;}c=f(bits);break;case 1:bits=0;maxpower=Math.pow(2,16);power=1;while(power!=maxpower){resb=data.val&data.position;data.position>>=1;if(data.position==0){data.position=resetValue;data.val=getNextValue(data.index++);}bits|=(resb>0?1:0)*power;power<<=1;}c=f(bits);break;case 2:return"";}dictionary[3]=c;w=c;result.push(c);while(true){if(data.index>length){return"";}bits=0;maxpower=Math.pow(2,numBits);power=1;while(power!=maxpower){resb=data.val&data.position;data.position>>=1;if(data.position==0){data.position=resetValue;data.val=getNextValue(data.index++);}bits|=(resb>0?1:0)*power;power<<=1;}switch(c=bits){case 0:bits=0;maxpower=Math.pow(2,8);power=1;while(power!=maxpower){resb=data.val&data.position;data.position>>=1;if(data.position==0){data.position=resetValue;data.val=getNextValue(data.index++);}bits|=(resb>0?1:0)*power;power<<=1;}dictionary[dictSize++]=f(bits);c=dictSize-1;enlargeIn--;break;case 1:bits=0;maxpower=Math.pow(2,16);power=1;while(power!=maxpower){resb=data.val&data.position;data.position>>=1;if(data.position==0){data.position=resetValue;data.val=getNextValue(data.index++);}bits|=(resb>0?1:0)*power;power<<=1;}dictionary[dictSize++]=f(bits);c=dictSize-1;enlargeIn--;break;case 2:return result.join('');}if(enlargeIn==0){enlargeIn=Math.pow(2,numBits);numBits++;}if(dictionary[c]){entry=dictionary[c];}else{if(c===dictSize){entry=w+w.charAt(0);}else{return null;}}result.push(entry);// Add w+entry[0] to the dictionary.
dictionary[dictSize++]=w+entry.charAt(0);enlargeIn--;w=entry;if(enlargeIn==0){enlargeIn=Math.pow(2,numBits);numBits++;}}}};return LZString;}();if(true){!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return LZString;}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof module!=='undefined'&&module!=null){module.exports=LZString;}/***/},/* 11 *//***/function(module,exports,__webpack_require__){;(function(root,factory,undef){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5),__webpack_require__(12),__webpack_require__(13),__webpack_require__(14),__webpack_require__(15));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var BlockCipher=C_lib.BlockCipher;var C_algo=C.algo;// Lookup tables
var SBOX=[];var INV_SBOX=[];var SUB_MIX_0=[];var SUB_MIX_1=[];var SUB_MIX_2=[];var SUB_MIX_3=[];var INV_SUB_MIX_0=[];var INV_SUB_MIX_1=[];var INV_SUB_MIX_2=[];var INV_SUB_MIX_3=[];// Compute lookup tables
(function(){// Compute double table
var d=[];for(var i=0;i<256;i++){if(i<128){d[i]=i<<1;}else{d[i]=i<<1^0x11b;}}// Walk GF(2^8)
var x=0;var xi=0;for(var i=0;i<256;i++){// Compute sbox
var sx=xi^xi<<1^xi<<2^xi<<3^xi<<4;sx=sx>>>8^sx&0xff^0x63;SBOX[x]=sx;INV_SBOX[sx]=x;// Compute multiplication
var x2=d[x];var x4=d[x2];var x8=d[x4];// Compute sub bytes, mix columns tables
var t=d[sx]*0x101^sx*0x1010100;SUB_MIX_0[x]=t<<24|t>>>8;SUB_MIX_1[x]=t<<16|t>>>16;SUB_MIX_2[x]=t<<8|t>>>24;SUB_MIX_3[x]=t;// Compute inv sub bytes, inv mix columns tables
var t=x8*0x1010101^x4*0x10001^x2*0x101^x*0x1010100;INV_SUB_MIX_0[sx]=t<<24|t>>>8;INV_SUB_MIX_1[sx]=t<<16|t>>>16;INV_SUB_MIX_2[sx]=t<<8|t>>>24;INV_SUB_MIX_3[sx]=t;// Compute next counter
if(!x){x=xi=1;}else{x=x2^d[d[d[x8^x2]]];xi^=d[d[xi]];}}})();// Precomputed Rcon lookup
var RCON=[0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36];/**
		     * AES block cipher algorithm.
		     */var AES=C_algo.AES=BlockCipher.extend({_doReset:function(){// Skip reset of nRounds has been set before and key did not change
if(this._nRounds&&this._keyPriorReset===this._key){return;}// Shortcuts
var key=this._keyPriorReset=this._key;var keyWords=key.words;var keySize=key.sigBytes/4;// Compute number of rounds
var nRounds=this._nRounds=keySize+6;// Compute number of key schedule rows
var ksRows=(nRounds+1)*4;// Compute key schedule
var keySchedule=this._keySchedule=[];for(var ksRow=0;ksRow<ksRows;ksRow++){if(ksRow<keySize){keySchedule[ksRow]=keyWords[ksRow];}else{var t=keySchedule[ksRow-1];if(!(ksRow%keySize)){// Rot word
t=t<<8|t>>>24;// Sub word
t=SBOX[t>>>24]<<24|SBOX[t>>>16&0xff]<<16|SBOX[t>>>8&0xff]<<8|SBOX[t&0xff];// Mix Rcon
t^=RCON[ksRow/keySize|0]<<24;}else if(keySize>6&&ksRow%keySize==4){// Sub word
t=SBOX[t>>>24]<<24|SBOX[t>>>16&0xff]<<16|SBOX[t>>>8&0xff]<<8|SBOX[t&0xff];}keySchedule[ksRow]=keySchedule[ksRow-keySize]^t;}}// Compute inv key schedule
var invKeySchedule=this._invKeySchedule=[];for(var invKsRow=0;invKsRow<ksRows;invKsRow++){var ksRow=ksRows-invKsRow;if(invKsRow%4){var t=keySchedule[ksRow];}else{var t=keySchedule[ksRow-4];}if(invKsRow<4||ksRow<=4){invKeySchedule[invKsRow]=t;}else{invKeySchedule[invKsRow]=INV_SUB_MIX_0[SBOX[t>>>24]]^INV_SUB_MIX_1[SBOX[t>>>16&0xff]]^INV_SUB_MIX_2[SBOX[t>>>8&0xff]]^INV_SUB_MIX_3[SBOX[t&0xff]];}}},encryptBlock:function(M,offset){this._doCryptBlock(M,offset,this._keySchedule,SUB_MIX_0,SUB_MIX_1,SUB_MIX_2,SUB_MIX_3,SBOX);},decryptBlock:function(M,offset){// Swap 2nd and 4th rows
var t=M[offset+1];M[offset+1]=M[offset+3];M[offset+3]=t;this._doCryptBlock(M,offset,this._invKeySchedule,INV_SUB_MIX_0,INV_SUB_MIX_1,INV_SUB_MIX_2,INV_SUB_MIX_3,INV_SBOX);// Inv swap 2nd and 4th rows
var t=M[offset+1];M[offset+1]=M[offset+3];M[offset+3]=t;},_doCryptBlock:function(M,offset,keySchedule,SUB_MIX_0,SUB_MIX_1,SUB_MIX_2,SUB_MIX_3,SBOX){// Shortcut
var nRounds=this._nRounds;// Get input, add round key
var s0=M[offset]^keySchedule[0];var s1=M[offset+1]^keySchedule[1];var s2=M[offset+2]^keySchedule[2];var s3=M[offset+3]^keySchedule[3];// Key schedule row counter
var ksRow=4;// Rounds
for(var round=1;round<nRounds;round++){// Shift rows, sub bytes, mix columns, add round key
var t0=SUB_MIX_0[s0>>>24]^SUB_MIX_1[s1>>>16&0xff]^SUB_MIX_2[s2>>>8&0xff]^SUB_MIX_3[s3&0xff]^keySchedule[ksRow++];var t1=SUB_MIX_0[s1>>>24]^SUB_MIX_1[s2>>>16&0xff]^SUB_MIX_2[s3>>>8&0xff]^SUB_MIX_3[s0&0xff]^keySchedule[ksRow++];var t2=SUB_MIX_0[s2>>>24]^SUB_MIX_1[s3>>>16&0xff]^SUB_MIX_2[s0>>>8&0xff]^SUB_MIX_3[s1&0xff]^keySchedule[ksRow++];var t3=SUB_MIX_0[s3>>>24]^SUB_MIX_1[s0>>>16&0xff]^SUB_MIX_2[s1>>>8&0xff]^SUB_MIX_3[s2&0xff]^keySchedule[ksRow++];// Update state
s0=t0;s1=t1;s2=t2;s3=t3;}// Shift rows, sub bytes, add round key
var t0=(SBOX[s0>>>24]<<24|SBOX[s1>>>16&0xff]<<16|SBOX[s2>>>8&0xff]<<8|SBOX[s3&0xff])^keySchedule[ksRow++];var t1=(SBOX[s1>>>24]<<24|SBOX[s2>>>16&0xff]<<16|SBOX[s3>>>8&0xff]<<8|SBOX[s0&0xff])^keySchedule[ksRow++];var t2=(SBOX[s2>>>24]<<24|SBOX[s3>>>16&0xff]<<16|SBOX[s0>>>8&0xff]<<8|SBOX[s1&0xff])^keySchedule[ksRow++];var t3=(SBOX[s3>>>24]<<24|SBOX[s0>>>16&0xff]<<16|SBOX[s1>>>8&0xff]<<8|SBOX[s2&0xff])^keySchedule[ksRow++];// Set output
M[offset]=t0;M[offset+1]=t1;M[offset+2]=t2;M[offset+3]=t3;},keySize:256/32});/**
		     * Shortcut functions to the cipher's object interface.
		     *
		     * @example
		     *
		     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
		     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
		     */C.AES=BlockCipher._createHelper(AES);})();return CryptoJS.AES;});/***/},/* 12 *//***/function(module,exports,__webpack_require__){;(function(root,factory){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var WordArray=C_lib.WordArray;var C_enc=C.enc;/**
		     * Base64 encoding strategy.
		     */var Base64=C_enc.Base64={/**
		         * Converts a word array to a Base64 string.
		         *
		         * @param {WordArray} wordArray The word array.
		         *
		         * @return {string} The Base64 string.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
		         */stringify:function(wordArray){// Shortcuts
var words=wordArray.words;var sigBytes=wordArray.sigBytes;var map=this._map;// Clamp excess bits
wordArray.clamp();// Convert
var base64Chars=[];for(var i=0;i<sigBytes;i+=3){var byte1=words[i>>>2]>>>24-i%4*8&0xff;var byte2=words[i+1>>>2]>>>24-(i+1)%4*8&0xff;var byte3=words[i+2>>>2]>>>24-(i+2)%4*8&0xff;var triplet=byte1<<16|byte2<<8|byte3;for(var j=0;j<4&&i+j*0.75<sigBytes;j++){base64Chars.push(map.charAt(triplet>>>6*(3-j)&0x3f));}}// Add padding
var paddingChar=map.charAt(64);if(paddingChar){while(base64Chars.length%4){base64Chars.push(paddingChar);}}return base64Chars.join('');},/**
		         * Converts a Base64 string to a word array.
		         *
		         * @param {string} base64Str The Base64 string.
		         *
		         * @return {WordArray} The word array.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
		         */parse:function(base64Str){// Shortcuts
var base64StrLength=base64Str.length;var map=this._map;var reverseMap=this._reverseMap;if(!reverseMap){reverseMap=this._reverseMap=[];for(var j=0;j<map.length;j++){reverseMap[map.charCodeAt(j)]=j;}}// Ignore padding
var paddingChar=map.charAt(64);if(paddingChar){var paddingIndex=base64Str.indexOf(paddingChar);if(paddingIndex!==-1){base64StrLength=paddingIndex;}}// Convert
return parseLoop(base64Str,base64StrLength,reverseMap);},_map:'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='};function parseLoop(base64Str,base64StrLength,reverseMap){var words=[];var nBytes=0;for(var i=0;i<base64StrLength;i++){if(i%4){var bits1=reverseMap[base64Str.charCodeAt(i-1)]<<i%4*2;var bits2=reverseMap[base64Str.charCodeAt(i)]>>>6-i%4*2;words[nBytes>>>2]|=(bits1|bits2)<<24-nBytes%4*8;nBytes++;}}return WordArray.create(words,nBytes);}})();return CryptoJS.enc.Base64;});/***/},/* 13 *//***/function(module,exports,__webpack_require__){;(function(root,factory){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(Math){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var WordArray=C_lib.WordArray;var Hasher=C_lib.Hasher;var C_algo=C.algo;// Constants table
var T=[];// Compute constants
(function(){for(var i=0;i<64;i++){T[i]=Math.abs(Math.sin(i+1))*0x100000000|0;}})();/**
		     * MD5 hash algorithm.
		     */var MD5=C_algo.MD5=Hasher.extend({_doReset:function(){this._hash=new WordArray.init([0x67452301,0xefcdab89,0x98badcfe,0x10325476]);},_doProcessBlock:function(M,offset){// Swap endian
for(var i=0;i<16;i++){// Shortcuts
var offset_i=offset+i;var M_offset_i=M[offset_i];M[offset_i]=(M_offset_i<<8|M_offset_i>>>24)&0x00ff00ff|(M_offset_i<<24|M_offset_i>>>8)&0xff00ff00;}// Shortcuts
var H=this._hash.words;var M_offset_0=M[offset+0];var M_offset_1=M[offset+1];var M_offset_2=M[offset+2];var M_offset_3=M[offset+3];var M_offset_4=M[offset+4];var M_offset_5=M[offset+5];var M_offset_6=M[offset+6];var M_offset_7=M[offset+7];var M_offset_8=M[offset+8];var M_offset_9=M[offset+9];var M_offset_10=M[offset+10];var M_offset_11=M[offset+11];var M_offset_12=M[offset+12];var M_offset_13=M[offset+13];var M_offset_14=M[offset+14];var M_offset_15=M[offset+15];// Working varialbes
var a=H[0];var b=H[1];var c=H[2];var d=H[3];// Computation
a=FF(a,b,c,d,M_offset_0,7,T[0]);d=FF(d,a,b,c,M_offset_1,12,T[1]);c=FF(c,d,a,b,M_offset_2,17,T[2]);b=FF(b,c,d,a,M_offset_3,22,T[3]);a=FF(a,b,c,d,M_offset_4,7,T[4]);d=FF(d,a,b,c,M_offset_5,12,T[5]);c=FF(c,d,a,b,M_offset_6,17,T[6]);b=FF(b,c,d,a,M_offset_7,22,T[7]);a=FF(a,b,c,d,M_offset_8,7,T[8]);d=FF(d,a,b,c,M_offset_9,12,T[9]);c=FF(c,d,a,b,M_offset_10,17,T[10]);b=FF(b,c,d,a,M_offset_11,22,T[11]);a=FF(a,b,c,d,M_offset_12,7,T[12]);d=FF(d,a,b,c,M_offset_13,12,T[13]);c=FF(c,d,a,b,M_offset_14,17,T[14]);b=FF(b,c,d,a,M_offset_15,22,T[15]);a=GG(a,b,c,d,M_offset_1,5,T[16]);d=GG(d,a,b,c,M_offset_6,9,T[17]);c=GG(c,d,a,b,M_offset_11,14,T[18]);b=GG(b,c,d,a,M_offset_0,20,T[19]);a=GG(a,b,c,d,M_offset_5,5,T[20]);d=GG(d,a,b,c,M_offset_10,9,T[21]);c=GG(c,d,a,b,M_offset_15,14,T[22]);b=GG(b,c,d,a,M_offset_4,20,T[23]);a=GG(a,b,c,d,M_offset_9,5,T[24]);d=GG(d,a,b,c,M_offset_14,9,T[25]);c=GG(c,d,a,b,M_offset_3,14,T[26]);b=GG(b,c,d,a,M_offset_8,20,T[27]);a=GG(a,b,c,d,M_offset_13,5,T[28]);d=GG(d,a,b,c,M_offset_2,9,T[29]);c=GG(c,d,a,b,M_offset_7,14,T[30]);b=GG(b,c,d,a,M_offset_12,20,T[31]);a=HH(a,b,c,d,M_offset_5,4,T[32]);d=HH(d,a,b,c,M_offset_8,11,T[33]);c=HH(c,d,a,b,M_offset_11,16,T[34]);b=HH(b,c,d,a,M_offset_14,23,T[35]);a=HH(a,b,c,d,M_offset_1,4,T[36]);d=HH(d,a,b,c,M_offset_4,11,T[37]);c=HH(c,d,a,b,M_offset_7,16,T[38]);b=HH(b,c,d,a,M_offset_10,23,T[39]);a=HH(a,b,c,d,M_offset_13,4,T[40]);d=HH(d,a,b,c,M_offset_0,11,T[41]);c=HH(c,d,a,b,M_offset_3,16,T[42]);b=HH(b,c,d,a,M_offset_6,23,T[43]);a=HH(a,b,c,d,M_offset_9,4,T[44]);d=HH(d,a,b,c,M_offset_12,11,T[45]);c=HH(c,d,a,b,M_offset_15,16,T[46]);b=HH(b,c,d,a,M_offset_2,23,T[47]);a=II(a,b,c,d,M_offset_0,6,T[48]);d=II(d,a,b,c,M_offset_7,10,T[49]);c=II(c,d,a,b,M_offset_14,15,T[50]);b=II(b,c,d,a,M_offset_5,21,T[51]);a=II(a,b,c,d,M_offset_12,6,T[52]);d=II(d,a,b,c,M_offset_3,10,T[53]);c=II(c,d,a,b,M_offset_10,15,T[54]);b=II(b,c,d,a,M_offset_1,21,T[55]);a=II(a,b,c,d,M_offset_8,6,T[56]);d=II(d,a,b,c,M_offset_15,10,T[57]);c=II(c,d,a,b,M_offset_6,15,T[58]);b=II(b,c,d,a,M_offset_13,21,T[59]);a=II(a,b,c,d,M_offset_4,6,T[60]);d=II(d,a,b,c,M_offset_11,10,T[61]);c=II(c,d,a,b,M_offset_2,15,T[62]);b=II(b,c,d,a,M_offset_9,21,T[63]);// Intermediate hash value
H[0]=H[0]+a|0;H[1]=H[1]+b|0;H[2]=H[2]+c|0;H[3]=H[3]+d|0;},_doFinalize:function(){// Shortcuts
var data=this._data;var dataWords=data.words;var nBitsTotal=this._nDataBytes*8;var nBitsLeft=data.sigBytes*8;// Add padding
dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;var nBitsTotalH=Math.floor(nBitsTotal/0x100000000);var nBitsTotalL=nBitsTotal;dataWords[(nBitsLeft+64>>>9<<4)+15]=(nBitsTotalH<<8|nBitsTotalH>>>24)&0x00ff00ff|(nBitsTotalH<<24|nBitsTotalH>>>8)&0xff00ff00;dataWords[(nBitsLeft+64>>>9<<4)+14]=(nBitsTotalL<<8|nBitsTotalL>>>24)&0x00ff00ff|(nBitsTotalL<<24|nBitsTotalL>>>8)&0xff00ff00;data.sigBytes=(dataWords.length+1)*4;// Hash final blocks
this._process();// Shortcuts
var hash=this._hash;var H=hash.words;// Swap endian
for(var i=0;i<4;i++){// Shortcut
var H_i=H[i];H[i]=(H_i<<8|H_i>>>24)&0x00ff00ff|(H_i<<24|H_i>>>8)&0xff00ff00;}// Return final computed hash
return hash;},clone:function(){var clone=Hasher.clone.call(this);clone._hash=this._hash.clone();return clone;}});function FF(a,b,c,d,x,s,t){var n=a+(b&c|~b&d)+x+t;return(n<<s|n>>>32-s)+b;}function GG(a,b,c,d,x,s,t){var n=a+(b&d|c&~d)+x+t;return(n<<s|n>>>32-s)+b;}function HH(a,b,c,d,x,s,t){var n=a+(b^c^d)+x+t;return(n<<s|n>>>32-s)+b;}function II(a,b,c,d,x,s,t){var n=a+(c^(b|~d))+x+t;return(n<<s|n>>>32-s)+b;}/**
		     * Shortcut function to the hasher's object interface.
		     *
		     * @param {WordArray|string} message The message to hash.
		     *
		     * @return {WordArray} The hash.
		     *
		     * @static
		     *
		     * @example
		     *
		     *     var hash = CryptoJS.MD5('message');
		     *     var hash = CryptoJS.MD5(wordArray);
		     */C.MD5=Hasher._createHelper(MD5);/**
		     * Shortcut function to the HMAC's object interface.
		     *
		     * @param {WordArray|string} message The message to hash.
		     * @param {WordArray|string} key The secret key.
		     *
		     * @return {WordArray} The HMAC.
		     *
		     * @static
		     *
		     * @example
		     *
		     *     var hmac = CryptoJS.HmacMD5(message, key);
		     */C.HmacMD5=Hasher._createHmacHelper(MD5);})(Math);return CryptoJS.MD5;});/***/},/* 14 *//***/function(module,exports,__webpack_require__){;(function(root,factory,undef){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5),__webpack_require__(6),__webpack_require__(7));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core","./sha1","./hmac"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var Base=C_lib.Base;var WordArray=C_lib.WordArray;var C_algo=C.algo;var MD5=C_algo.MD5;/**
		     * This key derivation function is meant to conform with EVP_BytesToKey.
		     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
		     */var EvpKDF=C_algo.EvpKDF=Base.extend({/**
		         * Configuration options.
		         *
		         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
		         * @property {Hasher} hasher The hash algorithm to use. Default: MD5
		         * @property {number} iterations The number of iterations to perform. Default: 1
		         */cfg:Base.extend({keySize:128/32,hasher:MD5,iterations:1}),/**
		         * Initializes a newly created key derivation function.
		         *
		         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
		         *
		         * @example
		         *
		         *     var kdf = CryptoJS.algo.EvpKDF.create();
		         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
		         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
		         */init:function(cfg){this.cfg=this.cfg.extend(cfg);},/**
		         * Derives a key from a password.
		         *
		         * @param {WordArray|string} password The password.
		         * @param {WordArray|string} salt A salt.
		         *
		         * @return {WordArray} The derived key.
		         *
		         * @example
		         *
		         *     var key = kdf.compute(password, salt);
		         */compute:function(password,salt){// Shortcut
var cfg=this.cfg;// Init hasher
var hasher=cfg.hasher.create();// Initial values
var derivedKey=WordArray.create();// Shortcuts
var derivedKeyWords=derivedKey.words;var keySize=cfg.keySize;var iterations=cfg.iterations;// Generate key
while(derivedKeyWords.length<keySize){if(block){hasher.update(block);}var block=hasher.update(password).finalize(salt);hasher.reset();// Iterations
for(var i=1;i<iterations;i++){block=hasher.finalize(block);hasher.reset();}derivedKey.concat(block);}derivedKey.sigBytes=keySize*4;return derivedKey;}});/**
		     * Derives a key from a password.
		     *
		     * @param {WordArray|string} password The password.
		     * @param {WordArray|string} salt A salt.
		     * @param {Object} cfg (Optional) The configuration options to use for this computation.
		     *
		     * @return {WordArray} The derived key.
		     *
		     * @static
		     *
		     * @example
		     *
		     *     var key = CryptoJS.EvpKDF(password, salt);
		     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
		     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
		     */C.EvpKDF=function(password,salt,cfg){return EvpKDF.create(cfg).compute(password,salt);};})();return CryptoJS.EvpKDF;});/***/},/* 15 *//***/function(module,exports,__webpack_require__){;(function(root,factory){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){/**
		 * Cipher core components.
		 */CryptoJS.lib.Cipher||function(undefined){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var Base=C_lib.Base;var WordArray=C_lib.WordArray;var BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm;var C_enc=C.enc;var Utf8=C_enc.Utf8;var Base64=C_enc.Base64;var C_algo=C.algo;var EvpKDF=C_algo.EvpKDF;/**
		     * Abstract base cipher template.
		     *
		     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
		     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
		     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
		     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
		     */var Cipher=C_lib.Cipher=BufferedBlockAlgorithm.extend({/**
		         * Configuration options.
		         *
		         * @property {WordArray} iv The IV to use for this operation.
		         */cfg:Base.extend(),/**
		         * Creates this cipher in encryption mode.
		         *
		         * @param {WordArray} key The key.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @return {Cipher} A cipher instance.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
		         */createEncryptor:function(key,cfg){return this.create(this._ENC_XFORM_MODE,key,cfg);},/**
		         * Creates this cipher in decryption mode.
		         *
		         * @param {WordArray} key The key.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @return {Cipher} A cipher instance.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
		         */createDecryptor:function(key,cfg){return this.create(this._DEC_XFORM_MODE,key,cfg);},/**
		         * Initializes a newly created cipher.
		         *
		         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
		         * @param {WordArray} key The key.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @example
		         *
		         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
		         */init:function(xformMode,key,cfg){// Apply config defaults
this.cfg=this.cfg.extend(cfg);// Store transform mode and key
this._xformMode=xformMode;this._key=key;// Set initial values
this.reset();},/**
		         * Resets this cipher to its initial state.
		         *
		         * @example
		         *
		         *     cipher.reset();
		         */reset:function(){// Reset data buffer
BufferedBlockAlgorithm.reset.call(this);// Perform concrete-cipher logic
this._doReset();},/**
		         * Adds data to be encrypted or decrypted.
		         *
		         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
		         *
		         * @return {WordArray} The data after processing.
		         *
		         * @example
		         *
		         *     var encrypted = cipher.process('data');
		         *     var encrypted = cipher.process(wordArray);
		         */process:function(dataUpdate){// Append
this._append(dataUpdate);// Process available blocks
return this._process();},/**
		         * Finalizes the encryption or decryption process.
		         * Note that the finalize operation is effectively a destructive, read-once operation.
		         *
		         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
		         *
		         * @return {WordArray} The data after final processing.
		         *
		         * @example
		         *
		         *     var encrypted = cipher.finalize();
		         *     var encrypted = cipher.finalize('data');
		         *     var encrypted = cipher.finalize(wordArray);
		         */finalize:function(dataUpdate){// Final data update
if(dataUpdate){this._append(dataUpdate);}// Perform concrete-cipher logic
var finalProcessedData=this._doFinalize();return finalProcessedData;},keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,/**
		         * Creates shortcut functions to a cipher's object interface.
		         *
		         * @param {Cipher} cipher The cipher to create a helper for.
		         *
		         * @return {Object} An object with encrypt and decrypt shortcut functions.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
		         */_createHelper:function(){function selectCipherStrategy(key){if(typeof key=='string'){return PasswordBasedCipher;}else{return SerializableCipher;}}return function(cipher){return{encrypt:function(message,key,cfg){return selectCipherStrategy(key).encrypt(cipher,message,key,cfg);},decrypt:function(ciphertext,key,cfg){return selectCipherStrategy(key).decrypt(cipher,ciphertext,key,cfg);}};};}()});/**
		     * Abstract base stream cipher template.
		     *
		     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
		     */var StreamCipher=C_lib.StreamCipher=Cipher.extend({_doFinalize:function(){// Process partial blocks
var finalProcessedBlocks=this._process(!!'flush');return finalProcessedBlocks;},blockSize:1});/**
		     * Mode namespace.
		     */var C_mode=C.mode={};/**
		     * Abstract base block cipher mode template.
		     */var BlockCipherMode=C_lib.BlockCipherMode=Base.extend({/**
		         * Creates this mode for encryption.
		         *
		         * @param {Cipher} cipher A block cipher instance.
		         * @param {Array} iv The IV words.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
		         */createEncryptor:function(cipher,iv){return this.Encryptor.create(cipher,iv);},/**
		         * Creates this mode for decryption.
		         *
		         * @param {Cipher} cipher A block cipher instance.
		         * @param {Array} iv The IV words.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
		         */createDecryptor:function(cipher,iv){return this.Decryptor.create(cipher,iv);},/**
		         * Initializes a newly created mode.
		         *
		         * @param {Cipher} cipher A block cipher instance.
		         * @param {Array} iv The IV words.
		         *
		         * @example
		         *
		         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
		         */init:function(cipher,iv){this._cipher=cipher;this._iv=iv;}});/**
		     * Cipher Block Chaining mode.
		     */var CBC=C_mode.CBC=function(){/**
		         * Abstract base CBC mode.
		         */var CBC=BlockCipherMode.extend();/**
		         * CBC encryptor.
		         */CBC.Encryptor=CBC.extend({/**
		             * Processes the data block at offset.
		             *
		             * @param {Array} words The data words to operate on.
		             * @param {number} offset The offset where the block starts.
		             *
		             * @example
		             *
		             *     mode.processBlock(data.words, offset);
		             */processBlock:function(words,offset){// Shortcuts
var cipher=this._cipher;var blockSize=cipher.blockSize;// XOR and encrypt
xorBlock.call(this,words,offset,blockSize);cipher.encryptBlock(words,offset);// Remember this block to use with next block
this._prevBlock=words.slice(offset,offset+blockSize);}});/**
		         * CBC decryptor.
		         */CBC.Decryptor=CBC.extend({/**
		             * Processes the data block at offset.
		             *
		             * @param {Array} words The data words to operate on.
		             * @param {number} offset The offset where the block starts.
		             *
		             * @example
		             *
		             *     mode.processBlock(data.words, offset);
		             */processBlock:function(words,offset){// Shortcuts
var cipher=this._cipher;var blockSize=cipher.blockSize;// Remember this block to use with next block
var thisBlock=words.slice(offset,offset+blockSize);// Decrypt and XOR
cipher.decryptBlock(words,offset);xorBlock.call(this,words,offset,blockSize);// This block becomes the previous block
this._prevBlock=thisBlock;}});function xorBlock(words,offset,blockSize){// Shortcut
var iv=this._iv;// Choose mixing block
if(iv){var block=iv;// Remove IV for subsequent blocks
this._iv=undefined;}else{var block=this._prevBlock;}// XOR blocks
for(var i=0;i<blockSize;i++){words[offset+i]^=block[i];}}return CBC;}();/**
		     * Padding namespace.
		     */var C_pad=C.pad={};/**
		     * PKCS #5/7 padding strategy.
		     */var Pkcs7=C_pad.Pkcs7={/**
		         * Pads data using the algorithm defined in PKCS #5/7.
		         *
		         * @param {WordArray} data The data to pad.
		         * @param {number} blockSize The multiple that the data should be padded to.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
		         */pad:function(data,blockSize){// Shortcut
var blockSizeBytes=blockSize*4;// Count padding bytes
var nPaddingBytes=blockSizeBytes-data.sigBytes%blockSizeBytes;// Create padding word
var paddingWord=nPaddingBytes<<24|nPaddingBytes<<16|nPaddingBytes<<8|nPaddingBytes;// Create padding
var paddingWords=[];for(var i=0;i<nPaddingBytes;i+=4){paddingWords.push(paddingWord);}var padding=WordArray.create(paddingWords,nPaddingBytes);// Add padding
data.concat(padding);},/**
		         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
		         *
		         * @param {WordArray} data The data to unpad.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
		         */unpad:function(data){// Get number of padding bytes from last byte
var nPaddingBytes=data.words[data.sigBytes-1>>>2]&0xff;// Remove padding
data.sigBytes-=nPaddingBytes;}};/**
		     * Abstract base block cipher template.
		     *
		     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
		     */var BlockCipher=C_lib.BlockCipher=Cipher.extend({/**
		         * Configuration options.
		         *
		         * @property {Mode} mode The block mode to use. Default: CBC
		         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
		         */cfg:Cipher.cfg.extend({mode:CBC,padding:Pkcs7}),reset:function(){// Reset cipher
Cipher.reset.call(this);// Shortcuts
var cfg=this.cfg;var iv=cfg.iv;var mode=cfg.mode;// Reset block mode
if(this._xformMode==this._ENC_XFORM_MODE){var modeCreator=mode.createEncryptor;}else/* if (this._xformMode == this._DEC_XFORM_MODE) */{var modeCreator=mode.createDecryptor;// Keep at least one block in the buffer for unpadding
this._minBufferSize=1;}this._mode=modeCreator.call(mode,this,iv&&iv.words);},_doProcessBlock:function(words,offset){this._mode.processBlock(words,offset);},_doFinalize:function(){// Shortcut
var padding=this.cfg.padding;// Finalize
if(this._xformMode==this._ENC_XFORM_MODE){// Pad data
padding.pad(this._data,this.blockSize);// Process final blocks
var finalProcessedBlocks=this._process(!!'flush');}else/* if (this._xformMode == this._DEC_XFORM_MODE) */{// Process final blocks
var finalProcessedBlocks=this._process(!!'flush');// Unpad data
padding.unpad(finalProcessedBlocks);}return finalProcessedBlocks;},blockSize:128/32});/**
		     * A collection of cipher parameters.
		     *
		     * @property {WordArray} ciphertext The raw ciphertext.
		     * @property {WordArray} key The key to this ciphertext.
		     * @property {WordArray} iv The IV used in the ciphering operation.
		     * @property {WordArray} salt The salt used with a key derivation function.
		     * @property {Cipher} algorithm The cipher algorithm.
		     * @property {Mode} mode The block mode used in the ciphering operation.
		     * @property {Padding} padding The padding scheme used in the ciphering operation.
		     * @property {number} blockSize The block size of the cipher.
		     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
		     */var CipherParams=C_lib.CipherParams=Base.extend({/**
		         * Initializes a newly created cipher params object.
		         *
		         * @param {Object} cipherParams An object with any of the possible cipher parameters.
		         *
		         * @example
		         *
		         *     var cipherParams = CryptoJS.lib.CipherParams.create({
		         *         ciphertext: ciphertextWordArray,
		         *         key: keyWordArray,
		         *         iv: ivWordArray,
		         *         salt: saltWordArray,
		         *         algorithm: CryptoJS.algo.AES,
		         *         mode: CryptoJS.mode.CBC,
		         *         padding: CryptoJS.pad.PKCS7,
		         *         blockSize: 4,
		         *         formatter: CryptoJS.format.OpenSSL
		         *     });
		         */init:function(cipherParams){this.mixIn(cipherParams);},/**
		         * Converts this cipher params object to a string.
		         *
		         * @param {Format} formatter (Optional) The formatting strategy to use.
		         *
		         * @return {string} The stringified cipher params.
		         *
		         * @throws Error If neither the formatter nor the default formatter is set.
		         *
		         * @example
		         *
		         *     var string = cipherParams + '';
		         *     var string = cipherParams.toString();
		         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
		         */toString:function(formatter){return(formatter||this.formatter).stringify(this);}});/**
		     * Format namespace.
		     */var C_format=C.format={};/**
		     * OpenSSL formatting strategy.
		     */var OpenSSLFormatter=C_format.OpenSSL={/**
		         * Converts a cipher params object to an OpenSSL-compatible string.
		         *
		         * @param {CipherParams} cipherParams The cipher params object.
		         *
		         * @return {string} The OpenSSL-compatible string.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
		         */stringify:function(cipherParams){// Shortcuts
var ciphertext=cipherParams.ciphertext;var salt=cipherParams.salt;// Format
if(salt){var wordArray=WordArray.create([0x53616c74,0x65645f5f]).concat(salt).concat(ciphertext);}else{var wordArray=ciphertext;}return wordArray.toString(Base64);},/**
		         * Converts an OpenSSL-compatible string to a cipher params object.
		         *
		         * @param {string} openSSLStr The OpenSSL-compatible string.
		         *
		         * @return {CipherParams} The cipher params object.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
		         */parse:function(openSSLStr){// Parse base64
var ciphertext=Base64.parse(openSSLStr);// Shortcut
var ciphertextWords=ciphertext.words;// Test for salt
if(ciphertextWords[0]==0x53616c74&&ciphertextWords[1]==0x65645f5f){// Extract salt
var salt=WordArray.create(ciphertextWords.slice(2,4));// Remove salt from ciphertext
ciphertextWords.splice(0,4);ciphertext.sigBytes-=16;}return CipherParams.create({ciphertext:ciphertext,salt:salt});}};/**
		     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
		     */var SerializableCipher=C_lib.SerializableCipher=Base.extend({/**
		         * Configuration options.
		         *
		         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
		         */cfg:Base.extend({format:OpenSSLFormatter}),/**
		         * Encrypts a message.
		         *
		         * @param {Cipher} cipher The cipher algorithm to use.
		         * @param {WordArray|string} message The message to encrypt.
		         * @param {WordArray} key The key.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @return {CipherParams} A cipher params object.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
		         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
		         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
		         */encrypt:function(cipher,message,key,cfg){// Apply config defaults
cfg=this.cfg.extend(cfg);// Encrypt
var encryptor=cipher.createEncryptor(key,cfg);var ciphertext=encryptor.finalize(message);// Shortcut
var cipherCfg=encryptor.cfg;// Create and return serializable cipher params
return CipherParams.create({ciphertext:ciphertext,key:key,iv:cipherCfg.iv,algorithm:cipher,mode:cipherCfg.mode,padding:cipherCfg.padding,blockSize:cipher.blockSize,formatter:cfg.format});},/**
		         * Decrypts serialized ciphertext.
		         *
		         * @param {Cipher} cipher The cipher algorithm to use.
		         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
		         * @param {WordArray} key The key.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @return {WordArray} The plaintext.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
		         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
		         */decrypt:function(cipher,ciphertext,key,cfg){// Apply config defaults
cfg=this.cfg.extend(cfg);// Convert string to CipherParams
ciphertext=this._parse(ciphertext,cfg.format);// Decrypt
var plaintext=cipher.createDecryptor(key,cfg).finalize(ciphertext.ciphertext);return plaintext;},/**
		         * Converts serialized ciphertext to CipherParams,
		         * else assumed CipherParams already and returns ciphertext unchanged.
		         *
		         * @param {CipherParams|string} ciphertext The ciphertext.
		         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
		         *
		         * @return {CipherParams} The unserialized ciphertext.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
		         */_parse:function(ciphertext,format){if(typeof ciphertext=='string'){return format.parse(ciphertext,this);}else{return ciphertext;}}});/**
		     * Key derivation function namespace.
		     */var C_kdf=C.kdf={};/**
		     * OpenSSL key derivation function.
		     */var OpenSSLKdf=C_kdf.OpenSSL={/**
		         * Derives a key and IV from a password.
		         *
		         * @param {string} password The password to derive from.
		         * @param {number} keySize The size in words of the key to generate.
		         * @param {number} ivSize The size in words of the IV to generate.
		         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
		         *
		         * @return {CipherParams} A cipher params object with the key, IV, and salt.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
		         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
		         */execute:function(password,keySize,ivSize,salt){// Generate random salt
if(!salt){salt=WordArray.random(64/8);}// Derive key and IV
var key=EvpKDF.create({keySize:keySize+ivSize}).compute(password,salt);// Separate key and IV
var iv=WordArray.create(key.words.slice(keySize),ivSize*4);key.sigBytes=keySize*4;// Return params
return CipherParams.create({key:key,iv:iv,salt:salt});}};/**
		     * A serializable cipher wrapper that derives the key from a password,
		     * and returns ciphertext as a serializable cipher params object.
		     */var PasswordBasedCipher=C_lib.PasswordBasedCipher=SerializableCipher.extend({/**
		         * Configuration options.
		         *
		         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
		         */cfg:SerializableCipher.cfg.extend({kdf:OpenSSLKdf}),/**
		         * Encrypts a message using a password.
		         *
		         * @param {Cipher} cipher The cipher algorithm to use.
		         * @param {WordArray|string} message The message to encrypt.
		         * @param {string} password The password.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @return {CipherParams} A cipher params object.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
		         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
		         */encrypt:function(cipher,message,password,cfg){// Apply config defaults
cfg=this.cfg.extend(cfg);// Derive key and other params
var derivedParams=cfg.kdf.execute(password,cipher.keySize,cipher.ivSize);// Add IV to config
cfg.iv=derivedParams.iv;// Encrypt
var ciphertext=SerializableCipher.encrypt.call(this,cipher,message,derivedParams.key,cfg);// Mix in derived params
ciphertext.mixIn(derivedParams);return ciphertext;},/**
		         * Decrypts serialized ciphertext using a password.
		         *
		         * @param {Cipher} cipher The cipher algorithm to use.
		         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
		         * @param {string} password The password.
		         * @param {Object} cfg (Optional) The configuration options to use for this operation.
		         *
		         * @return {WordArray} The plaintext.
		         *
		         * @static
		         *
		         * @example
		         *
		         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
		         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
		         */decrypt:function(cipher,ciphertext,password,cfg){// Apply config defaults
cfg=this.cfg.extend(cfg);// Convert string to CipherParams
ciphertext=this._parse(ciphertext,cfg.format);// Derive key and other params
var derivedParams=cfg.kdf.execute(password,cipher.keySize,cipher.ivSize,ciphertext.salt);// Add IV to config
cfg.iv=derivedParams.iv;// Decrypt
var plaintext=SerializableCipher.decrypt.call(this,cipher,ciphertext,derivedParams.key,cfg);return plaintext;}});}();});/***/},/* 16 *//***/function(module,exports,__webpack_require__){;(function(root,factory,undef){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5),__webpack_require__(12),__webpack_require__(13),__webpack_require__(14),__webpack_require__(15));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var WordArray=C_lib.WordArray;var BlockCipher=C_lib.BlockCipher;var C_algo=C.algo;// Permuted Choice 1 constants
var PC1=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4];// Permuted Choice 2 constants
var PC2=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32];// Cumulative bit shift constants
var BIT_SHIFTS=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28];// SBOXes and round permutation constants
var SBOX_P=[{0x0:0x808200,0x10000000:0x8000,0x20000000:0x808002,0x30000000:0x2,0x40000000:0x200,0x50000000:0x808202,0x60000000:0x800202,0x70000000:0x800000,0x80000000:0x202,0x90000000:0x800200,0xa0000000:0x8200,0xb0000000:0x808000,0xc0000000:0x8002,0xd0000000:0x800002,0xe0000000:0x0,0xf0000000:0x8202,0x8000000:0x0,0x18000000:0x808202,0x28000000:0x8202,0x38000000:0x8000,0x48000000:0x808200,0x58000000:0x200,0x68000000:0x808002,0x78000000:0x2,0x88000000:0x800200,0x98000000:0x8200,0xa8000000:0x808000,0xb8000000:0x800202,0xc8000000:0x800002,0xd8000000:0x8002,0xe8000000:0x202,0xf8000000:0x800000,0x1:0x8000,0x10000001:0x2,0x20000001:0x808200,0x30000001:0x800000,0x40000001:0x808002,0x50000001:0x8200,0x60000001:0x200,0x70000001:0x800202,0x80000001:0x808202,0x90000001:0x808000,0xa0000001:0x800002,0xb0000001:0x8202,0xc0000001:0x202,0xd0000001:0x800200,0xe0000001:0x8002,0xf0000001:0x0,0x8000001:0x808202,0x18000001:0x808000,0x28000001:0x800000,0x38000001:0x200,0x48000001:0x8000,0x58000001:0x800002,0x68000001:0x2,0x78000001:0x8202,0x88000001:0x8002,0x98000001:0x800202,0xa8000001:0x202,0xb8000001:0x808200,0xc8000001:0x800200,0xd8000001:0x0,0xe8000001:0x8200,0xf8000001:0x808002},{0x0:0x40084010,0x1000000:0x4000,0x2000000:0x80000,0x3000000:0x40080010,0x4000000:0x40000010,0x5000000:0x40084000,0x6000000:0x40004000,0x7000000:0x10,0x8000000:0x84000,0x9000000:0x40004010,0xa000000:0x40000000,0xb000000:0x84010,0xc000000:0x80010,0xd000000:0x0,0xe000000:0x4010,0xf000000:0x40080000,0x800000:0x40004000,0x1800000:0x84010,0x2800000:0x10,0x3800000:0x40004010,0x4800000:0x40084010,0x5800000:0x40000000,0x6800000:0x80000,0x7800000:0x40080010,0x8800000:0x80010,0x9800000:0x0,0xa800000:0x4000,0xb800000:0x40080000,0xc800000:0x40000010,0xd800000:0x84000,0xe800000:0x40084000,0xf800000:0x4010,0x10000000:0x0,0x11000000:0x40080010,0x12000000:0x40004010,0x13000000:0x40084000,0x14000000:0x40080000,0x15000000:0x10,0x16000000:0x84010,0x17000000:0x4000,0x18000000:0x4010,0x19000000:0x80000,0x1a000000:0x80010,0x1b000000:0x40000010,0x1c000000:0x84000,0x1d000000:0x40004000,0x1e000000:0x40000000,0x1f000000:0x40084010,0x10800000:0x84010,0x11800000:0x80000,0x12800000:0x40080000,0x13800000:0x4000,0x14800000:0x40004000,0x15800000:0x40084010,0x16800000:0x10,0x17800000:0x40000000,0x18800000:0x40084000,0x19800000:0x40000010,0x1a800000:0x40004010,0x1b800000:0x80010,0x1c800000:0x0,0x1d800000:0x4010,0x1e800000:0x40080010,0x1f800000:0x84000},{0x0:0x104,0x100000:0x0,0x200000:0x4000100,0x300000:0x10104,0x400000:0x10004,0x500000:0x4000004,0x600000:0x4010104,0x700000:0x4010000,0x800000:0x4000000,0x900000:0x4010100,0xa00000:0x10100,0xb00000:0x4010004,0xc00000:0x4000104,0xd00000:0x10000,0xe00000:0x4,0xf00000:0x100,0x80000:0x4010100,0x180000:0x4010004,0x280000:0x0,0x380000:0x4000100,0x480000:0x4000004,0x580000:0x10000,0x680000:0x10004,0x780000:0x104,0x880000:0x4,0x980000:0x100,0xa80000:0x4010000,0xb80000:0x10104,0xc80000:0x10100,0xd80000:0x4000104,0xe80000:0x4010104,0xf80000:0x4000000,0x1000000:0x4010100,0x1100000:0x10004,0x1200000:0x10000,0x1300000:0x4000100,0x1400000:0x100,0x1500000:0x4010104,0x1600000:0x4000004,0x1700000:0x0,0x1800000:0x4000104,0x1900000:0x4000000,0x1a00000:0x4,0x1b00000:0x10100,0x1c00000:0x4010000,0x1d00000:0x104,0x1e00000:0x10104,0x1f00000:0x4010004,0x1080000:0x4000000,0x1180000:0x104,0x1280000:0x4010100,0x1380000:0x0,0x1480000:0x10004,0x1580000:0x4000100,0x1680000:0x100,0x1780000:0x4010004,0x1880000:0x10000,0x1980000:0x4010104,0x1a80000:0x10104,0x1b80000:0x4000004,0x1c80000:0x4000104,0x1d80000:0x4010000,0x1e80000:0x4,0x1f80000:0x10100},{0x0:0x80401000,0x10000:0x80001040,0x20000:0x401040,0x30000:0x80400000,0x40000:0x0,0x50000:0x401000,0x60000:0x80000040,0x70000:0x400040,0x80000:0x80000000,0x90000:0x400000,0xa0000:0x40,0xb0000:0x80001000,0xc0000:0x80400040,0xd0000:0x1040,0xe0000:0x1000,0xf0000:0x80401040,0x8000:0x80001040,0x18000:0x40,0x28000:0x80400040,0x38000:0x80001000,0x48000:0x401000,0x58000:0x80401040,0x68000:0x0,0x78000:0x80400000,0x88000:0x1000,0x98000:0x80401000,0xa8000:0x400000,0xb8000:0x1040,0xc8000:0x80000000,0xd8000:0x400040,0xe8000:0x401040,0xf8000:0x80000040,0x100000:0x400040,0x110000:0x401000,0x120000:0x80000040,0x130000:0x0,0x140000:0x1040,0x150000:0x80400040,0x160000:0x80401000,0x170000:0x80001040,0x180000:0x80401040,0x190000:0x80000000,0x1a0000:0x80400000,0x1b0000:0x401040,0x1c0000:0x80001000,0x1d0000:0x400000,0x1e0000:0x40,0x1f0000:0x1000,0x108000:0x80400000,0x118000:0x80401040,0x128000:0x0,0x138000:0x401000,0x148000:0x400040,0x158000:0x80000000,0x168000:0x80001040,0x178000:0x40,0x188000:0x80000040,0x198000:0x1000,0x1a8000:0x80001000,0x1b8000:0x80400040,0x1c8000:0x1040,0x1d8000:0x80401000,0x1e8000:0x400000,0x1f8000:0x401040},{0x0:0x80,0x1000:0x1040000,0x2000:0x40000,0x3000:0x20000000,0x4000:0x20040080,0x5000:0x1000080,0x6000:0x21000080,0x7000:0x40080,0x8000:0x1000000,0x9000:0x20040000,0xa000:0x20000080,0xb000:0x21040080,0xc000:0x21040000,0xd000:0x0,0xe000:0x1040080,0xf000:0x21000000,0x800:0x1040080,0x1800:0x21000080,0x2800:0x80,0x3800:0x1040000,0x4800:0x40000,0x5800:0x20040080,0x6800:0x21040000,0x7800:0x20000000,0x8800:0x20040000,0x9800:0x0,0xa800:0x21040080,0xb800:0x1000080,0xc800:0x20000080,0xd800:0x21000000,0xe800:0x1000000,0xf800:0x40080,0x10000:0x40000,0x11000:0x80,0x12000:0x20000000,0x13000:0x21000080,0x14000:0x1000080,0x15000:0x21040000,0x16000:0x20040080,0x17000:0x1000000,0x18000:0x21040080,0x19000:0x21000000,0x1a000:0x1040000,0x1b000:0x20040000,0x1c000:0x40080,0x1d000:0x20000080,0x1e000:0x0,0x1f000:0x1040080,0x10800:0x21000080,0x11800:0x1000000,0x12800:0x1040000,0x13800:0x20040080,0x14800:0x20000000,0x15800:0x1040080,0x16800:0x80,0x17800:0x21040000,0x18800:0x40080,0x19800:0x21040080,0x1a800:0x0,0x1b800:0x21000000,0x1c800:0x1000080,0x1d800:0x40000,0x1e800:0x20040000,0x1f800:0x20000080},{0x0:0x10000008,0x100:0x2000,0x200:0x10200000,0x300:0x10202008,0x400:0x10002000,0x500:0x200000,0x600:0x200008,0x700:0x10000000,0x800:0x0,0x900:0x10002008,0xa00:0x202000,0xb00:0x8,0xc00:0x10200008,0xd00:0x202008,0xe00:0x2008,0xf00:0x10202000,0x80:0x10200000,0x180:0x10202008,0x280:0x8,0x380:0x200000,0x480:0x202008,0x580:0x10000008,0x680:0x10002000,0x780:0x2008,0x880:0x200008,0x980:0x2000,0xa80:0x10002008,0xb80:0x10200008,0xc80:0x0,0xd80:0x10202000,0xe80:0x202000,0xf80:0x10000000,0x1000:0x10002000,0x1100:0x10200008,0x1200:0x10202008,0x1300:0x2008,0x1400:0x200000,0x1500:0x10000000,0x1600:0x10000008,0x1700:0x202000,0x1800:0x202008,0x1900:0x0,0x1a00:0x8,0x1b00:0x10200000,0x1c00:0x2000,0x1d00:0x10002008,0x1e00:0x10202000,0x1f00:0x200008,0x1080:0x8,0x1180:0x202000,0x1280:0x200000,0x1380:0x10000008,0x1480:0x10002000,0x1580:0x2008,0x1680:0x10202008,0x1780:0x10200000,0x1880:0x10202000,0x1980:0x10200008,0x1a80:0x2000,0x1b80:0x202008,0x1c80:0x200008,0x1d80:0x0,0x1e80:0x10000000,0x1f80:0x10002008},{0x0:0x100000,0x10:0x2000401,0x20:0x400,0x30:0x100401,0x40:0x2100401,0x50:0x0,0x60:0x1,0x70:0x2100001,0x80:0x2000400,0x90:0x100001,0xa0:0x2000001,0xb0:0x2100400,0xc0:0x2100000,0xd0:0x401,0xe0:0x100400,0xf0:0x2000000,0x8:0x2100001,0x18:0x0,0x28:0x2000401,0x38:0x2100400,0x48:0x100000,0x58:0x2000001,0x68:0x2000000,0x78:0x401,0x88:0x100401,0x98:0x2000400,0xa8:0x2100000,0xb8:0x100001,0xc8:0x400,0xd8:0x2100401,0xe8:0x1,0xf8:0x100400,0x100:0x2000000,0x110:0x100000,0x120:0x2000401,0x130:0x2100001,0x140:0x100001,0x150:0x2000400,0x160:0x2100400,0x170:0x100401,0x180:0x401,0x190:0x2100401,0x1a0:0x100400,0x1b0:0x1,0x1c0:0x0,0x1d0:0x2100000,0x1e0:0x2000001,0x1f0:0x400,0x108:0x100400,0x118:0x2000401,0x128:0x2100001,0x138:0x1,0x148:0x2000000,0x158:0x100000,0x168:0x401,0x178:0x2100400,0x188:0x2000001,0x198:0x2100000,0x1a8:0x0,0x1b8:0x2100401,0x1c8:0x100401,0x1d8:0x400,0x1e8:0x2000400,0x1f8:0x100001},{0x0:0x8000820,0x1:0x20000,0x2:0x8000000,0x3:0x20,0x4:0x20020,0x5:0x8020820,0x6:0x8020800,0x7:0x800,0x8:0x8020000,0x9:0x8000800,0xa:0x20800,0xb:0x8020020,0xc:0x820,0xd:0x0,0xe:0x8000020,0xf:0x20820,0x80000000:0x800,0x80000001:0x8020820,0x80000002:0x8000820,0x80000003:0x8000000,0x80000004:0x8020000,0x80000005:0x20800,0x80000006:0x20820,0x80000007:0x20,0x80000008:0x8000020,0x80000009:0x820,0x8000000a:0x20020,0x8000000b:0x8020800,0x8000000c:0x0,0x8000000d:0x8020020,0x8000000e:0x8000800,0x8000000f:0x20000,0x10:0x20820,0x11:0x8020800,0x12:0x20,0x13:0x800,0x14:0x8000800,0x15:0x8000020,0x16:0x8020020,0x17:0x20000,0x18:0x0,0x19:0x20020,0x1a:0x8020000,0x1b:0x8000820,0x1c:0x8020820,0x1d:0x20800,0x1e:0x820,0x1f:0x8000000,0x80000010:0x20000,0x80000011:0x800,0x80000012:0x8020020,0x80000013:0x20820,0x80000014:0x20,0x80000015:0x8020000,0x80000016:0x8000000,0x80000017:0x8000820,0x80000018:0x8020820,0x80000019:0x8000020,0x8000001a:0x8000800,0x8000001b:0x0,0x8000001c:0x20800,0x8000001d:0x820,0x8000001e:0x20020,0x8000001f:0x8020800}];// Masks that select the SBOX input
var SBOX_MASK=[0xf8000001,0x1f800000,0x01f80000,0x001f8000,0x0001f800,0x00001f80,0x000001f8,0x8000001f];/**
		     * DES block cipher algorithm.
		     */var DES=C_algo.DES=BlockCipher.extend({_doReset:function(){// Shortcuts
var key=this._key;var keyWords=key.words;// Select 56 bits according to PC1
var keyBits=[];for(var i=0;i<56;i++){var keyBitPos=PC1[i]-1;keyBits[i]=keyWords[keyBitPos>>>5]>>>31-keyBitPos%32&1;}// Assemble 16 subkeys
var subKeys=this._subKeys=[];for(var nSubKey=0;nSubKey<16;nSubKey++){// Create subkey
var subKey=subKeys[nSubKey]=[];// Shortcut
var bitShift=BIT_SHIFTS[nSubKey];// Select 48 bits according to PC2
for(var i=0;i<24;i++){// Select from the left 28 key bits
subKey[i/6|0]|=keyBits[(PC2[i]-1+bitShift)%28]<<31-i%6;// Select from the right 28 key bits
subKey[4+(i/6|0)]|=keyBits[28+(PC2[i+24]-1+bitShift)%28]<<31-i%6;}// Since each subkey is applied to an expanded 32-bit input,
// the subkey can be broken into 8 values scaled to 32-bits,
// which allows the key to be used without expansion
subKey[0]=subKey[0]<<1|subKey[0]>>>31;for(var i=1;i<7;i++){subKey[i]=subKey[i]>>>(i-1)*4+3;}subKey[7]=subKey[7]<<5|subKey[7]>>>27;}// Compute inverse subkeys
var invSubKeys=this._invSubKeys=[];for(var i=0;i<16;i++){invSubKeys[i]=subKeys[15-i];}},encryptBlock:function(M,offset){this._doCryptBlock(M,offset,this._subKeys);},decryptBlock:function(M,offset){this._doCryptBlock(M,offset,this._invSubKeys);},_doCryptBlock:function(M,offset,subKeys){// Get input
this._lBlock=M[offset];this._rBlock=M[offset+1];// Initial permutation
exchangeLR.call(this,4,0x0f0f0f0f);exchangeLR.call(this,16,0x0000ffff);exchangeRL.call(this,2,0x33333333);exchangeRL.call(this,8,0x00ff00ff);exchangeLR.call(this,1,0x55555555);// Rounds
for(var round=0;round<16;round++){// Shortcuts
var subKey=subKeys[round];var lBlock=this._lBlock;var rBlock=this._rBlock;// Feistel function
var f=0;for(var i=0;i<8;i++){f|=SBOX_P[i][((rBlock^subKey[i])&SBOX_MASK[i])>>>0];}this._lBlock=rBlock;this._rBlock=lBlock^f;}// Undo swap from last round
var t=this._lBlock;this._lBlock=this._rBlock;this._rBlock=t;// Final permutation
exchangeLR.call(this,1,0x55555555);exchangeRL.call(this,8,0x00ff00ff);exchangeRL.call(this,2,0x33333333);exchangeLR.call(this,16,0x0000ffff);exchangeLR.call(this,4,0x0f0f0f0f);// Set output
M[offset]=this._lBlock;M[offset+1]=this._rBlock;},keySize:64/32,ivSize:64/32,blockSize:64/32});// Swap bits across the left and right words
function exchangeLR(offset,mask){var t=(this._lBlock>>>offset^this._rBlock)&mask;this._rBlock^=t;this._lBlock^=t<<offset;}function exchangeRL(offset,mask){var t=(this._rBlock>>>offset^this._lBlock)&mask;this._lBlock^=t;this._rBlock^=t<<offset;}/**
		     * Shortcut functions to the cipher's object interface.
		     *
		     * @example
		     *
		     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
		     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
		     */C.DES=BlockCipher._createHelper(DES);/**
		     * Triple-DES block cipher algorithm.
		     */var TripleDES=C_algo.TripleDES=BlockCipher.extend({_doReset:function(){// Shortcuts
var key=this._key;var keyWords=key.words;// Create DES instances
this._des1=DES.createEncryptor(WordArray.create(keyWords.slice(0,2)));this._des2=DES.createEncryptor(WordArray.create(keyWords.slice(2,4)));this._des3=DES.createEncryptor(WordArray.create(keyWords.slice(4,6)));},encryptBlock:function(M,offset){this._des1.encryptBlock(M,offset);this._des2.decryptBlock(M,offset);this._des3.encryptBlock(M,offset);},decryptBlock:function(M,offset){this._des3.decryptBlock(M,offset);this._des2.encryptBlock(M,offset);this._des1.decryptBlock(M,offset);},keySize:192/32,ivSize:64/32,blockSize:64/32});/**
		     * Shortcut functions to the cipher's object interface.
		     *
		     * @example
		     *
		     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
		     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
		     */C.TripleDES=BlockCipher._createHelper(TripleDES);})();return CryptoJS.TripleDES;});/***/},/* 17 *//***/function(module,exports,__webpack_require__){;(function(root,factory,undef){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5),__webpack_require__(12),__webpack_require__(13),__webpack_require__(14),__webpack_require__(15));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var StreamCipher=C_lib.StreamCipher;var C_algo=C.algo;// Reusable objects
var S=[];var C_=[];var G=[];/**
		     * Rabbit stream cipher algorithm
		     */var Rabbit=C_algo.Rabbit=StreamCipher.extend({_doReset:function(){// Shortcuts
var K=this._key.words;var iv=this.cfg.iv;// Swap endian
for(var i=0;i<4;i++){K[i]=(K[i]<<8|K[i]>>>24)&0x00ff00ff|(K[i]<<24|K[i]>>>8)&0xff00ff00;}// Generate initial state values
var X=this._X=[K[0],K[3]<<16|K[2]>>>16,K[1],K[0]<<16|K[3]>>>16,K[2],K[1]<<16|K[0]>>>16,K[3],K[2]<<16|K[1]>>>16];// Generate initial counter values
var C=this._C=[K[2]<<16|K[2]>>>16,K[0]&0xffff0000|K[1]&0x0000ffff,K[3]<<16|K[3]>>>16,K[1]&0xffff0000|K[2]&0x0000ffff,K[0]<<16|K[0]>>>16,K[2]&0xffff0000|K[3]&0x0000ffff,K[1]<<16|K[1]>>>16,K[3]&0xffff0000|K[0]&0x0000ffff];// Carry bit
this._b=0;// Iterate the system four times
for(var i=0;i<4;i++){nextState.call(this);}// Modify the counters
for(var i=0;i<8;i++){C[i]^=X[i+4&7];}// IV setup
if(iv){// Shortcuts
var IV=iv.words;var IV_0=IV[0];var IV_1=IV[1];// Generate four subvectors
var i0=(IV_0<<8|IV_0>>>24)&0x00ff00ff|(IV_0<<24|IV_0>>>8)&0xff00ff00;var i2=(IV_1<<8|IV_1>>>24)&0x00ff00ff|(IV_1<<24|IV_1>>>8)&0xff00ff00;var i1=i0>>>16|i2&0xffff0000;var i3=i2<<16|i0&0x0000ffff;// Modify counter values
C[0]^=i0;C[1]^=i1;C[2]^=i2;C[3]^=i3;C[4]^=i0;C[5]^=i1;C[6]^=i2;C[7]^=i3;// Iterate the system four times
for(var i=0;i<4;i++){nextState.call(this);}}},_doProcessBlock:function(M,offset){// Shortcut
var X=this._X;// Iterate the system
nextState.call(this);// Generate four keystream words
S[0]=X[0]^X[5]>>>16^X[3]<<16;S[1]=X[2]^X[7]>>>16^X[5]<<16;S[2]=X[4]^X[1]>>>16^X[7]<<16;S[3]=X[6]^X[3]>>>16^X[1]<<16;for(var i=0;i<4;i++){// Swap endian
S[i]=(S[i]<<8|S[i]>>>24)&0x00ff00ff|(S[i]<<24|S[i]>>>8)&0xff00ff00;// Encrypt
M[offset+i]^=S[i];}},blockSize:128/32,ivSize:64/32});function nextState(){// Shortcuts
var X=this._X;var C=this._C;// Save old counter values
for(var i=0;i<8;i++){C_[i]=C[i];}// Calculate new counter values
C[0]=C[0]+0x4d34d34d+this._b|0;C[1]=C[1]+0xd34d34d3+(C[0]>>>0<C_[0]>>>0?1:0)|0;C[2]=C[2]+0x34d34d34+(C[1]>>>0<C_[1]>>>0?1:0)|0;C[3]=C[3]+0x4d34d34d+(C[2]>>>0<C_[2]>>>0?1:0)|0;C[4]=C[4]+0xd34d34d3+(C[3]>>>0<C_[3]>>>0?1:0)|0;C[5]=C[5]+0x34d34d34+(C[4]>>>0<C_[4]>>>0?1:0)|0;C[6]=C[6]+0x4d34d34d+(C[5]>>>0<C_[5]>>>0?1:0)|0;C[7]=C[7]+0xd34d34d3+(C[6]>>>0<C_[6]>>>0?1:0)|0;this._b=C[7]>>>0<C_[7]>>>0?1:0;// Calculate the g-values
for(var i=0;i<8;i++){var gx=X[i]+C[i];// Construct high and low argument for squaring
var ga=gx&0xffff;var gb=gx>>>16;// Calculate high and low result of squaring
var gh=((ga*ga>>>17)+ga*gb>>>15)+gb*gb;var gl=((gx&0xffff0000)*gx|0)+((gx&0x0000ffff)*gx|0);// High XOR low
G[i]=gh^gl;}// Calculate new state values
X[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0;X[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0;X[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0;X[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0;X[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0;X[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0;X[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0;X[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0;}/**
		     * Shortcut functions to the cipher's object interface.
		     *
		     * @example
		     *
		     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
		     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
		     */C.Rabbit=StreamCipher._createHelper(Rabbit);})();return CryptoJS.Rabbit;});/***/},/* 18 *//***/function(module,exports,__webpack_require__){;(function(root,factory,undef){if(true){// CommonJS
module.exports=exports=factory(__webpack_require__(5),__webpack_require__(12),__webpack_require__(13),__webpack_require__(14),__webpack_require__(15));}else if(typeof define==="function"&&define.amd){// AMD
define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else{// Global (browser)
factory(root.CryptoJS);}})(this,function(CryptoJS){(function(){// Shortcuts
var C=CryptoJS;var C_lib=C.lib;var StreamCipher=C_lib.StreamCipher;var C_algo=C.algo;/**
		     * RC4 stream cipher algorithm.
		     */var RC4=C_algo.RC4=StreamCipher.extend({_doReset:function(){// Shortcuts
var key=this._key;var keyWords=key.words;var keySigBytes=key.sigBytes;// Init sbox
var S=this._S=[];for(var i=0;i<256;i++){S[i]=i;}// Key setup
for(var i=0,j=0;i<256;i++){var keyByteIndex=i%keySigBytes;var keyByte=keyWords[keyByteIndex>>>2]>>>24-keyByteIndex%4*8&0xff;j=(j+S[i]+keyByte)%256;// Swap
var t=S[i];S[i]=S[j];S[j]=t;}// Counters
this._i=this._j=0;},_doProcessBlock:function(M,offset){M[offset]^=generateKeystreamWord.call(this);},keySize:256/32,ivSize:0});function generateKeystreamWord(){// Shortcuts
var S=this._S;var i=this._i;var j=this._j;// Generate keystream word
var keystreamWord=0;for(var n=0;n<4;n++){i=(i+1)%256;j=(j+S[i])%256;// Swap
var t=S[i];S[i]=S[j];S[j]=t;keystreamWord|=S[(S[i]+S[j])%256]<<24-n*8;}// Update counters
this._i=i;this._j=j;return keystreamWord;}/**
		     * Shortcut functions to the cipher's object interface.
		     *
		     * @example
		     *
		     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
		     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
		     */C.RC4=StreamCipher._createHelper(RC4);/**
		     * Modified RC4 stream cipher algorithm.
		     */var RC4Drop=C_algo.RC4Drop=RC4.extend({/**
		         * Configuration options.
		         *
		         * @property {number} drop The number of keystream words to drop. Default 192
		         */cfg:RC4.cfg.extend({drop:192}),_doReset:function(){RC4._doReset.call(this);// Drop
for(var i=this.cfg.drop;i>0;i--){generateKeystreamWord.call(this);}}});/**
		     * Shortcut functions to the cipher's object interface.
		     *
		     * @example
		     *
		     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
		     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
		     */C.RC4Drop=StreamCipher._createHelper(RC4Drop);})();return CryptoJS.RC4;});/***/}/******/]));});;},{}],257:[function(require,module,exports){var Buffer=require('safe-buffer').Buffer;// prototype class for hash functions
function Hash(blockSize,finalSize){this._block=Buffer.alloc(blockSize);this._finalSize=finalSize;this._blockSize=blockSize;this._len=0;}Hash.prototype.update=function(data,enc){if(typeof data==='string'){enc=enc||'utf8';data=Buffer.from(data,enc);}var block=this._block;var blockSize=this._blockSize;var length=data.length;var accum=this._len;for(var offset=0;offset<length;){var assigned=accum%blockSize;var remainder=Math.min(length-offset,blockSize-assigned);for(var i=0;i<remainder;i++){block[assigned+i]=data[offset+i];}accum+=remainder;offset+=remainder;if(accum%blockSize===0){this._update(block);}}this._len+=length;return this;};Hash.prototype.digest=function(enc){var rem=this._len%this._blockSize;this._block[rem]=0x80;// zero (rem + 1) trailing bits, where (rem + 1) is the smallest
// non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
this._block.fill(0,rem+1);if(rem>=this._finalSize){this._update(this._block);this._block.fill(0);}var bits=this._len*8;// uint32
if(bits<=0xffffffff){this._block.writeUInt32BE(bits,this._blockSize-4);// uint64
}else{var lowBits=(bits&0xffffffff)>>>0;var highBits=(bits-lowBits)/0x100000000;this._block.writeUInt32BE(highBits,this._blockSize-8);this._block.writeUInt32BE(lowBits,this._blockSize-4);}this._update(this._block);var hash=this._hash();return enc?hash.toString(enc):hash;};Hash.prototype._update=function(){throw new Error('_update must be implemented by subclass');};module.exports=Hash;},{"safe-buffer":254}],258:[function(require,module,exports){var exports=module.exports=function SHA(algorithm){algorithm=algorithm.toLowerCase();var Algorithm=exports[algorithm];if(!Algorithm)throw new Error(algorithm+' is not supported (we accept pull requests)');return new Algorithm();};exports.sha=require('./sha');exports.sha1=require('./sha1');exports.sha224=require('./sha224');exports.sha256=require('./sha256');exports.sha384=require('./sha384');exports.sha512=require('./sha512');},{"./sha":259,"./sha1":260,"./sha224":261,"./sha256":262,"./sha384":263,"./sha512":264}],259:[function(require,module,exports){/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */var inherits=require('inherits');var Hash=require('./hash');var Buffer=require('safe-buffer').Buffer;var K=[0x5a827999,0x6ed9eba1,0x8f1bbcdc|0,0xca62c1d6|0];var W=new Array(80);function Sha(){this.init();this._w=W;Hash.call(this,64,56);}inherits(Sha,Hash);Sha.prototype.init=function(){this._a=0x67452301;this._b=0xefcdab89;this._c=0x98badcfe;this._d=0x10325476;this._e=0xc3d2e1f0;return this;};function rotl5(num){return num<<5|num>>>27;}function rotl30(num){return num<<30|num>>>2;}function ft(s,b,c,d){if(s===0)return b&c|~b&d;if(s===2)return b&c|b&d|c&d;return b^c^d;}Sha.prototype._update=function(M){var W=this._w;var a=this._a|0;var b=this._b|0;var c=this._c|0;var d=this._d|0;var e=this._e|0;for(var i=0;i<16;++i)W[i]=M.readInt32BE(i*4);for(;i<80;++i)W[i]=W[i-3]^W[i-8]^W[i-14]^W[i-16];for(var j=0;j<80;++j){var s=~~(j/20);var t=rotl5(a)+ft(s,b,c,d)+e+W[j]+K[s]|0;e=d;d=c;c=rotl30(b);b=a;a=t;}this._a=a+this._a|0;this._b=b+this._b|0;this._c=c+this._c|0;this._d=d+this._d|0;this._e=e+this._e|0;};Sha.prototype._hash=function(){var H=Buffer.allocUnsafe(20);H.writeInt32BE(this._a|0,0);H.writeInt32BE(this._b|0,4);H.writeInt32BE(this._c|0,8);H.writeInt32BE(this._d|0,12);H.writeInt32BE(this._e|0,16);return H;};module.exports=Sha;},{"./hash":257,"inherits":223,"safe-buffer":254}],260:[function(require,module,exports){/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */var inherits=require('inherits');var Hash=require('./hash');var Buffer=require('safe-buffer').Buffer;var K=[0x5a827999,0x6ed9eba1,0x8f1bbcdc|0,0xca62c1d6|0];var W=new Array(80);function Sha1(){this.init();this._w=W;Hash.call(this,64,56);}inherits(Sha1,Hash);Sha1.prototype.init=function(){this._a=0x67452301;this._b=0xefcdab89;this._c=0x98badcfe;this._d=0x10325476;this._e=0xc3d2e1f0;return this;};function rotl1(num){return num<<1|num>>>31;}function rotl5(num){return num<<5|num>>>27;}function rotl30(num){return num<<30|num>>>2;}function ft(s,b,c,d){if(s===0)return b&c|~b&d;if(s===2)return b&c|b&d|c&d;return b^c^d;}Sha1.prototype._update=function(M){var W=this._w;var a=this._a|0;var b=this._b|0;var c=this._c|0;var d=this._d|0;var e=this._e|0;for(var i=0;i<16;++i)W[i]=M.readInt32BE(i*4);for(;i<80;++i)W[i]=rotl1(W[i-3]^W[i-8]^W[i-14]^W[i-16]);for(var j=0;j<80;++j){var s=~~(j/20);var t=rotl5(a)+ft(s,b,c,d)+e+W[j]+K[s]|0;e=d;d=c;c=rotl30(b);b=a;a=t;}this._a=a+this._a|0;this._b=b+this._b|0;this._c=c+this._c|0;this._d=d+this._d|0;this._e=e+this._e|0;};Sha1.prototype._hash=function(){var H=Buffer.allocUnsafe(20);H.writeInt32BE(this._a|0,0);H.writeInt32BE(this._b|0,4);H.writeInt32BE(this._c|0,8);H.writeInt32BE(this._d|0,12);H.writeInt32BE(this._e|0,16);return H;};module.exports=Sha1;},{"./hash":257,"inherits":223,"safe-buffer":254}],261:[function(require,module,exports){/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */var inherits=require('inherits');var Sha256=require('./sha256');var Hash=require('./hash');var Buffer=require('safe-buffer').Buffer;var W=new Array(64);function Sha224(){this.init();this._w=W;// new Array(64)
Hash.call(this,64,56);}inherits(Sha224,Sha256);Sha224.prototype.init=function(){this._a=0xc1059ed8;this._b=0x367cd507;this._c=0x3070dd17;this._d=0xf70e5939;this._e=0xffc00b31;this._f=0x68581511;this._g=0x64f98fa7;this._h=0xbefa4fa4;return this;};Sha224.prototype._hash=function(){var H=Buffer.allocUnsafe(28);H.writeInt32BE(this._a,0);H.writeInt32BE(this._b,4);H.writeInt32BE(this._c,8);H.writeInt32BE(this._d,12);H.writeInt32BE(this._e,16);H.writeInt32BE(this._f,20);H.writeInt32BE(this._g,24);return H;};module.exports=Sha224;},{"./hash":257,"./sha256":262,"inherits":223,"safe-buffer":254}],262:[function(require,module,exports){/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */var inherits=require('inherits');var Hash=require('./hash');var Buffer=require('safe-buffer').Buffer;var K=[0x428A2F98,0x71374491,0xB5C0FBCF,0xE9B5DBA5,0x3956C25B,0x59F111F1,0x923F82A4,0xAB1C5ED5,0xD807AA98,0x12835B01,0x243185BE,0x550C7DC3,0x72BE5D74,0x80DEB1FE,0x9BDC06A7,0xC19BF174,0xE49B69C1,0xEFBE4786,0x0FC19DC6,0x240CA1CC,0x2DE92C6F,0x4A7484AA,0x5CB0A9DC,0x76F988DA,0x983E5152,0xA831C66D,0xB00327C8,0xBF597FC7,0xC6E00BF3,0xD5A79147,0x06CA6351,0x14292967,0x27B70A85,0x2E1B2138,0x4D2C6DFC,0x53380D13,0x650A7354,0x766A0ABB,0x81C2C92E,0x92722C85,0xA2BFE8A1,0xA81A664B,0xC24B8B70,0xC76C51A3,0xD192E819,0xD6990624,0xF40E3585,0x106AA070,0x19A4C116,0x1E376C08,0x2748774C,0x34B0BCB5,0x391C0CB3,0x4ED8AA4A,0x5B9CCA4F,0x682E6FF3,0x748F82EE,0x78A5636F,0x84C87814,0x8CC70208,0x90BEFFFA,0xA4506CEB,0xBEF9A3F7,0xC67178F2];var W=new Array(64);function Sha256(){this.init();this._w=W;// new Array(64)
Hash.call(this,64,56);}inherits(Sha256,Hash);Sha256.prototype.init=function(){this._a=0x6a09e667;this._b=0xbb67ae85;this._c=0x3c6ef372;this._d=0xa54ff53a;this._e=0x510e527f;this._f=0x9b05688c;this._g=0x1f83d9ab;this._h=0x5be0cd19;return this;};function ch(x,y,z){return z^x&(y^z);}function maj(x,y,z){return x&y|z&(x|y);}function sigma0(x){return(x>>>2|x<<30)^(x>>>13|x<<19)^(x>>>22|x<<10);}function sigma1(x){return(x>>>6|x<<26)^(x>>>11|x<<21)^(x>>>25|x<<7);}function gamma0(x){return(x>>>7|x<<25)^(x>>>18|x<<14)^x>>>3;}function gamma1(x){return(x>>>17|x<<15)^(x>>>19|x<<13)^x>>>10;}Sha256.prototype._update=function(M){var W=this._w;var a=this._a|0;var b=this._b|0;var c=this._c|0;var d=this._d|0;var e=this._e|0;var f=this._f|0;var g=this._g|0;var h=this._h|0;for(var i=0;i<16;++i)W[i]=M.readInt32BE(i*4);for(;i<64;++i)W[i]=gamma1(W[i-2])+W[i-7]+gamma0(W[i-15])+W[i-16]|0;for(var j=0;j<64;++j){var T1=h+sigma1(e)+ch(e,f,g)+K[j]+W[j]|0;var T2=sigma0(a)+maj(a,b,c)|0;h=g;g=f;f=e;e=d+T1|0;d=c;c=b;b=a;a=T1+T2|0;}this._a=a+this._a|0;this._b=b+this._b|0;this._c=c+this._c|0;this._d=d+this._d|0;this._e=e+this._e|0;this._f=f+this._f|0;this._g=g+this._g|0;this._h=h+this._h|0;};Sha256.prototype._hash=function(){var H=Buffer.allocUnsafe(32);H.writeInt32BE(this._a,0);H.writeInt32BE(this._b,4);H.writeInt32BE(this._c,8);H.writeInt32BE(this._d,12);H.writeInt32BE(this._e,16);H.writeInt32BE(this._f,20);H.writeInt32BE(this._g,24);H.writeInt32BE(this._h,28);return H;};module.exports=Sha256;},{"./hash":257,"inherits":223,"safe-buffer":254}],263:[function(require,module,exports){var inherits=require('inherits');var SHA512=require('./sha512');var Hash=require('./hash');var Buffer=require('safe-buffer').Buffer;var W=new Array(160);function Sha384(){this.init();this._w=W;Hash.call(this,128,112);}inherits(Sha384,SHA512);Sha384.prototype.init=function(){this._ah=0xcbbb9d5d;this._bh=0x629a292a;this._ch=0x9159015a;this._dh=0x152fecd8;this._eh=0x67332667;this._fh=0x8eb44a87;this._gh=0xdb0c2e0d;this._hh=0x47b5481d;this._al=0xc1059ed8;this._bl=0x367cd507;this._cl=0x3070dd17;this._dl=0xf70e5939;this._el=0xffc00b31;this._fl=0x68581511;this._gl=0x64f98fa7;this._hl=0xbefa4fa4;return this;};Sha384.prototype._hash=function(){var H=Buffer.allocUnsafe(48);function writeInt64BE(h,l,offset){H.writeInt32BE(h,offset);H.writeInt32BE(l,offset+4);}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);return H;};module.exports=Sha384;},{"./hash":257,"./sha512":264,"inherits":223,"safe-buffer":254}],264:[function(require,module,exports){var inherits=require('inherits');var Hash=require('./hash');var Buffer=require('safe-buffer').Buffer;var K=[0x428a2f98,0xd728ae22,0x71374491,0x23ef65cd,0xb5c0fbcf,0xec4d3b2f,0xe9b5dba5,0x8189dbbc,0x3956c25b,0xf348b538,0x59f111f1,0xb605d019,0x923f82a4,0xaf194f9b,0xab1c5ed5,0xda6d8118,0xd807aa98,0xa3030242,0x12835b01,0x45706fbe,0x243185be,0x4ee4b28c,0x550c7dc3,0xd5ffb4e2,0x72be5d74,0xf27b896f,0x80deb1fe,0x3b1696b1,0x9bdc06a7,0x25c71235,0xc19bf174,0xcf692694,0xe49b69c1,0x9ef14ad2,0xefbe4786,0x384f25e3,0x0fc19dc6,0x8b8cd5b5,0x240ca1cc,0x77ac9c65,0x2de92c6f,0x592b0275,0x4a7484aa,0x6ea6e483,0x5cb0a9dc,0xbd41fbd4,0x76f988da,0x831153b5,0x983e5152,0xee66dfab,0xa831c66d,0x2db43210,0xb00327c8,0x98fb213f,0xbf597fc7,0xbeef0ee4,0xc6e00bf3,0x3da88fc2,0xd5a79147,0x930aa725,0x06ca6351,0xe003826f,0x14292967,0x0a0e6e70,0x27b70a85,0x46d22ffc,0x2e1b2138,0x5c26c926,0x4d2c6dfc,0x5ac42aed,0x53380d13,0x9d95b3df,0x650a7354,0x8baf63de,0x766a0abb,0x3c77b2a8,0x81c2c92e,0x47edaee6,0x92722c85,0x1482353b,0xa2bfe8a1,0x4cf10364,0xa81a664b,0xbc423001,0xc24b8b70,0xd0f89791,0xc76c51a3,0x0654be30,0xd192e819,0xd6ef5218,0xd6990624,0x5565a910,0xf40e3585,0x5771202a,0x106aa070,0x32bbd1b8,0x19a4c116,0xb8d2d0c8,0x1e376c08,0x5141ab53,0x2748774c,0xdf8eeb99,0x34b0bcb5,0xe19b48a8,0x391c0cb3,0xc5c95a63,0x4ed8aa4a,0xe3418acb,0x5b9cca4f,0x7763e373,0x682e6ff3,0xd6b2b8a3,0x748f82ee,0x5defb2fc,0x78a5636f,0x43172f60,0x84c87814,0xa1f0ab72,0x8cc70208,0x1a6439ec,0x90befffa,0x23631e28,0xa4506ceb,0xde82bde9,0xbef9a3f7,0xb2c67915,0xc67178f2,0xe372532b,0xca273ece,0xea26619c,0xd186b8c7,0x21c0c207,0xeada7dd6,0xcde0eb1e,0xf57d4f7f,0xee6ed178,0x06f067aa,0x72176fba,0x0a637dc5,0xa2c898a6,0x113f9804,0xbef90dae,0x1b710b35,0x131c471b,0x28db77f5,0x23047d84,0x32caab7b,0x40c72493,0x3c9ebe0a,0x15c9bebc,0x431d67c4,0x9c100d4c,0x4cc5d4be,0xcb3e42b6,0x597f299c,0xfc657e2a,0x5fcb6fab,0x3ad6faec,0x6c44198c,0x4a475817];var W=new Array(160);function Sha512(){this.init();this._w=W;Hash.call(this,128,112);}inherits(Sha512,Hash);Sha512.prototype.init=function(){this._ah=0x6a09e667;this._bh=0xbb67ae85;this._ch=0x3c6ef372;this._dh=0xa54ff53a;this._eh=0x510e527f;this._fh=0x9b05688c;this._gh=0x1f83d9ab;this._hh=0x5be0cd19;this._al=0xf3bcc908;this._bl=0x84caa73b;this._cl=0xfe94f82b;this._dl=0x5f1d36f1;this._el=0xade682d1;this._fl=0x2b3e6c1f;this._gl=0xfb41bd6b;this._hl=0x137e2179;return this;};function Ch(x,y,z){return z^x&(y^z);}function maj(x,y,z){return x&y|z&(x|y);}function sigma0(x,xl){return(x>>>28|xl<<4)^(xl>>>2|x<<30)^(xl>>>7|x<<25);}function sigma1(x,xl){return(x>>>14|xl<<18)^(x>>>18|xl<<14)^(xl>>>9|x<<23);}function Gamma0(x,xl){return(x>>>1|xl<<31)^(x>>>8|xl<<24)^x>>>7;}function Gamma0l(x,xl){return(x>>>1|xl<<31)^(x>>>8|xl<<24)^(x>>>7|xl<<25);}function Gamma1(x,xl){return(x>>>19|xl<<13)^(xl>>>29|x<<3)^x>>>6;}function Gamma1l(x,xl){return(x>>>19|xl<<13)^(xl>>>29|x<<3)^(x>>>6|xl<<26);}function getCarry(a,b){return a>>>0<b>>>0?1:0;}Sha512.prototype._update=function(M){var W=this._w;var ah=this._ah|0;var bh=this._bh|0;var ch=this._ch|0;var dh=this._dh|0;var eh=this._eh|0;var fh=this._fh|0;var gh=this._gh|0;var hh=this._hh|0;var al=this._al|0;var bl=this._bl|0;var cl=this._cl|0;var dl=this._dl|0;var el=this._el|0;var fl=this._fl|0;var gl=this._gl|0;var hl=this._hl|0;for(var i=0;i<32;i+=2){W[i]=M.readInt32BE(i*4);W[i+1]=M.readInt32BE(i*4+4);}for(;i<160;i+=2){var xh=W[i-15*2];var xl=W[i-15*2+1];var gamma0=Gamma0(xh,xl);var gamma0l=Gamma0l(xl,xh);xh=W[i-2*2];xl=W[i-2*2+1];var gamma1=Gamma1(xh,xl);var gamma1l=Gamma1l(xl,xh);// W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
var Wi7h=W[i-7*2];var Wi7l=W[i-7*2+1];var Wi16h=W[i-16*2];var Wi16l=W[i-16*2+1];var Wil=gamma0l+Wi7l|0;var Wih=gamma0+Wi7h+getCarry(Wil,gamma0l)|0;Wil=Wil+gamma1l|0;Wih=Wih+gamma1+getCarry(Wil,gamma1l)|0;Wil=Wil+Wi16l|0;Wih=Wih+Wi16h+getCarry(Wil,Wi16l)|0;W[i]=Wih;W[i+1]=Wil;}for(var j=0;j<160;j+=2){Wih=W[j];Wil=W[j+1];var majh=maj(ah,bh,ch);var majl=maj(al,bl,cl);var sigma0h=sigma0(ah,al);var sigma0l=sigma0(al,ah);var sigma1h=sigma1(eh,el);var sigma1l=sigma1(el,eh);// t1 = h + sigma1 + ch + K[j] + W[j]
var Kih=K[j];var Kil=K[j+1];var chh=Ch(eh,fh,gh);var chl=Ch(el,fl,gl);var t1l=hl+sigma1l|0;var t1h=hh+sigma1h+getCarry(t1l,hl)|0;t1l=t1l+chl|0;t1h=t1h+chh+getCarry(t1l,chl)|0;t1l=t1l+Kil|0;t1h=t1h+Kih+getCarry(t1l,Kil)|0;t1l=t1l+Wil|0;t1h=t1h+Wih+getCarry(t1l,Wil)|0;// t2 = sigma0 + maj
var t2l=sigma0l+majl|0;var t2h=sigma0h+majh+getCarry(t2l,sigma0l)|0;hh=gh;hl=gl;gh=fh;gl=fl;fh=eh;fl=el;el=dl+t1l|0;eh=dh+t1h+getCarry(el,dl)|0;dh=ch;dl=cl;ch=bh;cl=bl;bh=ah;bl=al;al=t1l+t2l|0;ah=t1h+t2h+getCarry(al,t1l)|0;}this._al=this._al+al|0;this._bl=this._bl+bl|0;this._cl=this._cl+cl|0;this._dl=this._dl+dl|0;this._el=this._el+el|0;this._fl=this._fl+fl|0;this._gl=this._gl+gl|0;this._hl=this._hl+hl|0;this._ah=this._ah+ah+getCarry(this._al,al)|0;this._bh=this._bh+bh+getCarry(this._bl,bl)|0;this._ch=this._ch+ch+getCarry(this._cl,cl)|0;this._dh=this._dh+dh+getCarry(this._dl,dl)|0;this._eh=this._eh+eh+getCarry(this._el,el)|0;this._fh=this._fh+fh+getCarry(this._fl,fl)|0;this._gh=this._gh+gh+getCarry(this._gl,gl)|0;this._hh=this._hh+hh+getCarry(this._hl,hl)|0;};Sha512.prototype._hash=function(){var H=Buffer.allocUnsafe(64);function writeInt64BE(h,l,offset){H.writeInt32BE(h,offset);H.writeInt32BE(l,offset+4);}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);writeInt64BE(this._gh,this._gl,48);writeInt64BE(this._hh,this._hl,56);return H;};module.exports=Sha512;},{"./hash":257,"inherits":223,"safe-buffer":254}],265:[function(require,module,exports){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
module.exports=Stream;var EE=require('events').EventEmitter;var inherits=require('inherits');inherits(Stream,EE);Stream.Readable=require('readable-stream/lib/_stream_readable.js');Stream.Writable=require('readable-stream/lib/_stream_writable.js');Stream.Duplex=require('readable-stream/lib/_stream_duplex.js');Stream.Transform=require('readable-stream/lib/_stream_transform.js');Stream.PassThrough=require('readable-stream/lib/_stream_passthrough.js');Stream.finished=require('readable-stream/lib/internal/streams/end-of-stream.js');Stream.pipeline=require('readable-stream/lib/internal/streams/pipeline.js');// Backwards-compat with node 0.4.x
Stream.Stream=Stream;// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.
function Stream(){EE.call(this);}Stream.prototype.pipe=function(dest,options){var source=this;function ondata(chunk){if(dest.writable){if(false===dest.write(chunk)&&source.pause){source.pause();}}}source.on('data',ondata);function ondrain(){if(source.readable&&source.resume){source.resume();}}dest.on('drain',ondrain);// If the 'end' option is not supplied, dest.end() will be called when
// source gets the 'end' or 'close' events.  Only dest.end() once.
if(!dest._isStdio&&(!options||options.end!==false)){source.on('end',onend);source.on('close',onclose);}var didOnEnd=false;function onend(){if(didOnEnd)return;didOnEnd=true;dest.end();}function onclose(){if(didOnEnd)return;didOnEnd=true;if(typeof dest.destroy==='function')dest.destroy();}// don't leave dangling pipes when there are errors.
function onerror(er){cleanup();if(EE.listenerCount(this,'error')===0){throw er;// Unhandled stream error in pipe.
}}source.on('error',onerror);dest.on('error',onerror);// remove all the event listeners that were added.
function cleanup(){source.removeListener('data',ondata);dest.removeListener('drain',ondrain);source.removeListener('end',onend);source.removeListener('close',onclose);source.removeListener('error',onerror);dest.removeListener('error',onerror);source.removeListener('end',cleanup);source.removeListener('close',cleanup);dest.removeListener('close',cleanup);}source.on('end',cleanup);source.on('close',cleanup);dest.on('close',cleanup);dest.emit('pipe',source);// Allow for unix-like usage: A.pipe(B).pipe(C)
return dest;};},{"events":190,"inherits":223,"readable-stream/lib/_stream_duplex.js":267,"readable-stream/lib/_stream_passthrough.js":268,"readable-stream/lib/_stream_readable.js":269,"readable-stream/lib/_stream_transform.js":270,"readable-stream/lib/_stream_writable.js":271,"readable-stream/lib/internal/streams/end-of-stream.js":275,"readable-stream/lib/internal/streams/pipeline.js":277}],266:[function(require,module,exports){arguments[4][124][0].apply(exports,arguments);},{"dup":124}],267:[function(require,module,exports){arguments[4][125][0].apply(exports,arguments);},{"./_stream_readable":269,"./_stream_writable":271,"_process":242,"dup":125,"inherits":223}],268:[function(require,module,exports){arguments[4][126][0].apply(exports,arguments);},{"./_stream_transform":270,"dup":126,"inherits":223}],269:[function(require,module,exports){arguments[4][127][0].apply(exports,arguments);},{"../errors":266,"./_stream_duplex":267,"./internal/streams/async_iterator":272,"./internal/streams/buffer_list":273,"./internal/streams/destroy":274,"./internal/streams/from":276,"./internal/streams/state":278,"./internal/streams/stream":279,"_process":242,"buffer":140,"dup":127,"events":190,"inherits":223,"string_decoder/":280,"util":96}],270:[function(require,module,exports){arguments[4][128][0].apply(exports,arguments);},{"../errors":266,"./_stream_duplex":267,"dup":128,"inherits":223}],271:[function(require,module,exports){arguments[4][129][0].apply(exports,arguments);},{"../errors":266,"./_stream_duplex":267,"./internal/streams/destroy":274,"./internal/streams/state":278,"./internal/streams/stream":279,"_process":242,"buffer":140,"dup":129,"inherits":223,"util-deprecate":282}],272:[function(require,module,exports){arguments[4][130][0].apply(exports,arguments);},{"./end-of-stream":275,"_process":242,"dup":130}],273:[function(require,module,exports){arguments[4][131][0].apply(exports,arguments);},{"buffer":140,"dup":131,"util":96}],274:[function(require,module,exports){arguments[4][132][0].apply(exports,arguments);},{"_process":242,"dup":132}],275:[function(require,module,exports){arguments[4][133][0].apply(exports,arguments);},{"../../../errors":266,"dup":133}],276:[function(require,module,exports){arguments[4][134][0].apply(exports,arguments);},{"dup":134}],277:[function(require,module,exports){arguments[4][135][0].apply(exports,arguments);},{"../../../errors":266,"./end-of-stream":275,"dup":135}],278:[function(require,module,exports){arguments[4][136][0].apply(exports,arguments);},{"../../../errors":266,"dup":136}],279:[function(require,module,exports){arguments[4][137][0].apply(exports,arguments);},{"dup":137,"events":190}],280:[function(require,module,exports){// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';/*<replacement>*/var Buffer=require('safe-buffer').Buffer;/*</replacement>*/var isEncoding=Buffer.isEncoding||function(encoding){encoding=''+encoding;switch(encoding&&encoding.toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':return true;default:return false;}};function _normalizeEncoding(enc){if(!enc)return'utf8';var retried;while(true){switch(enc){case'utf8':case'utf-8':return'utf8';case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return'utf16le';case'latin1':case'binary':return'latin1';case'base64':case'ascii':case'hex':return enc;default:if(retried)return;// undefined
enc=(''+enc).toLowerCase();retried=true;}}};// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc){var nenc=_normalizeEncoding(enc);if(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);return nenc||enc;}// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder=StringDecoder;function StringDecoder(encoding){this.encoding=normalizeEncoding(encoding);var nb;switch(this.encoding){case'utf16le':this.text=utf16Text;this.end=utf16End;nb=4;break;case'utf8':this.fillLast=utf8FillLast;nb=4;break;case'base64':this.text=base64Text;this.end=base64End;nb=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return;}this.lastNeed=0;this.lastTotal=0;this.lastChar=Buffer.allocUnsafe(nb);}StringDecoder.prototype.write=function(buf){if(buf.length===0)return'';var r;var i;if(this.lastNeed){r=this.fillLast(buf);if(r===undefined)return'';i=this.lastNeed;this.lastNeed=0;}else{i=0;}if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);return r||'';};StringDecoder.prototype.end=utf8End;// Returns only complete characters in a Buffer
StringDecoder.prototype.text=utf8Text;// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length){buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length;};// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte){if(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;return byte>>6===0x02?-1:-2;}// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self,buf,i){var j=buf.length-1;if(j<i)return 0;var nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-1;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-2;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0){if(nb===2)nb=0;else self.lastNeed=nb-3;}return nb;}return 0;}// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self,buf,p){if((buf[0]&0xC0)!==0x80){self.lastNeed=0;return'\ufffd';}if(self.lastNeed>1&&buf.length>1){if((buf[1]&0xC0)!==0x80){self.lastNeed=1;return'\ufffd';}if(self.lastNeed>2&&buf.length>2){if((buf[2]&0xC0)!==0x80){self.lastNeed=2;return'\ufffd';}}}}// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf){var p=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,buf,p);if(r!==undefined)return r;if(this.lastNeed<=buf.length){buf.copy(this.lastChar,p,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length;}// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf,i){var total=utf8CheckIncomplete(this,buf,i);if(!this.lastNeed)return buf.toString('utf8',i);this.lastTotal=total;var end=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,0,end);return buf.toString('utf8',i,end);}// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+'\ufffd';return r;}// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf,i){if((buf.length-i)%2===0){var r=buf.toString('utf16le',i);if(r){var c=r.charCodeAt(r.length-1);if(c>=0xD800&&c<=0xDBFF){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];return r.slice(0,-1);}}return r;}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString('utf16le',i,buf.length-1);}// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed){var end=this.lastTotal-this.lastNeed;return r+this.lastChar.toString('utf16le',0,end);}return r;}function base64Text(buf,i){var n=(buf.length-i)%3;if(n===0)return buf.toString('base64',i);this.lastNeed=3-n;this.lastTotal=3;if(n===1){this.lastChar[0]=buf[buf.length-1];}else{this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];}return buf.toString('base64',i,buf.length-n);}function base64End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);return r;}// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf){return buf.toString(this.encoding);}function simpleEnd(buf){return buf&&buf.length?this.write(buf):'';}},{"safe-buffer":254}],281:[function(require,module,exports){(function(global){(function(){/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** *//* global global, define, System, Reflect, Promise */var __extends;var __assign;var __rest;var __decorate;var __param;var __metadata;var __awaiter;var __generator;var __exportStar;var __values;var __read;var __spread;var __spreadArrays;var __spreadArray;var __await;var __asyncGenerator;var __asyncDelegator;var __asyncValues;var __makeTemplateObject;var __importStar;var __importDefault;var __classPrivateFieldGet;var __classPrivateFieldSet;var __createBinding;(function(factory){var root=typeof global==="object"?global:typeof self==="object"?self:typeof this==="object"?this:{};if(typeof define==="function"&&define.amd){define("tslib",["exports"],function(exports){factory(createExporter(root,createExporter(exports)));});}else if(typeof module==="object"&&typeof module.exports==="object"){factory(createExporter(root,createExporter(module.exports)));}else{factory(createExporter(root));}function createExporter(exports,previous){if(exports!==root){if(typeof Object.create==="function"){Object.defineProperty(exports,"__esModule",{value:true});}else{exports.__esModule=true;}}return function(id,v){return exports[id]=previous?previous(id,v):v;};}})(function(exporter){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p];};__extends=function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}return t;};__rest=function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};__decorate=function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r;};__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};__metadata=function(metadataKey,metadataValue){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);};__awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};__generator=function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};__exportStar=function(m,o){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(o,p))__createBinding(o,m,p);};__createBinding=Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k];}});}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];};__values=function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");};__read=function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done)ar.push(r.value);}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;};/** @deprecated */__spread=function(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar;};/** @deprecated */__spreadArrays=function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r;};__spreadArray=function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i];}}return to.concat(ar||from);};__await=function(v){return this instanceof __await?(this.v=v,this):new __await(v);};__asyncGenerator=function(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}};__asyncDelegator=function(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}};__asyncValues=function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}};__makeTemplateObject=function(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};var __setModuleDefault=Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:true,value:v});}:function(o,v){o["default"]=v;};__importStar=function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=="default"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};__importDefault=function(mod){return mod&&mod.__esModule?mod:{"default":mod};};__classPrivateFieldGet=function(receiver,state,kind,f){if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a getter");if(typeof state==="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f:kind==="a"?f.call(receiver):f?f.value:state.get(receiver);};__classPrivateFieldSet=function(receiver,state,value,kind,f){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a setter");if(typeof state==="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value;};exporter("__extends",__extends);exporter("__assign",__assign);exporter("__rest",__rest);exporter("__decorate",__decorate);exporter("__param",__param);exporter("__metadata",__metadata);exporter("__awaiter",__awaiter);exporter("__generator",__generator);exporter("__exportStar",__exportStar);exporter("__createBinding",__createBinding);exporter("__values",__values);exporter("__read",__read);exporter("__spread",__spread);exporter("__spreadArrays",__spreadArrays);exporter("__spreadArray",__spreadArray);exporter("__await",__await);exporter("__asyncGenerator",__asyncGenerator);exporter("__asyncDelegator",__asyncDelegator);exporter("__asyncValues",__asyncValues);exporter("__makeTemplateObject",__makeTemplateObject);exporter("__importStar",__importStar);exporter("__importDefault",__importDefault);exporter("__classPrivateFieldGet",__classPrivateFieldGet);exporter("__classPrivateFieldSet",__classPrivateFieldSet);});}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],282:[function(require,module,exports){(function(global){(function(){/**
 * Module exports.
 */module.exports=deprecate;/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */function deprecate(fn,msg){if(config('noDeprecation')){return fn;}var warned=false;function deprecated(){if(!warned){if(config('throwDeprecation')){throw new Error(msg);}else if(config('traceDeprecation')){console.trace(msg);}else{console.warn(msg);}warned=true;}return fn.apply(this,arguments);}return deprecated;}/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */function config(name){// accessing global.localStorage can trigger a DOMException in sandboxed iframes
try{if(!global.localStorage)return false;}catch(_){return false;}var val=global.localStorage[name];if(null==val)return false;return String(val).toLowerCase()==='true';}}).call(this);}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],283:[function(require,module,exports){const{ExplorerApi}=require("atomicassets");const fetch=require("node-fetch");const SecureLS=require("secure-ls");const waxjs=require("@waxio/waxjs/dist");const DOMPurify=require("dompurify");const api=new ExplorerApi("https://wax.api.atomicassets.io","atomicassets",{fetch});var wax=new waxjs.WaxJS("https://wax.greymass.com",null,null,false);const detectEthereumProvider=require("@metamask/detect-provider");const waxWalletCollectorAddress="0xB3528065F526Acf871B35ae322Ed28b24C096548";const dp=new DOMPurify();const ls=new SecureLS();const AnchorLink=require('anchor-link');const AnchorLinkBrowserTransport=require('anchor-link-browser-transport');var bitcoins=0;var bitcoinRate=0;var currentUser=null;// Every item in the game
// TODO: items should be part of the Game variable
var items=[{name:"item_oldCalculator",template_id:"180336"},{name:"item_oldCpu",template_id:"180473"},{name:"item_oldComputerFromGrandpa",template_id:"180512"},{name:"item_raspberrypi",template_id:"180513"},{name:"item_smartphone",template_id:"180515"},{name:"item_middleClassPC",template_id:"180516"},{name:"item_cheapServer",template_id:"180517"},{name:"item_gamingPC",template_id:"180519"},{name:"item_cheapMiner",template_id:"180521"},{name:"item_highEndUltraPC",template_id:"180522"},{name:"item_bigMiner",template_id:"180524"},{name:"item_miningFarm",template_id:"180525"},{name:"item_nasaPC",template_id:"180526"},{name:"item_quantumRig",template_id:"180528"},{name:"item_miningFarmSpace",template_id:"180529"},{name:"item_miningFarmMoon",template_id:"180530"},{name:"item_bitcoinTimeMachine",template_id:"180531"},{name:"item_blackHolePoweredMiner",template_id:"180532"}];var templates=[];async function getTemplates(){for(let i=0;i<items.length;i++){const id=items[i].template_id;const name=items[i].name;const data=(await api.getTemplate("waxbtcclickr",id)).immutable_data;const result={name,id,data};templates.push(result);}}// Rate is null (at the beginning)
var bSec=null;// If there is no bitcoins Item in the localStorage, create one.
// If there is one, do the other thing.
async function init(){const keys=ls.getAllKeys();if(keys.length==0||!keys.includes("bitcoins"))ls.set("bitcoins",0);const wallet=localStorage.getItem("waxWallet");const btcs=ls.get("bitcoins");console.log(btcs);await getTemplates();if(btcs===null||btcs==="NaN"||wallet===null||wallet!==wax.userAccount){// Bitcoins are 0
bitcoins=0;waxWallet=wax.userAccount;// Set the localStorage Item for the first time
ls.clear();localStorage.clear();ls.set("bitcoins",0);localStorage.setItem("waxWallet",waxWallet);// Write the current amount of Bitcoins on the page
$(".bitcoinAmount").text(bitcoins.toFixed(8));}else{// Get the amount of Bitcoins and parse them to a float number
bitcoins=parseFloat(ls.get("bitcoins"));console.log("Init",bitcoins);$(".bitcoinAmount").text("loading...");$(".satoshiAmount").text("loading...");}document.getElementById("lbButton").style.display="block";document.getElementById("refButton").style.display="block";detectRef();await loginAnchorWallet();}/**
 *
 *  <-- Setting up the game´s functions -->
 *
 */// Game variable which will contain any needed major function or needed variables for the game.
var Game={};// Every constant variable is saved here
Game.GameConst={priceMultiplier:1.15,VERSION:"1.4.0"};Game.units=["Million","Billion","Trillion","Quadrillion","Quintillion","Sextillion","Septillion","Octillion","Nonillion","Decillion","Undecillion","Duodecillion","Tredecillion","Quattuordecillion","Quindecillion","Sexdecillion","Septdecillion","Octodecillion","Novemdecillion","Vigintillion","Unvigintillion","Duovigintillion","Trevigintillion","Quattuorvigintillion","Quinvigintillion","Sexvigintillion","Septvigintillion","Octovigintillion","Novemvigintillion","Trigintillion"];/**
 * Calculating every price for the items when the game was started (and if there are any items).
 *
 * @param element {HTMLElement} - The HTML element of the item on the game page
 * @param price {Number} - The price of the item, got from the items Object
 * @param itemAmount {Number} - The current amount of the item, saved in the localStorage
 */Game.setPriceAtGameBeginning=function(element,price,itemAmount){// Calculation of the price
var multiplier=Game.GameConst.priceMultiplier;// Calculate the new price -> price * multiplier^itemAmount
var calculation=(parseFloat(price)*Math.pow(multiplier,parseInt(itemAmount))).toFixed(8);// Showing the actual price
element.children()[2].textContent=calculation+" Bitcoins";// Set the data-price attribute with the new price
element.attr("data-price",calculation.toString());};/**
 * Calculating the Bitcoins per Second - rate when the page was opened.
 *
 */Game.setBitcoinPerSecondRateAtBeginning=async function(){bitcoinRate=0;for(let i=0;i<items.length;i++){const asset=await Game.getItem(items[i].name);const template=templates.find(val=>val.name===items[i].name).data;let itemAmount=0;let bits_per_sec=0;if(asset!==undefined){itemAmount=asset.assets;bits_per_sec=template.rate;}// HTML element on the game page
var $element=$("#"+items[i].name);// Writing the amount on the page at the item´s element
$element.children()[3].textContent="Level: "+itemAmount;// Only calculate the new price if there is more than 0 items.
// If there are not enough items, it will just continue, and if there are,
// it will execute the function and continue after it as well.
if(itemAmount>0){Game.setPriceAtGameBeginning($element,parseFloat(template.price),parseInt(itemAmount));}itemAmount=parseInt(itemAmount);// Calculating the rate
bitcoinRate=bitcoinRate+itemAmount*bits_per_sec;}};/**
 * Function which sets a new "Bitcoin per Second" rate
 *
 * @param rate - The number which must be added to the current Bitcoin per Second - rate
 * @returns {Number} - Returning the new Bitcoin per Second - rate
 */Game.setNewBitcoinRate=function(){// Showing the new rate on the page
// Rounding at specific values
if(bitcoinRate>=1000000){$(".bSecRateNumber").text(bitcoinRate.toFixed(0).optimizeNumber());}else if(bitcoinRate>=1000){$(".bSecRateNumber").text(bitcoinRate.toFixed(0));}else if(bitcoinRate>=1){$(".bSecRateNumber").text(bitcoinRate.toFixed(2));}else{$(".bSecRateNumber").text(bitcoinRate.toFixed(8));}};/**
 * This function will check if there is any change in the localStorage,
 * especially looking at the item amount. So it will actually calculate every price again and
 * again. (This function should be recoded)
 *
 * TODO: Find a better way for setting the price after an item was bought.
 */Game.setNewPrice=async function(){// for-loop for getting the price multiplier and to calculate the new price
for(var i=0;i<items.length;i++){const asset=await Game.getItem(items[i].name);const template=templates.find(val=>val.name===items[i].name).data;var itemAmount=0;if(asset!==undefined){itemAmount=asset.assets;}var $element=$("#"+items[i].name);$element.children()[3].textContent="Level: "+itemAmount;// Only calculate if there is more than 0 items
if(itemAmount>0){// Calculation of the price
var multiplier=Game.GameConst.priceMultiplier;var calculation=(parseFloat(template.price)*Math.pow(multiplier,parseInt(itemAmount))).toFixed(8);// Showing the actual price
$element.children()[2].textContent=calculation+" Bitcoins";// Set the data-price attribute with the new price
$element.attr("data-price",calculation.toString());}}// End of the for-loop
};/**
 * The function which adds new generated Bitcoins to the current Bitcoin amount.
 *
 * @param rate - The Bitcoin per second rate; Needed for adding the generated Bitcoins every second
 */Game.bSecFunction=function(rate){bitcoins=bitcoins+rate;// Show both values on the page
// Rounding the bitcoin number at specific set values
if(bitcoins>1000000){let bitcoinUnitNumber=bitcoins.optimizeNumber();$(".bitcoinAmount").text(bitcoinUnitNumber);}else if(bitcoins>=1000){$(".bitcoinAmount").text(bitcoins.toFixed(0));}else if(bitcoins>=1){$(".bitcoinAmount").text(bitcoins.toFixed(2));}else{$(".bitcoinAmount").text(bitcoins.toFixed(8));}// Rounding the satoshis amount at a specific value and optimize it for displaying on the screen.
var satoshis=bitcoins*100000000;if(satoshis<1000000){$(".satoshiAmount").text(Math.round(satoshis));}else{let satoshiUnitNumber=satoshis.optimizeNumber();$(".satoshiAmount").text(satoshiUnitNumber);}// Save bitcoin amount in the storage
ls.set("bitcoins",bitcoins.toString());};/**
 * Stops the B/sec interval.
 */Game.stopBsec=function(){clearInterval(bSec);};/**
 * Function for optimizing the number with an unit for displaying it on the screen.
 *
 * @returns {string} An optimized number as a string with its unit
 */Game.optimizeNumber=function(){if(this>=1e6){let number=parseFloat(this);let unit=Math.floor(parseFloat(number.toExponential(0).toString().replace("+","").slice(2))/3)*3;// let test = this.toExponential(0).toString().replace("+", "").slice(2)
// console.log(test)
var num=(this/("1e"+unit)).toFixed(2);var unitname=Game.units[Math.floor(unit/3)-1];return num+" "+unitname;}return this.toLocaleString();};Number.prototype.optimizeNumber=Game.optimizeNumber;String.prototype.optimizeNumber=Game.optimizeNumber;// --------------------------------------------------- //
/**
 * <-- Now doing everything -->
 */// Doing everything here when the game is ready to be used.
function setup(){$(document).ready(async function(){// Stating the interval with the calculated Bitcoin/second rate.
bSec=setInterval(function(){Game.bSecFunction(bitcoinRate);},1000);// Write the version into the .version span element
$(".version").text("Version "+Game.GameConst.VERSION);// Write the bitcoin per second rate into the .bSecRateNumber span element
if(bitcoinRate>=1000){$(".bSecRateNumber").text(bitcoinRate.toFixed(0));}else if(bitcoinRate>=1){$(".bSecRateNumber").text(bitcoinRate.toFixed(2));}else{$(".bSecRateNumber").text(bitcoinRate.toFixed(8));}// If clicked on the big Bitcoin
$(".bitcoin").click(function(){// Add 1^-8 Bitcoins (equal to 1 satoshi)
bitcoins=bitcoins+0.00000001;// Show the new number on the page
if(bitcoins>1000000){let bitcoinUnitNumber=bitcoins.optimizeNumber();$(".bitcoinAmount").text(bitcoinUnitNumber);}else if(bitcoins>=1000){$(".bitcoinAmount").text(bitcoins.toFixed(0));}else if(bitcoins>=1){$(".bitcoinAmount").text(bitcoins.toFixed(2));}else{$(".bitcoinAmount").text(bitcoins.toFixed(8));}if(bitcoins*100000000<1000000){$(".satoshiAmount").text(Math.round(bitcoins*100000000));}else{let satoshiUnitNumber=(bitcoins*100000000).optimizeNumber();$(".satoshiAmount").text(satoshiUnitNumber);}// Save the new amount of Bitcoins in the localStorage storage
ls.set("bitcoins",bitcoins.toString());});// If any item from the list was clicked...
$(".purchaseItem").click(async function(){// Get following attributes and children elements
// id of the item
const id=$(this).attr("id");// The price attribute as a float number
const template=templates.find(val=>val.name===id);const{price}=template?template.data:Number.MAX_VALUE;// The element which shows how many of the item is existing
// If you have enough Bitcoins, it´ll buy one item
if(parseFloat(bitcoins.toFixed(8))>=price){showItems("none");// mint throws undefined if RAM is unsufficient
const err=await mint(id);if(err===undefined){showItems("block");alert("Unsufficient RAM:\nThe item is not available...");return;}// Substract the price from the current Bitcoin number and set it to the bitcoins variable.
bitcoins=parseFloat(bitcoins.toFixed(8))-price;// Save the new amount of Bitcoins in the localStorage storage
ls.set("bitcoins",bitcoins.toString());// Changing the Bitcoins amount
// Rounding the Bitcoin number at specific values
if(bitcoins>1e6){let bitcoinUnitNumber=bitcoins.optimizeNumber();$(".bitcoinAmount").text(bitcoinUnitNumber);}else if(bitcoins>=1000){$(".bitcoinAmount").text(bitcoins.toFixed(0));}else if(bitcoins>=1){$(".bitcoinAmount").text(bitcoins.toFixed(2));}else{$(".bitcoinAmount").text(bitcoins.toFixed(8));}// Calculation the Satoshi amount
if(bitcoins*100000000<1e6){$(".satoshiAmount").text(Math.round(bitcoins*100000000));}else{let satoshiUnitNumber=(bitcoins*100000000).optimizeNumber();$(".satoshiAmount").text(satoshiUnitNumber);}// Stops the interval
Game.stopBsec();const oldBitcoinRate=bitcoinRate;// Setting a new price and show it
await Game.setNewPrice();// Restarting the interval with the new rate
await waitForTransaction(oldBitcoinRate);}});});}Game.getItem=async function(id){assets=(await api.getAccount(wax.userAccount)).templates;const item=items.find(val=>{return val.name===id;});const asset=assets.find(val=>{return val.template_id===item.template_id;});return asset;};async function mint(id){const item=items.find(val=>{return val.name===id;});const template_id=parseInt(item.template_id);const actions=await(await api.action).mintasset([{actor:wax.userAccount,permission:"active"}],wax.userAccount,"waxbtcclickr","equipments",template_id,wax.userAccount,{},{},0).catch(console.log);const result=await wax.api.transact({actions:actions},{blocksBehind:30,expireSeconds:1200}).catch(console.log);console.log(result);return result;}function showItems(state){document.getElementById("purchaseList").style.display=state;const loadingState=state==="none"?"block":"none";document.getElementById("Loading").style.display=loadingState;}/**
 * Waits for the NFT to finish loading
 * @param {number} oldBitcoinRate
 */async function waitForTransaction(oldBitcoinRate){await Game.setBitcoinPerSecondRateAtBeginning();Game.setNewBitcoinRate();setTimeout(()=>{if(oldBitcoinRate===bitcoinRate){waitForTransaction(oldBitcoinRate);return;}showItems("block");bSec=setInterval(function(){Game.bSecFunction(bitcoinRate);},1000);},1000);}// normal login. Triggers a popup for non-whitelisted dapps
async function login(){try{if(wax.userAccount===undefined){await wax.login();await init();await Game.setBitcoinPerSecondRateAtBeginning();return true;}else{return false;}}catch(e){console.log(e);return false;}}document.getElementById("loginWaxWallet").onclick=async()=>{document.getElementById("loginWaxWallet").style.display="none";showItems("none");const success=await login();if(success){for(let i=0;i<items.length;i++){document.getElementById(items[i].name).style.display="block";}setup();showItems("block");document.getElementById("verifyWaxWallet").style.display="block";document.getElementById("verifyCollection").style.display="block";return;}showItems("block");document.getElementById("loginWaxWallet").style.display="block";};/**
 * Send transaction to verify for whitelisting
 */document.getElementById("verifyWaxWallet").onclick=verifyWaxWallet;async function verifyWaxWallet(){const provider=await detectEthereumProvider();console.log(provider);if(provider===window.ethereum){window.web3=new Web3(ethereum);try{await ethereum.request({method:"eth_requestAccounts"});const accounts=await ethereum.request({method:"eth_accounts"});currentUser=accounts[0];const contract=new web3.eth.Contract(waxWalletCollector,waxWalletCollectorAddress);await contract.methods.collect(wax.userAccount).send({from:currentUser});}catch(err){console.log(err);}}}/**
 * Show user dialog for donation.
 */document.getElementById("donateButton").onclick=showDialog;async function showDialog(){var modal=document.getElementById("myModal");var span=document.getElementById("closeSpan");var content=document.getElementById("content");var input=document.getElementById("quantity");content.innerText="With how much WAX do you wanna donate RAM?";modal.style.display="block";span.onclick=function(){modal.style.display="none";//Get user input
var userinput=dp.sanitize(input.value);if(userinput!="")userinput=parseFloat(userinput);console.log(typeof userinput);//Do transaction with the userinput
if(typeof userinput!="number")alert("Please input a number");else{sign(userinput);}};window.onclick=function(event){if(event.target==modal){modal.style.display="none";}};}/**
 * Transact wax from the user to our contract. Need to adjust receiver after smart contract is finished.
 * @param amount: the amount of WAX the user put in to donate
 * @returns {Promise<void>}
 */async function sign(amount){if(wax.userAccount===undefined){await wax.login();}//convert amount into the right format
var quantity=amount.toString();quantity=quantity+" WAX";console.log(quantity);//execute transaction
try{const result=await wax.api.transact({actions:[{account:'eosio',name:'buyram',authorization:[{actor:wax.userAccount,permission:'active'}],data:{payer:wax.userAccount,receiver:"1mbtu.wam",//Später smart contract Name
quant:quantity}}]},{blocksBehind:3,expireSeconds:30});console.log(JSON.stringify(result,null,2));}catch(e){console.log(e.message);}}/**
 * Checks the assets of the currently logged in wallet for assets from the 1cryptobeard collection
 * @returns {Promise<number>} count of assets from the 1cryptobeard collection
 */async function checkForAirdrop(){var assets=(await api.getAccount(wax.userAccount)).templates;var count=0;for(var i=0;i<assets.length;i++){const collection=assets[i].collection_name;if(collection=="1cryptobeard")count++;}return count;}/**
 * Fetches json with the private key.
 */function fetchJson(amount){fetch('./test.json').then(response=>response.json()).then(data=>showVerificationDialog(data["Private Key"],"Authentification was succesfull! Found "+amount+" assets from 1cryptobeard"+"\n"+"Link for the airdrop: ")).catch(err=>console.log(err));}document.getElementById("verifyCollection").onclick=verifyCollection;/**
 * Function to show exclusive link for packdrop
 * @returns {Promise<void>}
 */async function verifyCollection(){var count=await checkForAirdrop();if(count>0){fetchJson(count);}else{showVerificationDialog("","Verification not succesfull");}}/**
 *
 * @param privateKey
 * @param msg if the authentification was succesfull or not
 * @returns {Promise<void>}
 */async function showVerificationDialog(privateKey,msg){var modal=document.getElementById("pkModal");var mcontent=document.getElementById("pkContent");var span=document.getElementById("pkSpan");modal.style.display="block";span.onclick=function(){modal.style.display="none";};window.onclick=function(event){if(event.target==modal){modal.style.display="none";}};mcontent.innerText=msg+privateKey;}/**
 * fills the leaderboard table
 * @param scores Map with each account and its corresponding score
 */function fillLeaderboard(scores){var counter=1;//iterate over the sorted map
for(let[key,value]of scores){var currentText=document.getElementById("lb"+counter);var valueString="";//rounds the bitcoin/sec number
if(value>1e6){let bitcoinUnitNumber=value.optimizeNumber();valueString=bitcoinUnitNumber;}else if(bitcoins>=1000){valueString=value.toFixed(0).toString();}else if(bitcoins>=1){valueString=value.toFixed(2).toString();}else{valueString=value.toFixed(8).toString();}currentText.innerText=counter+". "+key+" - "+valueString+" B/SEC";counter++;}//Finished loading -> we can now show the button to refresh
document.getElementById("lbLoading").style.display="none";document.getElementById("refreshSpan").style.display="inline-block";}/**
 * function for creating the leaderboard
 * for each item: fetches all accounts which own a nft of it
 * Adds the bitcoinrates of all item together for the final score
 */async function createLeaderboard(){document.getElementById("lbLoading").style.display="inline-block";document.getElementById("refreshSpan").style.display="none";var scores=new Map();//iterate over all items
for(var j=0;j<items.length;j++){var bitcoinrate=0;var bits_per_sec=0;//fetch all accounts which own a version of the current item
var accounts=await api.getAccounts({collection_name:"waxbtcclickr",schema_name:"equipments",template_id:items[j].template_id});//get the template of the current item
const template=templates.find(val=>val.name===items[j].name).data;bits_per_sec=template.rate;//iterate over all accounts
for(var i=0;i<accounts.length;i++){//if the account already exists get the current score
if(scores.has(accounts[i].account)){bitcoinrate=scores.get(accounts[i].account);}//set and save the new bitcoinrate
bitcoinrate=bitcoinrate+accounts[i].assets*bits_per_sec;scores.set(accounts[i].account,bitcoinrate);}//wait a second because of rate limiting
await sleep(1000);}//sort the map descending
scores=new Map([...scores.entries()].sort((a,b)=>b[1]-a[1]));fillLeaderboard(scores);}/**
 * On click function for a button to show the leaderboard
 * @returns {Promise<void>}
 */document.getElementById("lbButton").onclick=async()=>{await showLeaderBoard();};/**
 * function which initiates the leaderboard
 * @returns {Promise<void>}
 */async function showLeaderBoard(){var close=document.getElementById("closeLbSpan");var modal=document.getElementById("leaderboardModal");modal.style.display="block";close.style.display="inline-block";await createLeaderboard();window.onclick=function(event){if(event.target==modal){modal.style.display="none";}};//Close Button
close.onclick=function(){modal.style.display="none";};//Refresh Button
var refresh=document.getElementById("refreshSpan");refresh.onclick=function(){showLeaderBoard();};}function sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms));}document.getElementById("refButton").onclick=generateRefLink;function generateRefLink(){let url=new URL(window.location.href);url.searchParams.set('ref',wax.userAccount);navigator.clipboard.writeText(url);showVerificationDialog("","Url: "+url+" is also copied to the clipboard");}function detectRef(){var receivedRef=false;const keys=ls.getAllKeys();if(keys.length==0||!keys.includes("ref"))ls.set("ref",false);else{receivedRef=ls.get("ref");}let url=new URL(window.location.href);if(url.searchParams.has("ref")&&!receivedRef){var ref;for(let[name,value]of url.searchParams){if(dp.sanitize(name)=="ref")ref=dp.sanitize(value);}console.log(ref);if(ref!=wax.userAccount){console.log("Reflink detected");//mintasset for both
ls.set("ref",true);}else{console.log("You cant refer yourself!");}}else{console.log("No reflink detected or you already received a ref");}}async function loginAnchorWallet(){const transport=new AnchorLinkBrowserTransport();const link=new AnchorLink({transport,chains:[{chainId:'1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4',nodeUrl:'https://eos.greymass.com'}]});// Perform the login, which returns the users identity
const identity=await link.login('mydapp');console.log("login");// Save the session within your application for future use
const{session}=identity;console.log(`Logged in as ${session.auth}`);}},{"@metamask/detect-provider":3,"@waxio/waxjs/dist":5,"anchor-link":7,"anchor-link-browser-transport":6,"atomicassets":90,"dompurify":160,"node-fetch":230,"secure-ls":256}]},{},[283]);